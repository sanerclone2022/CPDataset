[{"authorTime":"2014-10-20 06:45:31","codes":[{"authorDate":"2014-04-18 06:46:38","commitOrder":2,"curCode":"  public void testRemove() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ccc\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"2\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"bbb\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"20\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    List<String> removeList = new ArrayList<String>();\n    removeList.add(\"bbb\");\n    removeList.add(\"ccc\");\n    doc.setField(\"cat\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    removeList = new ArrayList<String>();\n    removeList.add(\"bbb\");\n    removeList.add(\"ccc\");\n    doc.setField(\"cat\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", ImmutableMap.of(\"remove\", \"aaa\")); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:aaa\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2014-04-18 06:46:38","endLine":108,"groupId":"43239","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemove","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7f/22031a1908d823fce57fc0402618b1ef87a884.src","preCode":"  public void testRemove() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ccc\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"2\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"bbb\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"20\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    List<String> removeList = new ArrayList<String>();\n    removeList.add(\"bbb\");\n    removeList.add(\"ccc\");\n    doc.setField(\"cat\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    removeList = new ArrayList<String>();\n    removeList.add(\"bbb\");\n    removeList.add(\"ccc\");\n    doc.setField(\"cat\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", ImmutableMap.of(\"remove\", \"aaa\")); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:aaa\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"NB"},{"authorDate":"2014-10-20 06:45:31","commitOrder":2,"curCode":"  public void testRemoveregex() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ccc\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"2\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"bbb\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"20\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    List<String> removeList = new ArrayList<>();\n    removeList.add(\".b.\");\n    removeList.add(\"c+c\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    removeList = new ArrayList<>();\n    removeList.add(\"bb*\");\n    removeList.add(\"cc+\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", \"a.a\")); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:aaa\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2014-10-20 06:45:31","endLine":883,"groupId":"51880","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoveregex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b7/26a6aade09e9f6e948aa0c0ddd31442115f679.src","preCode":"  public void testRemoveregex() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ccc\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"2\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"bbb\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"20\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    List<String> removeList = new ArrayList<>();\n    removeList.add(\".b.\");\n    removeList.add(\"c+c\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    removeList = new ArrayList<>();\n    removeList.add(\"bb*\");\n    removeList.add(\"cc+\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", \"a.a\")); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:aaa\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":819,"status":"B"}],"commitId":"72df7212369b6694d0102dba7e9c9d9dcb53e77a","commitMessage":"@@@SOLR-5992: add removeregex as an atomic update operation.  Thanks Vitaliy\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1633019 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-10-20 06:45:31","modifiedFileCount":"2","status":"M","submitter":"Erick Erickson"},{"authorTime":"2019-10-07 21:29:31","codes":[{"authorDate":"2019-10-07 21:29:31","commitOrder":3,"curCode":"  public void testRemove() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ccc\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"2\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"bbb\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"20\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"cat:ccc\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    List<String> removeList = new ArrayList<String>();\n    removeList.add(\"bbb\");\n    removeList.add(\"ccc\");\n    doc.setField(\"cat\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:ccc\", \"indent\", \"true\"), \"//result[@numFound = '3']\"); \r\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    removeList = new ArrayList<String>();\n    removeList.add(\"bbb\");\n    removeList.add(\"ccc\");\n    doc.setField(\"cat\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", ImmutableMap.of(\"remove\", \"aaa\")); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:aaa\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2019-10-08 01:38:55","endLine":115,"groupId":"102947","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemove","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/48/c76b778128257e9d7f8c74508e703d6980a40a.src","preCode":"  public void testRemove() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ccc\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"2\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"bbb\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"20\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    List<String> removeList = new ArrayList<String>();\n    removeList.add(\"bbb\");\n    removeList.add(\"ccc\");\n    doc.setField(\"cat\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    removeList = new ArrayList<String>();\n    removeList.add(\"bbb\");\n    removeList.add(\"ccc\");\n    doc.setField(\"cat\", ImmutableMap.of(\"remove\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", ImmutableMap.of(\"remove\", \"aaa\")); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:aaa\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2019-10-07 21:29:31","commitOrder":3,"curCode":"  public void testRemoveregex() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ccc\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"2\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"bbb\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"20\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"cat:ccc\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    List<String> removeList = new ArrayList<>();\n    removeList.add(\".b.\");\n    removeList.add(\"c+c\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:ccc\", \"indent\", \"true\"), \"//result[@numFound = '2']\"); \r\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    removeList = new ArrayList<>();\n    removeList.add(\"bb*\");\n    removeList.add(\"cc+\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", \"a.a\")); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:aaa\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","date":"2019-10-08 01:38:55","endLine":920,"groupId":"102947","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoveregex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/48/c76b778128257e9d7f8c74508e703d6980a40a.src","preCode":"  public void testRemoveregex() throws Exception {\n    SolrInputDocument doc;\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ccc\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"2\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"bbb\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"20\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\", \"ddd\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"bbb\", \"ddd\"});\n    assertU(adoc(doc));\n\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    List<String> removeList = new ArrayList<>();\n    removeList.add(\".b.\");\n    removeList.add(\"c+c\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"21\");\n    removeList = new ArrayList<>();\n    removeList.add(\"bb*\");\n    removeList.add(\"cc+\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", removeList)); \r\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"1\");\n    doc.setField(\"cat\", ImmutableMap.of(\"removeregex\", \"a.a\")); \r\n\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '4']\");\n    assertQ(req(\"q\", \"cat:aaa\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":854,"status":"M"}],"commitId":"ceb47042d1597c4add81cb8b8ec5a6d56d13711a","commitMessage":"@@@SOLR-13539: Fix MV removeregex atomic-updates\n\nPrior to this commit.  the ByteArrayUtf8CharSequence issues had been\nfixed on single value removeregex commands.  but not if multiple regex's\nwere used.\n\nThis commit fixes our NamedList parsing for this additional case.  It\nalso adds some tests for related atomic-update cases.\n\nCo-Authored-By: Tim Owen\n","date":"2019-10-08 01:38:55","modifiedFileCount":"2","status":"M","submitter":"Jason Gerlowski"}]
