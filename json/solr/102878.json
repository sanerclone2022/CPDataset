[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":55,"groupId":"18854","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBuildDocument","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/99/1295d13391dcc883048bc4d2b42b4bce55e3c8.src","preCode":"  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void testExceptions() \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"123\", 1.0f );\n    doc.addField( \"unknown\", \"something\", 1.0f );\n    try {\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"added an unknown field\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n    }\n    doc.remove( \"unknown\" );\n    \n\n    doc.addField( \"weight\", \"not a number\", 1.0f );\n    try {\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"invalid 'float' field value\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n      assertTrue( \"cause is number format\", ex.getCause() instanceof NumberFormatException );\n    }\n    \n    \r\n    doc.setField( \"weight\", \"1.34\", 1.0f );\n    DocumentBuilder.toDocument( doc, core.getSchema() );\n  }\n","date":"2011-07-10 07:01:53","endLine":101,"groupId":"886","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testExceptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/99/1295d13391dcc883048bc4d2b42b4bce55e3c8.src","preCode":"  public void testExceptions() \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"123\", 1.0f );\n    doc.addField( \"unknown\", \"something\", 1.0f );\n    try {\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"added an unknown field\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n    }\n    doc.remove( \"unknown\" );\n    \n\n    doc.addField( \"weight\", \"not a number\", 1.0f );\n    try {\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"invalid 'float' field value\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n      assertTrue( \"cause is number format\", ex.getCause() instanceof NumberFormatException );\n    }\n    \n    \r\n    doc.setField( \"weight\", \"1.34\", 1.0f );\n    DocumentBuilder.toDocument( doc, core.getSchema() );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2013-04-22 22:26:55","codes":[{"authorDate":"2013-04-22 22:26:55","commitOrder":2,"curCode":"  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n","date":"2013-04-22 22:26:55","endLine":69,"groupId":"18854","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBuildDocument","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/eb/9d7376e4484387f8212d013181e36f9b7ada7e.src","preCode":"  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2013-04-22 22:26:55","commitOrder":2,"curCode":"  public void testExceptions() \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"123\", 1.0f );\n    doc.addField( \"unknown\", \"something\", 1.0f );\n    try {\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"added an unknown field\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n    }\n    doc.remove( \"unknown\" );\n    \n\n    doc.addField( \"weight\", \"not a number\", 1.0f );\n    try {\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"invalid 'float' field value\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n      assertTrue( \"cause is number format\", ex.getCause() instanceof NumberFormatException );\n    }\n    \n    \r\n    doc.setField( \"weight\", \"1.34\", 1.0f );\n    DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n  }\n","date":"2013-04-22 22:26:55","endLine":115,"groupId":"886","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testExceptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/eb/9d7376e4484387f8212d013181e36f9b7ada7e.src","preCode":"  public void testExceptions() \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"123\", 1.0f );\n    doc.addField( \"unknown\", \"something\", 1.0f );\n    try {\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"added an unknown field\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n    }\n    doc.remove( \"unknown\" );\n    \n\n    doc.addField( \"weight\", \"not a number\", 1.0f );\n    try {\n      DocumentBuilder.toDocument( doc, core.getSchema() );\n      fail( \"invalid 'float' field value\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n      assertTrue( \"cause is number format\", ex.getCause() instanceof NumberFormatException );\n    }\n    \n    \r\n    doc.setField( \"weight\", \"1.34\", 1.0f );\n    DocumentBuilder.toDocument( doc, core.getSchema() );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"28b7111dc79fb0095814d617a5879fb93e70fb9c","commitMessage":"@@@SOLR-3251: Dynamically add fields to schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1470539 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-04-22 22:26:55","modifiedFileCount":"120","status":"M","submitter":"Steven Rowe"},{"authorTime":"2017-03-03 02:18:16","codes":[{"authorDate":"2017-03-03 02:18:16","commitOrder":3,"curCode":"  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345 );\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n","date":"2017-03-03 02:18:16","endLine":57,"groupId":"18854","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testBuildDocument","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2a/78d6b7923127062c5d60591f253ecfa033be5b.src","preCode":"  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345, 1.0f );\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2017-03-03 02:18:16","commitOrder":3,"curCode":"  public void testExceptions() \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"123\" );\n    doc.addField( \"unknown\", \"something\" );\n    try {\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"added an unknown field\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n    }\n    doc.remove( \"unknown\" );\n    \n\n    doc.addField( \"weight\", \"not a number\" );\n    try {\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"invalid 'float' field value\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n      assertTrue( \"cause is number format\", ex.getCause() instanceof NumberFormatException );\n    }\n    \n    \r\n    doc.setField( \"weight\", \"1.34\" );\n    DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n  }\n","date":"2017-03-03 02:18:16","endLine":103,"groupId":"886","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testExceptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2a/78d6b7923127062c5d60591f253ecfa033be5b.src","preCode":"  public void testExceptions() \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"123\", 1.0f );\n    doc.addField( \"unknown\", \"something\", 1.0f );\n    try {\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"added an unknown field\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n    }\n    doc.remove( \"unknown\" );\n    \n\n    doc.addField( \"weight\", \"not a number\", 1.0f );\n    try {\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"invalid 'float' field value\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n      assertTrue( \"cause is number format\", ex.getCause() instanceof NumberFormatException );\n    }\n    \n    \r\n    doc.setField( \"weight\", \"1.34\", 1.0f );\n    DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"8ed2b764ed4d4d5203b5df1e16fdc1ffd640322c","commitMessage":"@@@LUCENE-6819: Remove index-time boosts.\n","date":"2017-03-03 02:18:16","modifiedFileCount":"113","status":"M","submitter":"Adrien Grand"},{"authorTime":"2019-08-03 15:30:49","codes":[{"authorDate":"2019-08-03 15:30:49","commitOrder":4,"curCode":"  public void testBuildDocument() throws Exception {\n    SolrCore core = h.getCore();\n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField( \"unknown field\", 12345 );\n\n    SolrException ex = expectThrows(SolrException.class, () -> DocumentBuilder.toDocument( doc, core.getLatestSchema() ));\n    assertEquals(\"should be bad request\", 400, ex.code());\n  }\n","date":"2019-08-03 15:30:49","endLine":71,"groupId":"102878","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testBuildDocument","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bf/819a002c472a27044e98f71b20d6a43bc7e34d.src","preCode":"  public void testBuildDocument() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    try {\n      SolrInputDocument doc = new SolrInputDocument();\n      doc.setField( \"unknown field\", 12345 );\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"should throw an error\" );\n    }\n    catch( SolrException ex ) {\n      assertEquals( \"should be bad request\", 400, ex.code() );\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2019-08-03 15:30:49","commitOrder":4,"curCode":"  public void testExceptions() {\n    SolrCore core = h.getCore();\n    \n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"123\" );\n    doc.addField( \"unknown\", \"something\" );\n    Exception ex = expectThrows(Exception.class, () -> DocumentBuilder.toDocument( doc, core.getLatestSchema() ));\n    assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n    doc.remove( \"unknown\" );\n    \n\n    doc.addField( \"weight\", \"not a number\" );\n    ex = expectThrows(Exception.class, () -> DocumentBuilder.toDocument( doc, core.getLatestSchema()));\n    assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n    assertTrue( \"cause is number format\", ex.getCause() instanceof NumberFormatException );\n\n    \r\n    doc.setField( \"weight\", \"1.34\" );\n    DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n  }\n","date":"2019-08-03 15:30:49","endLine":105,"groupId":"102878","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testExceptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bf/819a002c472a27044e98f71b20d6a43bc7e34d.src","preCode":"  public void testExceptions() \n  {\n    SolrCore core = h.getCore();\n    \n    \r\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField( \"id\", \"123\" );\n    doc.addField( \"unknown\", \"something\" );\n    try {\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"added an unknown field\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n    }\n    doc.remove( \"unknown\" );\n    \n\n    doc.addField( \"weight\", \"not a number\" );\n    try {\n      DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n      fail( \"invalid 'float' field value\" );\n    }\n    catch( Exception ex ) {\n      assertTrue( \"should have document ID\", ex.getMessage().indexOf( \"doc=123\" ) > 0 );\n      assertTrue( \"cause is number format\", ex.getCause() instanceof NumberFormatException );\n    }\n    \n    \r\n    doc.setField( \"weight\", \"1.34\" );\n    DocumentBuilder.toDocument( doc, core.getLatestSchema() );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"8c4fde94fe93c70b95ed3563fb65972bb303e0af","commitMessage":"@@@SOLR-12555: use expectThrows() to verify the ex thrown in tests\n","date":"2019-08-03 15:30:49","modifiedFileCount":"89","status":"M","submitter":"Munendra S N"}]
