[{"authorTime":"2017-05-31 19:56:14","codes":[{"authorDate":"2014-05-23 02:03:37","commitOrder":3,"curCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n      \n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n           format+\"! Only 'solr' is supported.\");\n      }\n      \n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n      \n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (String key : storedSyns.keySet()) {\n          \n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n          \n          \r\n          \r\n          Object mapping = storedSyns.get(key);\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                \" but got \"+mapping.getClass().getName());\n          }\n                    \n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>)storedSyns.get(key));          \n          cpsm.mappings.put(key, sortedVals);        \n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());      \n    }    \n","date":"2014-05-23 02:03:37","endLine":158,"groupId":"18035","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onManagedDataLoadedFromStorage","params":"(NamedList<?>managedInitArgs@ObjectmanagedData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a8/b1390039e71d94f97874cb0be9449cdfacac1b.src","preCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n      \n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n           format+\"! Only 'solr' is supported.\");\n      }\n      \n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n      \n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (String key : storedSyns.keySet()) {\n          \n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n          \n          \r\n          \r\n          Object mapping = storedSyns.get(key);\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                \" but got \"+mapping.getClass().getName());\n          }\n                    \n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>)storedSyns.get(key));          \n          cpsm.mappings.put(key, sortedVals);        \n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());      \n    }    \n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"NB"},{"authorDate":"2017-05-31 19:56:14","commitOrder":3,"curCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n\n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n            format+\"! Only 'solr' is supported.\");\n      }\n\n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (String key : storedSyns.keySet()) {\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n\n          \r\n          \r\n          Object mapping = storedSyns.get(key);\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                    \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>)storedSyns.get(key));\n          cpsm.mappings.put(key, sortedVals);\n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());\n    }\n","date":"2017-05-31 19:56:14","endLine":159,"groupId":"18035","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onManagedDataLoadedFromStorage","params":"(NamedList<?>managedInitArgs@ObjectmanagedData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1f/4a97071393f9382f506cc83333709a62bc49fd.src","preCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n\n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n            format+\"! Only 'solr' is supported.\");\n      }\n\n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (String key : storedSyns.keySet()) {\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n\n          \r\n          \r\n          Object mapping = storedSyns.get(key);\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                    \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>)storedSyns.get(key));\n          cpsm.mappings.put(key, sortedVals);\n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());\n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"}],"commitId":"97693234def7fb4fc92d8fbaab775705aaaaf565","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-05-31 19:56:14","modifiedFileCount":"119","status":"M","submitter":"Karl Wright"},{"authorTime":"2019-09-13 20:42:38","codes":[{"authorDate":"2014-05-23 02:03:37","commitOrder":4,"curCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n      \n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n           format+\"! Only 'solr' is supported.\");\n      }\n      \n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n      \n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (String key : storedSyns.keySet()) {\n          \n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n          \n          \r\n          \r\n          Object mapping = storedSyns.get(key);\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                \" but got \"+mapping.getClass().getName());\n          }\n                    \n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>)storedSyns.get(key));          \n          cpsm.mappings.put(key, sortedVals);        \n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());      \n    }    \n","date":"2014-05-23 02:03:37","endLine":158,"groupId":"18035","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onManagedDataLoadedFromStorage","params":"(NamedList<?>managedInitArgs@ObjectmanagedData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a8/b1390039e71d94f97874cb0be9449cdfacac1b.src","preCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n      \n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n           format+\"! Only 'solr' is supported.\");\n      }\n      \n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n      \n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (String key : storedSyns.keySet()) {\n          \n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n          \n          \r\n          \r\n          Object mapping = storedSyns.get(key);\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                \" but got \"+mapping.getClass().getName());\n          }\n                    \n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>)storedSyns.get(key));          \n          cpsm.mappings.put(key, sortedVals);        \n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());      \n    }    \n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"N"},{"authorDate":"2019-09-13 20:42:38","commitOrder":4,"curCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n\n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n            format+\"! Only 'solr' is supported.\");\n      }\n\n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (Map.Entry<String, Object> entry : storedSyns.entrySet()) {\n          String key = entry.getKey();\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n\n          \r\n          \r\n          Object mapping = entry.getValue();\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                    \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>) entry.getValue());\n          cpsm.mappings.put(key, sortedVals);\n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());\n    }\n","date":"2019-09-13 20:42:38","endLine":165,"groupId":"13171","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onManagedDataLoadedFromStorage","params":"(NamedList<?>managedInitArgs@ObjectmanagedData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6d/7c1f570857fe3bd3bdb49e8605d47c89fda2fe.src","preCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n\n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n            format+\"! Only 'solr' is supported.\");\n      }\n\n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (String key : storedSyns.keySet()) {\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n\n          \r\n          \r\n          Object mapping = storedSyns.get(key);\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                    \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>)storedSyns.get(key));\n          cpsm.mappings.put(key, sortedVals);\n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());\n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"ec78ef785275e4d46c0f133c6b55be1f974b8db2","commitMessage":"@@@Changing keyset() to entryset() and sometines values(). (#868)\n\n","date":"2019-09-13 20:42:38","modifiedFileCount":"21","status":"M","submitter":"Koen De Groote"},{"authorTime":"2019-09-13 20:42:38","codes":[{"authorDate":"2019-10-15 00:36:19","commitOrder":5,"curCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n      \n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n           format+\"! Only 'solr' is supported.\");\n      }\n      \n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (Map.Entry<String, Object> entry : storedSyns.entrySet()) {\n          String key = entry.getKey();\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n          \n          \r\n          \r\n          Object mapping = entry.getValue();\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                \" but got \"+mapping.getClass().getName());\n          }\n                    \n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>) entry.getValue());\n          cpsm.mappings.put(key, sortedVals);        \n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());      \n    }\n","date":"2019-10-15 00:36:19","endLine":170,"groupId":"13171","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onManagedDataLoadedFromStorage","params":"(NamedList<?>managedInitArgs@ObjectmanagedData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/87/878ce87c7130b7a9e1d6dbad4deb2a9f9a4b80.src","preCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n      \n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n           format+\"! Only 'solr' is supported.\");\n      }\n      \n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (String key : storedSyns.keySet()) {\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n          \n          \r\n          \r\n          Object mapping = storedSyns.get(key);\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                \" but got \"+mapping.getClass().getName());\n          }\n                    \n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>)storedSyns.get(key));          \n          cpsm.mappings.put(key, sortedVals);        \n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());      \n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2019-09-13 20:42:38","commitOrder":5,"curCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n\n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n            format+\"! Only 'solr' is supported.\");\n      }\n\n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (Map.Entry<String, Object> entry : storedSyns.entrySet()) {\n          String key = entry.getKey();\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n\n          \r\n          \r\n          Object mapping = entry.getValue();\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                    \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>) entry.getValue());\n          cpsm.mappings.put(key, sortedVals);\n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());\n    }\n","date":"2019-09-13 20:42:38","endLine":165,"groupId":"13171","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"onManagedDataLoadedFromStorage","params":"(NamedList<?>managedInitArgs@ObjectmanagedData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6d/7c1f570857fe3bd3bdb49e8605d47c89fda2fe.src","preCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n\n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n            format+\"! Only 'solr' is supported.\");\n      }\n\n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (Map.Entry<String, Object> entry : storedSyns.entrySet()) {\n          String key = entry.getKey();\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n\n          \r\n          \r\n          Object mapping = entry.getValue();\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                    \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>) entry.getValue());\n          cpsm.mappings.put(key, sortedVals);\n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());\n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"N"}],"commitId":"04786244d0ae37eef88948c7fdfb5ccb84ca47da","commitMessage":"@@@LUCENE-8979: Code Cleanup: Use entryset for map iteration wherever possible. - part 2\n\n","date":"2019-10-15 00:36:19","modifiedFileCount":"38","status":"M","submitter":"Koen De Groote"},{"authorTime":"2019-10-15 00:45:47","codes":[{"authorDate":"2019-10-15 00:45:47","commitOrder":6,"curCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n      \n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n           format+\"! Only 'solr' is supported.\");\n      }\n      \n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (Map.Entry<String, Object> entry : storedSyns.entrySet()) {\n          String key = entry.getKey();\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n          \n          \r\n          \r\n          Object mapping = entry.getValue();\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>((List<String>) entry.getValue());\n          cpsm.mappings.put(key, sortedVals);        \n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());      \n    }\n","date":"2019-10-15 00:45:47","endLine":169,"groupId":"13171","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"onManagedDataLoadedFromStorage","params":"(NamedList<?>managedInitArgs@ObjectmanagedData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fb/4cc0471a1c272dacb532368901bb49ca7c3fd2.src","preCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n      \n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n           format+\"! Only 'solr' is supported.\");\n      }\n      \n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (Map.Entry<String, Object> entry : storedSyns.entrySet()) {\n          String key = entry.getKey();\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n          \n          \r\n          \r\n          Object mapping = entry.getValue();\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                \" but got \"+mapping.getClass().getName());\n          }\n                    \n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>) entry.getValue());\n          cpsm.mappings.put(key, sortedVals);        \n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());      \n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2019-10-15 00:45:47","commitOrder":6,"curCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n\n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n            format+\"! Only 'solr' is supported.\");\n      }\n\n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (Map.Entry<String, Object> entry : storedSyns.entrySet()) {\n          String key = entry.getKey();\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n\n          \r\n          \r\n          Object mapping = entry.getValue();\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                    \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>((List<String>) entry.getValue());\n          cpsm.mappings.put(key, sortedVals);\n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());\n    }\n","date":"2019-10-15 00:45:47","endLine":164,"groupId":"13171","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"onManagedDataLoadedFromStorage","params":"(NamedList<?>managedInitArgs@ObjectmanagedData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/472fe324be9bd468fad9697a3eada10d7eb251.src","preCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n\n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n            format+\"! Only 'solr' is supported.\");\n      }\n\n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (Map.Entry<String, Object> entry : storedSyns.entrySet()) {\n          String key = entry.getKey();\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n\n          \r\n          \r\n          Object mapping = entry.getValue();\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                    \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>();\n          sortedVals.addAll((List<String>) entry.getValue());\n          cpsm.mappings.put(key, sortedVals);\n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());\n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"e7e6cfaecfa44729bc7eae75a80493ec3e11944b","commitMessage":"@@@LUCENE-8994: Code Cleanup - Pass values to list constructor instead of empty constructor followed by addAll(). (#919)\n\n","date":"2019-10-15 00:45:47","modifiedFileCount":"27","status":"M","submitter":"Koen De Groote"},{"authorTime":"2020-04-18 08:40:32","codes":[{"authorDate":"2020-04-18 08:40:32","commitOrder":7,"curCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n      \n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n           format+\"! Only 'solr' is supported.\");\n      }\n      \n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (Map.Entry<String, Object> entry : storedSyns.entrySet()) {\n          String key = entry.getKey();\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n          \n          \r\n          \r\n          Object mapping = entry.getValue();\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>((List<String>) entry.getValue());\n          cpsm.mappings.put(key, sortedVals);        \n        }\n      }\n      if (log.isInfoEnabled()) {\n        log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());\n      }\n    }\n","date":"2020-04-18 08:40:32","endLine":171,"groupId":"102588","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"onManagedDataLoadedFromStorage","params":"(NamedList<?>managedInitArgs@ObjectmanagedData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/2dd10ff2a2715c88c4f850e6d6a14fb73e5615.src","preCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n      \n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n           format+\"! Only 'solr' is supported.\");\n      }\n      \n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (Map.Entry<String, Object> entry : storedSyns.entrySet()) {\n          String key = entry.getKey();\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n          \n          \r\n          \r\n          Object mapping = entry.getValue();\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR, \n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>((List<String>) entry.getValue());\n          cpsm.mappings.put(key, sortedVals);        \n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());      \n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2020-04-18 08:40:32","commitOrder":7,"curCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n\n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n            format+\"! Only 'solr' is supported.\");\n      }\n\n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (Map.Entry<String, Object> entry : storedSyns.entrySet()) {\n          String key = entry.getKey();\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n\n          \r\n          \r\n          Object mapping = entry.getValue();\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                    \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>((List<String>) entry.getValue());\n          cpsm.mappings.put(key, sortedVals);\n        }\n      }\n      if (log.isInfoEnabled()) {\n        log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());\n      }\n    }\n","date":"2020-04-18 08:40:32","endLine":166,"groupId":"102588","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"onManagedDataLoadedFromStorage","params":"(NamedList<?>managedInitArgs@ObjectmanagedData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d9/6c320808ac6227d52837d9587866c3f214d694.src","preCode":"    protected void onManagedDataLoadedFromStorage(NamedList<?> managedInitArgs, Object managedData)\n        throws SolrException\n    {\n      NamedList<Object> initArgs = (NamedList<Object>)managedInitArgs;\n\n      String format = (String)initArgs.get(\"format\");\n      if (format != null && !\"solr\".equals(format)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid format \"+\n            format+\"! Only 'solr' is supported.\");\n      }\n\n      \r\n      \r\n      if (initArgs.get(IGNORE_CASE_INIT_ARG) == null) {\n        initArgs.add(IGNORE_CASE_INIT_ARG, Boolean.FALSE);\n      }\n\n      boolean ignoreCase = getIgnoreCase(managedInitArgs);\n      synonymMappings = new TreeMap<>();\n      if (managedData != null) {\n        Map<String,Object> storedSyns = (Map<String,Object>)managedData;\n        for (Map.Entry<String, Object> entry : storedSyns.entrySet()) {\n          String key = entry.getKey();\n\n          String caseKey = applyCaseSetting(ignoreCase, key);\n          CasePreservedSynonymMappings cpsm = synonymMappings.get(caseKey);\n          if (cpsm == null) {\n            cpsm = new CasePreservedSynonymMappings();\n            synonymMappings.put(caseKey, cpsm);\n          }\n\n          \r\n          \r\n          Object mapping = entry.getValue();\n          if (!(mapping instanceof List)) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Invalid synonym file format! Expected a list of synonyms for \"+key+\n                    \" but got \"+mapping.getClass().getName());\n          }\n\n          Set<String> sortedVals = new TreeSet<>((List<String>) entry.getValue());\n          cpsm.mappings.put(key, sortedVals);\n        }\n      }\n      log.info(\"Loaded {} synonym mappings for {}\", synonymMappings.size(), getResourceId());\n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"3af165b32ac8028a6c01ac9c9a6d2c808efa0e85","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-04-18 08:40:32","modifiedFileCount":"37","status":"M","submitter":"Erick Erickson"}]
