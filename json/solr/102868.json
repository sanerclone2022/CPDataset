[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void testAddRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 1, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.commitCommands.get() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.commitCommands.get() );\n    ureq.close();\n\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.rollbackCommands.get() );\n    updater.rollback(rbkCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.rollbackCommands.get() );\n    ureq.close();\n    \n    \r\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"B\\\" should not be found.\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","date":"2011-07-10 07:01:53","endLine":152,"groupId":"10173","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddRollback","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/65/4d474d161ce843afbb6a15806eea0bc2051bf8.src","preCode":"  public void testAddRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 1, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.commitCommands.get() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.commitCommands.get() );\n    ureq.close();\n\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.rollbackCommands.get() );\n    updater.rollback(rbkCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.rollbackCommands.get() );\n    ureq.close();\n    \n    \r\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"B\\\" should not be found.\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void testDeleteRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 2, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.commitCommands.get() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.commitCommands.get() );\n    ureq.close();\n\n    \r\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            ,\"//result/doc[2]/str[@name='id'][.='B']\"\n            );\n\n    \r\n    assertU(delI(\"B\"));\n\n    \r\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.deleteByIdCommands.get() );\n    assertEquals( 1, duh2.deleteByIdCommandsCumulative.get() );\n    assertEquals( 0, duh2.rollbackCommands.get() );\n    updater.rollback(rbkCmd);\n    ureq.close();\n    assertEquals( 0, duh2.deleteByIdCommands.get() );\n    assertEquals( 0, duh2.deleteByIdCommandsCumulative.get() );\n    assertEquals( 1, duh2.rollbackCommands.get() );\n    \n    \r\n    assertQ(\"\\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","date":"2011-07-10 07:01:53","endLine":228,"groupId":"59677","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeleteRollback","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/65/4d474d161ce843afbb6a15806eea0bc2051bf8.src","preCode":"  public void testDeleteRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 2, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.commitCommands.get() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.commitCommands.get() );\n    ureq.close();\n\n    \r\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            ,\"//result/doc[2]/str[@name='id'][.='B']\"\n            );\n\n    \r\n    assertU(delI(\"B\"));\n\n    \r\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.deleteByIdCommands.get() );\n    assertEquals( 1, duh2.deleteByIdCommandsCumulative.get() );\n    assertEquals( 0, duh2.rollbackCommands.get() );\n    updater.rollback(rbkCmd);\n    ureq.close();\n    assertEquals( 0, duh2.deleteByIdCommands.get() );\n    assertEquals( 0, duh2.deleteByIdCommandsCumulative.get() );\n    assertEquals( 1, duh2.rollbackCommands.get() );\n    \n    \r\n    assertQ(\"\\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2014-03-12 22:39:17","codes":[{"authorDate":"2014-03-12 22:39:17","commitOrder":2,"curCode":"  public void testAddRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 1, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.commitCommands.get() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.commitCommands.get() );\n    ureq.close();\n\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.rollbackCommands.get() );\n    updater.rollback(rbkCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.rollbackCommands.get() );\n    ureq.close();\n    \n    \r\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"B\\\" should not be found.\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","date":"2014-03-12 22:39:17","endLine":191,"groupId":"10173","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddRollback","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5f/b1e14c65d2e5a436940fcc6bea78227ea4c968.src","preCode":"  public void testAddRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 1, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.commitCommands.get() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.commitCommands.get() );\n    ureq.close();\n\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.rollbackCommands.get() );\n    updater.rollback(rbkCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.rollbackCommands.get() );\n    ureq.close();\n    \n    \r\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"B\\\" should not be found.\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"},{"authorDate":"2014-03-12 22:39:17","commitOrder":2,"curCode":"  public void testDeleteRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 2, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.commitCommands.get() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.commitCommands.get() );\n    ureq.close();\n\n    \r\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            ,\"//result/doc[2]/str[@name='id'][.='B']\"\n            );\n\n    \r\n    assertU(delI(\"B\"));\n\n    \r\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.deleteByIdCommands.get() );\n    assertEquals( 1, duh2.deleteByIdCommandsCumulative.get() );\n    assertEquals( 0, duh2.rollbackCommands.get() );\n    updater.rollback(rbkCmd);\n    ureq.close();\n    assertEquals( 0, duh2.deleteByIdCommands.get() );\n    assertEquals( 0, duh2.deleteByIdCommandsCumulative.get() );\n    assertEquals( 1, duh2.rollbackCommands.get() );\n    \n    \r\n    assertQ(\"\\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","date":"2014-03-12 22:39:17","endLine":267,"groupId":"60594","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeleteRollback","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5f/b1e14c65d2e5a436940fcc6bea78227ea4c968.src","preCode":"  public void testDeleteRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 2, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.commitCommands.get() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.commitCommands.get() );\n    ureq.close();\n\n    \r\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            ,\"//result/doc[2]/str[@name='id'][.='B']\"\n            );\n\n    \r\n    assertU(delI(\"B\"));\n\n    \r\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.deleteByIdCommands.get() );\n    assertEquals( 1, duh2.deleteByIdCommandsCumulative.get() );\n    assertEquals( 0, duh2.rollbackCommands.get() );\n    updater.rollback(rbkCmd);\n    ureq.close();\n    assertEquals( 0, duh2.deleteByIdCommands.get() );\n    assertEquals( 0, duh2.deleteByIdCommandsCumulative.get() );\n    assertEquals( 1, duh2.rollbackCommands.get() );\n    \n    \r\n    assertQ(\"\\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"}],"commitId":"3b67b17493216f6b0c81a981073fd5f61eace6f4","commitMessage":"@@@LUCENE-5512: remove redundant typing (diamond operator) in trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1576755 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-12 22:39:17","modifiedFileCount":"1241","status":"M","submitter":"Robert Muir"},{"authorTime":"2016-07-26 18:47:32","codes":[{"authorDate":"2016-07-26 18:47:32","commitOrder":3,"curCode":"  public void testAddRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 1, duh2.addCommands.longValue() );\n    assertEquals( 1, duh2.addCommandsCumulative.longValue() );\n    assertEquals( 0, duh2.commitCommands.longValue() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.longValue() );\n    assertEquals( 1, duh2.addCommandsCumulative.longValue() );\n    assertEquals( 1, duh2.commitCommands.longValue() );\n    ureq.close();\n\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.addCommands.longValue() );\n    assertEquals( 2, duh2.addCommandsCumulative.longValue() );\n    assertEquals( 0, duh2.rollbackCommands.longValue() );\n    updater.rollback(rbkCmd);\n    assertEquals( 0, duh2.addCommands.longValue() );\n    assertEquals( 1, duh2.addCommandsCumulative.longValue() );\n    assertEquals( 1, duh2.rollbackCommands.longValue() );\n    ureq.close();\n    \n    \r\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"B\\\" should not be found.\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","date":"2016-07-26 18:47:41","endLine":204,"groupId":"17428","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddRollback","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ca/604fed5f86004fe8c80a0c5ae2066beb63ef54.src","preCode":"  public void testAddRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 1, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.commitCommands.get() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.commitCommands.get() );\n    ureq.close();\n\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.rollbackCommands.get() );\n    updater.rollback(rbkCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 1, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.rollbackCommands.get() );\n    ureq.close();\n    \n    \r\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"B\\\" should not be found.\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2016-07-26 18:47:32","commitOrder":3,"curCode":"  public void testDeleteRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 2, duh2.addCommands.longValue() );\n    assertEquals( 2, duh2.addCommandsCumulative.longValue() );\n    assertEquals( 0, duh2.commitCommands.longValue() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.longValue() );\n    assertEquals( 2, duh2.addCommandsCumulative.longValue() );\n    assertEquals( 1, duh2.commitCommands.longValue() );\n    ureq.close();\n\n    \r\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            ,\"//result/doc[2]/str[@name='id'][.='B']\"\n            );\n\n    \r\n    assertU(delI(\"B\"));\n\n    \r\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.deleteByIdCommands.longValue() );\n    assertEquals( 1, duh2.deleteByIdCommandsCumulative.longValue() );\n    assertEquals( 0, duh2.rollbackCommands.longValue() );\n    updater.rollback(rbkCmd);\n    ureq.close();\n    assertEquals( 0, duh2.deleteByIdCommands.longValue() );\n    assertEquals( 0, duh2.deleteByIdCommandsCumulative.longValue() );\n    assertEquals( 1, duh2.rollbackCommands.longValue() );\n    \n    \r\n    assertQ(\"\\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","date":"2016-07-26 18:47:41","endLine":280,"groupId":"17428","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeleteRollback","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ca/604fed5f86004fe8c80a0c5ae2066beb63ef54.src","preCode":"  public void testDeleteRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 2, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 0, duh2.commitCommands.get() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.get() );\n    assertEquals( 2, duh2.addCommandsCumulative.get() );\n    assertEquals( 1, duh2.commitCommands.get() );\n    ureq.close();\n\n    \r\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            ,\"//result/doc[2]/str[@name='id'][.='B']\"\n            );\n\n    \r\n    assertU(delI(\"B\"));\n\n    \r\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.deleteByIdCommands.get() );\n    assertEquals( 1, duh2.deleteByIdCommandsCumulative.get() );\n    assertEquals( 0, duh2.rollbackCommands.get() );\n    updater.rollback(rbkCmd);\n    ureq.close();\n    assertEquals( 0, duh2.deleteByIdCommands.get() );\n    assertEquals( 0, duh2.deleteByIdCommandsCumulative.get() );\n    assertEquals( 1, duh2.rollbackCommands.get() );\n    \n    \r\n    assertQ(\"\\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"f906862afe2ba4ef7ac521555ee59a86ef0b2a75","commitMessage":"@@@SOLR-9335: Switch Solr cache/search/update stats counters to use LongAdder\n","date":"2016-07-26 18:47:41","modifiedFileCount":"5","status":"M","submitter":"Varun Thacker"},{"authorTime":"2017-03-06 18:09:59","codes":[{"authorDate":"2017-03-06 18:09:59","commitOrder":4,"curCode":"  public void testAddRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 1, duh2.addCommands.longValue() );\n    assertEquals( 1, duh2.addCommandsCumulative.getCount() );\n    assertEquals( 0, duh2.commitCommands.getCount() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.longValue() );\n    assertEquals( 1, duh2.addCommandsCumulative.getCount() );\n    assertEquals( 1, duh2.commitCommands.getCount() );\n    ureq.close();\n\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.addCommands.longValue() );\n    assertEquals( 2, duh2.addCommandsCumulative.getCount() );\n    assertEquals( 0, duh2.rollbackCommands.getCount() );\n    updater.rollback(rbkCmd);\n    assertEquals( 0, duh2.addCommands.longValue() );\n    assertEquals( 1, duh2.addCommandsCumulative.getCount() );\n    assertEquals( 1, duh2.rollbackCommands.getCount() );\n    ureq.close();\n    \n    \r\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"B\\\" should not be found.\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","date":"2017-03-06 18:10:43","endLine":276,"groupId":"102868","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddRollback","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/28/1635435e4b7b4e2f9effc82aff27d484b0dccc.src","preCode":"  public void testAddRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 1, duh2.addCommands.longValue() );\n    assertEquals( 1, duh2.addCommandsCumulative.longValue() );\n    assertEquals( 0, duh2.commitCommands.longValue() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.longValue() );\n    assertEquals( 1, duh2.addCommandsCumulative.longValue() );\n    assertEquals( 1, duh2.commitCommands.longValue() );\n    ureq.close();\n\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.addCommands.longValue() );\n    assertEquals( 2, duh2.addCommandsCumulative.longValue() );\n    assertEquals( 0, duh2.rollbackCommands.longValue() );\n    updater.rollback(rbkCmd);\n    assertEquals( 0, duh2.addCommands.longValue() );\n    assertEquals( 1, duh2.addCommandsCumulative.longValue() );\n    assertEquals( 1, duh2.rollbackCommands.longValue() );\n    ureq.close();\n    \n    \r\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"B\\\" should not be found.\", req\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"},{"authorDate":"2017-03-06 18:09:59","commitOrder":4,"curCode":"  public void testDeleteRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 2, duh2.addCommands.longValue() );\n    assertEquals( 2, duh2.addCommandsCumulative.getCount() );\n    assertEquals( 0, duh2.commitCommands.getCount() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.longValue() );\n    assertEquals( 2, duh2.addCommandsCumulative.getCount() );\n    assertEquals( 1, duh2.commitCommands.getCount() );\n    ureq.close();\n\n    \r\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            ,\"//result/doc[2]/str[@name='id'][.='B']\"\n            );\n\n    \r\n    assertU(delI(\"B\"));\n\n    \r\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.deleteByIdCommands.longValue() );\n    assertEquals( 1, duh2.deleteByIdCommandsCumulative.getCount() );\n    assertEquals( 0, duh2.rollbackCommands.getCount() );\n    updater.rollback(rbkCmd);\n    ureq.close();\n    assertEquals( 0, duh2.deleteByIdCommands.longValue() );\n    assertEquals( 0, duh2.deleteByIdCommandsCumulative.getCount() );\n    assertEquals( 1, duh2.rollbackCommands.getCount() );\n    \n    \r\n    assertQ(\"\\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","date":"2017-03-06 18:10:43","endLine":352,"groupId":"102868","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeleteRollback","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/28/1635435e4b7b4e2f9effc82aff27d484b0dccc.src","preCode":"  public void testDeleteRollback() throws Exception {\n    \r\n    deleteCore();\n    initCore(\"solrconfig.xml\", \"schema12.xml\");\n\n    assertU(adoc(\"id\",\"A\"));\n    assertU(adoc(\"id\",\"B\"));\n\n    \r\n    SolrCore core = h.getCore();\n    UpdateHandler updater = core.getUpdateHandler();\n    assertTrue( updater instanceof DirectUpdateHandler2 );\n    DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater;\n    SolrQueryRequest ureq = req();\n    CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq, false);\n    cmtCmd.waitSearcher = true;\n    assertEquals( 2, duh2.addCommands.longValue() );\n    assertEquals( 2, duh2.addCommandsCumulative.longValue() );\n    assertEquals( 0, duh2.commitCommands.longValue() );\n    updater.commit(cmtCmd);\n    assertEquals( 0, duh2.addCommands.longValue() );\n    assertEquals( 2, duh2.addCommandsCumulative.longValue() );\n    assertEquals( 1, duh2.commitCommands.longValue() );\n    ureq.close();\n\n    \r\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"id:A OR id:B\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n            ,\"//*[@numFound='2']\"\n            ,\"//result/doc[1]/str[@name='id'][.='A']\"\n            ,\"//result/doc[2]/str[@name='id'][.='B']\"\n            );\n\n    \r\n    assertU(delI(\"B\"));\n\n    \r\n    assertQ(\"\\\"A\\\" and \\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    ureq = req();\n    RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq);\n    assertEquals( 1, duh2.deleteByIdCommands.longValue() );\n    assertEquals( 1, duh2.deleteByIdCommandsCumulative.longValue() );\n    assertEquals( 0, duh2.rollbackCommands.longValue() );\n    updater.rollback(rbkCmd);\n    ureq.close();\n    assertEquals( 0, duh2.deleteByIdCommands.longValue() );\n    assertEquals( 0, duh2.deleteByIdCommandsCumulative.longValue() );\n    assertEquals( 1, duh2.rollbackCommands.longValue() );\n    \n    \r\n    assertQ(\"\\\"B\\\" should be found.\", req\n        ,\"//*[@numFound='2']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A']\"\n        ,\"//result/doc[2]/str[@name='id'][.='B']\"\n        );\n\n    \r\n    \r\n    assertU(adoc(\"id\",\"ZZZ\"));\n    assertU(commit());\n    assertQ(\"\\\"ZZZ\\\" must be found.\", req(\"q\", \"id:ZZZ\")\n            ,\"//*[@numFound='1']\"\n            ,\"//result/doc[1]/str[@name='id'][.='ZZZ']\"\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/DirectUpdateHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"M"}],"commitId":"acb185b2dc7522e6a4fa55d54e82910736668f8d","commitMessage":"@@@SOLR-9999: Instrument DirectUpdateHandler2.\n","date":"2017-03-06 18:10:43","modifiedFileCount":"3","status":"M","submitter":"Andrzej Bialecki"}]
