[{"authorTime":"2016-10-04 02:49:20","codes":[{"authorDate":"2016-12-19 23:15:04","commitOrder":3,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder()\n        .withZkHost((cluster.getZkServer().getZkAddress()))\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2016-12-19 23:15:04","endLine":199,"groupId":"13032","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/37/c6b8cbe9bf7d85467f93c291fbbef13b5a757a.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder()\n        .withZkHost((cluster.getZkServer().getZkAddress()))\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"B"},{"authorDate":"2016-10-04 02:49:20","commitOrder":3,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder()\n        .withZkHost((miniCluster.getZkServer().getZkAddress()))\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2016-10-04 02:49:20","endLine":211,"groupId":"31468","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c3/fa813dd41a49e36a0844d258a50c7fd2779f31.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder()\n        .withZkHost((miniCluster.getZkServer().getZkAddress()))\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"NB"}],"commitId":"a1a8b2864e621c18aa86b21d4a244233e991a47d","commitMessage":"@@@SOLR-9513: Generic Hadoop authentication plugins.  GenericHadoopAuthPlugin and ConfigurableInternodeAuthHadoopPlugin\n","date":"2016-12-19 23:15:04","modifiedFileCount":"7","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2018-03-10 22:30:57","codes":[{"authorDate":"2018-03-10 22:30:57","commitOrder":4,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(cluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2018-03-10 23:45:43","endLine":200,"groupId":"13032","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/64/11ac410065bf58bb8af291c66c2f514b8ef0ac.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder()\n        .withZkHost((cluster.getZkServer().getZkAddress()))\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2018-03-10 22:30:57","commitOrder":4,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(miniCluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2018-03-10 23:45:43","endLine":212,"groupId":"31468","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c9/d04d51b1bc9da84c3ac148c96bba102a22e0d8.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder()\n        .withZkHost((miniCluster.getZkServer().getZkAddress()))\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"971bd26df6ecfa9c266910a8008a2dad52d4443a","commitMessage":"@@@SOLR-11629: Add new CloudSolrClient.Builder ctors\n\nCloudSolrClient.Builder can be pointed at a Solr cluster in two ways: a\nZK connection string.  or one or more Solr base URLs.  One of these two\nvalues must be provided to create a working CloudSolrClient.\n\nSince these values are required.  this commit introduces two new ctors. \none for each means of CloudSolrClient setup.  It deprecates the existing\nno-arg CloudSolrClient ctor.\n\nTogether.  these changes make it clearer to our users that these options\nare required (and mutually exclusive).\n","date":"2018-03-10 23:45:43","modifiedFileCount":"24","status":"M","submitter":"Jason Gerlowski"},{"authorTime":"2018-11-30 01:58:18","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":5,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(cluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2018-11-30 01:58:51","endLine":201,"groupId":"30786","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/07/ac0df4669c4ed693ff5d892e0acf0b68f903b0.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(cluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2018-11-30 01:58:18","commitOrder":5,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(miniCluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2018-11-30 01:58:51","endLine":212,"groupId":"57487","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/85/580cf3cbb8b0862bb93725450ffcdb5299a367.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(miniCluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"},{"authorTime":"2020-03-28 14:06:06","codes":[{"authorDate":"2020-03-28 14:06:06","commitOrder":6,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(cluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2020-03-28 14:06:06","endLine":201,"groupId":"30786","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/98/51710f817ed3f696254b28541d4bfed9f44a7c.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(cluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2020-03-28 14:06:06","commitOrder":6,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(miniCluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2020-03-28 14:06:06","endLine":229,"groupId":"57487","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b1/ec4aaf88901ff183df69f84bf83751ec9a8afa.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(miniCluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (HttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"}],"commitId":"132228d4503bf5760d25180fd4c2366900fc7da0","commitMessage":"@@@SOLR-14344: remove deprecated HttpSolrClient's Remote*Exception\n\n* All usages are replaced by BaseHttpSolrClient's Remote*Exception\n","date":"2020-03-28 14:06:06","modifiedFileCount":"37","status":"M","submitter":"Munendra S N"},{"authorTime":"2020-03-28 14:06:06","codes":[{"authorDate":"2020-06-18 05:51:41","commitOrder":7,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(cluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      @SuppressWarnings({\"rawtypes\"})\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2020-06-18 05:51:41","endLine":204,"groupId":"0","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/40/1bcd97f219126fc5438989b6c8f3a977baa236.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(cluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"},{"authorDate":"2020-03-28 14:06:06","commitOrder":7,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(miniCluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2020-03-28 14:06:06","endLine":229,"groupId":"57487","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b1/ec4aaf88901ff183df69f84bf83751ec9a8afa.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(miniCluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"N"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"},{"authorTime":"2020-06-18 23:12:50","codes":[{"authorDate":"2020-06-18 05:51:41","commitOrder":8,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(cluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      @SuppressWarnings({\"rawtypes\"})\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2020-06-18 05:51:41","endLine":204,"groupId":"0","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/40/1bcd97f219126fc5438989b6c8f3a977baa236.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(cluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      @SuppressWarnings({\"rawtypes\"})\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"N"},{"authorDate":"2020-06-18 23:12:50","commitOrder":8,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(miniCluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      @SuppressWarnings({\"rawtypes\"})\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2020-06-18 23:12:50","endLine":233,"groupId":"0","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d2/8fad77a6743a66625022efa76f8557c1fdf72a.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(miniCluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"84729edbba04ad7de4b1cae635d8d0fbe803f124","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 2)\n","date":"2020-06-18 23:12:50","modifiedFileCount":"122","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-07-13 23:49:56","codes":[{"authorDate":"2021-07-13 23:49:56","commitOrder":9,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(cluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest<CollectionAdminResponse> req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2021-07-13 23:49:56","endLine":202,"groupId":"102846","id":13,"instanceNumber":1,"isCurCommit":1,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c6/85a7b2bc31c397aa61614d9607b7f9cf556213.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(cluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withResponseParser(client.getParser())\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(PseudoAuthenticator.USER_NAME, user);\n      if (op != null) p.set(\"op\", op);\n      @SuppressWarnings({\"rawtypes\"})\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(PseudoAuthenticator.USER_NAME);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"},{"authorDate":"2021-07-13 23:49:56","commitOrder":9,"curCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(miniCluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      SolrRequest<?> req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","date":"2021-07-13 23:49:56","endLine":231,"groupId":"102846","id":14,"instanceNumber":2,"isCurCommit":1,"methodName":"getStatusCode","params":"(Stringtoken@finalStringuser@finalStringop@HttpSolrClientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e7/5f1b85e420f4be425dd0ac353bf4677adde237.src","preCode":"  private int getStatusCode(String token, final String user, final String op, HttpSolrClient client)\n  throws Exception {\n    SolrClient delegationTokenClient;\n    if (random().nextBoolean()) delegationTokenClient = new HttpSolrClient.Builder(client.getBaseURL().toString())\n        .withKerberosDelegationToken(token)\n        .withResponseParser(client.getParser())\n        .build();\n    else delegationTokenClient = new CloudSolrClient.Builder(Collections.singletonList(miniCluster.getZkServer().getZkAddress()), Optional.empty())\n        .withLBHttpSolrClientBuilder(new LBHttpSolrClient.Builder()\n            .withSocketTimeout(30000).withConnectionTimeout(15000)\n            .withResponseParser(client.getParser())\n            .withHttpSolrClientBuilder(\n                new HttpSolrClient.Builder()\n                    .withKerberosDelegationToken(token)\n            ))\n        .build();\n    try {\n      ModifiableSolrParams p = new ModifiableSolrParams();\n      if (user != null) p.set(USER_PARAM, user);\n      if (op != null) p.set(\"op\", op);\n      @SuppressWarnings({\"rawtypes\"})\n      SolrRequest req = getAdminRequest(p);\n      if (user != null || op != null) {\n        Set<String> queryParams = new HashSet<>();\n        if (user != null) queryParams.add(USER_PARAM);\n        if (op != null) queryParams.add(\"op\");\n        req.setQueryParams(queryParams);\n      }\n      try {\n        delegationTokenClient.request(req, null);\n        return HttpStatus.SC_OK;\n      } catch (BaseHttpSolrClient.RemoteSolrException re) {\n        return re.code();\n      }\n    } finally {\n      delegationTokenClient.close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"M"}],"commitId":"09986130545fabfb2cc76ced85a0da6ba536acf0","commitMessage":"@@@SOLR-15385 RawTypes Part VI (#207)\n\nCo-authored-by: Christine Poerschke <cpoerschke@apache.org>","date":"2021-07-13 23:49:56","modifiedFileCount":"185","status":"M","submitter":"Mike Drob"}]
