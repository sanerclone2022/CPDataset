[{"authorTime":"2014-09-11 13:04:06","codes":[{"authorDate":"2014-04-20 19:43:42","commitOrder":4,"curCode":"  public void testWritingAndReadingAFile() throws IOException {\n    String[] listAll = directory.listAll();\n    for (String file : listAll) {\n      directory.deleteFile(file);\n    }\n    \n    IndexOutput output = directory.createOutput(\"testing.test\", new IOContext());\n    output.writeInt(12345);\n    output.close();\n\n    IndexInput input = directory.openInput(\"testing.test\", new IOContext());\n    assertEquals(12345, input.readInt());\n    input.close();\n\n    listAll = directory.listAll();\n    assertEquals(1, listAll.length);\n    assertEquals(\"testing.test\", listAll[0]);\n\n    assertEquals(4, directory.fileLength(\"testing.test\"));\n\n    IndexInput input1 = directory.openInput(\"testing.test\", new IOContext());\n\n    IndexInput input2 = (IndexInput) input1.clone();\n    assertEquals(12345, input2.readInt());\n    input2.close();\n\n    assertEquals(12345, input1.readInt());\n    input1.close();\n\n    assertFalse(slowFileExists(directory, \"testing.test.other\"));\n    assertTrue(slowFileExists(directory, \"testing.test\"));\n    directory.deleteFile(\"testing.test\");\n    assertFalse(slowFileExists(directory, \"testing.test\"));\n  }\n","date":"2014-04-20 19:43:42","endLine":120,"groupId":"52046","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWritingAndReadingAFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/72/89d7368634dba2eb189b55dbc0e7f3cb6c5d82.src","preCode":"  public void testWritingAndReadingAFile() throws IOException {\n    String[] listAll = directory.listAll();\n    for (String file : listAll) {\n      directory.deleteFile(file);\n    }\n    \n    IndexOutput output = directory.createOutput(\"testing.test\", new IOContext());\n    output.writeInt(12345);\n    output.close();\n\n    IndexInput input = directory.openInput(\"testing.test\", new IOContext());\n    assertEquals(12345, input.readInt());\n    input.close();\n\n    listAll = directory.listAll();\n    assertEquals(1, listAll.length);\n    assertEquals(\"testing.test\", listAll[0]);\n\n    assertEquals(4, directory.fileLength(\"testing.test\"));\n\n    IndexInput input1 = directory.openInput(\"testing.test\", new IOContext());\n\n    IndexInput input2 = (IndexInput) input1.clone();\n    assertEquals(12345, input2.readInt());\n    input2.close();\n\n    assertEquals(12345, input1.readInt());\n    input1.close();\n\n    assertFalse(slowFileExists(directory, \"testing.test.other\"));\n    assertTrue(slowFileExists(directory, \"testing.test\"));\n    directory.deleteFile(\"testing.test\");\n    assertFalse(slowFileExists(directory, \"testing.test\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"NB"},{"authorDate":"2014-09-11 13:04:06","commitOrder":4,"curCode":"  public void testRename() throws IOException {\n    String[] listAll = directory.listAll();\n    for (String file : listAll) {\n      directory.deleteFile(file);\n    }\n    \n    IndexOutput output = directory.createOutput(\"testing.test\", new IOContext());\n    output.writeInt(12345);\n    output.close();\n    directory.renameFile(\"testing.test\", \"testing.test.renamed\");\n    assertFalse(slowFileExists(directory, \"testing.test\"));\n    assertTrue(slowFileExists(directory, \"testing.test.renamed\"));\n    IndexInput input = directory.openInput(\"testing.test.renamed\", new IOContext());\n    assertEquals(12345, input.readInt());\n    assertEquals(input.getFilePointer(), input.length());\n    input.close();\n    directory.deleteFile(\"testing.test.renamed\");\n    assertFalse(slowFileExists(directory, \"testing.test.renamed\"));\n  }\n","date":"2014-09-11 13:04:06","endLine":140,"groupId":"46120","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRename","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/3c74c09cd256201394d5c922f90a670210838d.src","preCode":"  public void testRename() throws IOException {\n    String[] listAll = directory.listAll();\n    for (String file : listAll) {\n      directory.deleteFile(file);\n    }\n    \n    IndexOutput output = directory.createOutput(\"testing.test\", new IOContext());\n    output.writeInt(12345);\n    output.close();\n    directory.renameFile(\"testing.test\", \"testing.test.renamed\");\n    assertFalse(slowFileExists(directory, \"testing.test\"));\n    assertTrue(slowFileExists(directory, \"testing.test.renamed\"));\n    IndexInput input = directory.openInput(\"testing.test.renamed\", new IOContext());\n    assertEquals(12345, input.readInt());\n    assertEquals(input.getFilePointer(), input.length());\n    input.close();\n    directory.deleteFile(\"testing.test.renamed\");\n    assertFalse(slowFileExists(directory, \"testing.test.renamed\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"}],"commitId":"bb0256f26076849b94de4e036cc5af055f0e6cd4","commitMessage":"@@@LUCENE-5925: use rename instead of segments_N fallback/segments.gen\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1624194 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-11 13:04:06","modifiedFileCount":"31","status":"M","submitter":"Robert Muir"},{"authorTime":"2016-07-11 23:15:22","codes":[{"authorDate":"2014-04-20 19:43:42","commitOrder":5,"curCode":"  public void testWritingAndReadingAFile() throws IOException {\n    String[] listAll = directory.listAll();\n    for (String file : listAll) {\n      directory.deleteFile(file);\n    }\n    \n    IndexOutput output = directory.createOutput(\"testing.test\", new IOContext());\n    output.writeInt(12345);\n    output.close();\n\n    IndexInput input = directory.openInput(\"testing.test\", new IOContext());\n    assertEquals(12345, input.readInt());\n    input.close();\n\n    listAll = directory.listAll();\n    assertEquals(1, listAll.length);\n    assertEquals(\"testing.test\", listAll[0]);\n\n    assertEquals(4, directory.fileLength(\"testing.test\"));\n\n    IndexInput input1 = directory.openInput(\"testing.test\", new IOContext());\n\n    IndexInput input2 = (IndexInput) input1.clone();\n    assertEquals(12345, input2.readInt());\n    input2.close();\n\n    assertEquals(12345, input1.readInt());\n    input1.close();\n\n    assertFalse(slowFileExists(directory, \"testing.test.other\"));\n    assertTrue(slowFileExists(directory, \"testing.test\"));\n    directory.deleteFile(\"testing.test\");\n    assertFalse(slowFileExists(directory, \"testing.test\"));\n  }\n","date":"2014-04-20 19:43:42","endLine":120,"groupId":"52046","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWritingAndReadingAFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/72/89d7368634dba2eb189b55dbc0e7f3cb6c5d82.src","preCode":"  public void testWritingAndReadingAFile() throws IOException {\n    String[] listAll = directory.listAll();\n    for (String file : listAll) {\n      directory.deleteFile(file);\n    }\n    \n    IndexOutput output = directory.createOutput(\"testing.test\", new IOContext());\n    output.writeInt(12345);\n    output.close();\n\n    IndexInput input = directory.openInput(\"testing.test\", new IOContext());\n    assertEquals(12345, input.readInt());\n    input.close();\n\n    listAll = directory.listAll();\n    assertEquals(1, listAll.length);\n    assertEquals(\"testing.test\", listAll[0]);\n\n    assertEquals(4, directory.fileLength(\"testing.test\"));\n\n    IndexInput input1 = directory.openInput(\"testing.test\", new IOContext());\n\n    IndexInput input2 = (IndexInput) input1.clone();\n    assertEquals(12345, input2.readInt());\n    input2.close();\n\n    assertEquals(12345, input1.readInt());\n    input1.close();\n\n    assertFalse(slowFileExists(directory, \"testing.test.other\"));\n    assertTrue(slowFileExists(directory, \"testing.test\"));\n    directory.deleteFile(\"testing.test\");\n    assertFalse(slowFileExists(directory, \"testing.test\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2016-07-11 23:15:22","commitOrder":5,"curCode":"  public void testRename() throws IOException {\n    String[] listAll = directory.listAll();\n    for (String file : listAll) {\n      directory.deleteFile(file);\n    }\n    \n    IndexOutput output = directory.createOutput(\"testing.test\", new IOContext());\n    output.writeInt(12345);\n    output.close();\n    directory.rename(\"testing.test\", \"testing.test.renamed\");\n    assertFalse(slowFileExists(directory, \"testing.test\"));\n    assertTrue(slowFileExists(directory, \"testing.test.renamed\"));\n    IndexInput input = directory.openInput(\"testing.test.renamed\", new IOContext());\n    assertEquals(12345, input.readInt());\n    assertEquals(input.getFilePointer(), input.length());\n    input.close();\n    directory.deleteFile(\"testing.test.renamed\");\n    assertFalse(slowFileExists(directory, \"testing.test.renamed\"));\n  }\n","date":"2016-07-11 23:15:46","endLine":140,"groupId":"33558","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRename","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0d/5d0a78eb7972aa96452610e8ad3ef3d10096c8.src","preCode":"  public void testRename() throws IOException {\n    String[] listAll = directory.listAll();\n    for (String file : listAll) {\n      directory.deleteFile(file);\n    }\n    \n    IndexOutput output = directory.createOutput(\"testing.test\", new IOContext());\n    output.writeInt(12345);\n    output.close();\n    directory.renameFile(\"testing.test\", \"testing.test.renamed\");\n    assertFalse(slowFileExists(directory, \"testing.test\"));\n    assertTrue(slowFileExists(directory, \"testing.test.renamed\"));\n    IndexInput input = directory.openInput(\"testing.test.renamed\", new IOContext());\n    assertEquals(12345, input.readInt());\n    assertEquals(input.getFilePointer(), input.length());\n    input.close();\n    directory.deleteFile(\"testing.test.renamed\");\n    assertFalse(slowFileExists(directory, \"testing.test.renamed\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"df9efb8b6da5195d6c8454cb7fd9b91147cb93fd","commitMessage":"@@@LUCENE-7373: deprecate Directory.renameFile.  which both renamed and fsync'd the directory.  replacing it with separate rename and syncMetaData methods\n","date":"2016-07-11 23:15:46","modifiedFileCount":"21","status":"M","submitter":"Mike McCandless"},{"authorTime":"2016-07-11 23:15:22","codes":[{"authorDate":"2020-06-18 23:12:50","commitOrder":6,"curCode":"  public void testWritingAndReadingAFile() throws IOException {\n    String[] listAll = directory.listAll();\n    for (String file : listAll) {\n      directory.deleteFile(file);\n    }\n    \n    IndexOutput output = directory.createOutput(\"testing.test\", new IOContext());\n    output.writeInt(12345);\n    output.close();\n\n    IndexInput input = directory.openInput(\"testing.test\", new IOContext());\n    assertEquals(12345, input.readInt());\n    input.close();\n\n    listAll = directory.listAll();\n    assertEquals(1, listAll.length);\n    assertEquals(\"testing.test\", listAll[0]);\n\n    assertEquals(4, directory.fileLength(\"testing.test\"));\n\n    IndexInput input1 = directory.openInput(\"testing.test\", new IOContext());\n\n    IndexInput input2 = input1.clone();\n    assertEquals(12345, input2.readInt());\n    input2.close();\n\n    assertEquals(12345, input1.readInt());\n    input1.close();\n\n    assertFalse(slowFileExists(directory, \"testing.test.other\"));\n    assertTrue(slowFileExists(directory, \"testing.test\"));\n    directory.deleteFile(\"testing.test\");\n    assertFalse(slowFileExists(directory, \"testing.test\"));\n  }\n","date":"2020-06-18 23:12:50","endLine":127,"groupId":"102752","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testWritingAndReadingAFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/09/3ba7bf0e9f0a45c05901ecdf7f8e945246c595.src","preCode":"  public void testWritingAndReadingAFile() throws IOException {\n    String[] listAll = directory.listAll();\n    for (String file : listAll) {\n      directory.deleteFile(file);\n    }\n    \n    IndexOutput output = directory.createOutput(\"testing.test\", new IOContext());\n    output.writeInt(12345);\n    output.close();\n\n    IndexInput input = directory.openInput(\"testing.test\", new IOContext());\n    assertEquals(12345, input.readInt());\n    input.close();\n\n    listAll = directory.listAll();\n    assertEquals(1, listAll.length);\n    assertEquals(\"testing.test\", listAll[0]);\n\n    assertEquals(4, directory.fileLength(\"testing.test\"));\n\n    IndexInput input1 = directory.openInput(\"testing.test\", new IOContext());\n\n    IndexInput input2 = (IndexInput) input1.clone();\n    assertEquals(12345, input2.readInt());\n    input2.close();\n\n    assertEquals(12345, input1.readInt());\n    input1.close();\n\n    assertFalse(slowFileExists(directory, \"testing.test.other\"));\n    assertTrue(slowFileExists(directory, \"testing.test\"));\n    directory.deleteFile(\"testing.test\");\n    assertFalse(slowFileExists(directory, \"testing.test\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2016-07-11 23:15:22","commitOrder":6,"curCode":"  public void testRename() throws IOException {\n    String[] listAll = directory.listAll();\n    for (String file : listAll) {\n      directory.deleteFile(file);\n    }\n    \n    IndexOutput output = directory.createOutput(\"testing.test\", new IOContext());\n    output.writeInt(12345);\n    output.close();\n    directory.rename(\"testing.test\", \"testing.test.renamed\");\n    assertFalse(slowFileExists(directory, \"testing.test\"));\n    assertTrue(slowFileExists(directory, \"testing.test.renamed\"));\n    IndexInput input = directory.openInput(\"testing.test.renamed\", new IOContext());\n    assertEquals(12345, input.readInt());\n    assertEquals(input.getFilePointer(), input.length());\n    input.close();\n    directory.deleteFile(\"testing.test.renamed\");\n    assertFalse(slowFileExists(directory, \"testing.test.renamed\"));\n  }\n","date":"2016-07-11 23:15:46","endLine":140,"groupId":"102752","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testRename","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0d/5d0a78eb7972aa96452610e8ad3ef3d10096c8.src","preCode":"  public void testRename() throws IOException {\n    String[] listAll = directory.listAll();\n    for (String file : listAll) {\n      directory.deleteFile(file);\n    }\n    \n    IndexOutput output = directory.createOutput(\"testing.test\", new IOContext());\n    output.writeInt(12345);\n    output.close();\n    directory.rename(\"testing.test\", \"testing.test.renamed\");\n    assertFalse(slowFileExists(directory, \"testing.test\"));\n    assertTrue(slowFileExists(directory, \"testing.test.renamed\"));\n    IndexInput input = directory.openInput(\"testing.test.renamed\", new IOContext());\n    assertEquals(12345, input.readInt());\n    assertEquals(input.getFilePointer(), input.length());\n    input.close();\n    directory.deleteFile(\"testing.test.renamed\");\n    assertFalse(slowFileExists(directory, \"testing.test.renamed\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"N"}],"commitId":"84729edbba04ad7de4b1cae635d8d0fbe803f124","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 2)\n","date":"2020-06-18 23:12:50","modifiedFileCount":"122","status":"M","submitter":"Erick Erickson"}]
