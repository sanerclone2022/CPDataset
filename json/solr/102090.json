[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  static boolean isNegative(Query q) {\n    if (!(q instanceof BooleanQuery)) return false;\n    BooleanQuery bq = (BooleanQuery)q;\n    List<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return false;\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return false;\n    }\n    return true;\n  }\n","date":"2011-07-10 07:01:53","endLine":42,"groupId":"59161","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"isNegative","params":"(Queryq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/15f98b6a1a5ead8b097f8b9d93e747e4632400.src","preCode":"  static boolean isNegative(Query q) {\n    if (!(q instanceof BooleanQuery)) return false;\n    BooleanQuery bq = (BooleanQuery)q;\n    List<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return false;\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return false;\n    }\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/QueryUtils.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  static Query getAbs(Query q) {\n    if (q instanceof WrappedQuery) {\n      Query subQ = ((WrappedQuery)q).getWrappedQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      WrappedQuery newQ = (WrappedQuery)q.clone();\n      newQ.setWrappedQuery(absSubQ);\n      return newQ;\n    }\n\n    if (!(q instanceof BooleanQuery)) return q;\n    BooleanQuery bq = (BooleanQuery)q;\n\n    List<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return q;\n\n\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return q;\n    }\n\n    if (clauses.size()==1) {\n      \r\n      Query negClause = clauses.get(0).getQuery();\n      \r\n      \r\n      \r\n      return negClause;\n    } else {\n      BooleanQuery newBq = new BooleanQuery(bq.isCoordDisabled());\n      newBq.setBoost(bq.getBoost());\n      \r\n\n      \r\n      for (BooleanClause clause : clauses) {\n        newBq.add(clause.getQuery(), BooleanClause.Occur.SHOULD);\n      }\n      return newBq;\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":93,"groupId":"50939","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getAbs","params":"(Queryq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/15f98b6a1a5ead8b097f8b9d93e747e4632400.src","preCode":"  static Query getAbs(Query q) {\n    if (q instanceof WrappedQuery) {\n      Query subQ = ((WrappedQuery)q).getWrappedQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      WrappedQuery newQ = (WrappedQuery)q.clone();\n      newQ.setWrappedQuery(absSubQ);\n      return newQ;\n    }\n\n    if (!(q instanceof BooleanQuery)) return q;\n    BooleanQuery bq = (BooleanQuery)q;\n\n    List<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return q;\n\n\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return q;\n    }\n\n    if (clauses.size()==1) {\n      \r\n      Query negClause = clauses.get(0).getQuery();\n      \r\n      \r\n      \r\n      return negClause;\n    } else {\n      BooleanQuery newBq = new BooleanQuery(bq.isCoordDisabled());\n      newBq.setBoost(bq.getBoost());\n      \r\n\n      \r\n      for (BooleanClause clause : clauses) {\n        newBq.add(clause.getQuery(), BooleanClause.Occur.SHOULD);\n      }\n      return newBq;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/QueryUtils.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2011-09-17 20:48:27","codes":[{"authorDate":"2011-09-17 20:48:27","commitOrder":2,"curCode":"  public static boolean isNegative(Query q) {\n    if (!(q instanceof BooleanQuery)) return false;\n    BooleanQuery bq = (BooleanQuery)q;\n    List<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return false;\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return false;\n    }\n    return true;\n  }\n","date":"2011-09-17 20:48:27","endLine":42,"groupId":"59161","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"isNegative","params":"(Queryq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5f/6cc6fc132d84ca3be8c50513dde9b20c268825.src","preCode":"  static boolean isNegative(Query q) {\n    if (!(q instanceof BooleanQuery)) return false;\n    BooleanQuery bq = (BooleanQuery)q;\n    List<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return false;\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return false;\n    }\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/QueryUtils.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2011-09-17 20:48:27","commitOrder":2,"curCode":"  public static Query getAbs(Query q) {\n    if (q instanceof WrappedQuery) {\n      Query subQ = ((WrappedQuery)q).getWrappedQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      WrappedQuery newQ = (WrappedQuery)q.clone();\n      newQ.setWrappedQuery(absSubQ);\n      return newQ;\n    }\n\n    if (!(q instanceof BooleanQuery)) return q;\n    BooleanQuery bq = (BooleanQuery)q;\n\n    List<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return q;\n\n\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return q;\n    }\n\n    if (clauses.size()==1) {\n      \r\n      Query negClause = clauses.get(0).getQuery();\n      \r\n      \r\n      \r\n      return negClause;\n    } else {\n      BooleanQuery newBq = new BooleanQuery(bq.isCoordDisabled());\n      newBq.setBoost(bq.getBoost());\n      \r\n\n      \r\n      for (BooleanClause clause : clauses) {\n        newBq.add(clause.getQuery(), BooleanClause.Occur.SHOULD);\n      }\n      return newBq;\n    }\n  }\n","date":"2011-09-17 20:48:27","endLine":93,"groupId":"50939","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getAbs","params":"(Queryq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5f/6cc6fc132d84ca3be8c50513dde9b20c268825.src","preCode":"  static Query getAbs(Query q) {\n    if (q instanceof WrappedQuery) {\n      Query subQ = ((WrappedQuery)q).getWrappedQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      WrappedQuery newQ = (WrappedQuery)q.clone();\n      newQ.setWrappedQuery(absSubQ);\n      return newQ;\n    }\n\n    if (!(q instanceof BooleanQuery)) return q;\n    BooleanQuery bq = (BooleanQuery)q;\n\n    List<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return q;\n\n\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return q;\n    }\n\n    if (clauses.size()==1) {\n      \r\n      Query negClause = clauses.get(0).getQuery();\n      \r\n      \r\n      \r\n      return negClause;\n    } else {\n      BooleanQuery newBq = new BooleanQuery(bq.isCoordDisabled());\n      newBq.setBoost(bq.getBoost());\n      \r\n\n      \r\n      for (BooleanClause clause : clauses) {\n        newBq.add(clause.getQuery(), BooleanClause.Occur.SHOULD);\n      }\n      return newBq;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/QueryUtils.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"96c4bb7074546cb87885bba5a7eaa1dea36d7c33","commitMessage":"@@@SOLR-2066: Added support for distributed grouping.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1171970 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-09-17 20:48:27","modifiedFileCount":"12","status":"M","submitter":"Martijn van Groningen"},{"authorTime":"2015-06-18 15:14:05","codes":[{"authorDate":"2015-06-18 15:14:05","commitOrder":3,"curCode":"  public static boolean isNegative(Query q) {\n    if (!(q instanceof BooleanQuery)) return false;\n    BooleanQuery bq = (BooleanQuery)q;\n    Collection<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return false;\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return false;\n    }\n    return true;\n  }\n","date":"2015-06-18 15:14:05","endLine":43,"groupId":"56737","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"isNegative","params":"(Queryq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/01/d2a7306109d58d581b728f6976c546b2955247.src","preCode":"  public static boolean isNegative(Query q) {\n    if (!(q instanceof BooleanQuery)) return false;\n    BooleanQuery bq = (BooleanQuery)q;\n    List<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return false;\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return false;\n    }\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/QueryUtils.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2015-06-18 15:14:05","commitOrder":3,"curCode":"  public static Query getAbs(Query q) {\n    if (q instanceof WrappedQuery) {\n      Query subQ = ((WrappedQuery)q).getWrappedQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      WrappedQuery newQ = (WrappedQuery)q.clone();\n      newQ.setWrappedQuery(absSubQ);\n      return newQ;\n    }\n\n    if (!(q instanceof BooleanQuery)) return q;\n    BooleanQuery bq = (BooleanQuery)q;\n\n    Collection<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return q;\n\n\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return q;\n    }\n\n    if (clauses.size()==1) {\n      \r\n      Query negClause = clauses.iterator().next().getQuery();\n      \r\n      \r\n      \r\n      return negClause;\n    } else {\n      BooleanQuery.Builder newBqB = new BooleanQuery.Builder();\n      newBqB.setDisableCoord(bq.isCoordDisabled());\n      \r\n\n      \r\n      for (BooleanClause clause : clauses) {\n        newBqB.add(clause.getQuery(), BooleanClause.Occur.SHOULD);\n      }\n      Query newBq = newBqB.build();\n      newBq.setBoost(bq.getBoost());\n      return newBq;\n    }\n  }\n","date":"2015-06-18 15:14:05","endLine":96,"groupId":"63166","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getAbs","params":"(Queryq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/01/d2a7306109d58d581b728f6976c546b2955247.src","preCode":"  public static Query getAbs(Query q) {\n    if (q instanceof WrappedQuery) {\n      Query subQ = ((WrappedQuery)q).getWrappedQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      WrappedQuery newQ = (WrappedQuery)q.clone();\n      newQ.setWrappedQuery(absSubQ);\n      return newQ;\n    }\n\n    if (!(q instanceof BooleanQuery)) return q;\n    BooleanQuery bq = (BooleanQuery)q;\n\n    List<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return q;\n\n\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return q;\n    }\n\n    if (clauses.size()==1) {\n      \r\n      Query negClause = clauses.get(0).getQuery();\n      \r\n      \r\n      \r\n      return negClause;\n    } else {\n      BooleanQuery newBq = new BooleanQuery(bq.isCoordDisabled());\n      newBq.setBoost(bq.getBoost());\n      \r\n\n      \r\n      for (BooleanClause clause : clauses) {\n        newBq.add(clause.getQuery(), BooleanClause.Occur.SHOULD);\n      }\n      return newBq;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/QueryUtils.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"}],"commitId":"4aafacfbef423a25a349dd8c6e5e6178ac1ba334","commitMessage":"@@@LUCENE-6570: Make BooleanQuery immutable.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1686145 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-06-18 15:14:05","modifiedFileCount":"184","status":"M","submitter":"Adrien Grand"},{"authorTime":"2015-09-07 21:34:46","codes":[{"authorDate":"2015-06-18 15:14:05","commitOrder":4,"curCode":"  public static boolean isNegative(Query q) {\n    if (!(q instanceof BooleanQuery)) return false;\n    BooleanQuery bq = (BooleanQuery)q;\n    Collection<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return false;\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return false;\n    }\n    return true;\n  }\n","date":"2015-06-18 15:14:05","endLine":43,"groupId":"56737","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"isNegative","params":"(Queryq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/01/d2a7306109d58d581b728f6976c546b2955247.src","preCode":"  public static boolean isNegative(Query q) {\n    if (!(q instanceof BooleanQuery)) return false;\n    BooleanQuery bq = (BooleanQuery)q;\n    Collection<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return false;\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return false;\n    }\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/QueryUtils.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"N"},{"authorDate":"2015-09-07 21:34:46","commitOrder":4,"curCode":"  public static Query getAbs(Query q) {\n    if (q instanceof BoostQuery) {\n      BoostQuery bq = (BoostQuery) q;\n      Query subQ = bq.getQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      return new BoostQuery(absSubQ, bq.getBoost());\n    }\n\n    if (q instanceof WrappedQuery) {\n      Query subQ = ((WrappedQuery)q).getWrappedQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      return new WrappedQuery(absSubQ);\n    }\n\n    if (!(q instanceof BooleanQuery)) return q;\n    BooleanQuery bq = (BooleanQuery)q;\n\n    Collection<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return q;\n\n\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return q;\n    }\n\n    if (clauses.size()==1) {\n      \r\n      Query negClause = clauses.iterator().next().getQuery();\n      \r\n      \r\n      \r\n      return negClause;\n    } else {\n      BooleanQuery.Builder newBqB = new BooleanQuery.Builder();\n      newBqB.setDisableCoord(bq.isCoordDisabled());\n      \r\n\n      \r\n      for (BooleanClause clause : clauses) {\n        newBqB.add(clause.getQuery(), BooleanClause.Occur.SHOULD);\n      }\n      return newBqB.build();\n    }\n  }\n","date":"2015-09-07 21:34:46","endLine":101,"groupId":"63166","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getAbs","params":"(Queryq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8a/4685cc964827920dc1a23b00df43913854cbda.src","preCode":"  public static Query getAbs(Query q) {\n    if (q instanceof WrappedQuery) {\n      Query subQ = ((WrappedQuery)q).getWrappedQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      WrappedQuery newQ = (WrappedQuery)q.clone();\n      newQ.setWrappedQuery(absSubQ);\n      return newQ;\n    }\n\n    if (!(q instanceof BooleanQuery)) return q;\n    BooleanQuery bq = (BooleanQuery)q;\n\n    Collection<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return q;\n\n\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return q;\n    }\n\n    if (clauses.size()==1) {\n      \r\n      Query negClause = clauses.iterator().next().getQuery();\n      \r\n      \r\n      \r\n      return negClause;\n    } else {\n      BooleanQuery.Builder newBqB = new BooleanQuery.Builder();\n      newBqB.setDisableCoord(bq.isCoordDisabled());\n      \r\n\n      \r\n      for (BooleanClause clause : clauses) {\n        newBqB.add(clause.getQuery(), BooleanClause.Occur.SHOULD);\n      }\n      Query newBq = newBqB.build();\n      newBq.setBoost(bq.getBoost());\n      return newBq;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/QueryUtils.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"962313b83ba9c69379e1f84dffc881a361713ce9","commitMessage":"@@@LUCENE-6590: Replace Query.getBoost.  setBoost and clone with a new BoostQuery.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1701621 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-09-07 21:34:46","modifiedFileCount":"226","status":"M","submitter":"Adrien Grand"},{"authorTime":"2016-07-01 01:04:11","codes":[{"authorDate":"2015-06-18 15:14:05","commitOrder":5,"curCode":"  public static boolean isNegative(Query q) {\n    if (!(q instanceof BooleanQuery)) return false;\n    BooleanQuery bq = (BooleanQuery)q;\n    Collection<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return false;\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return false;\n    }\n    return true;\n  }\n","date":"2015-06-18 15:14:05","endLine":43,"groupId":"102090","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"isNegative","params":"(Queryq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/01/d2a7306109d58d581b728f6976c546b2955247.src","preCode":"  public static boolean isNegative(Query q) {\n    if (!(q instanceof BooleanQuery)) return false;\n    BooleanQuery bq = (BooleanQuery)q;\n    Collection<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return false;\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return false;\n    }\n    return true;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/QueryUtils.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"N"},{"authorDate":"2016-07-01 01:04:11","commitOrder":5,"curCode":"  public static Query getAbs(Query q) {\n    if (q instanceof BoostQuery) {\n      BoostQuery bq = (BoostQuery) q;\n      Query subQ = bq.getQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      return new BoostQuery(absSubQ, bq.getBoost());\n    }\n\n    if (q instanceof WrappedQuery) {\n      Query subQ = ((WrappedQuery)q).getWrappedQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      return new WrappedQuery(absSubQ);\n    }\n\n    if (!(q instanceof BooleanQuery)) return q;\n    BooleanQuery bq = (BooleanQuery)q;\n\n    Collection<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return q;\n\n\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return q;\n    }\n\n    if (clauses.size()==1) {\n      \r\n      Query negClause = clauses.iterator().next().getQuery();\n      \r\n      \r\n      \r\n      return negClause;\n    } else {\n      BooleanQuery.Builder newBqB = new BooleanQuery.Builder();\n      \r\n\n      \r\n      for (BooleanClause clause : clauses) {\n        newBqB.add(clause.getQuery(), BooleanClause.Occur.SHOULD);\n      }\n      return newBqB.build();\n    }\n  }\n","date":"2016-07-07 16:02:29","endLine":99,"groupId":"102090","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getAbs","params":"(Queryq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6c/07ff6bcca2e5b4e75fe390ad2f6fa410bb8f75.src","preCode":"  public static Query getAbs(Query q) {\n    if (q instanceof BoostQuery) {\n      BoostQuery bq = (BoostQuery) q;\n      Query subQ = bq.getQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      return new BoostQuery(absSubQ, bq.getBoost());\n    }\n\n    if (q instanceof WrappedQuery) {\n      Query subQ = ((WrappedQuery)q).getWrappedQuery();\n      Query absSubQ = getAbs(subQ);\n      if (absSubQ == subQ) return q;\n      return new WrappedQuery(absSubQ);\n    }\n\n    if (!(q instanceof BooleanQuery)) return q;\n    BooleanQuery bq = (BooleanQuery)q;\n\n    Collection<BooleanClause> clauses = bq.clauses();\n    if (clauses.size()==0) return q;\n\n\n    for (BooleanClause clause : clauses) {\n      if (!clause.isProhibited()) return q;\n    }\n\n    if (clauses.size()==1) {\n      \r\n      Query negClause = clauses.iterator().next().getQuery();\n      \r\n      \r\n      \r\n      return negClause;\n    } else {\n      BooleanQuery.Builder newBqB = new BooleanQuery.Builder();\n      newBqB.setDisableCoord(bq.isCoordDisabled());\n      \r\n\n      \r\n      for (BooleanClause clause : clauses) {\n        newBqB.add(clause.getQuery(), BooleanClause.Occur.SHOULD);\n      }\n      return newBqB.build();\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/QueryUtils.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"}],"commitId":"f1528bf338f42ef0e10f6cf1333286eb05139acd","commitMessage":"@@@LUCENE-7369: Similarity.coord and BooleanQuery.disableCoord are removed.\n","date":"2016-07-07 16:02:29","modifiedFileCount":"70","status":"M","submitter":"Adrien Grand"}]
