[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n","date":"2011-07-10 07:01:53","endLine":89,"groupId":"63082","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/6069fec3355408ccdba7b3b96b2149a04412da.src","preCode":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void testIterator() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n    List list =     new ArrayList();\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",list.iterator());\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n    List l = (List) nl.get(\"zzz\");\n    assertEquals(list.size(), l.size());\n  }\n","date":"2011-07-10 07:01:53","endLine":124,"groupId":"32792","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/6069fec3355408ccdba7b3b96b2149a04412da.src","preCode":"  public void testIterator() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n    List list =     new ArrayList();\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",list.iterator());\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n    List l = (List) nl.get(\"zzz\");\n    assertEquals(list.size(), l.size());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":2,"curCode":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n","date":"2017-06-29 17:00:17","endLine":93,"groupId":"45021","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/56/37ec5dbd6e6549d52239c5530354836cdfc7e3.src","preCode":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":2,"curCode":"  public void testIterator() throws Exception{\n    \n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n    List list =     new ArrayList();\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",list.iterator());\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n    List l = (List) nl.get(\"zzz\");\n    assertEquals(list.size(), l.size());\n  }\n","date":"2017-06-29 17:00:17","endLine":132,"groupId":"48650","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/56/37ec5dbd6e6549d52239c5530354836cdfc7e3.src","preCode":"  public void testIterator() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n    List list =     new ArrayList();\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",list.iterator());\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n    List l = (List) nl.get(\"zzz\");\n    assertEquals(list.size(), l.size());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"M","submitter":"Karl Wright"},{"authorTime":"2018-07-16 18:24:45","codes":[{"authorDate":"2018-07-16 18:24:45","commitOrder":3,"curCode":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n","date":"2018-07-16 18:24:45","endLine":93,"groupId":"45021","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/77/ba622d37ee98949efb702f36d4f10ac7f5c691.src","preCode":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2018-07-16 18:24:45","commitOrder":3,"curCode":"  public void testIterator() throws Exception{\n    \n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n    List list =     new ArrayList();\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",list.iterator());\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n    List l = (List) nl.get(\"zzz\");\n    assertEquals(list.size(), l.size());\n  }\n","date":"2018-07-16 18:24:45","endLine":132,"groupId":"48650","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/77/ba622d37ee98949efb702f36d4f10ac7f5c691.src","preCode":"  public void testIterator() throws Exception{\n    \n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n    List list =     new ArrayList();\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",list.iterator());\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n    List l = (List) nl.get(\"zzz\");\n    assertEquals(list.size(), l.size());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"c97f27b06c1d7c250e9596a9bc7bf5ca11ef6ad3","commitMessage":"@@@Merge branch 'remove-constructor-wrapper-classes' of https://github.com/michaelbraun/lucene-solr:\nLUCENE-8345.  GitHub PR #392: Remove instantiation of redundant wrapper classes for primitives; add wrapper class constructors to forbiddenapis.\nThis closes #392\n","date":"2018-07-16 18:24:45","modifiedFileCount":"96","status":"M","submitter":"Uwe Schindler"},{"authorTime":"2020-06-17 01:27:53","codes":[{"authorDate":"2018-07-16 18:24:45","commitOrder":4,"curCode":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n","date":"2018-07-16 18:24:45","endLine":93,"groupId":"45021","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/77/ba622d37ee98949efb702f36d4f10ac7f5c691.src","preCode":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"N"},{"authorDate":"2020-06-17 01:27:53","commitOrder":4,"curCode":"  public void testIterator() throws Exception{\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList r = new NamedList();\n    @SuppressWarnings({\"rawtypes\"})\n    List list =     new ArrayList();\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",list.iterator());\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n    @SuppressWarnings({\"rawtypes\"})\n    List l = (List) nl.get(\"zzz\");\n    assertEquals(list.size(), l.size());\n  }\n","date":"2020-06-17 01:27:53","endLine":143,"groupId":"48650","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/07/0dfe6961ee311910f5c1d7049d3cad6095477f.src","preCode":"  public void testIterator() throws Exception{\n    \n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n    List list =     new ArrayList();\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",list.iterator());\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n    List l = (List) nl.get(\"zzz\");\n    assertEquals(list.size(), l.size());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"6357b3bdaaa0e2c2b1acfe838e55db3a83e38e73","commitMessage":"@@@SOLR-14573: Fix or suppress warnings in solrj/src/test\n","date":"2020-06-17 01:27:53","modifiedFileCount":"65","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-06-22 00:19:37","codes":[{"authorDate":"2021-06-22 00:19:37","commitOrder":5,"curCode":"  public void testSimple() throws Exception{\n\n    NamedList<Object> nl = new NamedList<>();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList<Object> r = new NamedList<>();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList<Object> p = new NamedList<>();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      NamedList<?> res = (NamedList<?>) jbc.unmarshal(bais);\n      assertEquals(3, res.size());\n      assertEquals( \"ipod\",((NamedList<?>)((NamedList<?>)res.getVal(0)).get(\"params\")).get(\"q\") );\n      list = (SolrDocumentList) res.getVal(1);\n      assertEquals(12,list.getNumFound() );\n      assertEquals(10,list.getStart() );\n      assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n    }\n  }\n","date":"2021-06-22 00:19:37","endLine":94,"groupId":"10416","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/71/8076ea383289d266cf2a5d9ba82da7f3878a88.src","preCode":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2021-06-22 00:19:37","commitOrder":5,"curCode":"  public void testIterator() throws Exception{\n    \n    NamedList<Object> nl = new NamedList<>();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    List<SolrDocument> list = new ArrayList<>();\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",list.iterator());\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      NamedList<?> res = (NamedList<?>) jbc.unmarshal(bais);\n      List<?> l = (List<?>) res.get(\"zzz\");\n      assertEquals(list.size(), l.size());\n    }\n  }\n","date":"2021-06-22 00:19:37","endLine":133,"groupId":"10416","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/71/8076ea383289d266cf2a5d9ba82da7f3878a88.src","preCode":"  public void testIterator() throws Exception{\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList r = new NamedList();\n    @SuppressWarnings({\"rawtypes\"})\n    List list =     new ArrayList();\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",list.iterator());\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n    @SuppressWarnings({\"rawtypes\"})\n    List l = (List) nl.get(\"zzz\");\n    assertEquals(list.size(), l.size());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"1725e778ac86d88e2deff8f7339d45bb4e50a719","commitMessage":"@@@SOLR-15385 RawTypes Part III.  contrib and solrj (#169)\n\n* SOLR-15385 RawTypes Part III.  contrib and solrj\n\nCo-authored-by: Christine Poerschke <cpoerschke@apache.org>","date":"2021-06-22 00:19:37","modifiedFileCount":"216","status":"M","submitter":"Mike Drob"}]
