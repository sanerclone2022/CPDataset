[{"authorTime":"2018-03-05 18:37:10","codes":[{"authorDate":"2014-04-18 06:46:38","commitOrder":2,"curCode":"  public void testAdd() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n  }\n","date":"2014-04-18 06:46:38","endLine":136,"groupId":"47932","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7f/22031a1908d823fce57fc0402618b1ef87a884.src","preCode":"  public void testAdd() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"NB"},{"authorDate":"2018-03-05 18:37:10","commitOrder":2,"curCode":"  public void testAddDistinct() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//doc/arr[@name='cat'][count(str)=3]\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", Arrays.asList(new String[]{\"bbb\", \"bbb\"})));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//doc/arr[@name='cat'][count(str)=3]\"); \r\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"5\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\"); \r\n  }\n","date":"2018-03-05 18:37:10","endLine":975,"groupId":"47932","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddDistinct","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/62/df01784a4875f47af21a18d811e16aa03bc994.src","preCode":"  public void testAddDistinct() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//doc/arr[@name='cat'][count(str)=3]\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", Arrays.asList(new String[]{\"bbb\", \"bbb\"})));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//doc/arr[@name='cat'][count(str)=3]\"); \r\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"5\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\"); \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":930,"status":"B"}],"commitId":"50a04c077fc4ee76e86df33e3b35aa876f71ed77","commitMessage":"@@@SOLR-11267: Add support for \"add-distinct\" atomic update operation\n","date":"2018-03-05 18:37:10","modifiedFileCount":"2","status":"M","submitter":"Noble Paul"},{"authorTime":"2020-06-10 21:29:44","codes":[{"authorDate":"2014-04-18 06:46:38","commitOrder":3,"curCode":"  public void testAdd() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n  }\n","date":"2014-04-18 06:46:38","endLine":136,"groupId":"47932","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7f/22031a1908d823fce57fc0402618b1ef87a884.src","preCode":"  public void testAdd() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"N"},{"authorDate":"2020-06-10 21:29:44","commitOrder":3,"curCode":"  public void testAddDistinct() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    doc.setField(\"atomic_is\", 10);\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    doc.setField(\"atomic_is\", ImmutableMap.of(\"add-distinct\", 10));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"),\n        \"//doc/arr[@name='cat'][count(str)=3]\",\n        \"//doc/arr[@name='atomic_is'][count(int)=1]\"\n    );\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", Arrays.asList(\"bbb\", \"bbb\")));\n    doc.setField(\"atomic_is\", ImmutableMap.of(\"add-distinct\", Arrays.asList(10, 34)));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"),\n        \"//doc/arr[@name='cat'][count(str)=3]\", \r\n        \"//doc/arr[@name='atomic_is'][count(int)=2]\"\n    );\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"5\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\"); \r\n  }\n","date":"2020-06-10 21:29:44","endLine":1042,"groupId":"35630","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddDistinct","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5a/15e10daece7f29f3cd36619595dfa5ff446976.src","preCode":"  public void testAddDistinct() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//doc/arr[@name='cat'][count(str)=3]\");\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", Arrays.asList(new String[]{\"bbb\", \"bbb\"})));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//doc/arr[@name='cat'][count(str)=3]\"); \r\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"5\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\"); \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":988,"status":"M"}],"commitId":"001c4e2ddd515c47ec842efadad3e56c4e648c61","commitMessage":"@@@SOLR-14550: fix duplicate issue in Atomic updates with add-distinct\n\n* When add-distinct value is list.  it can end up adding duplicate\n  entries\n","date":"2020-06-10 21:29:44","modifiedFileCount":"2","status":"M","submitter":"Munendra S N"},{"authorTime":"2020-06-10 21:29:44","codes":[{"authorDate":"2021-02-26 05:29:30","commitOrder":4,"curCode":"  public void testAdd() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    \r\n    \r\n    \r\n    \r\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\", \"fl\", \"id\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n  }\n","date":"2021-02-26 05:29:30","endLine":1024,"groupId":"102950","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testAdd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fc/edc1f4ecc62ba28bcb9855e020a85ef1cc1444.src","preCode":"  public void testAdd() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":995,"status":"M"},{"authorDate":"2020-06-10 21:29:44","commitOrder":4,"curCode":"  public void testAddDistinct() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    doc.setField(\"atomic_is\", 10);\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    doc.setField(\"atomic_is\", ImmutableMap.of(\"add-distinct\", 10));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"),\n        \"//doc/arr[@name='cat'][count(str)=3]\",\n        \"//doc/arr[@name='atomic_is'][count(int)=1]\"\n    );\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", Arrays.asList(\"bbb\", \"bbb\")));\n    doc.setField(\"atomic_is\", ImmutableMap.of(\"add-distinct\", Arrays.asList(10, 34)));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"),\n        \"//doc/arr[@name='cat'][count(str)=3]\", \r\n        \"//doc/arr[@name='atomic_is'][count(int)=2]\"\n    );\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"5\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\"); \r\n  }\n","date":"2020-06-10 21:29:44","endLine":1042,"groupId":"102950","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddDistinct","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5a/15e10daece7f29f3cd36619595dfa5ff446976.src","preCode":"  public void testAddDistinct() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    doc.setField(\"atomic_is\", 10);\n    assertU(adoc(doc));\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"4\");\n    doc.setField(\"cat\", new String[]{\"aaa\", \"ccc\"});\n    assertU(adoc(doc));\n\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '0']\");\n\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    doc.setField(\"atomic_is\", ImmutableMap.of(\"add-distinct\", 10));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"),\n        \"//doc/arr[@name='cat'][count(str)=3]\",\n        \"//doc/arr[@name='atomic_is'][count(int)=1]\"\n    );\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"3\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", Arrays.asList(\"bbb\", \"bbb\")));\n    doc.setField(\"atomic_is\", ImmutableMap.of(\"add-distinct\", Arrays.asList(10, 34)));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '2']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '1']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"),\n        \"//doc/arr[@name='cat'][count(str)=3]\", \r\n        \"//doc/arr[@name='atomic_is'][count(int)=2]\"\n    );\n\n    doc = new SolrInputDocument();\n    doc.setField(\"id\", \"5\");\n    doc.setField(\"cat\", ImmutableMap.of(\"add-distinct\", \"bbb\"));\n    assertU(adoc(doc));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"cat:*\", \"indent\", \"true\"), \"//result[@numFound = '3']\");\n    assertQ(req(\"q\", \"cat:bbb\", \"indent\", \"true\"), \"//result[@numFound = '2']\"); \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/AtomicUpdatesTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":988,"status":"N"}],"commitId":"62971c4f990437e3ba4a5f4a2e980a058c2c01f1","commitMessage":"@@@SOLR-13034: RTG sometimes didn't materialize LazyField (#2408)\n\nPartial (AKA Atomic) updates could encounter \"LazyField\" instances in the document\ncache and not know hot to deal with them when writing the updated doc to the update log.","date":"2021-02-26 05:29:30","modifiedFileCount":"2","status":"M","submitter":"David Smiley"}]
