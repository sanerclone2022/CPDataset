[{"authorTime":"2013-06-27 08:44:27","codes":[{"authorDate":"2013-06-27 08:44:27","commitOrder":1,"curCode":"  public void testParseIntNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"int_i\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    int value = 1089883491;\n    String intString1 = \"1089883491\";\n    String intString2 = \"1������089������883������491\"; \r\n    SolrInputDocument d = processAdd(\"parse-int-russian-no-run-processor\",\n        doc(f(\"id\", \"113\"), f(\"int_i\", intString1), f(\"not_in_schema\", intString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"int_i\") instanceof Integer);\n    assertEquals(value, ((Integer)d.getFieldValue(\"int_i\")).intValue());\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Integer);\n    assertEquals(value, ((Integer)d.getFieldValue(\"not_in_schema\")).intValue());\n  }\n","date":"2013-06-27 08:44:27","endLine":301,"groupId":"26260","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseIntNonRootLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/e6c21580d6797fda7663ad96ea802d93e27d17.src","preCode":"  public void testParseIntNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"int_i\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    int value = 1089883491;\n    String intString1 = \"1089883491\";\n    String intString2 = \"1������089������883������491\"; \r\n    SolrInputDocument d = processAdd(\"parse-int-russian-no-run-processor\",\n        doc(f(\"id\", \"113\"), f(\"int_i\", intString1), f(\"not_in_schema\", intString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"int_i\") instanceof Integer);\n    assertEquals(value, ((Integer)d.getFieldValue(\"int_i\")).intValue());\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Integer);\n    assertEquals(value, ((Integer)d.getFieldValue(\"not_in_schema\")).intValue());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"B"},{"authorDate":"2013-06-27 08:44:27","commitOrder":1,"curCode":"  public void testParseLongNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"long_l\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    long value = 1089883491L;\n    String longString1 = \"1089883491\";\n    String longString2 = \"1������089������883������491\"; \r\n    SolrInputDocument d = processAdd(\"parse-long-russian-no-run-processor\",\n                                     doc(f(\"id\", \"113\"), f(\"long_l\", longString1), f(\"not_in_schema\", longString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"long_l\") instanceof Long);\n    assertEquals(value, ((Long)d.getFieldValue(\"long_l\")).longValue());\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Long);\n    assertEquals(value, ((Long)d.getFieldValue(\"not_in_schema\")).longValue());\n  }\n","date":"2013-06-27 08:44:27","endLine":399,"groupId":"634","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseLongNonRootLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/e6c21580d6797fda7663ad96ea802d93e27d17.src","preCode":"  public void testParseLongNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"long_l\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    long value = 1089883491L;\n    String longString1 = \"1089883491\";\n    String longString2 = \"1������089������883������491\"; \r\n    SolrInputDocument d = processAdd(\"parse-long-russian-no-run-processor\",\n                                     doc(f(\"id\", \"113\"), f(\"long_l\", longString1), f(\"not_in_schema\", longString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"long_l\") instanceof Long);\n    assertEquals(value, ((Long)d.getFieldValue(\"long_l\")).longValue());\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Long);\n    assertEquals(value, ((Long)d.getFieldValue(\"not_in_schema\")).longValue());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":385,"status":"B"}],"commitId":"d6d65851cf4a7d1f9e5f0b58544374785e7c2594","commitMessage":"@@@SOLR-4892: Add field update processors to parse/convert String-typed fields to Date.  Number.  and Boolean\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497165 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 08:44:27","modifiedFileCount":"15","status":"B","submitter":"Steven Rowe"},{"authorTime":"2019-06-26 07:26:03","codes":[{"authorDate":"2019-06-26 07:26:03","commitOrder":2,"curCode":"  public void testParseIntNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"int_i\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    int value = 1089883491;\n    String intString1 = \"1089883491\";\n    String intString2 = \"1������089������883������491\"; \r\n    SolrInputDocument d = processAdd(\"parse-int-russian-no-run-processor\",\n        doc(f(\"id\", \"113\"), f(\"int_i\", intString1), f(\"not_in_schema\", intString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"int_i\"), IS_INTEGER);\n    assertEquals(value, ((Integer)d.getFieldValue(\"int_i\")).intValue());\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_INTEGER);\n    assertEquals(value, ((Integer)d.getFieldValue(\"not_in_schema\")).intValue());\n  }\n","date":"2019-06-26 07:26:03","endLine":307,"groupId":"26260","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseIntNonRootLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/978c83e26b147be8a7b06765e593d9eddf99e9.src","preCode":"  public void testParseIntNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"int_i\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    int value = 1089883491;\n    String intString1 = \"1089883491\";\n    String intString2 = \"1������089������883������491\"; \r\n    SolrInputDocument d = processAdd(\"parse-int-russian-no-run-processor\",\n        doc(f(\"id\", \"113\"), f(\"int_i\", intString1), f(\"not_in_schema\", intString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"int_i\") instanceof Integer);\n    assertEquals(value, ((Integer)d.getFieldValue(\"int_i\")).intValue());\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Integer);\n    assertEquals(value, ((Integer)d.getFieldValue(\"not_in_schema\")).intValue());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":293,"status":"M"},{"authorDate":"2019-06-26 07:26:03","commitOrder":2,"curCode":"  public void testParseLongNonRootLocale() throws Exception {\n    {\n      final NumberFormat sanityCheck = NumberFormat.getInstance(new Locale(\"fr\",\"FR\"));\n      sanityCheck.setParseIntegerOnly(false);\n      sanityCheck.setRoundingMode(RoundingMode.CEILING);\n      assumeThat(\"Your JVM appears to have NumberFormat parse bugs using U+00A0 in the fr_FR Locale\",\n                 sanityCheck.parse(\"10������898\"), new IsNot(new IsEqual(10L)));\n    }\n    \n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"long_l\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    long value = 1089883491L;\n    String longString1 = \"1089883491\";\n    String longString2 = \"1������089������883������491\"; \r\n    SolrInputDocument d = processAdd(\"parse-long-russian-no-run-processor\",\n                                     doc(f(\"id\", \"113\"), f(\"long_l\", longString1), f(\"not_in_schema\", longString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"long_l\"), IS_LONG);\n    assertEquals(value, ((Long)d.getFieldValue(\"long_l\")).longValue());\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_LONG);\n    assertEquals(value, ((Long)d.getFieldValue(\"not_in_schema\")).longValue());\n  }\n","date":"2019-06-26 07:26:03","endLine":413,"groupId":"634","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseLongNonRootLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/978c83e26b147be8a7b06765e593d9eddf99e9.src","preCode":"  public void testParseLongNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"long_l\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    long value = 1089883491L;\n    String longString1 = \"1089883491\";\n    String longString2 = \"1������089������883������491\"; \r\n    SolrInputDocument d = processAdd(\"parse-long-russian-no-run-processor\",\n                                     doc(f(\"id\", \"113\"), f(\"long_l\", longString1), f(\"not_in_schema\", longString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"long_l\") instanceof Long);\n    assertEquals(value, ((Long)d.getFieldValue(\"long_l\")).longValue());\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Long);\n    assertEquals(value, ((Long)d.getFieldValue(\"not_in_schema\")).longValue());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":391,"status":"M"}],"commitId":"583c219183b2bca85936a095727d287c5c28526b","commitMessage":"@@@SOLR-13580: add assumeThat calls to ParsingFieldUpdateProcessorsTest to skip test methods impacted by java 13-ea bug in NumberFormat.parse()\n","date":"2019-06-26 07:26:03","modifiedFileCount":"1","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2019-06-29 03:10:33","codes":[{"authorDate":"2019-06-29 03:10:33","commitOrder":3,"curCode":"  public void testParseIntNonRootLocale() throws Exception {\n    final DecimalFormatSymbols ru_RU = DecimalFormatSymbols.getInstance(new Locale(\"ru\",\"RU\"));\n    final char groupChar = ru_RU.getGroupingSeparator();\n    \n    int value = 1089883491;\n    String intString1 = \"1089883491\";\n    String intString2 = \"1\"+groupChar+\"089\"+groupChar+\"883\"+groupChar+\"491\";\n    \n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"int_i\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    SolrInputDocument d = processAdd(\"parse-int-russian-no-run-processor\",\n        doc(f(\"id\", \"113\"), f(\"int_i\", intString1), f(\"not_in_schema\", intString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"int_i\"), IS_INTEGER);\n    assertEquals(value, ((Integer)d.getFieldValue(\"int_i\")).intValue());\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_INTEGER);\n    assertEquals(value, ((Integer)d.getFieldValue(\"not_in_schema\")).intValue());\n  }\n","date":"2019-06-29 03:10:54","endLine":306,"groupId":"102911","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseIntNonRootLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/16/8db8de938938975a735324b11b9e8763ea79f0.src","preCode":"  public void testParseIntNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"int_i\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    int value = 1089883491;\n    String intString1 = \"1089883491\";\n    String intString2 = \"1������089������883������491\"; \r\n    SolrInputDocument d = processAdd(\"parse-int-russian-no-run-processor\",\n        doc(f(\"id\", \"113\"), f(\"int_i\", intString1), f(\"not_in_schema\", intString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"int_i\"), IS_INTEGER);\n    assertEquals(value, ((Integer)d.getFieldValue(\"int_i\")).intValue());\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_INTEGER);\n    assertEquals(value, ((Integer)d.getFieldValue(\"not_in_schema\")).intValue());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"M"},{"authorDate":"2019-06-29 03:10:33","commitOrder":3,"curCode":"  public void testParseLongNonRootLocale() throws Exception {\n    final DecimalFormatSymbols ru_RU = DecimalFormatSymbols.getInstance(new Locale(\"ru\",\"RU\"));\n    final char groupChar = ru_RU.getGroupingSeparator();\n    \n    long value = 1089883491L;\n    String longString1 = \"1089883491\";\n    String longString2 = \"1\"+groupChar+\"089\"+groupChar+\"883\"+groupChar+\"491\";\n    \n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"long_l\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    SolrInputDocument d = processAdd(\"parse-long-russian-no-run-processor\",\n                                     doc(f(\"id\", \"113\"), f(\"long_l\", longString1), f(\"not_in_schema\", longString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"long_l\"), IS_LONG);\n    assertEquals(value, ((Long)d.getFieldValue(\"long_l\")).longValue());\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_LONG);\n    assertEquals(value, ((Long)d.getFieldValue(\"not_in_schema\")).longValue());\n  }\n","date":"2019-06-29 03:10:54","endLine":408,"groupId":"102911","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseLongNonRootLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/16/8db8de938938975a735324b11b9e8763ea79f0.src","preCode":"  public void testParseLongNonRootLocale() throws Exception {\n    {\n      final NumberFormat sanityCheck = NumberFormat.getInstance(new Locale(\"fr\",\"FR\"));\n      sanityCheck.setParseIntegerOnly(false);\n      sanityCheck.setRoundingMode(RoundingMode.CEILING);\n      assumeThat(\"Your JVM appears to have NumberFormat parse bugs using U+00A0 in the fr_FR Locale\",\n                 sanityCheck.parse(\"10������898\"), new IsNot(new IsEqual(10L)));\n    }\n    \n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"long_l\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    long value = 1089883491L;\n    String longString1 = \"1089883491\";\n    String longString2 = \"1������089������883������491\"; \r\n    SolrInputDocument d = processAdd(\"parse-long-russian-no-run-processor\",\n                                     doc(f(\"id\", \"113\"), f(\"long_l\", longString1), f(\"not_in_schema\", longString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"long_l\"), IS_LONG);\n    assertEquals(value, ((Long)d.getFieldValue(\"long_l\")).longValue());\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_LONG);\n    assertEquals(value, ((Long)d.getFieldValue(\"not_in_schema\")).longValue());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":390,"status":"M"}],"commitId":"8b72e91df7b8ea545b6344d665bbb80e27a80aa4","commitMessage":"@@@SOLR-13580: update test to account for different versions of java using different locale specific numeric formatting characters\n","date":"2019-06-29 03:10:54","modifiedFileCount":"1","status":"M","submitter":"Chris Hostetter"}]
