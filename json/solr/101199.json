[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n\n  }\n","date":"2011-07-10 07:01:53","endLine":145,"groupId":"14598","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f4/2b2d4df3d7b72deec77c3ccf53040d767429b9.src","preCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","date":"2011-07-10 07:01:53","endLine":362,"groupId":"1844","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testArabicPDF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f4/2b2d4df3d7b72deec77c3ccf53040d767429b9.src","preCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2011-07-22 21:24:17","codes":[{"authorDate":"2011-07-22 21:24:17","commitOrder":2,"curCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n\n  }\n","date":"2011-07-22 21:24:17","endLine":145,"groupId":"14598","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/57a60e0d8822265f16ad14d5e98f9ce19d53a6.src","preCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2011-07-22 21:24:17","commitOrder":2,"curCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","date":"2011-07-22 21:24:17","endLine":362,"groupId":"1844","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testArabicPDF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/57a60e0d8822265f16ad14d5e98f9ce19d53a6.src","preCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"M"}],"commitId":"9772db3703b03f6e4a167268b757dd863684564c","commitMessage":"@@@SOLR-2659: Moved src/test-files/** under src/test-files/<module-name>/** for all Solr modules except core\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1149600 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-22 21:24:17","modifiedFileCount":"14","status":"M","submitter":"Steven Rowe"},{"authorTime":"2012-08-18 09:47:40","codes":[{"authorDate":"2012-08-18 09:47:40","commitOrder":3,"curCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n\n  }\n","date":"2012-08-18 09:47:40","endLine":149,"groupId":"33721","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/e7793315c22a5261ff19eb566a33d5de68c15c.src","preCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"fmap.AAPL:Keywords\", \"ignored_a\",\n            \"fmap.xmpTPg:NPages\", \"ignored_a\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2012-08-18 09:47:40","commitOrder":3,"curCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","date":"2012-08-18 09:47:40","endLine":387,"groupId":"18007","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testArabicPDF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/e7793315c22a5261ff19eb566a33d5de68c15c.src","preCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"M"}],"commitId":"01cdc012a066510dd564290747ac913e3188d8c8","commitMessage":"@@@SOLR-3707: Upgrade Solr to Tika 1.2\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1374501 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-18 09:47:40","modifiedFileCount":"1","status":"M","submitter":"Jan H?ydahl"},{"authorTime":"2012-08-18 09:47:40","codes":[{"authorDate":"2012-08-31 16:31:34","commitOrder":4,"curCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/word2003.doc\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='0']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='1']\");\n    assertU(commit());\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='1']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='2']\");\n  }\n","date":"2012-08-31 16:31:34","endLine":164,"groupId":"33721","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/db/db370348d46d823d3c5db51ea00071f247143d.src","preCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2012-08-18 09:47:40","commitOrder":4,"curCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","date":"2012-08-18 09:47:40","endLine":387,"groupId":"18007","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testArabicPDF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/e7793315c22a5261ff19eb566a33d5de68c15c.src","preCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"N"}],"commitId":"90e692e18098ac37e5804294521a6cb4f6b6d41c","commitMessage":"@@@SOLR-3775: Add a test for Office 2003 file (.doc)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1379357 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-31 16:31:34","modifiedFileCount":"1","status":"M","submitter":"Uwe Schindler"},{"authorTime":"2012-08-18 09:47:40","codes":[{"authorDate":"2013-08-09 21:26:55","commitOrder":5,"curCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n    assertQ(req(\"extractedContent:distinctwords\"),      \"//*[@numFound='0']\");\n    assertQ(req(\"extractedContent:distinct\"),           \"//*[@numFound='1']\");\n    assertQ(req(\"extractedContent:words\"),              \"//*[@numFound='2']\");\n    assertQ(req(\"extractedContent:\\\"distinct words\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/word2003.doc\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='0']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='1']\");\n    assertU(commit());\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='1']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='2']\");\n  }\n","date":"2013-08-09 21:26:55","endLine":168,"groupId":"33721","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ea/bddd6b398c3e807a0ade6c78c95ac21365c4f9.src","preCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/word2003.doc\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='0']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='1']\");\n    assertU(commit());\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='1']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='2']\");\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2012-08-18 09:47:40","commitOrder":5,"curCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","date":"2012-08-18 09:47:40","endLine":387,"groupId":"18007","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testArabicPDF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/e7793315c22a5261ff19eb566a33d5de68c15c.src","preCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"N"}],"commitId":"57acbcfd001d0cdc1aceccadfaee092c4437102a","commitMessage":"@@@SOLR-4679.  SOLR-4908.  SOLR-5124: Text extracted from HTML or PDF files using Solr Cell was missing ignorable whitespace.  which is inserted by TIKA for convenience to support plain text extraction without using the HTML elements. This bug resulted in glued words.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1512296 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-08-09 21:26:55","modifiedFileCount":"2","status":"M","submitter":"Uwe Schindler"},{"authorTime":"2012-08-18 09:47:40","codes":[{"authorDate":"2014-02-13 09:22:09","commitOrder":6,"curCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n    assertQ(req(\"extractedContent:distinctwords\"),      \"//*[@numFound='0']\");\n    assertQ(req(\"extractedContent:distinct\"),           \"//*[@numFound='1']\");\n    assertQ(req(\"extractedContent:words\"),              \"//*[@numFound='2']\");\n    assertQ(req(\"extractedContent:\\\"distinct words\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/word2003.doc\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='0']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='1']\");\n    assertU(commit());\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='1']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='2']\");\n\n    \r\n    loadLocal(\"extraction/tiny.txt.gz\", \n              \"fmap.created\", \"extractedDate\", \n              \"fmap.producer\", \"extractedProducer\",\n              \"fmap.creator\", \"extractedCreator\", \n              \"fmap.Keywords\", \"extractedKeywords\",\n              \"fmap.Author\", \"extractedAuthor\",\n              \"uprefix\", \"ignored_\",\n              \"fmap.content\", \"extractedContent\",\n              \"fmap.language\", \"extractedLanguage\",\n              \"fmap.Last-Modified\", \"extractedDate\",\n              \"literal.id\", \"tiny.txt.gz\");\n    assertU(commit());\n    assertQ(req(\"id:tiny.txt.gz\")\n            , \"//*[@numFound='1']\"\n            , \"//*/arr[@name='stream_name']/str[.='tiny.txt.gz']\"\n            );\n\n  }\n","date":"2014-02-13 09:22:09","endLine":187,"groupId":"33721","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2f/59ec6e507914db4fe68e6335ac2477cfbd03ef.src","preCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n    assertQ(req(\"extractedContent:distinctwords\"),      \"//*[@numFound='0']\");\n    assertQ(req(\"extractedContent:distinct\"),           \"//*[@numFound='1']\");\n    assertQ(req(\"extractedContent:words\"),              \"//*[@numFound='2']\");\n    assertQ(req(\"extractedContent:\\\"distinct words\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/word2003.doc\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='0']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='1']\");\n    assertU(commit());\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='1']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='2']\");\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2012-08-18 09:47:40","commitOrder":6,"curCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","date":"2012-08-18 09:47:40","endLine":387,"groupId":"18007","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testArabicPDF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/e7793315c22a5261ff19eb566a33d5de68c15c.src","preCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"N"}],"commitId":"f28a5e8ffd647ff927868b2786c208dea65b5d3b","commitMessage":"@@@SOLR-5365: Fix bug with compressed files in ExtractingRequestHandler by upgrading commons-compress to 1.7\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1567824 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-02-13 09:22:09","modifiedFileCount":"1","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2012-08-18 09:47:40","codes":[{"authorDate":"2015-01-19 17:22:06","commitOrder":7,"curCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n    assertQ(req(\"extractedContent:distinctwords\"),      \"//*[@numFound='0']\");\n    assertQ(req(\"extractedContent:distinct\"),           \"//*[@numFound='1']\");\n    assertQ(req(\"extractedContent:words\"),              \"//*[@numFound='2']\");\n    assertQ(req(\"extractedContent:\\\"distinct words\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/word2003.doc\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='0']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='1']\");\n    assertU(commit());\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='1']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='2']\");\n\n    \r\n    loadLocal(\"extraction/tiny.txt.gz\", \n              \"fmap.created\", \"extractedDate\", \n              \"fmap.producer\", \"extractedProducer\",\n              \"fmap.creator\", \"extractedCreator\", \n              \"fmap.Keywords\", \"extractedKeywords\",\n              \"fmap.Author\", \"extractedAuthor\",\n              \"uprefix\", \"ignored_\",\n              \"fmap.content\", \"extractedContent\",\n              \"fmap.language\", \"extractedLanguage\",\n              \"fmap.Last-Modified\", \"extractedDate\",\n              \"literal.id\", \"tiny.txt.gz\");\n    assertU(commit());\n    assertQ(req(\"id:tiny.txt.gz\")\n            , \"//*[@numFound='1']\"\n            , \"//*/arr[@name='stream_name']/str[.='tiny.txt.gz']\"\n            );\n\n    \r\n    loadLocal(\"extraction/open-document.odt\", \n              \"uprefix\", \"ignored_\",\n              \"fmap.content\", \"extractedContent\",\n              \"literal.id\", \"open-document\");\n    assertU(commit());\n    assertQ(req(\"extractedContent:\\\"Pr������ctica sobre GnuPG\\\"\")\n            , \"//*[@numFound='1']\"\n            , \"//*/arr[@name='stream_name']/str[.='open-document.odt']\"\n            );\n  }\n","date":"2015-01-19 17:22:06","endLine":194,"groupId":"33721","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/31/59793f84756c302bb118bf89247a1cdbc75896.src","preCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n    assertQ(req(\"extractedContent:distinctwords\"),      \"//*[@numFound='0']\");\n    assertQ(req(\"extractedContent:distinct\"),           \"//*[@numFound='1']\");\n    assertQ(req(\"extractedContent:words\"),              \"//*[@numFound='2']\");\n    assertQ(req(\"extractedContent:\\\"distinct words\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/word2003.doc\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='0']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='1']\");\n    assertU(commit());\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='1']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='2']\");\n\n    \r\n    loadLocal(\"extraction/tiny.txt.gz\", \n              \"fmap.created\", \"extractedDate\", \n              \"fmap.producer\", \"extractedProducer\",\n              \"fmap.creator\", \"extractedCreator\", \n              \"fmap.Keywords\", \"extractedKeywords\",\n              \"fmap.Author\", \"extractedAuthor\",\n              \"uprefix\", \"ignored_\",\n              \"fmap.content\", \"extractedContent\",\n              \"fmap.language\", \"extractedLanguage\",\n              \"fmap.Last-Modified\", \"extractedDate\",\n              \"literal.id\", \"tiny.txt.gz\");\n    assertU(commit());\n    assertQ(req(\"id:tiny.txt.gz\")\n            , \"//*[@numFound='1']\"\n            , \"//*/arr[@name='stream_name']/str[.='tiny.txt.gz']\"\n            );\n\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2012-08-18 09:47:40","commitOrder":7,"curCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","date":"2012-08-18 09:47:40","endLine":387,"groupId":"18007","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testArabicPDF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/e7793315c22a5261ff19eb566a33d5de68c15c.src","preCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"N"}],"commitId":"a4d74500e7838e2f20b8ad1ccc7e298f1a2efb55","commitMessage":"@@@SOLR-6996: Add a test for ODF files in ExtractingRequestHandlerTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1652944 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-19 17:22:06","modifiedFileCount":"1","status":"M","submitter":"Uwe Schindler"},{"authorTime":"2012-08-18 09:47:40","codes":[{"authorDate":"2015-01-24 07:44:45","commitOrder":8,"curCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n    assertQ(req(\"extractedContent:distinctwords\"),      \"//*[@numFound='0']\");\n    assertQ(req(\"extractedContent:distinct\"),           \"//*[@numFound='1']\");\n    assertQ(req(\"extractedContent:words\"),              \"//*[@numFound='2']\");\n    assertQ(req(\"extractedContent:\\\"distinct words\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_content:serif\"), \"//*[@numFound='0']\"); \r\n    assertQ(req(\"+id:simple2 +t_content:blur\"), \"//*[@numFound='0']\"); \r\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/word2003.doc\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='0']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='1']\");\n    assertU(commit());\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='1']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='2']\");\n\n    \r\n    loadLocal(\"extraction/tiny.txt.gz\", \n              \"fmap.created\", \"extractedDate\", \n              \"fmap.producer\", \"extractedProducer\",\n              \"fmap.creator\", \"extractedCreator\", \n              \"fmap.Keywords\", \"extractedKeywords\",\n              \"fmap.Author\", \"extractedAuthor\",\n              \"uprefix\", \"ignored_\",\n              \"fmap.content\", \"extractedContent\",\n              \"fmap.language\", \"extractedLanguage\",\n              \"fmap.Last-Modified\", \"extractedDate\",\n              \"literal.id\", \"tiny.txt.gz\");\n    assertU(commit());\n    assertQ(req(\"id:tiny.txt.gz\")\n            , \"//*[@numFound='1']\"\n            , \"//*/arr[@name='stream_name']/str[.='tiny.txt.gz']\"\n            );\n\n    \r\n    loadLocal(\"extraction/open-document.odt\", \n              \"uprefix\", \"ignored_\",\n              \"fmap.content\", \"extractedContent\",\n              \"literal.id\", \"open-document\");\n    assertU(commit());\n    assertQ(req(\"extractedContent:\\\"Pr������ctica sobre GnuPG\\\"\")\n            , \"//*[@numFound='1']\"\n            , \"//*/arr[@name='stream_name']/str[.='open-document.odt']\"\n            );\n  }\n","date":"2015-01-24 07:44:45","endLine":190,"groupId":"33721","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/41/04d4bb44c49c520d0066be5e31415130c60dab.src","preCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n    assertQ(req(\"extractedContent:distinctwords\"),      \"//*[@numFound='0']\");\n    assertQ(req(\"extractedContent:distinct\"),           \"//*[@numFound='1']\");\n    assertQ(req(\"extractedContent:words\"),              \"//*[@numFound='2']\");\n    assertQ(req(\"extractedContent:\\\"distinct words\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    \r\n     loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple4\",\n      \"uprefix\", \"t_\",\n      \"capture\",\"p\",     \r\n      \"commit\", \"true\"\n    );\n    assertQ(req(\"+id:simple4 +t_content:Solr\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple4 +t_p:\\\"here is some text\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/word2003.doc\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='0']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='1']\");\n    assertU(commit());\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='1']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='2']\");\n\n    \r\n    loadLocal(\"extraction/tiny.txt.gz\", \n              \"fmap.created\", \"extractedDate\", \n              \"fmap.producer\", \"extractedProducer\",\n              \"fmap.creator\", \"extractedCreator\", \n              \"fmap.Keywords\", \"extractedKeywords\",\n              \"fmap.Author\", \"extractedAuthor\",\n              \"uprefix\", \"ignored_\",\n              \"fmap.content\", \"extractedContent\",\n              \"fmap.language\", \"extractedLanguage\",\n              \"fmap.Last-Modified\", \"extractedDate\",\n              \"literal.id\", \"tiny.txt.gz\");\n    assertU(commit());\n    assertQ(req(\"id:tiny.txt.gz\")\n            , \"//*[@numFound='1']\"\n            , \"//*/arr[@name='stream_name']/str[.='tiny.txt.gz']\"\n            );\n\n    \r\n    loadLocal(\"extraction/open-document.odt\", \n              \"uprefix\", \"ignored_\",\n              \"fmap.content\", \"extractedContent\",\n              \"literal.id\", \"open-document\");\n    assertU(commit());\n    assertQ(req(\"extractedContent:\\\"Pr������ctica sobre GnuPG\\\"\")\n            , \"//*[@numFound='1']\"\n            , \"//*/arr[@name='stream_name']/str[.='open-document.odt']\"\n            );\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2012-08-18 09:47:40","commitOrder":8,"curCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","date":"2012-08-18 09:47:40","endLine":387,"groupId":"18007","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testArabicPDF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/e7793315c22a5261ff19eb566a33d5de68c15c.src","preCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"N"}],"commitId":"6dcfa17adcc53382abf262f85f1d70a601cd23e2","commitMessage":"@@@SOLR-6856: Restore ExtractingRequestHandler's ability to capture all HTML tags when parsing (X)HTML.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1654431 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-24 07:44:45","modifiedFileCount":"2","status":"M","submitter":"Steven Rowe"},{"authorTime":"2012-08-18 09:47:40","codes":[{"authorDate":"2017-03-04 04:43:50","commitOrder":9,"curCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n    assertQ(req(\"extractedContent:distinctwords\"),      \"//*[@numFound='0']\");\n    assertQ(req(\"extractedContent:distinct\"),           \"//*[@numFound='1']\");\n    assertQ(req(\"extractedContent:words\"),              \"//*[@numFound='2']\");\n    assertQ(req(\"extractedContent:\\\"distinct words\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_content:serif\"), \"//*[@numFound='0']\"); \r\n    assertQ(req(\"+id:simple2 +t_content:blur\"), \"//*[@numFound='0']\"); \r\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[2]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/word2003.doc\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='0']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='1']\");\n    assertU(commit());\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='1']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='2']\");\n\n    \r\n    loadLocal(\"extraction/tiny.txt.gz\", \n              \"fmap.created\", \"extractedDate\", \n              \"fmap.producer\", \"extractedProducer\",\n              \"fmap.creator\", \"extractedCreator\", \n              \"fmap.Keywords\", \"extractedKeywords\",\n              \"fmap.Author\", \"extractedAuthor\",\n              \"uprefix\", \"ignored_\",\n              \"fmap.content\", \"extractedContent\",\n              \"fmap.language\", \"extractedLanguage\",\n              \"fmap.Last-Modified\", \"extractedDate\",\n              \"literal.id\", \"tiny.txt.gz\");\n    assertU(commit());\n    assertQ(req(\"id:tiny.txt.gz\")\n            , \"//*[@numFound='1']\"\n            , \"//*/arr[@name='stream_name']/str[.='tiny.txt.gz']\"\n            );\n\n    \r\n    loadLocal(\"extraction/open-document.odt\", \n              \"uprefix\", \"ignored_\",\n              \"fmap.content\", \"extractedContent\",\n              \"literal.id\", \"open-document\");\n    assertU(commit());\n    assertQ(req(\"extractedContent:\\\"Pr������ctica sobre GnuPG\\\"\")\n            , \"//*[@numFound='1']\"\n            , \"//*/arr[@name='stream_name']/str[.='open-document.odt']\"\n            );\n  }\n","date":"2017-03-04 04:43:50","endLine":189,"groupId":"101199","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/dc/84b514350be7864fb7eff95661f941e59e0327.src","preCode":"  public void testExtraction() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    loadLocal(\"extraction/solr-word.pdf\",\n            \"fmap.created\", \"extractedDate\",\n            \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Creation-Date\", \"extractedDate\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.content\", \"extractedContent\",\n           \"literal.id\", \"one\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:solr-word\"), \"//*[@numFound='1']\");\n\n\n    loadLocal(\"extraction/simple.html\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"literal.id\", \"two\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"title:Welcome\"), \"//*[@numFound='1']\");\n\n    assertQ(req(\"extractedContent:distinctwords\"),      \"//*[@numFound='0']\");\n    assertQ(req(\"extractedContent:distinct\"),           \"//*[@numFound='1']\");\n    assertQ(req(\"extractedContent:words\"),              \"//*[@numFound='2']\");\n    assertQ(req(\"extractedContent:\\\"distinct words\\\"\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple2\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",\n      \"fmap.a\",\"t_href\",\n      \"fmap.content_type\", \"abcxyz\",  \r\n      \"commit\", \"true\"  \r\n    );\n\n    \r\n    \r\n\n    \r\n    \r\n    assertQ(req(\"+id:simple2 +t_href:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_abcxyz:[* TO *]\"), \"//*[@numFound='1']\");\n    assertQ(req(\"+id:simple2 +t_content:serif\"), \"//*[@numFound='0']\"); \r\n    assertQ(req(\"+id:simple2 +t_content:blur\"), \"//*[@numFound='0']\"); \r\n\n    \r\n    loadLocal(\"extraction/simple.html\",\n      \"literal.id\",\"simple3\",\n      \"uprefix\", \"t_\",\n      \"lowernames\", \"true\",\n      \"captureAttr\", \"true\",  \"fmap.a\",\"t_href\",\n      \"commit\", \"true\"\n\n      ,\"boost.t_href\", \"100.0\"\n    );\n\n    assertQ(req(\"t_href:http\"), \"//*[@numFound='2']\");\n    assertQ(req(\"t_href:http\"), \"//doc[1]/str[.='simple3']\");\n    assertQ(req(\"+id:simple3 +t_content_type:[* TO *]\"), \"//*[@numFound='1']\");\r\n\n    loadLocal(\"extraction/version_control.xml\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"three\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='0']\");\n    assertU(commit());\n    assertQ(req(\"stream_name:version_control.xml\"), \"//*[@numFound='1']\");\n\n    loadLocal(\"extraction/word2003.doc\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"four\",\n            \"uprefix\", \"ignored_\",\n            \"fmap.content\", \"extractedContent\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.Last-Modified\", \"extractedDate\"\n    );\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='0']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='1']\");\n    assertU(commit());\n    assertQ(req(\"title:\\\"Word 2003 Title\\\"\"), \"//*[@numFound='1']\");\n    \r\n    assertQ(req(\"extractedContent:\\\"This is a test of PDF and Word extraction in Solr, it is only a test\\\"\"), \"//*[@numFound='2']\");\n\n    \r\n    loadLocal(\"extraction/tiny.txt.gz\", \n              \"fmap.created\", \"extractedDate\", \n              \"fmap.producer\", \"extractedProducer\",\n              \"fmap.creator\", \"extractedCreator\", \n              \"fmap.Keywords\", \"extractedKeywords\",\n              \"fmap.Author\", \"extractedAuthor\",\n              \"uprefix\", \"ignored_\",\n              \"fmap.content\", \"extractedContent\",\n              \"fmap.language\", \"extractedLanguage\",\n              \"fmap.Last-Modified\", \"extractedDate\",\n              \"literal.id\", \"tiny.txt.gz\");\n    assertU(commit());\n    assertQ(req(\"id:tiny.txt.gz\")\n            , \"//*[@numFound='1']\"\n            , \"//*/arr[@name='stream_name']/str[.='tiny.txt.gz']\"\n            );\n\n    \r\n    loadLocal(\"extraction/open-document.odt\", \n              \"uprefix\", \"ignored_\",\n              \"fmap.content\", \"extractedContent\",\n              \"literal.id\", \"open-document\");\n    assertU(commit());\n    assertQ(req(\"extractedContent:\\\"Pr������ctica sobre GnuPG\\\"\")\n            , \"//*[@numFound='1']\"\n            , \"//*/arr[@name='stream_name']/str[.='open-document.odt']\"\n            );\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2012-08-18 09:47:40","commitOrder":9,"curCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","date":"2012-08-18 09:47:40","endLine":387,"groupId":"101199","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testArabicPDF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/e7793315c22a5261ff19eb566a33d5de68c15c.src","preCode":"  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:������������������������������\"), \"//result[@numFound=1]\");\n  }\n","realPath":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"N"}],"commitId":"7453f78b3539c7f4f5fa6e5324b251467ca50644","commitMessage":"@@@LUCENE-6819: Make ExtractingRequestHandlerTest not rely on index-time boosts.\n","date":"2017-03-04 04:43:50","modifiedFileCount":"1","status":"M","submitter":"Adrien Grand"}]
