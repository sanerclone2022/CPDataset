[{"authorTime":"2018-05-05 07:02:06","codes":[{"authorDate":"2018-05-05 07:02:06","commitOrder":1,"curCode":"  public static HttpServletRequest closeShield(HttpServletRequest request, boolean retry) {\n    if (!retry) {\n      return new HttpServletRequestWrapper(request) {\n\n        @Override\n        public ServletInputStream getInputStream() throws IOException {\n\n          return new ServletInputStreamWrapper(super.getInputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false : true : \"Attempted close of request input stream - never do this, you will spoil connection reuse and possibly disrupt a client\";\n              this.stream = ClosedServletInputStream.CLOSED_SERVLET_INPUT_STREAM;\n            }\n          };\n\n        }\n      };\n    } else {\n      return request;\n    }\n  }\n","date":"2018-05-05 07:02:06","endLine":555,"groupId":"34277","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"closeShield","params":"(HttpServletRequestrequest@booleanretry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8f/32a7dc674530cd62ec9fc932ed3667bac54606.src","preCode":"  public static HttpServletRequest closeShield(HttpServletRequest request, boolean retry) {\n    if (!retry) {\n      return new HttpServletRequestWrapper(request) {\n\n        @Override\n        public ServletInputStream getInputStream() throws IOException {\n\n          return new ServletInputStreamWrapper(super.getInputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false : true : \"Attempted close of request input stream - never do this, you will spoil connection reuse and possibly disrupt a client\";\n              this.stream = ClosedServletInputStream.CLOSED_SERVLET_INPUT_STREAM;\n            }\n          };\n\n        }\n      };\n    } else {\n      return request;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":532,"status":"B"},{"authorDate":"2018-05-05 07:02:06","commitOrder":1,"curCode":"  public static HttpServletResponse closeShield(HttpServletResponse response, boolean retry) {\n    if (!retry) {\n      return new HttpServletResponseWrapper(response) {\n\n        @Override\n        public ServletOutputStream getOutputStream() throws IOException {\n\n          return new ServletOutputStreamWrapper(super.getOutputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false : true : \"Attempted close of response output stream - never do this, you will spoil connection reuse and possibly disrupt a client\";\n              stream = ClosedServletOutputStream.CLOSED_SERVLET_OUTPUT_STREAM;\n            }\n          };\n        }\n\n      };\n    } else {\n      return response;\n    }\n  }\n","date":"2018-05-05 07:02:06","endLine":590,"groupId":"975","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"closeShield","params":"(HttpServletResponseresponse@booleanretry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8f/32a7dc674530cd62ec9fc932ed3667bac54606.src","preCode":"  public static HttpServletResponse closeShield(HttpServletResponse response, boolean retry) {\n    if (!retry) {\n      return new HttpServletResponseWrapper(response) {\n\n        @Override\n        public ServletOutputStream getOutputStream() throws IOException {\n\n          return new ServletOutputStreamWrapper(super.getOutputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false : true : \"Attempted close of response output stream - never do this, you will spoil connection reuse and possibly disrupt a client\";\n              stream = ClosedServletOutputStream.CLOSED_SERVLET_OUTPUT_STREAM;\n            }\n          };\n        }\n\n      };\n    } else {\n      return response;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":567,"status":"B"}],"commitId":"296201055f24f01e1610f2fb87aba7fa90b9dda1","commitMessage":"@@@SOLR-12290: Do not close any servlet streams and improve our servlet stream closing prevention code for users and devs.\n","date":"2018-05-05 07:02:06","modifiedFileCount":"10","status":"B","submitter":"Mark Miller"},{"authorTime":"2018-05-12 12:31:53","codes":[{"authorDate":"2018-05-12 12:31:53","commitOrder":2,"curCode":"  public static HttpServletRequest closeShield(HttpServletRequest request, boolean retry) {\n    if (!retry) {\n      return new HttpServletRequestWrapper(request) {\n\n        @Override\n        public ServletInputStream getInputStream() throws IOException {\n\n          return new ServletInputStreamWrapper(super.getInputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false : true : CLOSE_REQUEST_STREAM_MSG;\n              this.stream = ClosedServletInputStream.CLOSED_SERVLET_INPUT_STREAM;\n            }\n          };\n\n        }\n      };\n    } else {\n      return request;\n    }\n  }\n","date":"2018-05-12 12:32:25","endLine":564,"groupId":"34277","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"closeShield","params":"(HttpServletRequestrequest@booleanretry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4f/9ead4811aa401599f04dc72204f3cce34a3157.src","preCode":"  public static HttpServletRequest closeShield(HttpServletRequest request, boolean retry) {\n    if (!retry) {\n      return new HttpServletRequestWrapper(request) {\n\n        @Override\n        public ServletInputStream getInputStream() throws IOException {\n\n          return new ServletInputStreamWrapper(super.getInputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false : true : \"Attempted close of request input stream - never do this, you will spoil connection reuse and possibly disrupt a client\";\n              this.stream = ClosedServletInputStream.CLOSED_SERVLET_INPUT_STREAM;\n            }\n          };\n\n        }\n      };\n    } else {\n      return request;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":541,"status":"M"},{"authorDate":"2018-05-12 12:31:53","commitOrder":2,"curCode":"  public static HttpServletResponse closeShield(HttpServletResponse response, boolean retry) {\n    if (!retry) {\n      return new HttpServletResponseWrapper(response) {\n\n        @Override\n        public ServletOutputStream getOutputStream() throws IOException {\n\n          return new ServletOutputStreamWrapper(super.getOutputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false\n                      : true : CLOSE_RESPONSE_STREAM_MSG;\n              stream = ClosedServletOutputStream.CLOSED_SERVLET_OUTPUT_STREAM;\n            }\n          };\n        }\n\n      };\n    } else {\n      return response;\n    }\n  }\n","date":"2018-05-12 12:32:25","endLine":600,"groupId":"975","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"closeShield","params":"(HttpServletResponseresponse@booleanretry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4f/9ead4811aa401599f04dc72204f3cce34a3157.src","preCode":"  public static HttpServletResponse closeShield(HttpServletResponse response, boolean retry) {\n    if (!retry) {\n      return new HttpServletResponseWrapper(response) {\n\n        @Override\n        public ServletOutputStream getOutputStream() throws IOException {\n\n          return new ServletOutputStreamWrapper(super.getOutputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false : true : \"Attempted close of response output stream - never do this, you will spoil connection reuse and possibly disrupt a client\";\n              stream = ClosedServletOutputStream.CLOSED_SERVLET_OUTPUT_STREAM;\n            }\n          };\n        }\n\n      };\n    } else {\n      return response;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":576,"status":"M"}],"commitId":"4c09a13afb441bdce1c440263ea61cdb5f10b141","commitMessage":"@@@SOLR-12290: Update assert messages about closing request / response streams.\n","date":"2018-05-12 12:32:25","modifiedFileCount":"1","status":"M","submitter":"markrmiller"},{"authorTime":"2018-05-12 13:15:19","codes":[{"authorDate":"2018-05-12 13:15:19","commitOrder":3,"curCode":"  public static HttpServletRequest closeShield(HttpServletRequest request, boolean retry) {\n    if (!retry) {\n      return new HttpServletRequestWrapper(request) {\n\n        @Override\n        public ServletInputStream getInputStream() throws IOException {\n\n          return new ServletInputStreamWrapper(super.getInputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false : true : CLOSE_STREAM_MSG;\n              this.stream = ClosedServletInputStream.CLOSED_SERVLET_INPUT_STREAM;\n            }\n          };\n\n        }\n      };\n    } else {\n      return request;\n    }\n  }\n","date":"2018-05-12 13:15:19","endLine":561,"groupId":"34277","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"closeShield","params":"(HttpServletRequestrequest@booleanretry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c7/fdd57f90d9cf184e7deb6d0dcdc6af6788e5a6.src","preCode":"  public static HttpServletRequest closeShield(HttpServletRequest request, boolean retry) {\n    if (!retry) {\n      return new HttpServletRequestWrapper(request) {\n\n        @Override\n        public ServletInputStream getInputStream() throws IOException {\n\n          return new ServletInputStreamWrapper(super.getInputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false : true : CLOSE_REQUEST_STREAM_MSG;\n              this.stream = ClosedServletInputStream.CLOSED_SERVLET_INPUT_STREAM;\n            }\n          };\n\n        }\n      };\n    } else {\n      return request;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":538,"status":"M"},{"authorDate":"2018-05-12 13:15:19","commitOrder":3,"curCode":"  public static HttpServletResponse closeShield(HttpServletResponse response, boolean retry) {\n    if (!retry) {\n      return new HttpServletResponseWrapper(response) {\n\n        @Override\n        public ServletOutputStream getOutputStream() throws IOException {\n\n          return new ServletOutputStreamWrapper(super.getOutputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false\n                      : true : CLOSE_STREAM_MSG;\n              stream = ClosedServletOutputStream.CLOSED_SERVLET_OUTPUT_STREAM;\n            }\n          };\n        }\n\n      };\n    } else {\n      return response;\n    }\n  }\n","date":"2018-05-12 13:15:19","endLine":597,"groupId":"975","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"closeShield","params":"(HttpServletResponseresponse@booleanretry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c7/fdd57f90d9cf184e7deb6d0dcdc6af6788e5a6.src","preCode":"  public static HttpServletResponse closeShield(HttpServletResponse response, boolean retry) {\n    if (!retry) {\n      return new HttpServletResponseWrapper(response) {\n\n        @Override\n        public ServletOutputStream getOutputStream() throws IOException {\n\n          return new ServletOutputStreamWrapper(super.getOutputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false\n                      : true : CLOSE_RESPONSE_STREAM_MSG;\n              stream = ClosedServletOutputStream.CLOSED_SERVLET_OUTPUT_STREAM;\n            }\n          };\n        }\n\n      };\n    } else {\n      return response;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":573,"status":"M"}],"commitId":"ab58b7f9ba646a294005f1e433e4faee43c7d22b","commitMessage":"@@@SOLR-12290: Update assert messages about closing request / response streams.\n","date":"2018-05-12 13:15:19","modifiedFileCount":"1","status":"M","submitter":"markrmiller"},{"authorTime":"2019-08-27 12:04:42","codes":[{"authorDate":"2019-08-27 12:04:42","commitOrder":4,"curCode":"  public static HttpServletRequest closeShield(HttpServletRequest request, boolean retry) {\n    if (!retry) {\n      return new HttpServletRequestWrapper(request) {\n\n        @Override\n        public ServletInputStream getInputStream() throws IOException {\n\n          return new ServletInputStreamWrapper(super.getInputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert !Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") : CLOSE_STREAM_MSG;\n              this.stream = ClosedServletInputStream.CLOSED_SERVLET_INPUT_STREAM;\n            }\n          };\n\n        }\n      };\n    } else {\n      return request;\n    }\n  }\n","date":"2019-08-27 12:04:42","endLine":641,"groupId":"0","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"closeShield","params":"(HttpServletRequestrequest@booleanretry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a3/85479534b84758c2a536803091c2dcab634165.src","preCode":"  public static HttpServletRequest closeShield(HttpServletRequest request, boolean retry) {\n    if (!retry) {\n      return new HttpServletRequestWrapper(request) {\n\n        @Override\n        public ServletInputStream getInputStream() throws IOException {\n\n          return new ServletInputStreamWrapper(super.getInputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false : true : CLOSE_STREAM_MSG;\n              this.stream = ClosedServletInputStream.CLOSED_SERVLET_INPUT_STREAM;\n            }\n          };\n\n        }\n      };\n    } else {\n      return request;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":618,"status":"M"},{"authorDate":"2019-08-27 12:04:42","commitOrder":4,"curCode":"  public static HttpServletResponse closeShield(HttpServletResponse response, boolean retry) {\n    if (!retry) {\n      return new HttpServletResponseWrapper(response) {\n\n        @Override\n        public ServletOutputStream getOutputStream() throws IOException {\n\n          return new ServletOutputStreamWrapper(super.getOutputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert !Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") : CLOSE_STREAM_MSG;\n              stream = ClosedServletOutputStream.CLOSED_SERVLET_OUTPUT_STREAM;\n            }\n          };\n        }\n\n      };\n    } else {\n      return response;\n    }\n  }\n","date":"2019-08-27 12:04:42","endLine":676,"groupId":"0","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"closeShield","params":"(HttpServletResponseresponse@booleanretry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a3/85479534b84758c2a536803091c2dcab634165.src","preCode":"  public static HttpServletResponse closeShield(HttpServletResponse response, boolean retry) {\n    if (!retry) {\n      return new HttpServletResponseWrapper(response) {\n\n        @Override\n        public ServletOutputStream getOutputStream() throws IOException {\n\n          return new ServletOutputStreamWrapper(super.getOutputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false\n                      : true : CLOSE_STREAM_MSG;\n              stream = ClosedServletOutputStream.CLOSED_SERVLET_OUTPUT_STREAM;\n            }\n          };\n        }\n\n      };\n    } else {\n      return response;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":653,"status":"M"}],"commitId":"e23c50b2a8ed37e67a7075c8782f073164473a1e","commitMessage":"@@@SOLR-13710: Persist package jars locally & expose them over http\n\n","date":"2019-08-27 12:04:42","modifiedFileCount":"11","status":"M","submitter":"Noble Paul"},{"authorTime":"2019-10-06 20:30:40","codes":[{"authorDate":"2019-10-06 20:30:40","commitOrder":5,"curCode":"  public static HttpServletRequest closeShield(HttpServletRequest request, boolean retry) {\n    if (!retry) {\n      return new HttpServletRequestWrapper(request) {\n\n        @Override\n        public ServletInputStream getInputStream() throws IOException {\n\n          return new ServletInputStreamWrapper(super.getInputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false : true : CLOSE_STREAM_MSG;\n              this.stream = ClosedServletInputStream.CLOSED_SERVLET_INPUT_STREAM;\n            }\n          };\n\n        }\n      };\n    } else {\n      return request;\n    }\n  }\n","date":"2019-10-06 20:30:40","endLine":640,"groupId":"112412","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"closeShield","params":"(HttpServletRequestrequest@booleanretry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/90/d6b17539f1a1ee1b7cb1a0e84bf5fba231c322.src","preCode":"  public static HttpServletRequest closeShield(HttpServletRequest request, boolean retry) {\n    if (!retry) {\n      return new HttpServletRequestWrapper(request) {\n\n        @Override\n        public ServletInputStream getInputStream() throws IOException {\n\n          return new ServletInputStreamWrapper(super.getInputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert !Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") : CLOSE_STREAM_MSG;\n              this.stream = ClosedServletInputStream.CLOSED_SERVLET_INPUT_STREAM;\n            }\n          };\n\n        }\n      };\n    } else {\n      return request;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":617,"status":"M"},{"authorDate":"2019-10-06 20:30:40","commitOrder":5,"curCode":"  public static HttpServletResponse closeShield(HttpServletResponse response, boolean retry) {\n    if (!retry) {\n      return new HttpServletResponseWrapper(response) {\n\n        @Override\n        public ServletOutputStream getOutputStream() throws IOException {\n\n          return new ServletOutputStreamWrapper(super.getOutputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") ? false\n                      : true : CLOSE_STREAM_MSG;\n              stream = ClosedServletOutputStream.CLOSED_SERVLET_OUTPUT_STREAM;\n            }\n          };\n        }\n\n      };\n    } else {\n      return response;\n    }\n  }\n","date":"2019-10-06 20:30:40","endLine":676,"groupId":"112412","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"closeShield","params":"(HttpServletResponseresponse@booleanretry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/90/d6b17539f1a1ee1b7cb1a0e84bf5fba231c322.src","preCode":"  public static HttpServletResponse closeShield(HttpServletResponse response, boolean retry) {\n    if (!retry) {\n      return new HttpServletResponseWrapper(response) {\n\n        @Override\n        public ServletOutputStream getOutputStream() throws IOException {\n\n          return new ServletOutputStreamWrapper(super.getOutputStream()) {\n            @Override\n            public void close() {\n              \r\n              \r\n              assert !Thread.currentThread().getStackTrace()[2].getClassName().matches(\n                  \"org\\\\.apache\\\\.(?:solr|lucene).*\") : CLOSE_STREAM_MSG;\n              stream = ClosedServletOutputStream.CLOSED_SERVLET_OUTPUT_STREAM;\n            }\n          };\n        }\n\n      };\n    } else {\n      return response;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":652,"status":"M"}],"commitId":"515af6d3ecc5ea1b3754776f9ce4e39857f99734","commitMessage":"@@@SOLR-13661: Reverting all half-baked stuff from SOLR-13707.  SOLR-13659.  SOLR-13565.  SOLR-13650.  SOLR-13710.  SOLR-13721.  SOLR-13637\n\nAll half baked package management and hot-classloading code reverted to allow for a fresh start.\n","date":"2019-10-06 20:30:40","modifiedFileCount":"61","status":"M","submitter":"Ishan Chattopadhyaya"}]
