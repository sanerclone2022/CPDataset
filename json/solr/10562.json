[{"authorTime":"2015-07-17 16:32:27","codes":[{"authorDate":"2015-07-17 16:32:27","commitOrder":1,"curCode":"  public void testSuggesterResponseTerms() throws Exception {\n    getSolrClient();\n    addSampleDocs();\n\n    SolrQuery query = new SolrQuery(\"*:*\");\n    query.set(CommonParams.QT, \"/suggest\");\n    query.set(\"suggest.dictionary\", \"mySuggester\");\n    query.set(\"suggest.q\", \"Com\");\n    query.set(\"suggest.build\", true);\n    QueryRequest request = new QueryRequest(query);\n    QueryResponse queryResponse = request.process(client);\n    SuggesterResponse response = queryResponse.getSuggesterResponse();\n    Map<String, List<String>> dictionary2suggestions = response.getSuggestedTerms();\n    assertTrue(dictionary2suggestions.keySet().contains(\"mySuggester\"));\n\n    List<String> mySuggester = dictionary2suggestions.get(\"mySuggester\");\n    assertEquals(\"Computational framework\", mySuggester.get(0));\n    assertEquals(\"Computer\", mySuggester.get(1));\n  }\n","date":"2015-07-17 16:32:27","endLine":88,"groupId":"42136","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSuggesterResponseTerms","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/cc0e0bed17799e39a03af4c02142ff6e7ca03c.src","preCode":"  public void testSuggesterResponseTerms() throws Exception {\n    getSolrClient();\n    addSampleDocs();\n\n    SolrQuery query = new SolrQuery(\"*:*\");\n    query.set(CommonParams.QT, \"/suggest\");\n    query.set(\"suggest.dictionary\", \"mySuggester\");\n    query.set(\"suggest.q\", \"Com\");\n    query.set(\"suggest.build\", true);\n    QueryRequest request = new QueryRequest(query);\n    QueryResponse queryResponse = request.process(client);\n    SuggesterResponse response = queryResponse.getSuggesterResponse();\n    Map<String, List<String>> dictionary2suggestions = response.getSuggestedTerms();\n    assertTrue(dictionary2suggestions.keySet().contains(\"mySuggester\"));\n\n    List<String> mySuggester = dictionary2suggestions.get(\"mySuggester\");\n    assertEquals(\"Computational framework\", mySuggester.get(0));\n    assertEquals(\"Computer\", mySuggester.get(1));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/response/TestSuggesterResponse.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2015-07-17 16:32:27","commitOrder":1,"curCode":"  public void testEmptySuggesterResponse() throws Exception {\n    getSolrClient();\n    addSampleDocs();\n\n    SolrQuery query = new SolrQuery(\"*:*\");\n    query.set(CommonParams.QT, \"/suggest\");\n    query.set(\"suggest.dictionary\", \"mySuggester\");\n    query.set(\"suggest.q\", \"Empty\");\n    query.set(\"suggest.build\", true);\n    QueryRequest request = new QueryRequest(query);\n    QueryResponse queryResponse = request.process(client);\n    SuggesterResponse response = queryResponse.getSuggesterResponse();\n    Map<String, List<String>> dictionary2suggestions = response.getSuggestedTerms();\n    assertTrue(dictionary2suggestions.keySet().contains(\"mySuggester\"));\n\n    List<String> mySuggester = dictionary2suggestions.get(\"mySuggester\");\n    assertEquals(0, mySuggester.size());\n  }\n","date":"2015-07-17 16:32:27","endLine":108,"groupId":"42136","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEmptySuggesterResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/cc0e0bed17799e39a03af4c02142ff6e7ca03c.src","preCode":"  public void testEmptySuggesterResponse() throws Exception {\n    getSolrClient();\n    addSampleDocs();\n\n    SolrQuery query = new SolrQuery(\"*:*\");\n    query.set(CommonParams.QT, \"/suggest\");\n    query.set(\"suggest.dictionary\", \"mySuggester\");\n    query.set(\"suggest.q\", \"Empty\");\n    query.set(\"suggest.build\", true);\n    QueryRequest request = new QueryRequest(query);\n    QueryResponse queryResponse = request.process(client);\n    SuggesterResponse response = queryResponse.getSuggesterResponse();\n    Map<String, List<String>> dictionary2suggestions = response.getSuggestedTerms();\n    assertTrue(dictionary2suggestions.keySet().contains(\"mySuggester\"));\n\n    List<String> mySuggester = dictionary2suggestions.get(\"mySuggester\");\n    assertEquals(0, mySuggester.size());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/response/TestSuggesterResponse.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"bc5d9f52d1531d2199697b16d16604ed9f4fce50","commitMessage":"@@@SOLR-7719 - added proper parsing of Suggester results (patch from Alessandro Benedetti)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1691494 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-07-17 16:32:27","modifiedFileCount":"1","status":"B","submitter":"Tommaso Teofili"},{"authorTime":"2021-01-11 20:31:26","codes":[{"authorDate":"2021-01-11 20:31:26","commitOrder":2,"curCode":"  public void testSuggesterResponseTerms() throws Exception {\n    addSampleDocs();\n\n    try (SolrClient solrClient = createSuggestSolrClient()) {\n      SolrQuery query = new SolrQuery(\"*:*\");\n      query.set(CommonParams.QT, \"/suggest\");\n      query.set(\"suggest.dictionary\", \"mySuggester\");\n      query.set(\"suggest.q\", \"Com\");\n      query.set(\"suggest.build\", true);\n      QueryRequest request = new QueryRequest(query);\n      QueryResponse queryResponse = request.process(solrClient);\n      SuggesterResponse response = queryResponse.getSuggesterResponse();\n      Map<String, List<String>> dictionary2suggestions = response.getSuggestedTerms();\n      assertTrue(dictionary2suggestions.keySet().contains(\"mySuggester\"));\n\n      List<String> mySuggester = dictionary2suggestions.get(\"mySuggester\");\n      assertEquals(\"Computational framework\", mySuggester.get(0));\n      assertEquals(\"Computer\", mySuggester.get(1));\n    }\n  }\n","date":"2021-01-11 20:31:26","endLine":103,"groupId":"10562","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testSuggesterResponseTerms","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ca/49896bfa220639ca8ff168abc508ed9d873441.src","preCode":"  public void testSuggesterResponseTerms() throws Exception {\n    getSolrClient();\n    addSampleDocs();\n\n    SolrQuery query = new SolrQuery(\"*:*\");\n    query.set(CommonParams.QT, \"/suggest\");\n    query.set(\"suggest.dictionary\", \"mySuggester\");\n    query.set(\"suggest.q\", \"Com\");\n    query.set(\"suggest.build\", true);\n    QueryRequest request = new QueryRequest(query);\n    QueryResponse queryResponse = request.process(client);\n    SuggesterResponse response = queryResponse.getSuggesterResponse();\n    Map<String, List<String>> dictionary2suggestions = response.getSuggestedTerms();\n    assertTrue(dictionary2suggestions.keySet().contains(\"mySuggester\"));\n\n    List<String> mySuggester = dictionary2suggestions.get(\"mySuggester\");\n    assertEquals(\"Computational framework\", mySuggester.get(0));\n    assertEquals(\"Computer\", mySuggester.get(1));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/response/TestSuggesterResponse.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-01-11 20:31:26","commitOrder":2,"curCode":"  public void testEmptySuggesterResponse() throws Exception {\n    addSampleDocs();\n\n    try (SolrClient solrClient = createSuggestSolrClient()) {\n      SolrQuery query = new SolrQuery(\"*:*\");\n      query.set(CommonParams.QT, \"/suggest\");\n      query.set(\"suggest.dictionary\", \"mySuggester\");\n      query.set(\"suggest.q\", \"Empty\");\n      query.set(\"suggest.build\", true);\n      QueryRequest request = new QueryRequest(query);\n      QueryResponse queryResponse = request.process(solrClient);\n      SuggesterResponse response = queryResponse.getSuggesterResponse();\n      Map<String, List<String>> dictionary2suggestions = response.getSuggestedTerms();\n      assertTrue(dictionary2suggestions.keySet().contains(\"mySuggester\"));\n\n      List<String> mySuggester = dictionary2suggestions.get(\"mySuggester\");\n      assertEquals(0, mySuggester.size());\n    }\n  }\n","date":"2021-01-11 20:31:26","endLine":124,"groupId":"10562","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testEmptySuggesterResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ca/49896bfa220639ca8ff168abc508ed9d873441.src","preCode":"  public void testEmptySuggesterResponse() throws Exception {\n    getSolrClient();\n    addSampleDocs();\n\n    SolrQuery query = new SolrQuery(\"*:*\");\n    query.set(CommonParams.QT, \"/suggest\");\n    query.set(\"suggest.dictionary\", \"mySuggester\");\n    query.set(\"suggest.q\", \"Empty\");\n    query.set(\"suggest.build\", true);\n    QueryRequest request = new QueryRequest(query);\n    QueryResponse queryResponse = request.process(client);\n    SuggesterResponse response = queryResponse.getSuggesterResponse();\n    Map<String, List<String>> dictionary2suggestions = response.getSuggestedTerms();\n    assertTrue(dictionary2suggestions.keySet().contains(\"mySuggester\"));\n\n    List<String> mySuggester = dictionary2suggestions.get(\"mySuggester\");\n    assertEquals(0, mySuggester.size());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/response/TestSuggesterResponse.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"98c51ca34b0609c8042a6caa31814d95b788f19a","commitMessage":"@@@SOLR-15070: Remove HashMap usage in SuggestComponent rsp (#2183)\n\nPrior to this commit.  SuggestComponent used a HashMap as part of the\nresponse it built on the server side.  This class is serialized/\ndeserialized differently depending on the SolrJ ResponseParser used:\na LinkedHashMap when javabin was used.  and a SimpleOrderedMap when XML\nwas used.  This discrepancy led to ClassCastException's in downstream\nSolrJ code.\n\nThis commit fixes the issue by changing SuggestComponent to avoid these\ntypes that are serialized differently.  \"suggest\" response sections now\ndeserialize as a NamedList in SolrJ.  and the SuggesterResponse POJO has\nbeen updated accordingly.","date":"2021-01-11 20:31:26","modifiedFileCount":"5","status":"M","submitter":"Jason Gerlowski"}]
