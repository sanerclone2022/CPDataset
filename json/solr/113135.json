[{"authorTime":"2018-12-31 19:05:31","codes":[{"authorDate":"2018-12-31 19:05:31","commitOrder":1,"curCode":"    public void merge(ResponseBuilder rb, ShardRequest sreq) {\n\n      \r\n      HashMap<Object,String> uniqueDoc = new HashMap<>();\n\n\n      NamedList<Object> shardInfo = null;\n      if(rb.req.getParams().getBool(ShardParams.SHARDS_INFO, false)) {\n        shardInfo = new SimpleOrderedMap<>();\n        rb.rsp.getValues().add(ShardParams.SHARDS_INFO,shardInfo);\n      }\n\n      IndexSchema schema = rb.req.getSchema();\n      SchemaField uniqueKeyField = schema.getUniqueKeyField();\n\n      long numFound = 0;\n      Float maxScore=null;\n      boolean partialResults = false;\n      List<ShardDoc> shardDocs = new ArrayList();\n\n      for (ShardResponse srsp : sreq.responses) {\n        SolrDocumentList docs = null;\n\n        if(shardInfo!=null) {\n          SimpleOrderedMap<Object> nl = new SimpleOrderedMap<>();\n\n          if (srsp.getException() != null) {\n            Throwable t = srsp.getException();\n            if(t instanceof SolrServerException) {\n              t = ((SolrServerException)t).getCause();\n            }\n            nl.add(\"error\", t.toString() );\n            StringWriter trace = new StringWriter();\n            t.printStackTrace(new PrintWriter(trace));\n            nl.add(\"trace\", trace.toString() );\n            if (srsp.getShardAddress() != null) {\n              nl.add(\"shardAddress\", srsp.getShardAddress());\n            }\n          }\n          else {\n            docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n            nl.add(\"numFound\", docs.getNumFound());\n            nl.add(\"maxScore\", docs.getMaxScore());\n            nl.add(\"shardAddress\", srsp.getShardAddress());\n          }\n          if(srsp.getSolrResponse()!=null) {\n            nl.add(\"time\", srsp.getSolrResponse().getElapsedTime());\n          }\n\n          shardInfo.add(srsp.getShard(), nl);\n        }\n        \r\n        if (srsp.getException() != null) {\n          partialResults = true;\n          continue;\n        }\n\n        if (docs == null) { \r\n          docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n        }\n\n        NamedList<?> responseHeader = (NamedList<?>)srsp.getSolrResponse().getResponse().get(\"responseHeader\");\n        if (responseHeader != null && Boolean.TRUE.equals(responseHeader.get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY))) {\n          partialResults = true;\n        }\n\n        \r\n        if (docs.getMaxScore() != null) {\n          maxScore = maxScore==null ? docs.getMaxScore() : Math.max(maxScore, docs.getMaxScore());\n        }\n        numFound += docs.getNumFound();\n\n\n        for (int i=0; i<docs.size(); i++) {\n          SolrDocument doc = docs.get(i);\n          Object id = doc.getFieldValue(uniqueKeyField.getName());\n\n          String prevShard = uniqueDoc.put(id, srsp.getShard());\n          if (prevShard != null) {\n            \r\n            numFound--;\n\n            \r\n            \r\n            \r\n            continue;\n            \r\n            \r\n            \r\n            \r\n            \r\n          }\n\n          ShardDoc shardDoc = new ShardDoc();\n          shardDoc.id = id;\n          shardDoc.shard = srsp.getShard();\n          shardDoc.orderInShard = i;\n          Object scoreObj = doc.getFieldValue(\"score\");\n          if (scoreObj != null) {\n            if (scoreObj instanceof String) {\n              shardDoc.score = Float.parseFloat((String)scoreObj);\n            } else {\n              shardDoc.score = (Float)scoreObj;\n            }\n          }\n          shardDocs.add(shardDoc);\n        } \r\n      } \r\n\n      Collections.sort(shardDocs, (o1, o2) -> {\n        if (o1.score < o2.score) {\n          return 1;\n        } else if (o1.score > o2.score) {\n          return -1;\n        } else {\n          return 0;  \r\n        }\n      });\n\n      int resultSize = shardDocs.size();\n\n      Map<Object,ShardDoc> resultIds = new HashMap<>();\n      for (int i=0; i<shardDocs.size(); i++) {\n        ShardDoc shardDoc = shardDocs.get(i);\n        shardDoc.positionInResponse = i;\n        \r\n        \r\n        resultIds.put(shardDoc.id.toString(), shardDoc);\n      }\n\n      \r\n      \r\n      rb.rsp.addToLog(\"hits\", numFound);\n\n      SolrDocumentList responseDocs = new SolrDocumentList();\n      if (maxScore!=null) responseDocs.setMaxScore(maxScore);\n      responseDocs.setNumFound(numFound);\n      responseDocs.setStart(0);\n      \r\n      for (int i=0; i<resultSize; i++) responseDocs.add(null);\n\n      \r\n      \r\n      \r\n      rb.resultIds = resultIds;\n      rb.setResponseDocs(responseDocs);\n\n      if (partialResults) {\n        rb.rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE );\n      }\n    }\n","date":"2018-12-31 19:05:31","endLine":312,"groupId":"42039","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"merge","params":"(ResponseBuilderrb@ShardRequestsreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bc/3839771bc3a6b3138cd6daee9a86497bd799f5.src","preCode":"    public void merge(ResponseBuilder rb, ShardRequest sreq) {\n\n      \r\n      HashMap<Object,String> uniqueDoc = new HashMap<>();\n\n\n      NamedList<Object> shardInfo = null;\n      if(rb.req.getParams().getBool(ShardParams.SHARDS_INFO, false)) {\n        shardInfo = new SimpleOrderedMap<>();\n        rb.rsp.getValues().add(ShardParams.SHARDS_INFO,shardInfo);\n      }\n\n      IndexSchema schema = rb.req.getSchema();\n      SchemaField uniqueKeyField = schema.getUniqueKeyField();\n\n      long numFound = 0;\n      Float maxScore=null;\n      boolean partialResults = false;\n      List<ShardDoc> shardDocs = new ArrayList();\n\n      for (ShardResponse srsp : sreq.responses) {\n        SolrDocumentList docs = null;\n\n        if(shardInfo!=null) {\n          SimpleOrderedMap<Object> nl = new SimpleOrderedMap<>();\n\n          if (srsp.getException() != null) {\n            Throwable t = srsp.getException();\n            if(t instanceof SolrServerException) {\n              t = ((SolrServerException)t).getCause();\n            }\n            nl.add(\"error\", t.toString() );\n            StringWriter trace = new StringWriter();\n            t.printStackTrace(new PrintWriter(trace));\n            nl.add(\"trace\", trace.toString() );\n            if (srsp.getShardAddress() != null) {\n              nl.add(\"shardAddress\", srsp.getShardAddress());\n            }\n          }\n          else {\n            docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n            nl.add(\"numFound\", docs.getNumFound());\n            nl.add(\"maxScore\", docs.getMaxScore());\n            nl.add(\"shardAddress\", srsp.getShardAddress());\n          }\n          if(srsp.getSolrResponse()!=null) {\n            nl.add(\"time\", srsp.getSolrResponse().getElapsedTime());\n          }\n\n          shardInfo.add(srsp.getShard(), nl);\n        }\n        \r\n        if (srsp.getException() != null) {\n          partialResults = true;\n          continue;\n        }\n\n        if (docs == null) { \r\n          docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n        }\n\n        NamedList<?> responseHeader = (NamedList<?>)srsp.getSolrResponse().getResponse().get(\"responseHeader\");\n        if (responseHeader != null && Boolean.TRUE.equals(responseHeader.get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY))) {\n          partialResults = true;\n        }\n\n        \r\n        if (docs.getMaxScore() != null) {\n          maxScore = maxScore==null ? docs.getMaxScore() : Math.max(maxScore, docs.getMaxScore());\n        }\n        numFound += docs.getNumFound();\n\n\n        for (int i=0; i<docs.size(); i++) {\n          SolrDocument doc = docs.get(i);\n          Object id = doc.getFieldValue(uniqueKeyField.getName());\n\n          String prevShard = uniqueDoc.put(id, srsp.getShard());\n          if (prevShard != null) {\n            \r\n            numFound--;\n\n            \r\n            \r\n            \r\n            continue;\n            \r\n            \r\n            \r\n            \r\n            \r\n          }\n\n          ShardDoc shardDoc = new ShardDoc();\n          shardDoc.id = id;\n          shardDoc.shard = srsp.getShard();\n          shardDoc.orderInShard = i;\n          Object scoreObj = doc.getFieldValue(\"score\");\n          if (scoreObj != null) {\n            if (scoreObj instanceof String) {\n              shardDoc.score = Float.parseFloat((String)scoreObj);\n            } else {\n              shardDoc.score = (Float)scoreObj;\n            }\n          }\n          shardDocs.add(shardDoc);\n        } \r\n      } \r\n\n      Collections.sort(shardDocs, (o1, o2) -> {\n        if (o1.score < o2.score) {\n          return 1;\n        } else if (o1.score > o2.score) {\n          return -1;\n        } else {\n          return 0;  \r\n        }\n      });\n\n      int resultSize = shardDocs.size();\n\n      Map<Object,ShardDoc> resultIds = new HashMap<>();\n      for (int i=0; i<shardDocs.size(); i++) {\n        ShardDoc shardDoc = shardDocs.get(i);\n        shardDoc.positionInResponse = i;\n        \r\n        \r\n        resultIds.put(shardDoc.id.toString(), shardDoc);\n      }\n\n      \r\n      \r\n      rb.rsp.addToLog(\"hits\", numFound);\n\n      SolrDocumentList responseDocs = new SolrDocumentList();\n      if (maxScore!=null) responseDocs.setMaxScore(maxScore);\n      responseDocs.setNumFound(numFound);\n      responseDocs.setStart(0);\n      \r\n      for (int i=0; i<resultSize; i++) responseDocs.add(null);\n\n      \r\n      \r\n      \r\n      rb.resultIds = resultIds;\n      rb.setResponseDocs(responseDocs);\n\n      if (partialResults) {\n        rb.rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE );\n      }\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/RankQueryTestPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"B"},{"authorDate":"2018-12-31 19:05:31","commitOrder":1,"curCode":"    public void merge(ResponseBuilder rb, ShardRequest sreq) {\n\n      \r\n      HashMap<Object,String> uniqueDoc = new HashMap<>();\n\n\n      NamedList<Object> shardInfo = null;\n      if(rb.req.getParams().getBool(ShardParams.SHARDS_INFO, false)) {\n        shardInfo = new SimpleOrderedMap<>();\n        rb.rsp.getValues().add(ShardParams.SHARDS_INFO,shardInfo);\n      }\n\n      IndexSchema schema = rb.req.getSchema();\n      SchemaField uniqueKeyField = schema.getUniqueKeyField();\n\n      long numFound = 0;\n      Float maxScore=null;\n      boolean partialResults = false;\n      List<ShardDoc> shardDocs = new ArrayList();\n\n      for (ShardResponse srsp : sreq.responses) {\n        SolrDocumentList docs = null;\n\n        if(shardInfo!=null) {\n          SimpleOrderedMap<Object> nl = new SimpleOrderedMap<>();\n\n          if (srsp.getException() != null) {\n            Throwable t = srsp.getException();\n            if(t instanceof SolrServerException) {\n              t = ((SolrServerException)t).getCause();\n            }\n            nl.add(\"error\", t.toString() );\n            StringWriter trace = new StringWriter();\n            t.printStackTrace(new PrintWriter(trace));\n            nl.add(\"trace\", trace.toString() );\n            if (srsp.getShardAddress() != null) {\n              nl.add(\"shardAddress\", srsp.getShardAddress());\n            }\n          }\n          else {\n            docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n            nl.add(\"numFound\", docs.getNumFound());\n            nl.add(\"maxScore\", docs.getMaxScore());\n            nl.add(\"shardAddress\", srsp.getShardAddress());\n          }\n          if(srsp.getSolrResponse()!=null) {\n            nl.add(\"time\", srsp.getSolrResponse().getElapsedTime());\n          }\n\n          shardInfo.add(srsp.getShard(), nl);\n        }\n        \r\n        if (srsp.getException() != null) {\n          partialResults = true;\n          continue;\n        }\n\n        if (docs == null) { \r\n          docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n        }\n\n        NamedList<?> responseHeader = (NamedList<?>)srsp.getSolrResponse().getResponse().get(\"responseHeader\");\n        if (responseHeader != null && Boolean.TRUE.equals(responseHeader.get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY))) {\n          partialResults = true;\n        }\n\n        \r\n        if (docs.getMaxScore() != null) {\n          maxScore = maxScore==null ? docs.getMaxScore() : Math.max(maxScore, docs.getMaxScore());\n        }\n        numFound += docs.getNumFound();\n\n        SortSpec ss = rb.getSortSpec();\n        Sort sort = ss.getSort();\n\n        NamedList sortFieldValues = (NamedList)(srsp.getSolrResponse().getResponse().get(\"merge_values\"));\n        NamedList unmarshalledSortFieldValues = unmarshalSortValues(ss, sortFieldValues, schema);\n        List lst = (List)unmarshalledSortFieldValues.getVal(0);\n\n        for (int i=0; i<docs.size(); i++) {\n          SolrDocument doc = docs.get(i);\n          Object id = doc.getFieldValue(uniqueKeyField.getName());\n\n          String prevShard = uniqueDoc.put(id, srsp.getShard());\n          if (prevShard != null) {\n            \r\n            numFound--;\n\n            \r\n            \r\n            \r\n            continue;\n            \r\n            \r\n            \r\n            \r\n            \r\n          }\n\n          ShardDoc shardDoc = new ShardDoc();\n          shardDoc.id = id;\n          shardDoc.shard = srsp.getShard();\n          shardDoc.orderInShard = i;\n          Object scoreObj = lst.get(i);\n          if (scoreObj != null) {\n            shardDoc.score = ((Integer)scoreObj).floatValue();\n          }\n          shardDocs.add(shardDoc);\n        } \r\n      } \r\n\n      Collections.sort(shardDocs, (o1, o2) -> {\n        if (o1.score < o2.score) {\n          return 1;\n        } else if (o1.score > o2.score) {\n          return -1;\n        } else {\n          return 0;  \r\n        }\n      });\n\n      int resultSize = shardDocs.size();\n\n      Map<Object,ShardDoc> resultIds = new HashMap<>();\n      for (int i=0; i<shardDocs.size(); i++) {\n        ShardDoc shardDoc = shardDocs.get(i);\n        shardDoc.positionInResponse = i;\n        \r\n        \r\n        resultIds.put(shardDoc.id.toString(), shardDoc);\n      }\n\n      \r\n      \r\n      rb.rsp.addToLog(\"hits\", numFound);\n\n      SolrDocumentList responseDocs = new SolrDocumentList();\n      if (maxScore!=null) responseDocs.setMaxScore(maxScore);\n      responseDocs.setNumFound(numFound);\n      responseDocs.setStart(0);\n      \r\n      for (int i=0; i<resultSize; i++) responseDocs.add(null);\n\n      \r\n      \r\n      \r\n      rb.resultIds = resultIds;\n      rb.setResponseDocs(responseDocs);\n\n      if (partialResults) {\n        rb.rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE );\n      }\n    }\n","date":"2018-12-31 19:05:31","endLine":609,"groupId":"37617","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"merge","params":"(ResponseBuilderrb@ShardRequestsreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bc/3839771bc3a6b3138cd6daee9a86497bd799f5.src","preCode":"    public void merge(ResponseBuilder rb, ShardRequest sreq) {\n\n      \r\n      HashMap<Object,String> uniqueDoc = new HashMap<>();\n\n\n      NamedList<Object> shardInfo = null;\n      if(rb.req.getParams().getBool(ShardParams.SHARDS_INFO, false)) {\n        shardInfo = new SimpleOrderedMap<>();\n        rb.rsp.getValues().add(ShardParams.SHARDS_INFO,shardInfo);\n      }\n\n      IndexSchema schema = rb.req.getSchema();\n      SchemaField uniqueKeyField = schema.getUniqueKeyField();\n\n      long numFound = 0;\n      Float maxScore=null;\n      boolean partialResults = false;\n      List<ShardDoc> shardDocs = new ArrayList();\n\n      for (ShardResponse srsp : sreq.responses) {\n        SolrDocumentList docs = null;\n\n        if(shardInfo!=null) {\n          SimpleOrderedMap<Object> nl = new SimpleOrderedMap<>();\n\n          if (srsp.getException() != null) {\n            Throwable t = srsp.getException();\n            if(t instanceof SolrServerException) {\n              t = ((SolrServerException)t).getCause();\n            }\n            nl.add(\"error\", t.toString() );\n            StringWriter trace = new StringWriter();\n            t.printStackTrace(new PrintWriter(trace));\n            nl.add(\"trace\", trace.toString() );\n            if (srsp.getShardAddress() != null) {\n              nl.add(\"shardAddress\", srsp.getShardAddress());\n            }\n          }\n          else {\n            docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n            nl.add(\"numFound\", docs.getNumFound());\n            nl.add(\"maxScore\", docs.getMaxScore());\n            nl.add(\"shardAddress\", srsp.getShardAddress());\n          }\n          if(srsp.getSolrResponse()!=null) {\n            nl.add(\"time\", srsp.getSolrResponse().getElapsedTime());\n          }\n\n          shardInfo.add(srsp.getShard(), nl);\n        }\n        \r\n        if (srsp.getException() != null) {\n          partialResults = true;\n          continue;\n        }\n\n        if (docs == null) { \r\n          docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n        }\n\n        NamedList<?> responseHeader = (NamedList<?>)srsp.getSolrResponse().getResponse().get(\"responseHeader\");\n        if (responseHeader != null && Boolean.TRUE.equals(responseHeader.get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY))) {\n          partialResults = true;\n        }\n\n        \r\n        if (docs.getMaxScore() != null) {\n          maxScore = maxScore==null ? docs.getMaxScore() : Math.max(maxScore, docs.getMaxScore());\n        }\n        numFound += docs.getNumFound();\n\n        SortSpec ss = rb.getSortSpec();\n        Sort sort = ss.getSort();\n\n        NamedList sortFieldValues = (NamedList)(srsp.getSolrResponse().getResponse().get(\"merge_values\"));\n        NamedList unmarshalledSortFieldValues = unmarshalSortValues(ss, sortFieldValues, schema);\n        List lst = (List)unmarshalledSortFieldValues.getVal(0);\n\n        for (int i=0; i<docs.size(); i++) {\n          SolrDocument doc = docs.get(i);\n          Object id = doc.getFieldValue(uniqueKeyField.getName());\n\n          String prevShard = uniqueDoc.put(id, srsp.getShard());\n          if (prevShard != null) {\n            \r\n            numFound--;\n\n            \r\n            \r\n            \r\n            continue;\n            \r\n            \r\n            \r\n            \r\n            \r\n          }\n\n          ShardDoc shardDoc = new ShardDoc();\n          shardDoc.id = id;\n          shardDoc.shard = srsp.getShard();\n          shardDoc.orderInShard = i;\n          Object scoreObj = lst.get(i);\n          if (scoreObj != null) {\n            shardDoc.score = ((Integer)scoreObj).floatValue();\n          }\n          shardDocs.add(shardDoc);\n        } \r\n      } \r\n\n      Collections.sort(shardDocs, (o1, o2) -> {\n        if (o1.score < o2.score) {\n          return 1;\n        } else if (o1.score > o2.score) {\n          return -1;\n        } else {\n          return 0;  \r\n        }\n      });\n\n      int resultSize = shardDocs.size();\n\n      Map<Object,ShardDoc> resultIds = new HashMap<>();\n      for (int i=0; i<shardDocs.size(); i++) {\n        ShardDoc shardDoc = shardDocs.get(i);\n        shardDoc.positionInResponse = i;\n        \r\n        \r\n        resultIds.put(shardDoc.id.toString(), shardDoc);\n      }\n\n      \r\n      \r\n      rb.rsp.addToLog(\"hits\", numFound);\n\n      SolrDocumentList responseDocs = new SolrDocumentList();\n      if (maxScore!=null) responseDocs.setMaxScore(maxScore);\n      responseDocs.setNumFound(numFound);\n      responseDocs.setStart(0);\n      \r\n      for (int i=0; i<resultSize; i++) responseDocs.add(null);\n\n      \r\n      \r\n      \r\n      rb.resultIds = resultIds;\n      rb.setResponseDocs(responseDocs);\n\n      if (partialResults) {\n        rb.rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE );\n      }\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/RankQueryTestPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":457,"status":"B"}],"commitId":"6a2de771bfc8a40738e1ce0645f8b2c8ae8f9e09","commitMessage":"@@@SOLR-13096: rename TestRankQueryPlugin to RankQueryTestPlugin\n","date":"2018-12-31 19:05:31","modifiedFileCount":"0","status":"B","submitter":"Christine Poerschke"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2020-06-18 05:51:41","commitOrder":2,"curCode":"    public void merge(ResponseBuilder rb, ShardRequest sreq) {\n\n      \r\n      HashMap<Object,String> uniqueDoc = new HashMap<>();\n\n\n      NamedList<Object> shardInfo = null;\n      if(rb.req.getParams().getBool(ShardParams.SHARDS_INFO, false)) {\n        shardInfo = new SimpleOrderedMap<>();\n        rb.rsp.getValues().add(ShardParams.SHARDS_INFO,shardInfo);\n      }\n\n      IndexSchema schema = rb.req.getSchema();\n      SchemaField uniqueKeyField = schema.getUniqueKeyField();\n\n      long numFound = 0;\n      Float maxScore=null;\n      boolean partialResults = false;\n      List<ShardDoc> shardDocs = new ArrayList<>();\n\n      for (ShardResponse srsp : sreq.responses) {\n        SolrDocumentList docs = null;\n\n        if(shardInfo!=null) {\n          SimpleOrderedMap<Object> nl = new SimpleOrderedMap<>();\n\n          if (srsp.getException() != null) {\n            Throwable t = srsp.getException();\n            if(t instanceof SolrServerException) {\n              t = ((SolrServerException)t).getCause();\n            }\n            nl.add(\"error\", t.toString() );\n            StringWriter trace = new StringWriter();\n            t.printStackTrace(new PrintWriter(trace));\n            nl.add(\"trace\", trace.toString() );\n            if (srsp.getShardAddress() != null) {\n              nl.add(\"shardAddress\", srsp.getShardAddress());\n            }\n          }\n          else {\n            docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n            nl.add(\"numFound\", docs.getNumFound());\n            nl.add(\"maxScore\", docs.getMaxScore());\n            nl.add(\"shardAddress\", srsp.getShardAddress());\n          }\n          if(srsp.getSolrResponse()!=null) {\n            nl.add(\"time\", srsp.getSolrResponse().getElapsedTime());\n          }\n\n          shardInfo.add(srsp.getShard(), nl);\n        }\n        \r\n        if (srsp.getException() != null) {\n          partialResults = true;\n          continue;\n        }\n\n        if (docs == null) { \r\n          docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n        }\n\n        NamedList<?> responseHeader = (NamedList<?>)srsp.getSolrResponse().getResponse().get(\"responseHeader\");\n        if (responseHeader != null && Boolean.TRUE.equals(responseHeader.get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY))) {\n          partialResults = true;\n        }\n\n        \r\n        if (docs.getMaxScore() != null) {\n          maxScore = maxScore==null ? docs.getMaxScore() : Math.max(maxScore, docs.getMaxScore());\n        }\n        numFound += docs.getNumFound();\n\n\n        for (int i=0; i<docs.size(); i++) {\n          SolrDocument doc = docs.get(i);\n          Object id = doc.getFieldValue(uniqueKeyField.getName());\n\n          String prevShard = uniqueDoc.put(id, srsp.getShard());\n          if (prevShard != null) {\n            \r\n            numFound--;\n\n            \r\n            \r\n            \r\n            continue;\n            \r\n            \r\n            \r\n            \r\n            \r\n          }\n\n          ShardDoc shardDoc = new ShardDoc();\n          shardDoc.id = id;\n          shardDoc.shard = srsp.getShard();\n          shardDoc.orderInShard = i;\n          Object scoreObj = doc.getFieldValue(\"score\");\n          if (scoreObj != null) {\n            if (scoreObj instanceof String) {\n              shardDoc.score = Float.parseFloat((String)scoreObj);\n            } else {\n              shardDoc.score = (Float)scoreObj;\n            }\n          }\n          shardDocs.add(shardDoc);\n        } \r\n      } \r\n\n      Collections.sort(shardDocs, (o1, o2) -> {\n        if (o1.score < o2.score) {\n          return 1;\n        } else if (o1.score > o2.score) {\n          return -1;\n        } else {\n          return 0;  \r\n        }\n      });\n\n      int resultSize = shardDocs.size();\n\n      Map<Object,ShardDoc> resultIds = new HashMap<>();\n      for (int i=0; i<shardDocs.size(); i++) {\n        ShardDoc shardDoc = shardDocs.get(i);\n        shardDoc.positionInResponse = i;\n        \r\n        \r\n        resultIds.put(shardDoc.id.toString(), shardDoc);\n      }\n\n      \r\n      \r\n      rb.rsp.addToLog(\"hits\", numFound);\n\n      SolrDocumentList responseDocs = new SolrDocumentList();\n      if (maxScore!=null) responseDocs.setMaxScore(maxScore);\n      responseDocs.setNumFound(numFound);\n      responseDocs.setStart(0);\n      \r\n      for (int i=0; i<resultSize; i++) responseDocs.add(null);\n\n      \r\n      \r\n      \r\n      rb.resultIds = resultIds;\n      rb.setResponseDocs(responseDocs);\n\n      if (partialResults) {\n        rb.rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE );\n      }\n    }\n","date":"2020-06-18 05:51:41","endLine":320,"groupId":"113135","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"merge","params":"(ResponseBuilderrb@ShardRequestsreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/12/0847bf3f0178ebe0b46869bb36962925e6bc95.src","preCode":"    public void merge(ResponseBuilder rb, ShardRequest sreq) {\n\n      \r\n      HashMap<Object,String> uniqueDoc = new HashMap<>();\n\n\n      NamedList<Object> shardInfo = null;\n      if(rb.req.getParams().getBool(ShardParams.SHARDS_INFO, false)) {\n        shardInfo = new SimpleOrderedMap<>();\n        rb.rsp.getValues().add(ShardParams.SHARDS_INFO,shardInfo);\n      }\n\n      IndexSchema schema = rb.req.getSchema();\n      SchemaField uniqueKeyField = schema.getUniqueKeyField();\n\n      long numFound = 0;\n      Float maxScore=null;\n      boolean partialResults = false;\n      List<ShardDoc> shardDocs = new ArrayList();\n\n      for (ShardResponse srsp : sreq.responses) {\n        SolrDocumentList docs = null;\n\n        if(shardInfo!=null) {\n          SimpleOrderedMap<Object> nl = new SimpleOrderedMap<>();\n\n          if (srsp.getException() != null) {\n            Throwable t = srsp.getException();\n            if(t instanceof SolrServerException) {\n              t = ((SolrServerException)t).getCause();\n            }\n            nl.add(\"error\", t.toString() );\n            StringWriter trace = new StringWriter();\n            t.printStackTrace(new PrintWriter(trace));\n            nl.add(\"trace\", trace.toString() );\n            if (srsp.getShardAddress() != null) {\n              nl.add(\"shardAddress\", srsp.getShardAddress());\n            }\n          }\n          else {\n            docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n            nl.add(\"numFound\", docs.getNumFound());\n            nl.add(\"maxScore\", docs.getMaxScore());\n            nl.add(\"shardAddress\", srsp.getShardAddress());\n          }\n          if(srsp.getSolrResponse()!=null) {\n            nl.add(\"time\", srsp.getSolrResponse().getElapsedTime());\n          }\n\n          shardInfo.add(srsp.getShard(), nl);\n        }\n        \r\n        if (srsp.getException() != null) {\n          partialResults = true;\n          continue;\n        }\n\n        if (docs == null) { \r\n          docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n        }\n\n        NamedList<?> responseHeader = (NamedList<?>)srsp.getSolrResponse().getResponse().get(\"responseHeader\");\n        if (responseHeader != null && Boolean.TRUE.equals(responseHeader.get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY))) {\n          partialResults = true;\n        }\n\n        \r\n        if (docs.getMaxScore() != null) {\n          maxScore = maxScore==null ? docs.getMaxScore() : Math.max(maxScore, docs.getMaxScore());\n        }\n        numFound += docs.getNumFound();\n\n\n        for (int i=0; i<docs.size(); i++) {\n          SolrDocument doc = docs.get(i);\n          Object id = doc.getFieldValue(uniqueKeyField.getName());\n\n          String prevShard = uniqueDoc.put(id, srsp.getShard());\n          if (prevShard != null) {\n            \r\n            numFound--;\n\n            \r\n            \r\n            \r\n            continue;\n            \r\n            \r\n            \r\n            \r\n            \r\n          }\n\n          ShardDoc shardDoc = new ShardDoc();\n          shardDoc.id = id;\n          shardDoc.shard = srsp.getShard();\n          shardDoc.orderInShard = i;\n          Object scoreObj = doc.getFieldValue(\"score\");\n          if (scoreObj != null) {\n            if (scoreObj instanceof String) {\n              shardDoc.score = Float.parseFloat((String)scoreObj);\n            } else {\n              shardDoc.score = (Float)scoreObj;\n            }\n          }\n          shardDocs.add(shardDoc);\n        } \r\n      } \r\n\n      Collections.sort(shardDocs, (o1, o2) -> {\n        if (o1.score < o2.score) {\n          return 1;\n        } else if (o1.score > o2.score) {\n          return -1;\n        } else {\n          return 0;  \r\n        }\n      });\n\n      int resultSize = shardDocs.size();\n\n      Map<Object,ShardDoc> resultIds = new HashMap<>();\n      for (int i=0; i<shardDocs.size(); i++) {\n        ShardDoc shardDoc = shardDocs.get(i);\n        shardDoc.positionInResponse = i;\n        \r\n        \r\n        resultIds.put(shardDoc.id.toString(), shardDoc);\n      }\n\n      \r\n      \r\n      rb.rsp.addToLog(\"hits\", numFound);\n\n      SolrDocumentList responseDocs = new SolrDocumentList();\n      if (maxScore!=null) responseDocs.setMaxScore(maxScore);\n      responseDocs.setNumFound(numFound);\n      responseDocs.setStart(0);\n      \r\n      for (int i=0; i<resultSize; i++) responseDocs.add(null);\n\n      \r\n      \r\n      \r\n      rb.resultIds = resultIds;\n      rb.setResponseDocs(responseDocs);\n\n      if (partialResults) {\n        rb.rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE );\n      }\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/RankQueryTestPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2020-06-18 05:51:41","commitOrder":2,"curCode":"    public void merge(ResponseBuilder rb, ShardRequest sreq) {\n\n      \r\n      HashMap<Object,String> uniqueDoc = new HashMap<>();\n\n\n      NamedList<Object> shardInfo = null;\n      if(rb.req.getParams().getBool(ShardParams.SHARDS_INFO, false)) {\n        shardInfo = new SimpleOrderedMap<>();\n        rb.rsp.getValues().add(ShardParams.SHARDS_INFO,shardInfo);\n      }\n\n      IndexSchema schema = rb.req.getSchema();\n      SchemaField uniqueKeyField = schema.getUniqueKeyField();\n\n      long numFound = 0;\n      Float maxScore=null;\n      boolean partialResults = false;\n      List<ShardDoc> shardDocs = new ArrayList<>();\n\n      for (ShardResponse srsp : sreq.responses) {\n        SolrDocumentList docs = null;\n\n        if(shardInfo!=null) {\n          SimpleOrderedMap<Object> nl = new SimpleOrderedMap<>();\n\n          if (srsp.getException() != null) {\n            Throwable t = srsp.getException();\n            if(t instanceof SolrServerException) {\n              t = ((SolrServerException)t).getCause();\n            }\n            nl.add(\"error\", t.toString() );\n            StringWriter trace = new StringWriter();\n            t.printStackTrace(new PrintWriter(trace));\n            nl.add(\"trace\", trace.toString() );\n            if (srsp.getShardAddress() != null) {\n              nl.add(\"shardAddress\", srsp.getShardAddress());\n            }\n          }\n          else {\n            docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n            nl.add(\"numFound\", docs.getNumFound());\n            nl.add(\"maxScore\", docs.getMaxScore());\n            nl.add(\"shardAddress\", srsp.getShardAddress());\n          }\n          if(srsp.getSolrResponse()!=null) {\n            nl.add(\"time\", srsp.getSolrResponse().getElapsedTime());\n          }\n\n          shardInfo.add(srsp.getShard(), nl);\n        }\n        \r\n        if (srsp.getException() != null) {\n          partialResults = true;\n          continue;\n        }\n\n        if (docs == null) { \r\n          docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n        }\n\n        NamedList<?> responseHeader = (NamedList<?>)srsp.getSolrResponse().getResponse().get(\"responseHeader\");\n        if (responseHeader != null && Boolean.TRUE.equals(responseHeader.get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY))) {\n          partialResults = true;\n        }\n\n        \r\n        if (docs.getMaxScore() != null) {\n          maxScore = maxScore==null ? docs.getMaxScore() : Math.max(maxScore, docs.getMaxScore());\n        }\n        numFound += docs.getNumFound();\n\n        SortSpec ss = rb.getSortSpec();\n        Sort sort = ss.getSort();\n\n        @SuppressWarnings({\"rawtypes\"})\n        NamedList sortFieldValues = (NamedList)(srsp.getSolrResponse().getResponse().get(\"merge_values\"));\n        @SuppressWarnings({\"rawtypes\"})\n        NamedList unmarshalledSortFieldValues = unmarshalSortValues(ss, sortFieldValues, schema);\n        @SuppressWarnings({\"rawtypes\"})\n        List lst = (List)unmarshalledSortFieldValues.getVal(0);\n\n        for (int i=0; i<docs.size(); i++) {\n          SolrDocument doc = docs.get(i);\n          Object id = doc.getFieldValue(uniqueKeyField.getName());\n\n          String prevShard = uniqueDoc.put(id, srsp.getShard());\n          if (prevShard != null) {\n            \r\n            numFound--;\n\n            \r\n            \r\n            \r\n            continue;\n            \r\n            \r\n            \r\n            \r\n            \r\n          }\n\n          ShardDoc shardDoc = new ShardDoc();\n          shardDoc.id = id;\n          shardDoc.shard = srsp.getShard();\n          shardDoc.orderInShard = i;\n          Object scoreObj = lst.get(i);\n          if (scoreObj != null) {\n            shardDoc.score = ((Integer)scoreObj).floatValue();\n          }\n          shardDocs.add(shardDoc);\n        } \r\n      } \r\n\n      Collections.sort(shardDocs, (o1, o2) -> {\n        if (o1.score < o2.score) {\n          return 1;\n        } else if (o1.score > o2.score) {\n          return -1;\n        } else {\n          return 0;  \r\n        }\n      });\n\n      int resultSize = shardDocs.size();\n\n      Map<Object,ShardDoc> resultIds = new HashMap<>();\n      for (int i=0; i<shardDocs.size(); i++) {\n        ShardDoc shardDoc = shardDocs.get(i);\n        shardDoc.positionInResponse = i;\n        \r\n        \r\n        resultIds.put(shardDoc.id.toString(), shardDoc);\n      }\n\n      \r\n      \r\n      rb.rsp.addToLog(\"hits\", numFound);\n\n      SolrDocumentList responseDocs = new SolrDocumentList();\n      if (maxScore!=null) responseDocs.setMaxScore(maxScore);\n      responseDocs.setNumFound(numFound);\n      responseDocs.setStart(0);\n      \r\n      for (int i=0; i<resultSize; i++) responseDocs.add(null);\n\n      \r\n      \r\n      \r\n      rb.resultIds = resultIds;\n      rb.setResponseDocs(responseDocs);\n\n      if (partialResults) {\n        rb.rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE );\n      }\n    }\n","date":"2020-06-18 05:51:41","endLine":621,"groupId":"113135","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"merge","params":"(ResponseBuilderrb@ShardRequestsreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/12/0847bf3f0178ebe0b46869bb36962925e6bc95.src","preCode":"    public void merge(ResponseBuilder rb, ShardRequest sreq) {\n\n      \r\n      HashMap<Object,String> uniqueDoc = new HashMap<>();\n\n\n      NamedList<Object> shardInfo = null;\n      if(rb.req.getParams().getBool(ShardParams.SHARDS_INFO, false)) {\n        shardInfo = new SimpleOrderedMap<>();\n        rb.rsp.getValues().add(ShardParams.SHARDS_INFO,shardInfo);\n      }\n\n      IndexSchema schema = rb.req.getSchema();\n      SchemaField uniqueKeyField = schema.getUniqueKeyField();\n\n      long numFound = 0;\n      Float maxScore=null;\n      boolean partialResults = false;\n      List<ShardDoc> shardDocs = new ArrayList();\n\n      for (ShardResponse srsp : sreq.responses) {\n        SolrDocumentList docs = null;\n\n        if(shardInfo!=null) {\n          SimpleOrderedMap<Object> nl = new SimpleOrderedMap<>();\n\n          if (srsp.getException() != null) {\n            Throwable t = srsp.getException();\n            if(t instanceof SolrServerException) {\n              t = ((SolrServerException)t).getCause();\n            }\n            nl.add(\"error\", t.toString() );\n            StringWriter trace = new StringWriter();\n            t.printStackTrace(new PrintWriter(trace));\n            nl.add(\"trace\", trace.toString() );\n            if (srsp.getShardAddress() != null) {\n              nl.add(\"shardAddress\", srsp.getShardAddress());\n            }\n          }\n          else {\n            docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n            nl.add(\"numFound\", docs.getNumFound());\n            nl.add(\"maxScore\", docs.getMaxScore());\n            nl.add(\"shardAddress\", srsp.getShardAddress());\n          }\n          if(srsp.getSolrResponse()!=null) {\n            nl.add(\"time\", srsp.getSolrResponse().getElapsedTime());\n          }\n\n          shardInfo.add(srsp.getShard(), nl);\n        }\n        \r\n        if (srsp.getException() != null) {\n          partialResults = true;\n          continue;\n        }\n\n        if (docs == null) { \r\n          docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n        }\n\n        NamedList<?> responseHeader = (NamedList<?>)srsp.getSolrResponse().getResponse().get(\"responseHeader\");\n        if (responseHeader != null && Boolean.TRUE.equals(responseHeader.get(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY))) {\n          partialResults = true;\n        }\n\n        \r\n        if (docs.getMaxScore() != null) {\n          maxScore = maxScore==null ? docs.getMaxScore() : Math.max(maxScore, docs.getMaxScore());\n        }\n        numFound += docs.getNumFound();\n\n        SortSpec ss = rb.getSortSpec();\n        Sort sort = ss.getSort();\n\n        NamedList sortFieldValues = (NamedList)(srsp.getSolrResponse().getResponse().get(\"merge_values\"));\n        NamedList unmarshalledSortFieldValues = unmarshalSortValues(ss, sortFieldValues, schema);\n        List lst = (List)unmarshalledSortFieldValues.getVal(0);\n\n        for (int i=0; i<docs.size(); i++) {\n          SolrDocument doc = docs.get(i);\n          Object id = doc.getFieldValue(uniqueKeyField.getName());\n\n          String prevShard = uniqueDoc.put(id, srsp.getShard());\n          if (prevShard != null) {\n            \r\n            numFound--;\n\n            \r\n            \r\n            \r\n            continue;\n            \r\n            \r\n            \r\n            \r\n            \r\n          }\n\n          ShardDoc shardDoc = new ShardDoc();\n          shardDoc.id = id;\n          shardDoc.shard = srsp.getShard();\n          shardDoc.orderInShard = i;\n          Object scoreObj = lst.get(i);\n          if (scoreObj != null) {\n            shardDoc.score = ((Integer)scoreObj).floatValue();\n          }\n          shardDocs.add(shardDoc);\n        } \r\n      } \r\n\n      Collections.sort(shardDocs, (o1, o2) -> {\n        if (o1.score < o2.score) {\n          return 1;\n        } else if (o1.score > o2.score) {\n          return -1;\n        } else {\n          return 0;  \r\n        }\n      });\n\n      int resultSize = shardDocs.size();\n\n      Map<Object,ShardDoc> resultIds = new HashMap<>();\n      for (int i=0; i<shardDocs.size(); i++) {\n        ShardDoc shardDoc = shardDocs.get(i);\n        shardDoc.positionInResponse = i;\n        \r\n        \r\n        resultIds.put(shardDoc.id.toString(), shardDoc);\n      }\n\n      \r\n      \r\n      rb.rsp.addToLog(\"hits\", numFound);\n\n      SolrDocumentList responseDocs = new SolrDocumentList();\n      if (maxScore!=null) responseDocs.setMaxScore(maxScore);\n      responseDocs.setNumFound(numFound);\n      responseDocs.setStart(0);\n      \r\n      for (int i=0; i<resultSize; i++) responseDocs.add(null);\n\n      \r\n      \r\n      \r\n      rb.resultIds = resultIds;\n      rb.setResponseDocs(responseDocs);\n\n      if (partialResults) {\n        rb.rsp.getResponseHeader().add(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY, Boolean.TRUE );\n      }\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/RankQueryTestPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":466,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"}]
