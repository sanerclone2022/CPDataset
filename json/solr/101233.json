[{"authorTime":"2016-11-02 01:50:14","codes":[{"authorDate":"2016-11-02 01:50:14","commitOrder":1,"curCode":"  private static List<Feature> makeFilterFeatures(int[] featureIds) {\n    final List<Feature> features = new ArrayList<>();\n    for (final int i : featureIds) {\n      Map<String,Object> params = new HashMap<String,Object>();\n      params.put(\"value\", i);\n      final Feature f = Feature.getInstance(solrResourceLoader,\n          ValueFeature.class.getCanonicalName(),\n          \"f\" + i, params);\n      f.setIndex(i);\n      features.add(f);\n    }\n    return features;\n  }\n","date":"2016-11-02 01:50:14","endLine":90,"groupId":"48812","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"makeFilterFeatures","params":"(int[]featureIds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/76c99977113c34e4f89db414aaebe3a4c07aea.src","preCode":"  private static List<Feature> makeFilterFeatures(int[] featureIds) {\n    final List<Feature> features = new ArrayList<>();\n    for (final int i : featureIds) {\n      Map<String,Object> params = new HashMap<String,Object>();\n      params.put(\"value\", i);\n      final Feature f = Feature.getInstance(solrResourceLoader,\n          ValueFeature.class.getCanonicalName(),\n          \"f\" + i, params);\n      f.setIndex(i);\n      features.add(f);\n    }\n    return features;\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTRScoringQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"},{"authorDate":"2016-11-02 01:50:14","commitOrder":1,"curCode":"  private static List<Feature> makeFeatures(int[] featureIds) {\n    final List<Feature> features = new ArrayList<>();\n    for (final int i : featureIds) {\n      Map<String,Object> params = new HashMap<String,Object>();\n      params.put(\"value\", i);\n      final Feature f = Feature.getInstance(solrResourceLoader,\n          ValueFeature.class.getCanonicalName(),\n          \"f\" + i, params);\n      f.setIndex(i);\n      features.add(f);\n    }\n    return features;\n  }\n","date":"2016-11-02 01:50:14","endLine":71,"groupId":"48812","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"makeFeatures","params":"(int[]featureIds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/68/961d22473336a000d37172e6d40057fd60af2c.src","preCode":"  private static List<Feature> makeFeatures(int[] featureIds) {\n    final List<Feature> features = new ArrayList<>();\n    for (final int i : featureIds) {\n      Map<String,Object> params = new HashMap<String,Object>();\n      params.put(\"value\", i);\n      final Feature f = Feature.getInstance(solrResourceLoader,\n          ValueFeature.class.getCanonicalName(),\n          \"f\" + i, params);\n      f.setIndex(i);\n      features.add(f);\n    }\n    return features;\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestSelectiveWeightCreation.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"}],"commitId":"5a66b3bc089e4b3e73b1c41c4cdcd89b183b85e7","commitMessage":"@@@SOLR-8542: Adds Solr Learning to Rank (LTR) plugin for reranking results with machine learning models. (Michael Nilsson.  Diego Ceccarelli.  Joshua Pantony.  Jon Dorando.  Naveen Santhapuri.  Alessandro Benedetti.  David Grohmann.  Christine Poerschke)\n","date":"2016-11-02 01:50:14","modifiedFileCount":"0","status":"B","submitter":"Christine Poerschke"},{"authorTime":"2018-02-10 02:56:59","codes":[{"authorDate":"2018-02-10 02:56:59","commitOrder":2,"curCode":"  private static List<Feature> makeFilterFeatures(int[] featureIds) {\n    final List<Feature> features = new ArrayList<>();\n    for (final int i : featureIds) {\n      Map<String,Object> params = new HashMap<String,Object>();\n      params.put(\"value\", i);\n      final Feature f = Feature.getInstance(solrResourceLoader,\n          ValueFeature.class.getName(),\n          \"f\" + i, params);\n      f.setIndex(i);\n      features.add(f);\n    }\n    return features;\n  }\n","date":"2018-02-10 02:56:59","endLine":91,"groupId":"101233","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"makeFilterFeatures","params":"(int[]featureIds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b3/8dacce21fd7d2bc56078c33c5090ffd072fe3b.src","preCode":"  private static List<Feature> makeFilterFeatures(int[] featureIds) {\n    final List<Feature> features = new ArrayList<>();\n    for (final int i : featureIds) {\n      Map<String,Object> params = new HashMap<String,Object>();\n      params.put(\"value\", i);\n      final Feature f = Feature.getInstance(solrResourceLoader,\n          ValueFeature.class.getCanonicalName(),\n          \"f\" + i, params);\n      f.setIndex(i);\n      features.add(f);\n    }\n    return features;\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestLTRScoringQuery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2018-02-10 02:56:59","commitOrder":2,"curCode":"  private static List<Feature> makeFeatures(int[] featureIds) {\n    final List<Feature> features = new ArrayList<>();\n    for (final int i : featureIds) {\n      Map<String,Object> params = new HashMap<String,Object>();\n      params.put(\"value\", i);\n      final Feature f = Feature.getInstance(solrResourceLoader,\n          ValueFeature.class.getName(),\n          \"f\" + i, params);\n      f.setIndex(i);\n      features.add(f);\n    }\n    return features;\n  }\n","date":"2018-02-10 02:56:59","endLine":72,"groupId":"101233","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"makeFeatures","params":"(int[]featureIds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/9e949ab3ba71175f99b736637400d5a97af632.src","preCode":"  private static List<Feature> makeFeatures(int[] featureIds) {\n    final List<Feature> features = new ArrayList<>();\n    for (final int i : featureIds) {\n      Map<String,Object> params = new HashMap<String,Object>();\n      params.put(\"value\", i);\n      final Feature f = Feature.getInstance(solrResourceLoader,\n          ValueFeature.class.getCanonicalName(),\n          \"f\" + i, params);\n      f.setIndex(i);\n      features.add(f);\n    }\n    return features;\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/TestSelectiveWeightCreation.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"7d3fccefe613afe7cd94ffeebab1217f92eb9d5c","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-02-10 02:56:59","modifiedFileCount":"28","status":"M","submitter":"Uwe Schindler"}]
