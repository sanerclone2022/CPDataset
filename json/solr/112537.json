[{"authorTime":"2012-11-24 03:45:50","codes":[{"authorDate":"2012-11-24 03:45:50","commitOrder":1,"curCode":"  protected QueryParser(CharStream stream) {\n    token_source = new QueryParserTokenManager(stream);\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 22; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","date":"2012-11-24 03:45:50","endLine":484,"groupId":"21075","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"QueryParser","params":"(CharStreamstream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7e/7b95da1576b007bee09b1a34c51e0a9611e8be.src","preCode":"  protected QueryParser(CharStream stream) {\n    token_source = new QueryParserTokenManager(stream);\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 22; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/parser/QueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":477,"status":"B"},{"authorDate":"2012-11-24 03:45:50","commitOrder":1,"curCode":"  protected QueryParser(QueryParserTokenManager tm) {\n    token_source = tm;\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 22; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","date":"2012-11-24 03:45:50","endLine":504,"groupId":"21075","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"QueryParser","params":"(QueryParserTokenManagertm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7e/7b95da1576b007bee09b1a34c51e0a9611e8be.src","preCode":"  protected QueryParser(QueryParserTokenManager tm) {\n    token_source = tm;\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 22; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/parser/QueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":497,"status":"B"}],"commitId":"2d4e789d00ecb5dfaf73e7df01a7da4502c404a9","commitMessage":"@@@SOLR-4093: solr specific parser + localParams syntax\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1413042 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-11-24 03:45:50","modifiedFileCount":"35","status":"B","submitter":"Yonik Seeley"},{"authorTime":"2015-08-08 00:14:41","codes":[{"authorDate":"2015-08-08 00:14:41","commitOrder":2,"curCode":"  protected QueryParser(CharStream stream) {\n    token_source = new QueryParserTokenManager(stream);\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 23; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","date":"2015-08-08 00:14:41","endLine":494,"groupId":"21075","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"QueryParser","params":"(CharStreamstream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9d/d924c685c5a99a7f309a55b8ff2acf34bf2bce.src","preCode":"  protected QueryParser(CharStream stream) {\n    token_source = new QueryParserTokenManager(stream);\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 22; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/parser/QueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":487,"status":"M"},{"authorDate":"2015-08-08 00:14:41","commitOrder":2,"curCode":"  protected QueryParser(QueryParserTokenManager tm) {\n    token_source = tm;\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 23; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","date":"2015-08-08 00:14:41","endLine":514,"groupId":"21075","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"QueryParser","params":"(QueryParserTokenManagertm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9d/d924c685c5a99a7f309a55b8ff2acf34bf2bce.src","preCode":"  protected QueryParser(QueryParserTokenManager tm) {\n    token_source = tm;\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 22; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/parser/QueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"}],"commitId":"c61b8e767815e1bcb2a5025f254e50717770f544","commitMessage":"@@@SOLR-7219: add filter() to query syntax\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1694708 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-08 00:14:41","modifiedFileCount":"5","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2017-03-17 07:41:37","codes":[{"authorDate":"2017-03-17 07:41:37","commitOrder":3,"curCode":"  protected QueryParser(CharStream stream) {\n    token_source = new QueryParserTokenManager(stream);\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 28; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","date":"2017-03-17 07:41:47","endLine":713,"groupId":"21075","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"QueryParser","params":"(CharStreamstream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d9/a64f4f7c0de77678c5d797a2efd4ce7e6a6707.src","preCode":"  protected QueryParser(CharStream stream) {\n    token_source = new QueryParserTokenManager(stream);\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 23; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/parser/QueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":706,"status":"M"},{"authorDate":"2017-03-17 07:41:37","commitOrder":3,"curCode":"  protected QueryParser(QueryParserTokenManager tm) {\n    token_source = tm;\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 28; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","date":"2017-03-17 07:41:47","endLine":734,"groupId":"21075","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"QueryParser","params":"(QueryParserTokenManagertm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d9/a64f4f7c0de77678c5d797a2efd4ce7e6a6707.src","preCode":"  protected QueryParser(QueryParserTokenManager tm) {\n    token_source = tm;\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 23; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/parser/QueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":727,"status":"M"}],"commitId":"d1b2fb33ef3bc0ced65feb98c31cffe4f209da7f","commitMessage":"@@@SOLR-9185: Solr's edismax and Lucene/standard query parsers should optionally not split on whitespace before sending terms to analysis\n","date":"2017-03-17 07:41:47","modifiedFileCount":"9","status":"M","submitter":"Steve Rowe"},{"authorTime":"2017-05-14 23:31:22","codes":[{"authorDate":"2017-05-14 23:31:22","commitOrder":4,"curCode":"  protected QueryParser(CharStream stream) {\n    token_source = new QueryParserTokenManager(stream);\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 27; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","date":"2017-05-14 23:31:22","endLine":712,"groupId":"112537","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"QueryParser","params":"(CharStreamstream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/e982fa26d0098350a3f3b2c81964190ee92894.src","preCode":"  protected QueryParser(CharStream stream) {\n    token_source = new QueryParserTokenManager(stream);\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 28; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/parser/QueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":705,"status":"M"},{"authorDate":"2017-05-14 23:31:22","commitOrder":4,"curCode":"  protected QueryParser(QueryParserTokenManager tm) {\n    token_source = tm;\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 27; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","date":"2017-05-14 23:31:22","endLine":733,"groupId":"112537","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"QueryParser","params":"(QueryParserTokenManagertm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/e982fa26d0098350a3f3b2c81964190ee92894.src","preCode":"  protected QueryParser(QueryParserTokenManager tm) {\n    token_source = tm;\n    token = new Token();\n    jj_ntk = -1;\n    jj_gen = 0;\n    for (int i = 0; i < 28; i++) jj_la1[i] = -1;\n    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/parser/QueryParser.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":726,"status":"M"}],"commitId":"e11bc030987b33faadf42f0b2fb21d521077f361","commitMessage":"@@@LUCENE-7821: The classic and flexible query parsers.  as well as Solr's 'lucene'/standard query parser.  should require ' TO ' in range queries.  and accept 'TO' as endpoints in range queries.\n","date":"2017-05-14 23:31:22","modifiedFileCount":"5","status":"M","submitter":"Steve Rowe"}]
