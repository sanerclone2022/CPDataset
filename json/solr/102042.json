[{"authorTime":"2015-08-09 11:38:08","codes":[{"authorDate":"2015-08-09 11:38:08","commitOrder":1,"curCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.addDocuments(cmd);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n    } finally {\n      iw.decref();\n    }\n\n    if (ulog != null) ulog.add(cmd);\n  }\n","date":"2015-08-09 11:38:08","endLine":246,"groupId":"356","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"allowDuplicateUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cb/db2c492b06b5a4c0fd0f5f6cb5449b039d047a.src","preCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.addDocuments(cmd);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n    } finally {\n      iw.decref();\n    }\n\n    if (ulog != null) ulog.add(cmd);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"B"},{"authorDate":"2015-08-09 11:38:08","commitOrder":1,"curCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      \r\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        \r\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      \r\n\n      if (del) { \r\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n    } finally {\n      iw.decref();\n    }\n\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    if (ulog != null) ulog.add(cmd);\n  }\n","date":"2015-08-09 11:38:08","endLine":292,"groupId":"9189","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doNormalUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cb/db2c492b06b5a4c0fd0f5f6cb5449b039d047a.src","preCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      \r\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        \r\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      \r\n\n      if (del) { \r\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n    } finally {\n      iw.decref();\n    }\n\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    if (ulog != null) ulog.add(cmd);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"B"}],"commitId":"2676aa61b98c11b9ba3dc5c3f9f19ab556d73495","commitMessage":"@@@SOLR-7836: Possible deadlock when closing refcounted index writers\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1694854 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-09 11:38:08","modifiedFileCount":"2","status":"B","submitter":"Erick Erickson"},{"authorTime":"2015-08-10 05:46:41","codes":[{"authorDate":"2015-08-10 05:46:41","commitOrder":2,"curCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.addDocuments(cmd);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n    } finally {\n      iw.decref();\n    }\n    synchronized (solrCoreState.getUpdateLock()) {\n      if (ulog != null) ulog.add(cmd);\n    }\n  }\n","date":"2015-08-10 05:46:41","endLine":247,"groupId":"356","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"allowDuplicateUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/aeac9285620442cd7482d240d23febdbb0d414.src","preCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.addDocuments(cmd);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n    } finally {\n      iw.decref();\n    }\n\n    if (ulog != null) ulog.add(cmd);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"},{"authorDate":"2015-08-10 05:46:41","commitOrder":2,"curCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      \r\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        \r\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      \r\n\n      if (del) { \r\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n    } finally {\n      iw.decref();\n    }\n\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    synchronized (solrCoreState.getUpdateLock()) {\n      if (ulog != null) ulog.add(cmd);\n    }\n  }\n","date":"2015-08-10 05:46:41","endLine":295,"groupId":"9189","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doNormalUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/aeac9285620442cd7482d240d23febdbb0d414.src","preCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      \r\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        \r\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      \r\n\n      if (del) { \r\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n    } finally {\n      iw.decref();\n    }\n\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    if (ulog != null) ulog.add(cmd);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"}],"commitId":"cc3b13c1c46ed10906108b8647ba5b3f8303b262","commitMessage":"@@@SOLR-7836: Possible deadlock when closing refcounted index writers. Surrounded ulog updates with updatelock\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1694913 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-10 05:46:41","modifiedFileCount":"1","status":"M","submitter":"Erick Erickson"},{"authorTime":"2015-09-03 23:07:24","codes":[{"authorDate":"2015-09-03 23:07:24","commitOrder":3,"curCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.addDocuments(cmd);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n  }\n","date":"2015-09-03 23:07:24","endLine":247,"groupId":"356","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"allowDuplicateUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c2/ecad1d7f926b12cfe443e272e70e3d827064b5.src","preCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.addDocuments(cmd);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n    } finally {\n      iw.decref();\n    }\n    synchronized (solrCoreState.getUpdateLock()) {\n      if (ulog != null) ulog.add(cmd);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"},{"authorDate":"2015-09-03 23:07:24","commitOrder":3,"curCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      \r\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        \r\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      \r\n\n      if (del) { \r\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n","date":"2015-09-03 23:07:24","endLine":298,"groupId":"9189","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doNormalUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c2/ecad1d7f926b12cfe443e272e70e3d827064b5.src","preCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      \r\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        \r\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      \r\n\n      if (del) { \r\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n    } finally {\n      iw.decref();\n    }\n\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    synchronized (solrCoreState.getUpdateLock()) {\n      if (ulog != null) ulog.add(cmd);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"}],"commitId":"082707f2d84ad90901617352b2773b2cdee333e9","commitMessage":"@@@SOLR-7836: change SolrCoreState to use a reentrant locking implementation to fix deadlocks\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1701043 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-09-03 23:07:24","modifiedFileCount":"3","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2017-01-26 09:23:13","codes":[{"authorDate":"2015-09-03 23:07:24","commitOrder":4,"curCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.addDocuments(cmd);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n  }\n","date":"2015-09-03 23:07:24","endLine":247,"groupId":"356","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"allowDuplicateUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c2/ecad1d7f926b12cfe443e272e70e3d827064b5.src","preCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.addDocuments(cmd);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"N"},{"authorDate":"2017-01-26 09:23:13","commitOrder":4,"curCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      \r\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        updateDocOrDocValues(cmd, writer, updateTerm);\n      }\n      \r\n\n      if (del) { \r\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n","date":"2017-01-26 09:23:13","endLine":307,"groupId":"0","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doNormalUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9e/65ebd7300009e9b2f660ffb2b8911683f0b26a.src","preCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      \r\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        Document luceneDocument = cmd.getLuceneDocument();\n        \r\n        writer.updateDocument(updateTerm, luceneDocument);\n      }\n      \r\n\n      if (del) { \r\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"M"}],"commitId":"5375410807aecf3cc67f82ca1e9ee591f39d0ac7","commitMessage":"@@@SOLR-5944: In-place updates of Numeric DocValues\n","date":"2017-01-26 09:23:13","modifiedFileCount":"22","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2017-02-16 11:51:21","codes":[{"authorDate":"2015-09-03 23:07:24","commitOrder":5,"curCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.addDocuments(cmd);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n  }\n","date":"2015-09-03 23:07:24","endLine":247,"groupId":"356","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"allowDuplicateUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c2/ecad1d7f926b12cfe443e272e70e3d827064b5.src","preCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.addDocuments(cmd);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"N"},{"authorDate":"2017-02-16 11:51:21","commitOrder":5,"curCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = getIdTerm(cmd);\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      \r\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer, updateTerm);\n\n      if (del) { \r\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n","date":"2017-02-16 11:51:21","endLine":302,"groupId":"1470","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doNormalUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b9/2645905fab168294c4d395d03cef584e44acf7.src","preCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = new Term(cmd.isBlock() ? \"_root_\" : idField.getName(), cmd.getIndexedId());\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      \r\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.updateDocuments(updateTerm, cmd);\n      } else {\n        updateDocOrDocValues(cmd, writer, updateTerm);\n      }\n      \r\n\n      if (del) { \r\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"M"}],"commitId":"99188ae00c0c46d9af47b9773d492de40de4aa83","commitMessage":"@@@SOLR-10114: add _version_ field to child documents.  fix reordered-dbq to not drop child docs\n","date":"2017-02-16 11:51:21","modifiedFileCount":"4","status":"M","submitter":"yonik"},{"authorTime":"2018-06-11 22:48:30","codes":[{"authorDate":"2018-06-11 22:48:30","commitOrder":6,"curCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n      Iterable<Document> blockDocs = cmd.getLuceneDocsIfNested();\n      if (blockDocs != null) {\n        writer.addDocuments(blockDocs);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n  }\n","date":"2018-06-11 22:48:30","endLine":329,"groupId":"4033","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"allowDuplicateUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c9/1350916beaeab19d5ad151f962ea3078ff7ae0.src","preCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      if (cmd.isBlock()) {\n        writer.addDocuments(cmd);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":313,"status":"M"},{"authorDate":"2018-06-11 22:48:30","commitOrder":6,"curCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer);\n\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n  }\n","date":"2018-06-11 22:48:30","endLine":350,"groupId":"14128","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doNormalUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c9/1350916beaeab19d5ad151f962ea3078ff7ae0.src","preCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    Term updateTerm;\n    Term idTerm = getIdTerm(cmd);\n    boolean del = false;\n    if (cmd.updateTerm == null) {\n      updateTerm = idTerm;\n    } else {\n      \r\n      del = true;\n      updateTerm = cmd.updateTerm;\n    }\n\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer, updateTerm);\n\n      if (del) { \r\n        BooleanQuery.Builder bq = new BooleanQuery.Builder();\n        bq.add(new BooleanClause(new TermQuery(updateTerm),\n            Occur.MUST_NOT));\n        bq.add(new BooleanClause(new TermQuery(idTerm), Occur.MUST));\n        writer.deleteDocuments(new DeleteByQueryWrapper(bq.build(), core.getLatestSchema()));\n      }\n\n\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n\n\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":331,"status":"M"}],"commitId":"8095139da3598e9f76c8d960855535553b753ee9","commitMessage":"@@@SOLR-12361: Allow nested child documents to be in field values of a SolrInputDocument.\n* AddUpdateCommand and it's relationship with DirectUpdateHandler2 was reworked substantially.\n\nFixes #385\n","date":"2018-06-11 22:48:30","modifiedFileCount":"12","status":"M","submitter":"David Smiley"},{"authorTime":"2018-06-11 22:48:30","codes":[{"authorDate":"2018-11-26 10:47:49","commitOrder":7,"curCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n      Iterable<Document> nestedDocs = cmd.getLuceneDocsIfNested();\n      if (nestedDocs != null) {\n        writer.addDocuments(nestedDocs);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n  }\n","date":"2018-11-26 10:47:49","endLine":335,"groupId":"4033","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"allowDuplicateUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/66/0df064b300a044da5b92e32eb1dbfdb4b3b6c7.src","preCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n      Iterable<Document> blockDocs = cmd.getLuceneDocsIfNested();\n      if (blockDocs != null) {\n        writer.addDocuments(blockDocs);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":319,"status":"M"},{"authorDate":"2018-06-11 22:48:30","commitOrder":7,"curCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer);\n\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n  }\n","date":"2018-06-11 22:48:30","endLine":350,"groupId":"14128","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"doNormalUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c9/1350916beaeab19d5ad151f962ea3078ff7ae0.src","preCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer);\n\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":331,"status":"N"}],"commitId":"a346ba0d3c371ec9f314c21fe67afeca64846cf0","commitMessage":"@@@SOLR-5211:  Always populate _root_ (if defined).\nAnd.  small refactor: Clarified how _version_ is transferred from root to children.\n","date":"2018-11-26 10:47:49","modifiedFileCount":"9","status":"M","submitter":"Moshe"},{"authorTime":"2018-06-11 22:48:30","codes":[{"authorDate":"2021-01-08 12:23:20","commitOrder":8,"curCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n      writer.addDocuments(cmd.makeLuceneDocs());\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n  }\n","date":"2021-01-08 12:23:20","endLine":329,"groupId":"102042","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"allowDuplicateUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/37/ef43307ef469ba579c247e75c6237894e08445.src","preCode":"  private void allowDuplicateUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n      Iterable<Document> nestedDocs = cmd.getLuceneDocsIfNested();\n      if (nestedDocs != null) {\n        writer.addDocuments(nestedDocs);\n      } else {\n        writer.addDocument(cmd.getLuceneDocument());\n      }\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"M"},{"authorDate":"2018-06-11 22:48:30","commitOrder":8,"curCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer);\n\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n  }\n","date":"2018-06-11 22:48:30","endLine":350,"groupId":"102042","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"doNormalUpdate","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c9/1350916beaeab19d5ad151f962ea3078ff7ae0.src","preCode":"  private void doNormalUpdate(AddUpdateCommand cmd) throws IOException {\n    RefCounted<IndexWriter> iw = solrCoreState.getIndexWriter(core);\n    try {\n      IndexWriter writer = iw.get();\n\n      updateDocOrDocValues(cmd, writer);\n\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      if (ulog != null) ulog.add(cmd);\n\n    } finally {\n      iw.decref();\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":331,"status":"N"}],"commitId":"4cb3ad4a1c40b4326aec64577a7e60018f7f1a5e","commitMessage":"@@@* SOLR-14923: Nested docs indexing perf & robustness (#2159)\n\n* When the schema defines _root_.  and you want to do atomic/partial updates...\n** _root_ needn't be stored or have docValues any more\n** _nest_path_ field isn't needed for this any more\n** Simplified internal logic\n* Allow (and recommend.  eventually insist) that the _root_ field be passed for atomic/partial updates to child docs.\n** In the absence of _root_.  assume the _route_ param is equivalent to ameliorate back-compat scope.  This is a temporary hack; remove in SOLR-15064.\n** One of the two is required; you'll get an exception if the assumption is false.  THIS IS A BACK-COMPAT CHANGE\n* Ensure that the update log contains the _root_ field if it's defined in the schema; in some cases it wasn't.  It's important for robustness of atomic/partial updates to child docs.  Caveat: the buffer replay scenario is not tested with child docs.\n* Limited the cases when a realtime searcher is re-opened.  It was being applied to any update that included child docs but now only some narrow subset: only for atomic/partial updates.  and when the update log contains an in-place update for the same nest because it's complicated to resolve those log entries.\n* Internal improvements to RealTimeGetComponent to aid clarity & robustness & probably performance...\n** Use SolrDocumentFetcher.solrDoc(docID.  ReturnFields) instead of more manual loading.  Will do more with this in another PR.\n** Clarify when only root doc IDs are expected.\n** Use Resolution enum more.  add PARTIAL.  remove DOC_WITH_CHILDREN; enhance docs.\n** When have ReturnFields.  a Set of \"onlyTheseFields\" becomes redundant.  Add a child doc resolution via a transformer when needed.\n** Clarified where copy-field targets are removed\n* NestPathField should default to single valued.  instead of inheriting the schema default.  which for ancient schemas was multi-valued.\n* AddUpdateCommand.getLuceneDocument(s) methods are very internal; made package visible and refactored a bit for clarity\n* DocumentBuilder: when in-place update.  skip id and _root_ here.  thus also simplifying further logic\n* NestedShardedAtomicUpdateTest no longer extends AbstractFullDistribZkTestBase because it wasn't really leveraging the \"control client\" checking.  and it added too much complexity to debug failures.","date":"2021-01-08 12:23:20","modifiedFileCount":"19","status":"M","submitter":"David Smiley"}]
