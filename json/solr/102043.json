[{"authorTime":"2012-01-26 03:49:26","codes":[{"authorDate":"2012-01-26 03:49:26","commitOrder":1,"curCode":"  public void add(AddUpdateCommand cmd) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd);\n      }\n\n      \r\n      \r\n      LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(cmd.getIndexedId(), ptr);\n      }\n\n      if (debug) {\n        log.debug(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2012-01-26 03:49:26","endLine":254,"groupId":"10107","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d4/f09b9e1c4ccba6978e7d13b1604a3c44958472.src","preCode":"  public void add(AddUpdateCommand cmd) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd);\n      }\n\n      \r\n      \r\n      LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(cmd.getIndexedId(), ptr);\n      }\n\n      if (debug) {\n        log.debug(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"B"},{"authorDate":"2012-01-26 03:49:26","commitOrder":1,"curCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (debug) {\n        log.debug(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2012-01-26 03:49:26","endLine":281,"groupId":"62545","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d4/f09b9e1c4ccba6978e7d13b1604a3c44958472.src","preCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (debug) {\n        log.debug(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"B"}],"commitId":"9fed484fb108e53cd6026133f660b3fd270e2025","commitMessage":"@@@SOLR-2358: merge in solrcloud branch (watch out hudson!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1235888 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-01-26 03:49:26","modifiedFileCount":"88","status":"B","submitter":"Mark Robert Miller"},{"authorTime":"2012-01-27 06:09:08","codes":[{"authorDate":"2012-01-27 06:09:08","commitOrder":2,"curCode":"  public void add(AddUpdateCommand cmd) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd);\n      }\n\n      \r\n      \r\n      LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(cmd.getIndexedId(), ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2012-01-27 06:09:08","endLine":262,"groupId":"10107","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d8/8420916ebec61518ded99a61ebc5c7727f9700.src","preCode":"  public void add(AddUpdateCommand cmd) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd);\n      }\n\n      \r\n      \r\n      LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(cmd.getIndexedId(), ptr);\n      }\n\n      if (debug) {\n        log.debug(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"M"},{"authorDate":"2012-01-27 06:09:08","commitOrder":2,"curCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2012-01-27 06:09:08","endLine":289,"groupId":"62545","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d8/8420916ebec61518ded99a61ebc5c7727f9700.src","preCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (debug) {\n        log.debug(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"}],"commitId":"9db16cd23b8dc04cb8b68f9e2cfb9b6cd720b4e4","commitMessage":"@@@tests: try to track down the tlog-already-exists issue\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1236410 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-01-27 06:09:08","modifiedFileCount":"2","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2012-05-22 08:36:11","codes":[{"authorDate":"2012-05-22 08:36:11","commitOrder":3,"curCode":"  public void add(AddUpdateCommand cmd) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd, operationFlags);\n      }\n\n      \r\n      \r\n      LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(cmd.getIndexedId(), ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2012-05-22 08:36:11","endLine":307,"groupId":"41160","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(AddUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c4/838b614a604d45fcad8198c51fcddada8cebe0.src","preCode":"  public void add(AddUpdateCommand cmd) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd);\n      }\n\n      \r\n      \r\n      LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(cmd.getIndexedId(), ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"M"},{"authorDate":"2012-05-22 08:36:11","commitOrder":3,"curCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2012-05-22 08:36:11","endLine":334,"groupId":"62545","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c4/838b614a604d45fcad8198c51fcddada8cebe0.src","preCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"M"}],"commitId":"964e90adb3384a86130a5f626585677ab6561dd0","commitMessage":"@@@SOLR-3469: prevent false peersync recovery by recording buffering flags in tlog\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1341283 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-05-22 08:36:11","modifiedFileCount":"6","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2012-05-22 08:36:11","codes":[{"authorDate":"2012-07-03 23:05:30","commitOrder":4,"curCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd, operationFlags);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n        \r\n        if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n          map.put(cmd.getIndexedId(), ptr);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n        }\n\n      } else {\n        \r\n\n        map.clear();\n\n        try {\n          RefCounted<SolrIndexSearcher> holder = uhandler.core.openNewSearcher(true, true);\n          holder.decref();\n        } catch (Throwable e) {\n          SolrException.log(log, \"Error opening realtime searcher for deleteByQuery\", e);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" clearCaches=true\");\n        }\n\n      }\n\n    }\n  }\n","date":"2012-07-03 23:05:30","endLine":359,"groupId":"46224","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(AddUpdateCommandcmd@booleanclearCaches)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a3/e5884a6e494cfe47600604f90fced8a42ab63b.src","preCode":"  public void add(AddUpdateCommand cmd) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd, operationFlags);\n      }\n\n      \r\n      \r\n      LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(cmd.getIndexedId(), ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":312,"status":"M"},{"authorDate":"2012-05-22 08:36:11","commitOrder":4,"curCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2012-05-22 08:36:11","endLine":334,"groupId":"62545","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c4/838b614a604d45fcad8198c51fcddada8cebe0.src","preCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"N"}],"commitId":"0f808c6bcdfcb11ce1398fe3c79c9b28c851aa1c","commitMessage":"@@@SOLR-3559: DBQ reorder support\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1356778 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-07-03 23:05:30","modifiedFileCount":"8","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2012-05-22 08:36:11","codes":[{"authorDate":"2012-07-05 02:21:12","commitOrder":5,"curCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd, operationFlags);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n        \r\n        if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n          map.put(cmd.getIndexedId(), ptr);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n        }\n\n      } else {\n        \r\n\n        if (map != null) map.clear();\n        if (prevMap != null) prevMap.clear();\n        if (prevMap2 != null) prevMap2.clear();\n\n        try {\n          RefCounted<SolrIndexSearcher> holder = uhandler.core.openNewSearcher(true, true);\n          holder.decref();\n        } catch (Throwable e) {\n          SolrException.log(log, \"Error opening realtime searcher for deleteByQuery\", e);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" clearCaches=true\");\n        }\n\n      }\n\n    }\n  }\n","date":"2012-07-05 02:21:12","endLine":361,"groupId":"46224","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(AddUpdateCommandcmd@booleanclearCaches)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/74/e71cb5a8002e90e522624ef1be1cfa36daf913.src","preCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd, operationFlags);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n        \r\n        if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n          map.put(cmd.getIndexedId(), ptr);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n        }\n\n      } else {\n        \r\n\n        map.clear();\n\n        try {\n          RefCounted<SolrIndexSearcher> holder = uhandler.core.openNewSearcher(true, true);\n          holder.decref();\n        } catch (Throwable e) {\n          SolrException.log(log, \"Error opening realtime searcher for deleteByQuery\", e);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" clearCaches=true\");\n        }\n\n      }\n\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":312,"status":"M"},{"authorDate":"2012-05-22 08:36:11","commitOrder":5,"curCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2012-05-22 08:36:11","endLine":334,"groupId":"62545","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c4/838b614a604d45fcad8198c51fcddada8cebe0.src","preCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"N"}],"commitId":"b1b9c913df2209ee2a37cc999ba805af05cacc67","commitMessage":"@@@SOLR-3559: clear all tlog maps else an RTG lookup could find the udpate during a concurrent commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1357359 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-07-05 02:21:12","modifiedFileCount":"2","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2012-05-22 08:36:11","codes":[{"authorDate":"2014-01-14 01:26:38","commitOrder":6,"curCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd, operationFlags);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n        \r\n        if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n          map.put(cmd.getIndexedId(), ptr);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n        }\n\n      } else {\n        \r\n\n        if (map != null) map.clear();\n        if (prevMap != null) prevMap.clear();\n        if (prevMap2 != null) prevMap2.clear();\n\n        try {\n          RefCounted<SolrIndexSearcher> holder = uhandler.core.openNewSearcher(true, true);\n          holder.decref();\n        } catch (Exception e) {\n          SolrException.log(log, \"Error opening realtime searcher for deleteByQuery\", e);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" clearCaches=true\");\n        }\n\n      }\n\n    }\n  }\n","date":"2014-01-14 01:26:38","endLine":435,"groupId":"46224","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(AddUpdateCommandcmd@booleanclearCaches)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/73/53bfa3e7494a972ab3afcdae2e9794940c82c4.src","preCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd, operationFlags);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n        \r\n        if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n          map.put(cmd.getIndexedId(), ptr);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n        }\n\n      } else {\n        \r\n\n        if (map != null) map.clear();\n        if (prevMap != null) prevMap.clear();\n        if (prevMap2 != null) prevMap2.clear();\n\n        try {\n          RefCounted<SolrIndexSearcher> holder = uhandler.core.openNewSearcher(true, true);\n          holder.decref();\n        } catch (Throwable e) {\n          SolrException.log(log, \"Error opening realtime searcher for deleteByQuery\", e);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" clearCaches=true\");\n        }\n\n      }\n\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"M"},{"authorDate":"2012-05-22 08:36:11","commitOrder":6,"curCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2012-05-22 08:36:11","endLine":334,"groupId":"62545","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c4/838b614a604d45fcad8198c51fcddada8cebe0.src","preCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"N"}],"commitId":"cb23c8ba3c29450cd4837e3a284c370647fe4e5d","commitMessage":"@@@SOLR-4992: Solr eats OutOfMemoryError exceptions in many cases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1557778 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-01-14 01:26:38","modifiedFileCount":"49","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2012-05-22 08:36:11","codes":[{"authorDate":"2015-12-24 07:16:13","commitOrder":7,"curCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd, operationFlags);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n        \r\n        if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n          map.put(cmd.getIndexedId(), ptr);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n        }\n\n      } else {\n        openRealtimeSearcher();\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" clearCaches=true\");\n        }\n      }\n\n    }\n  }\n","date":"2015-12-24 07:16:13","endLine":454,"groupId":"46224","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(AddUpdateCommandcmd@booleanclearCaches)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/32/d2d2b244cb8f87aa5f66887c986c2428fe6394.src","preCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd, operationFlags);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n        \r\n        if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n          map.put(cmd.getIndexedId(), ptr);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n        }\n\n      } else {\n        \r\n\n        if (map != null) map.clear();\n        if (prevMap != null) prevMap.clear();\n        if (prevMap2 != null) prevMap2.clear();\n\n        try {\n          RefCounted<SolrIndexSearcher> holder = uhandler.core.openNewSearcher(true, true);\n          holder.decref();\n        } catch (Exception e) {\n          SolrException.log(log, \"Error opening realtime searcher for deleteByQuery\", e);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" clearCaches=true\");\n        }\n\n      }\n\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":418,"status":"M"},{"authorDate":"2012-05-22 08:36:11","commitOrder":7,"curCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2012-05-22 08:36:11","endLine":334,"groupId":"62545","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c4/838b614a604d45fcad8198c51fcddada8cebe0.src","preCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"N"}],"commitId":"c5e2b3508e829f75e75667595e884a143a294824","commitMessage":"@@@SOLR-8436: filters for realtime-get\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1721585 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-12-24 07:16:13","modifiedFileCount":"3","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2012-05-22 08:36:11","codes":[{"authorDate":"2017-01-26 09:23:13","commitOrder":8,"curCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      long prevPointer = getPrevPointerForUpdate(cmd);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd, prevPointer, operationFlags);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion(), prevPointer);\n\n        \r\n        if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n          map.put(cmd.getIndexedId(), ptr);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n        }\n\n      } else {\n        openRealtimeSearcher();\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" clearCaches=true\");\n        }\n      }\n\n    }\n  }\n","date":"2017-01-26 09:23:13","endLine":554,"groupId":"58166","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(AddUpdateCommandcmd@booleanclearCaches)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/aa/a6b6a80e9230f082479779a583de1b3d6018af.src","preCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd, operationFlags);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion());\n\n        \r\n        if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n          map.put(cmd.getIndexedId(), ptr);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n        }\n\n      } else {\n        openRealtimeSearcher();\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" clearCaches=true\");\n        }\n      }\n\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":516,"status":"M"},{"authorDate":"2012-05-22 08:36:11","commitOrder":8,"curCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2012-05-22 08:36:11","endLine":334,"groupId":"62545","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c4/838b614a604d45fcad8198c51fcddada8cebe0.src","preCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"N"}],"commitId":"5375410807aecf3cc67f82ca1e9ee591f39d0ac7","commitMessage":"@@@SOLR-5944: In-place updates of Numeric DocValues\n","date":"2017-01-26 09:23:13","modifiedFileCount":"22","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2018-06-04 12:32:31","codes":[{"authorDate":"2018-06-04 12:32:31","commitOrder":9,"curCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.write(cmd);\n        return;\n      }\n\n      long pos = -1;\n      long prevPointer = getPrevPointerForUpdate(cmd);\n\n      \r\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.write(cmd, prevPointer);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion(), prevPointer);\n\n        map.put(cmd.getIndexedId(), ptr);\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n        }\n\n      } else {\n        openRealtimeSearcher();\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" clearCaches=true\");\n        }\n      }\n\n    }\n  }\n","date":"2018-06-04 12:32:31","endLine":593,"groupId":"58166","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(AddUpdateCommandcmd@booleanclearCaches)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1b/da23fc0389c397324effa661b0793b29069db1.src","preCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      long pos = -1;\n\n      long prevPointer = getPrevPointerForUpdate(cmd);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.write(cmd, prevPointer, operationFlags);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion(), prevPointer);\n\n        \r\n        if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n          map.put(cmd.getIndexedId(), ptr);\n        }\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n        }\n\n      } else {\n        openRealtimeSearcher();\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" clearCaches=true\");\n        }\n      }\n\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":553,"status":"M"},{"authorDate":"2018-06-04 12:32:31","commitOrder":9,"curCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.writeDelete(cmd);\n        return;\n      }\n\n      long pos = -1;\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n      map.put(br, ptr);\n      oldDeletes.put(br, ptr);\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2018-06-04 12:32:31","endLine":646,"groupId":"62051","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1b/da23fc0389c397324effa661b0793b29069db1.src","preCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      long pos = -1;\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.REPLAY) == 0) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd, operationFlags);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n\n      \r\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) == 0) {\n        map.put(br, ptr);\n\n        oldDeletes.put(br, ptr);\n      }\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":622,"status":"M"}],"commitId":"ab316bbc91c273b13c851a38ad5d14ef64ab3eec","commitMessage":"@@@SOLR-9922: Write buffering updates to another tlog\n","date":"2018-06-04 12:32:31","modifiedFileCount":"11","status":"M","submitter":"Cao Manh Dat"},{"authorTime":"2020-04-21 09:08:15","codes":[{"authorDate":"2020-04-21 09:08:15","commitOrder":10,"curCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.write(cmd);\n        return;\n      }\n\n      long pos = -1;\n      long prevPointer = getPrevPointerForUpdate(cmd);\n\n      \r\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.write(cmd, prevPointer);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion(), prevPointer);\n\n        map.put(cmd.getIndexedId(), ptr);\n\n        if (trace) {\n          log.trace(\"TLOG: added id {} to {} {} map={}\", cmd.getPrintableId(), tlog, ptr, System.identityHashCode(map));\n        }\n\n      } else {\n        openRealtimeSearcher();\n        if (log.isTraceEnabled()) {\n          log.trace(\"TLOG: added id {} to {} clearCaches=true\", cmd.getPrintableId(), tlog);\n        }\n      }\n\n    }\n  }\n","date":"2020-04-21 09:08:15","endLine":598,"groupId":"58166","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(AddUpdateCommandcmd@booleanclearCaches)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7a/6876daf49ec16fa890035198aed8c7040bc7dd.src","preCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.write(cmd);\n        return;\n      }\n\n      long pos = -1;\n      long prevPointer = getPrevPointerForUpdate(cmd);\n\n      \r\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.write(cmd, prevPointer);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion(), prevPointer);\n\n        map.put(cmd.getIndexedId(), ptr);\n\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n        }\n\n      } else {\n        openRealtimeSearcher();\n        if (trace) {\n          log.trace(\"TLOG: added id \" + cmd.getPrintableId() + \" to \" + tlog + \" clearCaches=true\");\n        }\n      }\n\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":558,"status":"M"},{"authorDate":"2020-04-21 09:08:15","commitOrder":10,"curCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.writeDelete(cmd);\n        return;\n      }\n\n      long pos = -1;\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n      map.put(br, ptr);\n      oldDeletes.put(br, ptr);\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id {} to {} {} map={}\", cmd.id, tlog, ptr, System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2020-04-21 09:08:15","endLine":651,"groupId":"62051","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7a/6876daf49ec16fa890035198aed8c7040bc7dd.src","preCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.writeDelete(cmd);\n        return;\n      }\n\n      long pos = -1;\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n      map.put(br, ptr);\n      oldDeletes.put(br, ptr);\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id \" + cmd.id + \" to \" + tlog + \" \" + ptr + \" map=\" + System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":627,"status":"M"}],"commitId":"c94770c2b9c00ccdc2d617d595d62f85a332dc0c","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-04-21 09:08:15","modifiedFileCount":"38","status":"M","submitter":"Erick Erickson"},{"authorTime":"2020-04-21 09:08:15","codes":[{"authorDate":"2021-01-08 12:23:20","commitOrder":11,"curCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    if (usableForChildDocs && cmd.useRouteAsRoot != null && cmd.solrDoc.getField(IndexSchema.ROOT_FIELD_NAME) == null) {\n      cmd.solrDoc.setField(IndexSchema.ROOT_FIELD_NAME, cmd.getIndexedIdStr());\n    }\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.write(cmd);\n        return;\n      }\n\n      long pos = -1;\n      long prevPointer = getPrevPointerForUpdate(cmd);\n\n      \r\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.write(cmd, prevPointer);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion(), prevPointer);\n\n        map.put(cmd.getIndexedId(), ptr);\n\n        if (trace) {\n          log.trace(\"TLOG: added id {} to {} {} map={}\", cmd.getPrintableId(), tlog, ptr, System.identityHashCode(map));\n        }\n\n      } else {\n        openRealtimeSearcher();\n        if (log.isTraceEnabled()) {\n          log.trace(\"TLOG: added id {} to {} clearCaches=true\", cmd.getPrintableId(), tlog);\n        }\n      }\n\n    }\n  }\n","date":"2021-01-08 12:23:20","endLine":610,"groupId":"102043","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(AddUpdateCommandcmd@booleanclearCaches)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2b/021f386ff9a5cf333f446a05411b9811fa670f.src","preCode":"  public void add(AddUpdateCommand cmd, boolean clearCaches) {\n    \r\n    \r\n    \r\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.write(cmd);\n        return;\n      }\n\n      long pos = -1;\n      long prevPointer = getPrevPointerForUpdate(cmd);\n\n      \r\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.write(cmd, prevPointer);\n      }\n\n      if (!clearCaches) {\n        \r\n        \r\n        LogPtr ptr = new LogPtr(pos, cmd.getVersion(), prevPointer);\n\n        map.put(cmd.getIndexedId(), ptr);\n\n        if (trace) {\n          log.trace(\"TLOG: added id {} to {} {} map={}\", cmd.getPrintableId(), tlog, ptr, System.identityHashCode(map));\n        }\n\n      } else {\n        openRealtimeSearcher();\n        if (log.isTraceEnabled()) {\n          log.trace(\"TLOG: added id {} to {} clearCaches=true\", cmd.getPrintableId(), tlog);\n        }\n      }\n\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":563,"status":"M"},{"authorDate":"2020-04-21 09:08:15","commitOrder":11,"curCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.writeDelete(cmd);\n        return;\n      }\n\n      long pos = -1;\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n      map.put(br, ptr);\n      oldDeletes.put(br, ptr);\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id {} to {} {} map={}\", cmd.id, tlog, ptr, System.identityHashCode(map));\n      }\n    }\n  }\n","date":"2020-04-21 09:08:15","endLine":651,"groupId":"102043","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"delete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7a/6876daf49ec16fa890035198aed8c7040bc7dd.src","preCode":"  public void delete(DeleteUpdateCommand cmd) {\n    BytesRef br = cmd.getIndexedId();\n\n    synchronized (this) {\n      if ((cmd.getFlags() & UpdateCommand.BUFFERING) != 0) {\n        ensureBufferTlog();\n        bufferTlog.writeDelete(cmd);\n        return;\n      }\n\n      long pos = -1;\n      if (!updateFromOldTlogs(cmd)) {\n        ensureLog();\n        pos = tlog.writeDelete(cmd);\n      }\n\n      LogPtr ptr = new LogPtr(pos, cmd.version);\n      map.put(br, ptr);\n      oldDeletes.put(br, ptr);\n\n      if (trace) {\n        log.trace(\"TLOG: added delete for id {} to {} {} map={}\", cmd.id, tlog, ptr, System.identityHashCode(map));\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/UpdateLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":627,"status":"N"}],"commitId":"4cb3ad4a1c40b4326aec64577a7e60018f7f1a5e","commitMessage":"@@@* SOLR-14923: Nested docs indexing perf & robustness (#2159)\n\n* When the schema defines _root_.  and you want to do atomic/partial updates...\n** _root_ needn't be stored or have docValues any more\n** _nest_path_ field isn't needed for this any more\n** Simplified internal logic\n* Allow (and recommend.  eventually insist) that the _root_ field be passed for atomic/partial updates to child docs.\n** In the absence of _root_.  assume the _route_ param is equivalent to ameliorate back-compat scope.  This is a temporary hack; remove in SOLR-15064.\n** One of the two is required; you'll get an exception if the assumption is false.  THIS IS A BACK-COMPAT CHANGE\n* Ensure that the update log contains the _root_ field if it's defined in the schema; in some cases it wasn't.  It's important for robustness of atomic/partial updates to child docs.  Caveat: the buffer replay scenario is not tested with child docs.\n* Limited the cases when a realtime searcher is re-opened.  It was being applied to any update that included child docs but now only some narrow subset: only for atomic/partial updates.  and when the update log contains an in-place update for the same nest because it's complicated to resolve those log entries.\n* Internal improvements to RealTimeGetComponent to aid clarity & robustness & probably performance...\n** Use SolrDocumentFetcher.solrDoc(docID.  ReturnFields) instead of more manual loading.  Will do more with this in another PR.\n** Clarify when only root doc IDs are expected.\n** Use Resolution enum more.  add PARTIAL.  remove DOC_WITH_CHILDREN; enhance docs.\n** When have ReturnFields.  a Set of \"onlyTheseFields\" becomes redundant.  Add a child doc resolution via a transformer when needed.\n** Clarified where copy-field targets are removed\n* NestPathField should default to single valued.  instead of inheriting the schema default.  which for ancient schemas was multi-valued.\n* AddUpdateCommand.getLuceneDocument(s) methods are very internal; made package visible and refactored a bit for clarity\n* DocumentBuilder: when in-place update.  skip id and _root_ here.  thus also simplifying further logic\n* NestedShardedAtomicUpdateTest no longer extends AbstractFullDistribZkTestBase because it wasn't really leveraging the \"control client\" checking.  and it added too much complexity to debug failures.","date":"2021-01-08 12:23:20","modifiedFileCount":"19","status":"M","submitter":"David Smiley"}]
