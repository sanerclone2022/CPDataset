[{"authorTime":"2015-09-13 02:51:36","codes":[{"authorDate":"2015-09-13 02:51:36","commitOrder":1,"curCode":"  public DocSet build(FixedBitSet filter) {\n    if (bitSet != null) {\n      if (filter != null) {\n        bitSet.and(filter);\n      }\n      return new BitDocSet(bitSet);\n      \r\n    } else {\n      LSBRadixSorter sorter = new LSBRadixSorter();\n      sorter.sort(buffer, 0, pos);\n      final int l = dedup(buffer, pos, filter);\n      assert l <= pos;\n      return new SortedIntDocSet(buffer, l);  \r\n    }\n  }\n","date":"2015-09-13 02:51:36","endLine":202,"groupId":"30509","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"(FixedBitSetfilter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ca/8969c48d14999c7e26dee850168ff77fa9b4ff.src","preCode":"  public DocSet build(FixedBitSet filter) {\n    if (bitSet != null) {\n      if (filter != null) {\n        bitSet.and(filter);\n      }\n      return new BitDocSet(bitSet);\n      \r\n    } else {\n      LSBRadixSorter sorter = new LSBRadixSorter();\n      sorter.sort(buffer, 0, pos);\n      final int l = dedup(buffer, pos, filter);\n      assert l <= pos;\n      return new SortedIntDocSet(buffer, l);  \r\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/DocSetBuilder.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"B"},{"authorDate":"2015-09-13 02:51:36","commitOrder":1,"curCode":"  public DocSet buildUniqueInOrder(FixedBitSet filter) {\n    if (bitSet != null) {\n      if (filter != null) {\n        bitSet.and(filter);\n      }\n      return new BitDocSet(bitSet);\n    } else {\n      \r\n      int l = pos;\n      if (filter != null) {\n        l = dedup(buffer, pos, filter);\n      }\n      return new SortedIntDocSet(buffer, l);  \r\n    }\n  }\n","date":"2015-09-13 02:51:36","endLine":219,"groupId":"30510","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildUniqueInOrder","params":"(FixedBitSetfilter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ca/8969c48d14999c7e26dee850168ff77fa9b4ff.src","preCode":"  public DocSet buildUniqueInOrder(FixedBitSet filter) {\n    if (bitSet != null) {\n      if (filter != null) {\n        bitSet.and(filter);\n      }\n      return new BitDocSet(bitSet);\n    } else {\n      \r\n      int l = pos;\n      if (filter != null) {\n        l = dedup(buffer, pos, filter);\n      }\n      return new SortedIntDocSet(buffer, l);  \r\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/DocSetBuilder.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"B"}],"commitId":"996a3fb117f8ee275ac16cbc789eb65eeb1898ed","commitMessage":"@@@SOLR-8037: speed up term range queries.  use filter cache for embedded ranges\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1702661 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-09-13 02:51:36","modifiedFileCount":"6","status":"B","submitter":"Yonik Seeley"},{"authorTime":"2015-09-13 02:51:36","codes":[{"authorDate":"2016-04-29 00:20:41","commitOrder":2,"curCode":"  public DocSet build(FixedBitSet filter) {\n    if (bitSet != null) {\n      if (filter != null) {\n        bitSet.and(filter);\n      }\n      return new BitDocSet(bitSet);\n      \r\n    } else {\n      LSBRadixSorter sorter = new LSBRadixSorter();\n      sorter.sort(PackedInts.bitsRequired(maxDoc - 1), buffer, pos);\n      final int l = dedup(buffer, pos, filter);\n      assert l <= pos;\n      return new SortedIntDocSet(buffer, l);  \r\n    }\n  }\n","date":"2016-04-29 00:20:41","endLine":195,"groupId":"102281","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"build","params":"(FixedBitSetfilter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bd/180c7a8ea596b8a0230d91b2f8ddfa23ed0d2b.src","preCode":"  public DocSet build(FixedBitSet filter) {\n    if (bitSet != null) {\n      if (filter != null) {\n        bitSet.and(filter);\n      }\n      return new BitDocSet(bitSet);\n      \r\n    } else {\n      LSBRadixSorter sorter = new LSBRadixSorter();\n      sorter.sort(buffer, 0, pos);\n      final int l = dedup(buffer, pos, filter);\n      assert l <= pos;\n      return new SortedIntDocSet(buffer, l);  \r\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/DocSetBuilder.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"},{"authorDate":"2015-09-13 02:51:36","commitOrder":2,"curCode":"  public DocSet buildUniqueInOrder(FixedBitSet filter) {\n    if (bitSet != null) {\n      if (filter != null) {\n        bitSet.and(filter);\n      }\n      return new BitDocSet(bitSet);\n    } else {\n      \r\n      int l = pos;\n      if (filter != null) {\n        l = dedup(buffer, pos, filter);\n      }\n      return new SortedIntDocSet(buffer, l);  \r\n    }\n  }\n","date":"2015-09-13 02:51:36","endLine":219,"groupId":"102281","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildUniqueInOrder","params":"(FixedBitSetfilter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ca/8969c48d14999c7e26dee850168ff77fa9b4ff.src","preCode":"  public DocSet buildUniqueInOrder(FixedBitSet filter) {\n    if (bitSet != null) {\n      if (filter != null) {\n        bitSet.and(filter);\n      }\n      return new BitDocSet(bitSet);\n    } else {\n      \r\n      int l = pos;\n      if (filter != null) {\n        l = dedup(buffer, pos, filter);\n      }\n      return new SortedIntDocSet(buffer, l);  \r\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/DocSetBuilder.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"N"}],"commitId":"ef45d4b2e1f9c967b62340acb027f50888a00ba2","commitMessage":"@@@LUCENE-7261: Speed up LSBRadixSorter.\n","date":"2016-04-29 00:20:41","modifiedFileCount":"4","status":"M","submitter":"Adrien Grand"}]
