[{"authorTime":"2013-01-31 00:29:05","codes":[{"authorDate":"2012-10-27 02:38:59","commitOrder":4,"curCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2012-10-27 02:38:59","endLine":656,"groupId":"20264","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/613ee5616414731325a0cca5906997af872914.src","preCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"NB"},{"authorDate":"2013-01-31 00:29:05","commitOrder":4,"curCode":"  private void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    String factory = System.getProperty(\"solr.directoryFactory\");\n    System.out.println(\"factory:\" + factory);\n    useFactory(null);\n    try {\n    \n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    \r\n    \r\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    \r\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2013-01-31 00:29:05","endLine":735,"groupId":"20264","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8e/71a3f85da967af3a7350c50074d8365fd41474.src","preCode":"  private void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    String factory = System.getProperty(\"solr.directoryFactory\");\n    System.out.println(\"factory:\" + factory);\n    useFactory(null);\n    try {\n    \n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    \r\n    \r\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    \r\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":662,"status":"B"}],"commitId":"dd9ffb9bc5e08ac0904d202505f03c43777de117","commitMessage":"@@@SOLR-3911: Replicate after startup option would not replicate until the IndexWriter was lazily opened.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1440508 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-01-31 00:29:05","modifiedFileCount":"3","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2013-02-23 00:58:42","codes":[{"authorDate":"2012-10-27 02:38:59","commitOrder":5,"curCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2012-10-27 02:38:59","endLine":656,"groupId":"20264","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/613ee5616414731325a0cca5906997af872914.src","preCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"N"},{"authorDate":"2013-02-23 00:58:42","commitOrder":5,"curCode":"  private void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n    \n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    \r\n    \r\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    \r\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2013-02-23 00:58:42","endLine":824,"groupId":"20264","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/90469375ea15f059eb4b08c5558b131e932dd0.src","preCode":"  private void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    String factory = System.getProperty(\"solr.directoryFactory\");\n    System.out.println(\"factory:\" + factory);\n    useFactory(null);\n    try {\n    \n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    \r\n    \r\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    \r\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":753,"status":"M"}],"commitId":"302c3ed37e80205cff89e50c06ba5e80bf033857","commitMessage":"@@@SOLR-4471: Replication occurs even when a slave is already up to date.\n  \nSOLR-4484: ReplicationHandler#loadReplicationProperties still uses Files rather than the Directory to try and read the replication properties files.\n\nSOLR-4488: Return slave replication details for a master if the master has also acted like a slave.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1449115 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-02-23 00:58:42","modifiedFileCount":"5","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2013-02-23 08:32:12","codes":[{"authorDate":"2013-02-23 08:32:12","commitOrder":6,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","date":"2013-02-23 08:32:12","endLine":743,"groupId":"20264","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/4c5187b45e1ffba85d25e8ba760eca8e9df3a7.src","preCode":"  private void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":683,"status":"M"},{"authorDate":"2013-02-23 08:32:12","commitOrder":6,"curCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n    \n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    \r\n    \r\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    \r\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2013-02-23 08:32:12","endLine":817,"groupId":"20264","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/4c5187b45e1ffba85d25e8ba760eca8e9df3a7.src","preCode":"  private void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n    \n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    \r\n    \r\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    \r\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":746,"status":"M"}],"commitId":"3adabbd43aa83d27e317d81f98a690e3b43a49b1","commitMessage":"@@@SOLR-4471: Fix up test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1449258 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-02-23 08:32:12","modifiedFileCount":"1","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2013-02-24 23:34:42","codes":[{"authorDate":"2013-02-24 23:34:42","commitOrder":7,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2013-02-24 23:34:42","endLine":725,"groupId":"20264","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/85/1d47bcd5ce72ad922e3be6fd6cfc0b7ccabe33.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":679,"status":"M"},{"authorDate":"2013-02-24 23:34:42","commitOrder":7,"curCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient = createNewSolrServer(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      \r\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createJetty(slave);\n      slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n      \n      \r\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2013-02-24 23:34:42","endLine":788,"groupId":"20264","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/85/1d47bcd5ce72ad922e3be6fd6cfc0b7ccabe33.src","preCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n    \n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    \r\n    \r\n    masterJetty.stop();\n    masterJetty.start(true);\n \n    \r\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    \r\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master.xml\", \"solrconfig.xml\");\n    masterJetty.stop();\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":728,"status":"M"}],"commitId":"382e279c1b6503c9ee81ab12823769478d50bd94","commitMessage":"@@@fix up test\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1449496 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-02-24 23:34:42","modifiedFileCount":"1","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2014-03-20 02:25:00","codes":[{"authorDate":"2014-03-20 02:25:00","commitOrder":8,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2014-03-20 02:25:00","endLine":1083,"groupId":"20264","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6c/87ee3e44a0f557256577de6c981d4d7c268f2f.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1035,"status":"M"},{"authorDate":"2014-03-20 02:25:00","commitOrder":8,"curCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.shutdown();\n      masterClient = createNewSolrServer(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      \r\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createJetty(slave);\n      slaveClient.shutdown();\n      slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n      \n      \r\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2014-03-20 02:25:00","endLine":1148,"groupId":"20264","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6c/87ee3e44a0f557256577de6c981d4d7c268f2f.src","preCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient = createNewSolrServer(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      \r\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createJetty(slave);\n      slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n      \n      \r\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1086,"status":"M"}],"commitId":"1109c1275b84a5e490556d6fb687b1216870f358","commitMessage":"@@@SOLR-5883: Many tests do not shutdown SolrServer. \n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1579336 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-20 02:25:00","modifiedFileCount":"22","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2014-12-31 22:05:48","codes":[{"authorDate":"2014-12-31 22:05:48","commitOrder":9,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2014-12-31 22:05:48","endLine":1057,"groupId":"20264","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7d/4548bf9552827b374d38a1fc1ab9d0a199fb07.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrServer(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1009,"status":"M"},{"authorDate":"2014-12-31 22:05:48","commitOrder":9,"curCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.shutdown();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      \r\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createJetty(slave);\n      slaveClient.shutdown();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      \r\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2014-12-31 22:05:48","endLine":1122,"groupId":"20264","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7d/4548bf9552827b374d38a1fc1ab9d0a199fb07.src","preCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.shutdown();\n      masterClient = createNewSolrServer(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      \r\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createJetty(slave);\n      slaveClient.shutdown();\n      slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n      \n      \r\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1060,"status":"M"}],"commitId":"ef809a0f10e78aec3f97c878f90ff74673f98745","commitMessage":"@@@SOLR-6895: Deprecate SolrServer classes and replace with SolrClient\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1648697 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-31 22:05:48","modifiedFileCount":"152","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-01-28 19:55:57","codes":[{"authorDate":"2015-01-28 19:55:57","commitOrder":10,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2015-01-28 19:55:57","endLine":1030,"groupId":"20264","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/a96c24f9851f774d5b1ff2f9f5a3e44fc4795b.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.shutdown();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":982,"status":"M"},{"authorDate":"2015-01-28 19:55:57","commitOrder":10,"curCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      \r\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      \r\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2015-01-28 19:55:57","endLine":1095,"groupId":"20264","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/a96c24f9851f774d5b1ff2f9f5a3e44fc4795b.src","preCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.shutdown();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      \r\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createJetty(slave);\n      slaveClient.shutdown();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      \r\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1033,"status":"M"}],"commitId":"3018576b67648f3f7f827103a881ef3477c70a18","commitMessage":"@@@SOLR-6954: SolrClient implements Closeable\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1655263 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-28 19:55:57","modifiedFileCount":"94","status":"M","submitter":"Alan Woodward"},{"authorTime":"2015-03-05 17:54:06","codes":[{"authorDate":"2015-01-28 19:55:57","commitOrder":11,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2015-01-28 19:55:57","endLine":1030,"groupId":"20264","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/a96c24f9851f774d5b1ff2f9f5a3e44fc4795b.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":982,"status":"N"},{"authorDate":"2015-03-05 17:54:06","commitOrder":11,"curCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start();\n      \n      \r\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      \r\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2015-03-05 17:54:06","endLine":1084,"groupId":"29212","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c0/b80c03b386efaae752eea9fb3eca066582c2d2.src","preCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start(true);\n      \n      \r\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      \r\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1022,"status":"M"}],"commitId":"739e9b489d9b44ed25e85f29562bcbcf61d41498","commitMessage":"@@@SOLR-7179: Stop using sysprops to configure test jettys\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1664292 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-03-05 17:54:06","modifiedFileCount":"39","status":"M","submitter":"Alan Woodward"},{"authorTime":"2018-11-30 01:58:18","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":12,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2018-11-30 01:58:51","endLine":1177,"groupId":"20264","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/d2c04d5f155c6adda1b8d55086b5dd7a6a6a8f.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1129,"status":"M"},{"authorDate":"2018-11-30 01:58:18","commitOrder":12,"curCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createAndStartJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start();\n      \n      \r\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createAndStartJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      \r\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2018-11-30 01:58:51","endLine":1242,"groupId":"29212","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/d2c04d5f155c6adda1b8d55086b5dd7a6a6a8f.src","preCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start();\n      \n      \r\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      \r\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1180,"status":"M"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2020-06-18 05:51:41","commitOrder":13,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2020-06-18 05:51:41","endLine":1245,"groupId":"33283","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/4df5d26ed870cbadfa1bb5a3f2b1ba8b3df8dc.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1195,"status":"M"},{"authorDate":"2020-06-18 05:51:41","commitOrder":13,"curCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createAndStartJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start();\n      \n      \r\n      \n      @SuppressWarnings({\"rawtypes\"})\n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createAndStartJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      \r\n      @SuppressWarnings({\"rawtypes\"})\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2020-06-18 05:51:41","endLine":1312,"groupId":"22739","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/4df5d26ed870cbadfa1bb5a3f2b1ba8b3df8dc.src","preCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createAndStartJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start();\n      \n      \r\n      \n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createAndStartJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      \r\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1248,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"},{"authorTime":"2020-08-06 05:52:48","codes":[{"authorDate":"2020-08-06 05:52:48","commitOrder":14,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    followerJetty.stop();\n\n    nDocs--;\n    leaderClient.deleteByQuery(\"*:*\");\n\n    leaderClient.commit();\n\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(nDocs, leaderQueryResult.getNumFound());\n    \n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(nDocs, followerQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2020-08-06 05:52:48","endLine":1290,"groupId":"33283","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/38551811a59370825cce40fc406a1e85a37f6f.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    slaveJetty.stop();\n\n    nDocs--;\n    masterClient.deleteByQuery(\"*:*\");\n\n    masterClient.commit();\n\n\n\n    \r\n    master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n                          \"solrconfig.xml\");\n\n    masterJetty.stop();\n\n    masterJetty = createAndStartJetty(master);\n    masterClient.close();\n    masterClient = createNewSolrClient(masterJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n    \n\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1240,"status":"M"},{"authorDate":"2020-08-06 05:52:48","commitOrder":14,"curCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      followerJetty.stop();\n      \n      nDocs--;\n      leaderClient.deleteByQuery(\"*:*\");\n      \n      leaderClient.commit();\n      \n      \r\n      leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n          \"solrconfig.xml\");\n      \n      leaderJetty.stop();\n      \n      leaderJetty = createAndStartJetty(leader);\n      leaderClient.close();\n      leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      leaderClient.commit();\n      \n      \r\n      \r\n      \r\n      leaderJetty.stop();\n      leaderJetty.start();\n      \n      \r\n      \n      @SuppressWarnings({\"rawtypes\"})\n      NamedList leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n      SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, leaderQueryResult.getNumFound());\n      \n      follower.setTestPort(leaderJetty.getLocalPort());\n      follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      followerJetty = createAndStartJetty(follower);\n      followerClient.close();\n      followerClient = createNewSolrClient(followerJetty.getLocalPort());\n      \n      \r\n      @SuppressWarnings({\"rawtypes\"})\n      NamedList followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n      SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, followerQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult,\n          followerQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2020-08-06 05:52:48","endLine":1357,"groupId":"22739","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/38551811a59370825cce40fc406a1e85a37f6f.src","preCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      slaveJetty.stop();\n      \n      nDocs--;\n      masterClient.deleteByQuery(\"*:*\");\n      \n      masterClient.commit();\n      \n      \r\n      master.copyConfigFile(CONF_DIR + \"solrconfig-master2.xml\",\n          \"solrconfig.xml\");\n      \n      masterJetty.stop();\n      \n      masterJetty = createAndStartJetty(master);\n      masterClient.close();\n      masterClient = createNewSolrClient(masterJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      \r\n      \r\n      \r\n      masterJetty.stop();\n      masterJetty.start();\n      \n      \r\n      \n      @SuppressWarnings({\"rawtypes\"})\n      NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, masterQueryResult.getNumFound());\n      \n      slave.setTestPort(masterJetty.getLocalPort());\n      slave.copyConfigFile(slave.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      slaveJetty = createAndStartJetty(slave);\n      slaveClient.close();\n      slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n      \n      \r\n      @SuppressWarnings({\"rawtypes\"})\n      NamedList slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, slaveQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,\n          slaveQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1293,"status":"M"}],"commitId":"7110118ad4f1a68f39a1db1caab374594098243e","commitMessage":"@@@SOLR-14702: Remove oppressive language (part1) (#1711)\n\nReplace references to \"master\" and \"slave\" with \"leader\" and \"follower\"","date":"2020-08-06 05:52:48","modifiedFileCount":"28","status":"M","submitter":"Marcus"},{"authorTime":"2021-06-09 02:08:25","codes":[{"authorDate":"2021-06-09 02:08:25","commitOrder":15,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    followerJetty.stop();\n\n    nDocs--;\n    leaderClient.deleteByQuery(\"*:*\");\n\n    leaderClient.commit();\n\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n    \n    NamedList<Object> leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(nDocs, leaderQueryResult.getNumFound());\n    \n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n\n    \r\n    NamedList<Object> followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(nDocs, followerQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2021-06-09 02:08:25","endLine":1297,"groupId":"14266","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/ca65f1975cefdc3075a1e1f76cbb5a0103bf23.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    followerJetty.stop();\n\n    nDocs--;\n    leaderClient.deleteByQuery(\"*:*\");\n\n    leaderClient.commit();\n\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n    \n    @SuppressWarnings({\"rawtypes\"})\n    NamedList leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(nDocs, leaderQueryResult.getNumFound());\n    \n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n\n    \r\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(nDocs, followerQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1249,"status":"M"},{"authorDate":"2021-06-09 02:08:25","commitOrder":15,"curCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      followerJetty.stop();\n      \n      nDocs--;\n      leaderClient.deleteByQuery(\"*:*\");\n      \n      leaderClient.commit();\n      \n      \r\n      leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n          \"solrconfig.xml\");\n      \n      leaderJetty.stop();\n      \n      leaderJetty = createAndStartJetty(leader);\n      leaderClient.close();\n      leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      leaderClient.commit();\n      \n      \r\n      \r\n      \r\n      leaderJetty.stop();\n      leaderJetty.start();\n      \n      \r\n      \n      NamedList<Object> leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n      SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, leaderQueryResult.getNumFound());\n      \n      follower.setTestPort(leaderJetty.getLocalPort());\n      follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      followerJetty = createAndStartJetty(follower);\n      followerClient.close();\n      followerClient = createNewSolrClient(followerJetty.getLocalPort());\n      \n      \r\n      NamedList<Object> followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n      SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, followerQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult,\n          followerQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2021-06-09 02:08:25","endLine":1362,"groupId":"14266","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/ca65f1975cefdc3075a1e1f76cbb5a0103bf23.src","preCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      followerJetty.stop();\n      \n      nDocs--;\n      leaderClient.deleteByQuery(\"*:*\");\n      \n      leaderClient.commit();\n      \n      \r\n      leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n          \"solrconfig.xml\");\n      \n      leaderJetty.stop();\n      \n      leaderJetty = createAndStartJetty(leader);\n      leaderClient.close();\n      leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      leaderClient.commit();\n      \n      \r\n      \r\n      \r\n      leaderJetty.stop();\n      leaderJetty.start();\n      \n      \r\n      \n      @SuppressWarnings({\"rawtypes\"})\n      NamedList leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n      SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, leaderQueryResult.getNumFound());\n      \n      follower.setTestPort(leaderJetty.getLocalPort());\n      follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      followerJetty = createAndStartJetty(follower);\n      followerClient.close();\n      followerClient = createNewSolrClient(followerJetty.getLocalPort());\n      \n      \r\n      @SuppressWarnings({\"rawtypes\"})\n      NamedList followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n      SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, followerQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult,\n          followerQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1300,"status":"M"}],"commitId":"916b7a04f65490179a73e2c1620bab1df65e4bb8","commitMessage":"@@@SOLR-15385 RawTypes Part II.  Searching for NamedList (#165)\n\nMost updates relate to NamedListInitializationPlugin init method.  and RequestHandler.\n\nLink to JIRA issues for some extant bugs.\n\nCo-authored-by: David Smiley <dsmiley@apache.org>","date":"2021-06-09 02:08:25","modifiedFileCount":"221","status":"M","submitter":"Mike Drob"},{"authorTime":"2021-09-23 00:46:59","codes":[{"authorDate":"2021-09-23 00:46:59","commitOrder":16,"curCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    followerJetty.stop();\n\n    nDocs--;\n    leaderClient.deleteByQuery(\"*:*\");\n\n    leaderClient.commit();\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n                \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(buildUrl(leaderJetty.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME);\n\n    for (int i = 0; i < nDocs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n\n    NamedList<Object> leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(nDocs, leaderQueryResult.getNumFound());\n\n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(buildUrl(followerJetty.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME);\n\n    \r\n    NamedList<Object> followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(nDocs, followerQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","date":"2021-09-23 00:46:59","endLine":1194,"groupId":"103485","id":25,"instanceNumber":1,"isCurCommit":1,"methodName":"doTestReplicateAfterStartup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9c/2417c3a3ba989817f09d697fd01d9a6f116a0b.src","preCode":"  public void doTestReplicateAfterStartup() throws Exception {\n    \r\n    followerJetty.stop();\n\n    nDocs--;\n    leaderClient.deleteByQuery(\"*:*\");\n\n    leaderClient.commit();\n\n\n\n    \r\n    leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n                          \"solrconfig.xml\");\n\n    leaderJetty.stop();\n\n    leaderJetty = createAndStartJetty(leader);\n    leaderClient.close();\n    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n    \n    for (int i = 0; i < nDocs; i++)\n      index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n    leaderClient.commit();\n    \n    NamedList<Object> leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get(\"response\");\n    assertEquals(nDocs, leaderQueryResult.getNumFound());\n    \n\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n    \r\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n\n    \r\n    NamedList<Object> followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get(\"response\");\n    assertEquals(nDocs, followerQueryResult.getNumFound());\n\n    \r\n    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1147,"status":"M"},{"authorDate":"2021-09-23 00:46:59","commitOrder":16,"curCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n\n      \r\n      followerJetty.stop();\n\n      nDocs--;\n      leaderClient.deleteByQuery(\"*:*\");\n\n      leaderClient.commit();\n\n      \r\n      leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n          \"solrconfig.xml\");\n\n      leaderJetty.stop();\n\n      leaderJetty = createAndStartJetty(leader);\n      leaderClient.close();\n      leaderClient = createNewSolrClient(buildUrl(leaderJetty.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME);\n\n      for (int i = 0; i < nDocs; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n      leaderClient.commit();\n\n      \r\n      \r\n      \r\n      leaderJetty.stop();\n      leaderJetty.start();\n\n      \r\n\n      NamedList<Object> leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n      SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, leaderQueryResult.getNumFound());\n\n      follower.setTestPort(leaderJetty.getLocalPort());\n      follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n\n      \r\n      followerJetty = createAndStartJetty(follower);\n      followerClient.close();\n      followerClient = createNewSolrClient(buildUrl(followerJetty.getLocalPort()) + \"/\" + DEFAULT_TEST_CORENAME);\n\n      \r\n      NamedList<Object> followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n      SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, followerQueryResult.getNumFound());\n\n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult,\n          followerQueryResult, 0, null);\n      assertEquals(null, cmp);\n\n    } finally {\n      resetFactory();\n    }\n  }\n","date":"2021-09-23 00:46:59","endLine":1259,"groupId":"103485","id":26,"instanceNumber":2,"isCurCommit":1,"methodName":"doTestReplicateAfterStartupWithNoActivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9c/2417c3a3ba989817f09d697fd01d9a6f116a0b.src","preCode":"  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {\n    useFactory(null);\n    try {\n      \n      \r\n      followerJetty.stop();\n      \n      nDocs--;\n      leaderClient.deleteByQuery(\"*:*\");\n      \n      leaderClient.commit();\n      \n      \r\n      leader.copyConfigFile(CONF_DIR + \"solrconfig-leader2.xml\",\n          \"solrconfig.xml\");\n      \n      leaderJetty.stop();\n      \n      leaderJetty = createAndStartJetty(leader);\n      leaderClient.close();\n      leaderClient = createNewSolrClient(leaderJetty.getLocalPort());\n      \n      for (int i = 0; i < nDocs; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      leaderClient.commit();\n      \n      \r\n      \r\n      \r\n      leaderJetty.stop();\n      leaderJetty.start();\n      \n      \r\n      \n      NamedList<Object> leaderQueryRsp = rQuery(nDocs, \"*:*\", leaderClient);\n      SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, leaderQueryResult.getNumFound());\n      \n      follower.setTestPort(leaderJetty.getLocalPort());\n      follower.copyConfigFile(follower.getSolrConfigFile(), \"solrconfig.xml\");\n      \n      \r\n      followerJetty = createAndStartJetty(follower);\n      followerClient.close();\n      followerClient = createNewSolrClient(followerJetty.getLocalPort());\n      \n      \r\n      NamedList<Object> followerQueryRsp = rQuery(nDocs, \"*:*\", followerClient);\n      SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp\n          .get(\"response\");\n      assertEquals(nDocs, followerQueryResult.getNumFound());\n      \n      \r\n      String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult,\n          followerQueryResult, 0, null);\n      assertEquals(null, cmp);\n      \n    } finally {\n      resetFactory();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1197,"status":"M"}],"commitId":"3cd71244d23704a7addf34eeac9f728862518f48","commitMessage":"@@@SOLR-15286: A brand new follower in the legacy mode should wait to replicate index before reporting healthy (#238)\n\n* https://issues.apache.org/jira/browse/SOLR-15286\n\nAdded log to the HealthCheckHandler for legacy mode to report followers healthy based on the index generation diff\n\nCo-authored-by: Pushkar Raste <praste@apple.com>","date":"2021-09-23 00:46:59","modifiedFileCount":"8","status":"M","submitter":"Pushkar Raste"}]
