[{"authorTime":"2014-01-07 05:15:45","codes":[{"authorDate":"2014-01-07 05:15:45","commitOrder":1,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params, \n                                 CURSOR_MARK_PARAM, cursorMark));\n      Map rsp = (Map) ObjectBuilder.fromJSON(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = ((Long)doc.get(\"id\")).intValue();\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","date":"2014-01-07 05:15:45","endLine":610,"groupId":"18961","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/6fa6bc87c45fcc6bd03565bf3be402ff0cde76.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params, \n                                 CURSOR_MARK_PARAM, cursorMark));\n      Map rsp = (Map) ObjectBuilder.fromJSON(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = ((Long)doc.get(\"id\")).intValue();\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/CursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":575,"status":"B"},{"authorDate":"2014-01-07 05:15:45","commitOrder":1,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      QueryResponse rsp = cloudClient.query(p(params, CURSOR_MARK_PARAM, cursorMark));\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (SolrDocument doc : docs) {\n        int id = ((Integer)doc.get(\"id\")).intValue();\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","date":"2014-01-07 05:15:45","endLine":634,"groupId":"59979","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b5/5336e26633f284f9f3bbe9438ec455dc64b9c5.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      QueryResponse rsp = cloudClient.query(p(params, CURSOR_MARK_PARAM, cursorMark));\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (SolrDocument doc : docs) {\n        int id = ((Integer)doc.get(\"id\")).intValue();\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/DistribCursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":606,"status":"B"}],"commitId":"5efc4132f10d476373b7da72e23f475eeec4046a","commitMessage":"@@@SOLR-5463: new 'cursorMark' request param for deep paging of sorted result sets\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1556036 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-01-07 05:15:45","modifiedFileCount":"10","status":"B","submitter":"Chris M. Hostetter"},{"authorTime":"2014-01-17 06:38:30","codes":[{"authorDate":"2014-01-07 05:15:45","commitOrder":2,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params, \n                                 CURSOR_MARK_PARAM, cursorMark));\n      Map rsp = (Map) ObjectBuilder.fromJSON(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = ((Long)doc.get(\"id\")).intValue();\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","date":"2014-01-07 05:15:45","endLine":610,"groupId":"18961","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/6fa6bc87c45fcc6bd03565bf3be402ff0cde76.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params, \n                                 CURSOR_MARK_PARAM, cursorMark));\n      Map rsp = (Map) ObjectBuilder.fromJSON(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = ((Long)doc.get(\"id\")).intValue();\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/CursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":575,"status":"N"},{"authorDate":"2014-01-17 06:38:30","commitOrder":2,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      QueryResponse rsp = cloudClient.query(p(params, CURSOR_MARK_PARAM, cursorMark));\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (SolrDocument doc : docs) {\n        int id = ((Integer)doc.get(\"id\")).intValue();\n        if (ids.exists(id)) {\n          String msg = \"walk already seen: \" + id;\n          try {\n            queryAndCompareShards(params(\"q\",\"id:\"+id));\n          } catch (AssertionError ae) {\n            throw new AssertionError(msg + \", found shard inconsistency that would explain it...\", ae);\n          }\n          rsp = cloudClient.query(params(\"q\",\"id:\"+id));\n          throw new AssertionError(msg + \", don't know why; q=id:\"+id+\" gives: \" + rsp.toString());\n        }\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","date":"2014-01-17 06:38:30","endLine":643,"groupId":"59979","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/90/ce821c14c985b6f43f38355286536a7364c935.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      QueryResponse rsp = cloudClient.query(p(params, CURSOR_MARK_PARAM, cursorMark));\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (SolrDocument doc : docs) {\n        int id = ((Integer)doc.get(\"id\")).intValue();\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/DistribCursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":606,"status":"M"}],"commitId":"a6b1c654d18b24ba3ce62cbefc6beefaea63ab2c","commitMessage":"@@@SOLR-5463: more details in case of spooky 'walk already seen' errors\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1558939 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-01-17 06:38:30","modifiedFileCount":"1","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2014-02-16 05:58:58","codes":[{"authorDate":"2014-01-07 05:15:45","commitOrder":3,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params, \n                                 CURSOR_MARK_PARAM, cursorMark));\n      Map rsp = (Map) ObjectBuilder.fromJSON(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = ((Long)doc.get(\"id\")).intValue();\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","date":"2014-01-07 05:15:45","endLine":610,"groupId":"18961","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/6fa6bc87c45fcc6bd03565bf3be402ff0cde76.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params, \n                                 CURSOR_MARK_PARAM, cursorMark));\n      Map rsp = (Map) ObjectBuilder.fromJSON(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = ((Long)doc.get(\"id\")).intValue();\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/CursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":575,"status":"N"},{"authorDate":"2014-02-16 05:58:58","commitOrder":3,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      final SolrParams p = p(params, CURSOR_MARK_PARAM, cursorMark);\n      QueryResponse rsp = cloudClient.query(p);\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n\n      for (SolrDocument doc : docs) {\n        int id = ((Integer)doc.get(\"id\")).intValue();\n        if (ids.exists(id)) {\n          String msg = \"(\" + p + \") walk already seen: \" + id;\n          try {\n            queryAndCompareShards(params(\"distrib\",\"false\",\n                                         \"q\",\"id:\"+id));\n          } catch (AssertionError ae) {\n            throw new AssertionError(msg + \", found shard inconsistency that would explain it...\", ae);\n          }\n          rsp = cloudClient.query(params(\"q\",\"id:\"+id));\n          throw new AssertionError(msg + \", don't know why; q=id:\"+id+\" gives: \" + rsp.toString());\n        }\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","date":"2014-02-16 05:58:58","endLine":746,"groupId":"60220","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b5/e61ec425a385ac2cd6fcb0d1e591bdfd2ed658.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      QueryResponse rsp = cloudClient.query(p(params, CURSOR_MARK_PARAM, cursorMark));\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (SolrDocument doc : docs) {\n        int id = ((Integer)doc.get(\"id\")).intValue();\n        if (ids.exists(id)) {\n          String msg = \"walk already seen: \" + id;\n          try {\n            queryAndCompareShards(params(\"q\",\"id:\"+id));\n          } catch (AssertionError ae) {\n            throw new AssertionError(msg + \", found shard inconsistency that would explain it...\", ae);\n          }\n          rsp = cloudClient.query(params(\"q\",\"id:\"+id));\n          throw new AssertionError(msg + \", don't know why; q=id:\"+id+\" gives: \" + rsp.toString());\n        }\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/DistribCursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":706,"status":"M"}],"commitId":"fecedd23499fbdc402ada2e4848f6b3242e03118","commitMessage":"@@@SOLR-5652: remove doc details logging now that we've identified hte original codec problem with the test\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1568690 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-02-16 05:58:58","modifiedFileCount":"1","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":4,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params,\n                                 CURSOR_MARK_PARAM, cursorMark));\n      Map rsp = (Map) ObjectBuilder.fromJSON(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = Integer.parseInt(doc.get(\"id\").toString());\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","date":"2017-06-29 17:00:17","endLine":698,"groupId":"18961","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c1/b993560b7aad6249e340508e1d76e318094abe.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params,\n                                 CURSOR_MARK_PARAM, cursorMark));\n      Map rsp = (Map) ObjectBuilder.fromJSON(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = ((Long)doc.get(\"id\")).intValue();\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/CursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":663,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":4,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      final SolrParams p = p(params, CURSOR_MARK_PARAM, cursorMark);\n      QueryResponse rsp = cloudClient.query(p);\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n\n      for (SolrDocument doc : docs) {\n        int id = Integer.parseInt(doc.getFieldValue(\"id\").toString());\n        if (ids.exists(id)) {\n          String msg = \"(\" + p + \") walk already seen: \" + id;\n          try {\n            queryAndCompareShards(params(\"distrib\",\"false\",\n                                         \"q\",\"id:\"+id));\n          } catch (AssertionError ae) {\n            throw new AssertionError(msg + \", found shard inconsistency that would explain it...\", ae);\n          }\n          rsp = cloudClient.query(params(\"q\",\"id:\"+id));\n          throw new AssertionError(msg + \", don't know why; q=id:\"+id+\" gives: \" + rsp.toString());\n        }\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","date":"2017-06-29 17:00:17","endLine":752,"groupId":"9193","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/e766f3b6234f0d6a9a879430f85a1f3e52a2dd.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      final SolrParams p = p(params, CURSOR_MARK_PARAM, cursorMark);\n      QueryResponse rsp = cloudClient.query(p);\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n\n      for (SolrDocument doc : docs) {\n        int id = ((Integer)doc.get(\"id\")).intValue();\n        if (ids.exists(id)) {\n          String msg = \"(\" + p + \") walk already seen: \" + id;\n          try {\n            queryAndCompareShards(params(\"distrib\",\"false\",\n                                         \"q\",\"id:\"+id));\n          } catch (AssertionError ae) {\n            throw new AssertionError(msg + \", found shard inconsistency that would explain it...\", ae);\n          }\n          rsp = cloudClient.query(params(\"q\",\"id:\"+id));\n          throw new AssertionError(msg + \", don't know why; q=id:\"+id+\" gives: \" + rsp.toString());\n        }\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/DistribCursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":712,"status":"M"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"M","submitter":"Karl Wright"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2019-05-03 05:20:05","commitOrder":5,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params,\n                                 CURSOR_MARK_PARAM, cursorMark));\n      Map rsp = (Map) fromJSONString(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = Integer.parseInt(doc.get(\"id\").toString());\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","date":"2019-05-03 05:20:05","endLine":697,"groupId":"18961","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a1/331473d89e496917d1f922cc256026ba87b451.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params,\n                                 CURSOR_MARK_PARAM, cursorMark));\n      Map rsp = (Map) ObjectBuilder.fromJSON(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = Integer.parseInt(doc.get(\"id\").toString());\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/CursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":662,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":5,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      final SolrParams p = p(params, CURSOR_MARK_PARAM, cursorMark);\n      QueryResponse rsp = cloudClient.query(p);\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n\n      for (SolrDocument doc : docs) {\n        int id = Integer.parseInt(doc.getFieldValue(\"id\").toString());\n        if (ids.exists(id)) {\n          String msg = \"(\" + p + \") walk already seen: \" + id;\n          try {\n            queryAndCompareShards(params(\"distrib\",\"false\",\n                                         \"q\",\"id:\"+id));\n          } catch (AssertionError ae) {\n            throw new AssertionError(msg + \", found shard inconsistency that would explain it...\", ae);\n          }\n          rsp = cloudClient.query(params(\"q\",\"id:\"+id));\n          throw new AssertionError(msg + \", don't know why; q=id:\"+id+\" gives: \" + rsp.toString());\n        }\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","date":"2017-06-29 17:00:17","endLine":752,"groupId":"9193","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/e766f3b6234f0d6a9a879430f85a1f3e52a2dd.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      final SolrParams p = p(params, CURSOR_MARK_PARAM, cursorMark);\n      QueryResponse rsp = cloudClient.query(p);\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n\n      for (SolrDocument doc : docs) {\n        int id = Integer.parseInt(doc.getFieldValue(\"id\").toString());\n        if (ids.exists(id)) {\n          String msg = \"(\" + p + \") walk already seen: \" + id;\n          try {\n            queryAndCompareShards(params(\"distrib\",\"false\",\n                                         \"q\",\"id:\"+id));\n          } catch (AssertionError ae) {\n            throw new AssertionError(msg + \", found shard inconsistency that would explain it...\", ae);\n          }\n          rsp = cloudClient.query(params(\"q\",\"id:\"+id));\n          throw new AssertionError(msg + \", don't know why; q=id:\"+id+\" gives: \" + rsp.toString());\n        }\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/DistribCursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":712,"status":"N"}],"commitId":"8908205b428f2ae68bcef0f22a944a62cfcd93d5","commitMessage":"@@@SOLR-13441: Refactor code to minimize direct use of noggit\n","date":"2019-05-03 05:20:05","modifiedFileCount":"58","status":"M","submitter":"noble"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2020-06-18 23:12:50","commitOrder":6,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params,\n                                 CURSOR_MARK_PARAM, cursorMark));\n      @SuppressWarnings({\"rawtypes\"})\n      Map rsp = (Map) fromJSONString(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      @SuppressWarnings({\"unchecked\"})\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = Integer.parseInt(doc.get(\"id\").toString());\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","date":"2020-06-18 23:12:50","endLine":699,"groupId":"40893","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/10e18ec3f8283d3a93ed4728fe8defedf74380.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params,\n                                 CURSOR_MARK_PARAM, cursorMark));\n      Map rsp = (Map) fromJSONString(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = Integer.parseInt(doc.get(\"id\").toString());\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/CursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":662,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":6,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      final SolrParams p = p(params, CURSOR_MARK_PARAM, cursorMark);\n      QueryResponse rsp = cloudClient.query(p);\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n\n      for (SolrDocument doc : docs) {\n        int id = Integer.parseInt(doc.getFieldValue(\"id\").toString());\n        if (ids.exists(id)) {\n          String msg = \"(\" + p + \") walk already seen: \" + id;\n          try {\n            queryAndCompareShards(params(\"distrib\",\"false\",\n                                         \"q\",\"id:\"+id));\n          } catch (AssertionError ae) {\n            throw new AssertionError(msg + \", found shard inconsistency that would explain it...\", ae);\n          }\n          rsp = cloudClient.query(params(\"q\",\"id:\"+id));\n          throw new AssertionError(msg + \", don't know why; q=id:\"+id+\" gives: \" + rsp.toString());\n        }\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","date":"2017-06-29 17:00:17","endLine":752,"groupId":"9193","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/e766f3b6234f0d6a9a879430f85a1f3e52a2dd.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      final SolrParams p = p(params, CURSOR_MARK_PARAM, cursorMark);\n      QueryResponse rsp = cloudClient.query(p);\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n\n      for (SolrDocument doc : docs) {\n        int id = Integer.parseInt(doc.getFieldValue(\"id\").toString());\n        if (ids.exists(id)) {\n          String msg = \"(\" + p + \") walk already seen: \" + id;\n          try {\n            queryAndCompareShards(params(\"distrib\",\"false\",\n                                         \"q\",\"id:\"+id));\n          } catch (AssertionError ae) {\n            throw new AssertionError(msg + \", found shard inconsistency that would explain it...\", ae);\n          }\n          rsp = cloudClient.query(params(\"q\",\"id:\"+id));\n          throw new AssertionError(msg + \", don't know why; q=id:\"+id+\" gives: \" + rsp.toString());\n        }\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/DistribCursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":712,"status":"N"}],"commitId":"84729edbba04ad7de4b1cae635d8d0fbe803f124","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 2)\n","date":"2020-06-18 23:12:50","modifiedFileCount":"122","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-04-06 00:57:24","codes":[{"authorDate":"2021-04-06 00:57:24","commitOrder":7,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n    final SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    assertFullWalkNoDups(params, (doc) -> {\n        int id = Integer.parseInt(doc.get(\"id\").toString());\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n        \n      });\n    return ids;\n  }\n","date":"2021-04-06 00:57:24","endLine":845,"groupId":"122773","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/75b8e9500653518d5146fee74f74dca98dd7f9.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) \n    throws Exception {\n\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      String json = assertJQ(req(params,\n                                 CURSOR_MARK_PARAM, cursorMark));\n      @SuppressWarnings({\"rawtypes\"})\n      Map rsp = (Map) fromJSONString(json);\n      assertTrue(\"response doesn't contain \" + CURSOR_MARK_NEXT + \": \" + json,\n                 rsp.containsKey(CURSOR_MARK_NEXT));\n      String nextCursorMark = (String)rsp.get(CURSOR_MARK_NEXT);\n      assertNotNull(CURSOR_MARK_NEXT + \" is null\", nextCursorMark);\n      @SuppressWarnings({\"unchecked\"})\n      List<Map<Object,Object>> docs = (List) (((Map)rsp.get(\"response\")).get(\"docs\"));\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n      for (Map<Object,Object> doc : docs) {\n        int id = Integer.parseInt(doc.get(\"id\").toString());\n        assertFalse(\"walk already seen: \" + id, ids.exists(id));\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/CursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":833,"status":"M"},{"authorDate":"2021-04-06 00:57:24","commitOrder":7,"curCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    final SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    assertFullWalkNoDups(params, (doc) -> {\n        int id = Integer.parseInt(doc.getFieldValue(\"id\").toString());\n        if (ids.exists(id)) {\n          String msg = \"walk already seen: \" + id;\n          try {\n            try {\n              queryAndCompareShards(params(\"distrib\",\"false\",\n                                           \"q\",\"id:\"+id));\n            } catch (AssertionError ae) {\n              throw new AssertionError(msg + \", found shard inconsistency that would explain it...\", ae);\n            }\n            final QueryResponse rsp = cloudClient.query(params(\"q\",\"id:\"+id));\n            throw new AssertionError(msg + \", don't know why; q=id:\"+id+\" gives: \" + rsp.toString());\n          } catch (Exception e) {\n            throw new AssertionError(msg + \", exception trying to fiture out why...\", e);\n          }\n        }\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      });\n    return ids;\n  }\n","date":"2021-04-06 00:57:24","endLine":815,"groupId":"122773","id":14,"instanceNumber":2,"isCurCommit":1,"methodName":"assertFullWalkNoDups","params":"(intmaxSize@SolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/89/b4971cc86f9775c40fddb970a4f525cf87168c.src","preCode":"  public SentinelIntSet assertFullWalkNoDups(int maxSize, SolrParams params) throws Exception {\n    SentinelIntSet ids = new SentinelIntSet(maxSize, -1);\n    String cursorMark = CURSOR_MARK_START;\n    int docsOnThisPage = Integer.MAX_VALUE;\n    while (0 < docsOnThisPage) {\n      final SolrParams p = p(params, CURSOR_MARK_PARAM, cursorMark);\n      QueryResponse rsp = cloudClient.query(p);\n      String nextCursorMark = assertHashNextCursorMark(rsp);\n      SolrDocumentList docs = extractDocList(rsp);\n      docsOnThisPage = docs.size();\n      if (null != params.getInt(CommonParams.ROWS)) {\n        int rows = params.getInt(CommonParams.ROWS);\n        assertTrue(\"Too many docs on this page: \" + rows + \" < \" + docsOnThisPage,\n                   docsOnThisPage <= rows);\n      }\n      if (0 == docsOnThisPage) {\n        assertEquals(\"no more docs, but \"+CURSOR_MARK_NEXT+\" isn't same\",\n                     cursorMark, nextCursorMark);\n      }\n\n      for (SolrDocument doc : docs) {\n        int id = Integer.parseInt(doc.getFieldValue(\"id\").toString());\n        if (ids.exists(id)) {\n          String msg = \"(\" + p + \") walk already seen: \" + id;\n          try {\n            queryAndCompareShards(params(\"distrib\",\"false\",\n                                         \"q\",\"id:\"+id));\n          } catch (AssertionError ae) {\n            throw new AssertionError(msg + \", found shard inconsistency that would explain it...\", ae);\n          }\n          rsp = cloudClient.query(params(\"q\",\"id:\"+id));\n          throw new AssertionError(msg + \", don't know why; q=id:\"+id+\" gives: \" + rsp.toString());\n        }\n        ids.put(id);\n        assertFalse(\"id set bigger then max allowed (\"+maxSize+\"): \" + ids.size(),\n                    maxSize < ids.size());\n      }\n      cursorMark = nextCursorMark;\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/DistribCursorPagingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":791,"status":"M"}],"commitId":"59a59138668e9513060824d85ee375a1723f4bfb","commitMessage":"@@@SOLR-11921: Move \"cursorMark\" logic from QueryComponent to SearchHandler so it can work with things like QueryElevationComponent that modify the SortSpec in prepare().  as well as possible custom \"search\" components other then QueryComponent\n","date":"2021-04-06 00:57:24","modifiedFileCount":"9","status":"M","submitter":"Chris Hostetter"}]
