[{"authorTime":"2014-08-12 22:46:45","codes":[{"authorDate":"2015-03-09 09:29:28","commitOrder":5,"curCode":"  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","date":"2015-03-09 09:29:28","endLine":424,"groupId":"20829","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldsf@Objectvalue@floatboost)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/53233ad6484dc3a365d6b73c6f9c259b24e3c1.src","preCode":"  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/EnumField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"B"},{"authorDate":"2014-08-12 22:46:45","commitOrder":5,"curCode":"  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n      \n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(value.toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.get()));\n      } else {\n        final long bits;\n        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {\n          bits = field.numericValue().longValue();\n        } else if (field.numericValue() instanceof Float) {\n          bits = Float.floatToIntBits(field.numericValue().floatValue());\n        } else {\n          assert field.numericValue() instanceof Double;\n          bits = Double.doubleToLongBits(field.numericValue().doubleValue());\n        }\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      \n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","date":"2014-08-12 22:46:45","endLine":697,"groupId":"26392","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldsf@Objectvalue@floatboost)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7c/fd0cfcf5d0773bd3a78e4100655049166ed600.src","preCode":"  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n      \n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(value.toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.get()));\n      } else {\n        final long bits;\n        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {\n          bits = field.numericValue().longValue();\n        } else if (field.numericValue() instanceof Float) {\n          bits = Float.floatToIntBits(field.numericValue().floatValue());\n        } else {\n          assert field.numericValue() instanceof Double;\n          bits = Double.doubleToLongBits(field.numericValue().doubleValue());\n        }\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      \n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":670,"status":"NB"}],"commitId":"059e5259c68287033b28588f85f1bf5fcdd3f991","commitMessage":"@@@SOLR-5846: EnumField supports DocValues functionality\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1665107 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-03-09 09:29:28","modifiedFileCount":"2","status":"M","submitter":"Shalin Shekhar Mangar"},{"authorTime":"2015-10-16 23:37:42","codes":[{"authorDate":"2015-03-09 09:29:28","commitOrder":6,"curCode":"  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","date":"2015-03-09 09:29:28","endLine":424,"groupId":"20829","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldsf@Objectvalue@floatboost)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/53233ad6484dc3a365d6b73c6f9c259b24e3c1.src","preCode":"  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/EnumField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"N"},{"authorDate":"2015-10-16 23:37:42","commitOrder":6,"curCode":"  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n      \n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        storedToIndexed(field, bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.get()));\n      } else {\n        final long bits;\n        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {\n          bits = field.numericValue().longValue();\n        } else if (field.numericValue() instanceof Float) {\n          bits = Float.floatToIntBits(field.numericValue().floatValue());\n        } else {\n          assert field.numericValue() instanceof Double;\n          bits = Double.doubleToLongBits(field.numericValue().doubleValue());\n        }\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      \n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","date":"2015-10-16 23:37:42","endLine":738,"groupId":"26392","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldsf@Objectvalue@floatboost)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c0/a5ca1adea3f63a6b789083b57bb2e493fe5c10.src","preCode":"  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n      \n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(value.toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.get()));\n      } else {\n        final long bits;\n        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {\n          bits = field.numericValue().longValue();\n        } else if (field.numericValue() instanceof Float) {\n          bits = Float.floatToIntBits(field.numericValue().floatValue());\n        } else {\n          assert field.numericValue() instanceof Double;\n          bits = Double.doubleToLongBits(field.numericValue().doubleValue());\n        }\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      \n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":711,"status":"M"}],"commitId":"70ae2272df24e85e2c69a69c9a9196159d328c00","commitMessage":"@@@SOLR-8050: Partial update on document with multivalued date field fails to parse date and can also fail to remove dates in some cases.\n\nThis closes #202\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1709042 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-10-16 23:37:42","modifiedFileCount":"5","status":"M","submitter":"Shalin Shekhar Mangar"},{"authorTime":"2016-01-18 03:54:50","codes":[{"authorDate":"2016-01-18 03:54:50","commitOrder":7,"curCode":"  public List<IndexableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","date":"2016-01-18 03:54:50","endLine":434,"groupId":"20829","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldsf@Objectvalue@floatboost)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e2/529dd68bd74ee3b4af20ccd656ede1b40a4965.src","preCode":"  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/EnumField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":416,"status":"M"},{"authorDate":"2016-01-18 03:54:50","commitOrder":7,"curCode":"  public List<IndexableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value, boost);\n      fields.add(field);\n      \n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        storedToIndexed(field, bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.get()));\n      } else {\n        final long bits;\n        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {\n          bits = field.numericValue().longValue();\n        } else if (field.numericValue() instanceof Float) {\n          bits = Float.floatToIntBits(field.numericValue().floatValue());\n        } else {\n          assert field.numericValue() instanceof Double;\n          bits = Double.doubleToLongBits(field.numericValue().doubleValue());\n        }\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      \n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","date":"2016-01-18 03:54:50","endLine":743,"groupId":"26392","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldsf@Objectvalue@floatboost)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/2d58f87ea33d4868a8d5cd7d4de9acfe3bd5bf.src","preCode":"  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<StorableField> fields = new ArrayList<>();\n      final StorableField field = createField(sf, value, boost);\n      fields.add(field);\n      \n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        storedToIndexed(field, bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.get()));\n      } else {\n        final long bits;\n        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {\n          bits = field.numericValue().longValue();\n        } else if (field.numericValue() instanceof Float) {\n          bits = Float.floatToIntBits(field.numericValue().floatValue());\n        } else {\n          assert field.numericValue() instanceof Double;\n          bits = Double.doubleToLongBits(field.numericValue().doubleValue());\n        }\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      \n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":716,"status":"M"}],"commitId":"24c46305bd8f335c3d0e501a33dd3da82732c49e","commitMessage":"@@@LUCENE-6971: remove StorableField.  StoredDocument\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1725117 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-01-18 03:54:50","modifiedFileCount":"167","status":"M","submitter":"Michael McCandless"},{"authorTime":"2017-03-03 02:18:16","codes":[{"authorDate":"2017-03-03 02:18:16","commitOrder":8,"curCode":"  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n","date":"2017-03-03 02:18:16","endLine":446,"groupId":"20829","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldsf@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3e/83db4d7057e45900bf19fdce0a4b6ae7e08fc9.src","preCode":"  public List<IndexableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value, boost);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/EnumField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"M"},{"authorDate":"2017-03-03 02:18:16","commitOrder":8,"curCode":"  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n      \n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        storedToIndexed(field, bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.get()));\n      } else {\n        final long bits;\n        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {\n          bits = field.numericValue().longValue();\n        } else if (field.numericValue() instanceof Float) {\n          bits = Float.floatToIntBits(field.numericValue().floatValue());\n        } else {\n          assert field.numericValue() instanceof Double;\n          bits = Double.doubleToLongBits(field.numericValue().doubleValue());\n        }\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      \n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n","date":"2017-03-03 02:18:16","endLine":681,"groupId":"26392","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldsf@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b7/0b2b005ae5bd35737b2f116c6d75e1c5a66e39.src","preCode":"  public List<IndexableField> createFields(SchemaField sf, Object value, float boost) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value, boost);\n      fields.add(field);\n      \n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        storedToIndexed(field, bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.get()));\n      } else {\n        final long bits;\n        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {\n          bits = field.numericValue().longValue();\n        } else if (field.numericValue() instanceof Float) {\n          bits = Float.floatToIntBits(field.numericValue().floatValue());\n        } else {\n          assert field.numericValue() instanceof Double;\n          bits = Double.doubleToLongBits(field.numericValue().doubleValue());\n        }\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      \n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value, boost));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":654,"status":"M"}],"commitId":"8ed2b764ed4d4d5203b5df1e16fdc1ffd640322c","commitMessage":"@@@LUCENE-6819: Remove index-time boosts.\n","date":"2017-03-03 02:18:16","modifiedFileCount":"113","status":"M","submitter":"Adrien Grand"},{"authorTime":"2017-03-03 02:18:16","codes":[{"authorDate":"2017-08-05 07:32:46","commitOrder":9,"curCode":"  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(enumMapping.stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n","date":"2017-08-05 07:32:46","endLine":201,"groupId":"101997","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldsf@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8e/ec185bfb4212e8344d1ea17b8ad2960392394e.src","preCode":"  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n\n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        readableToIndexed(stringValueToIntValue(value.toString()).toString(), bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.toBytesRef()));\n      } else {\n        final long bits = field.numericValue().intValue();\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/EnumField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"},{"authorDate":"2017-03-03 02:18:16","commitOrder":9,"curCode":"  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n      \n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        storedToIndexed(field, bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.get()));\n      } else {\n        final long bits;\n        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {\n          bits = field.numericValue().longValue();\n        } else if (field.numericValue() instanceof Float) {\n          bits = Float.floatToIntBits(field.numericValue().floatValue());\n        } else {\n          assert field.numericValue() instanceof Double;\n          bits = Double.doubleToLongBits(field.numericValue().doubleValue());\n        }\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      \n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n","date":"2017-03-03 02:18:16","endLine":681,"groupId":"101997","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createFields","params":"(SchemaFieldsf@Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b7/0b2b005ae5bd35737b2f116c6d75e1c5a66e39.src","preCode":"  public List<IndexableField> createFields(SchemaField sf, Object value) {\n    if (sf.hasDocValues()) {\n      List<IndexableField> fields = new ArrayList<>();\n      final IndexableField field = createField(sf, value);\n      fields.add(field);\n      \n      if (sf.multiValued()) {\n        BytesRefBuilder bytes = new BytesRefBuilder();\n        storedToIndexed(field, bytes);\n        fields.add(new SortedSetDocValuesField(sf.getName(), bytes.get()));\n      } else {\n        final long bits;\n        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {\n          bits = field.numericValue().longValue();\n        } else if (field.numericValue() instanceof Float) {\n          bits = Float.floatToIntBits(field.numericValue().floatValue());\n        } else {\n          assert field.numericValue() instanceof Double;\n          bits = Double.doubleToLongBits(field.numericValue().doubleValue());\n        }\n        fields.add(new NumericDocValuesField(sf.getName(), bits));\n      }\n      \n      return fields;\n    } else {\n      return Collections.singletonList(createField(sf, value));\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":654,"status":"N"}],"commitId":"9627d1db5dccd6dc9c0c307065628efea621d8e5","commitMessage":"@@@SOLR-11023: Added EnumFieldType.  a non-Trie-based version of EnumField.  and deprecated EnumField in favor of EnumFieldType.\n","date":"2017-08-05 07:32:46","modifiedFileCount":"7","status":"M","submitter":"Steve Rowe"}]
