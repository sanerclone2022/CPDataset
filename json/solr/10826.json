[{"authorTime":"2017-02-10 13:39:06","codes":[{"authorDate":"2017-02-10 13:39:06","commitOrder":1,"curCode":"  public void addManyFieldsWithManySubAddsWithNegative() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", -1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(10L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", -3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(2.2D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", -3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(2.2D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", -3.1);\n    values.put(\"d\", 5.223456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(3.323456789123456, result);\n    \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", -123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(4 * 123456789123456789L, result);\n    \n    values.clear();\n    values.put(\"a\", -4.123456789123456);\n    values.put(\"b\", -4.123456789123456);\n    values.put(\"c\", -4.123456789123456);\n    values.put(\"d\", -4.123456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(6 * -4.123456789123456, result);\n  }\n","date":"2017-02-10 13:39:51","endLine":334,"groupId":"62535","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addManyFieldsWithManySubAddsWithNegative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/71/15452f2de73cba03d013d2d1d4eed9c24152da.src","preCode":"  public void addManyFieldsWithManySubAddsWithNegative() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", -1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(10L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", -3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(2.2D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", -3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(2.2D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", -3.1);\n    values.put(\"d\", 5.223456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(3.323456789123456, result);\n    \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", -123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(4 * 123456789123456789L, result);\n    \n    values.clear();\n    values.put(\"a\", -4.123456789123456);\n    values.put(\"b\", -4.123456789123456);\n    values.put(\"c\", -4.123456789123456);\n    values.put(\"d\", -4.123456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(6 * -4.123456789123456, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AddEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"B"},{"authorDate":"2017-02-10 13:39:06","commitOrder":1,"curCode":"  public void multManyFieldsWithValues() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(26.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 10.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(269.5791D, result);\n  }\n","date":"2017-02-10 13:39:51","endLine":163,"groupId":"62535","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"multManyFieldsWithValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a2/a6616ddb25d237f578300158f3d60337c97442.src","preCode":"  public void multManyFieldsWithValues() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(26.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 10.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(269.5791D, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"}],"commitId":"62489678d074edb2ee962e1c4ee38026ff504b2a","commitMessage":"@@@SOLR-9916: Adds Stream Evaluators to support evaluating values from tuples\n","date":"2017-02-10 13:39:51","modifiedFileCount":"6","status":"B","submitter":"Dennis Gove"},{"authorTime":"2017-02-10 13:39:06","codes":[{"authorDate":"2017-08-26 17:07:19","commitOrder":2,"curCode":"  public void addManyFieldsWithManySubAddsWithNegative() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", -1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(10L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", -3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(2.2D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", -3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(2.2D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", -3.1);\n    values.put(\"d\", 5.223456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(3.323456789123456, result);\n    \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", -123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(4 * 123456789123456789L, result);\n    \n    values.clear();\n    values.put(\"a\", -4.12345678);\n    values.put(\"b\", -4.12345678);\n    values.put(\"c\", -4.12345678);\n    values.put(\"d\", -4.12345678);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(6 * -4.12345678, result);\n  }\n","date":"2017-08-26 17:07:19","endLine":328,"groupId":"62535","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addManyFieldsWithManySubAddsWithNegative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/674d76de741396869aab22969d5e34bc8d1c20.src","preCode":"  public void addManyFieldsWithManySubAddsWithNegative() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", -1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(10L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", -3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(2.2D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", -3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(2.2D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", -3.1);\n    values.put(\"d\", 5.223456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(3.323456789123456, result);\n    \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", -123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(4 * 123456789123456789L, result);\n    \n    values.clear();\n    values.put(\"a\", -4.123456789123456);\n    values.put(\"b\", -4.123456789123456);\n    values.put(\"c\", -4.123456789123456);\n    values.put(\"d\", -4.123456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(6 * -4.123456789123456, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AddEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"M"},{"authorDate":"2017-02-10 13:39:06","commitOrder":2,"curCode":"  public void multManyFieldsWithValues() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(26.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 10.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(269.5791D, result);\n  }\n","date":"2017-02-10 13:39:51","endLine":163,"groupId":"62535","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"multManyFieldsWithValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a2/a6616ddb25d237f578300158f3d60337c97442.src","preCode":"  public void multManyFieldsWithValues() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(26.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 10.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(269.5791D, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"N"}],"commitId":"ddcb98e9c3e0d5f6acf59f872e8324e7ad144506","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-08-26 17:07:19","modifiedFileCount":"90","status":"M","submitter":"Karl Wright"},{"authorTime":"2019-10-11 09:18:45","codes":[{"authorDate":"2019-10-11 09:18:45","commitOrder":3,"curCode":"  public void addManyFieldsWithManySubAddsWithNegative() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", -1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(10D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", -3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(2.2D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", -3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(2.2D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", -3.1);\n    values.put(\"d\", 5.223456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(3.323456789123456, result);\n    \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", -123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(4 * 123456789123456789D, result);\n    \n    values.clear();\n    values.put(\"a\", -4.12345678);\n    values.put(\"b\", -4.12345678);\n    values.put(\"c\", -4.12345678);\n    values.put(\"d\", -4.12345678);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(6 * -4.12345678, result);\n  }\n","date":"2019-10-11 09:19:25","endLine":320,"groupId":"10826","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"addManyFieldsWithManySubAddsWithNegative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ca/094d59711213923cb7bcec0f17e8c1fa2a24b2.src","preCode":"  public void addManyFieldsWithManySubAddsWithNegative() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", -1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(10L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", -3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(2.2D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", -3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(2.2D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", -3.1);\n    values.put(\"d\", 5.223456789123456);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(3.323456789123456, result);\n    \n    values.clear();\n    values.put(\"a\", 123456789123456789L);\n    values.put(\"b\", -123456789123456789L);\n    values.put(\"c\", 123456789123456789L);\n    values.put(\"d\", 123456789123456789L);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(4 * 123456789123456789L, result);\n    \n    values.clear();\n    values.put(\"a\", -4.12345678);\n    values.put(\"b\", -4.12345678);\n    values.put(\"c\", -4.12345678);\n    values.put(\"d\", -4.12345678);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(6 * -4.12345678, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AddEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"},{"authorDate":"2019-10-11 09:18:45","commitOrder":3,"curCode":"  public void multManyFieldsWithValues() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(24D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(26.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 10.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(269.5791D, result);\n  }\n","date":"2019-10-11 09:19:25","endLine":172,"groupId":"10826","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"multManyFieldsWithValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2d/6fe5a08273ffd4af12ccdc58beb2b53c3d09e8.src","preCode":"  public void multManyFieldsWithValues() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(26.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 10.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(269.5791D, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"}],"commitId":"ad1c24e1903a74c611ec610aaf350d50d709519e","commitMessage":"@@@SOLR-13829: RecursiveEvaluator casts Continuous numbers to Discrete Numbers.  causing mismatch\n","date":"2019-10-11 09:19:25","modifiedFileCount":"17","status":"M","submitter":"Joel Bernstein"}]
