[{"authorTime":"2016-06-18 07:49:48","codes":[{"authorDate":"2016-12-19 23:15:04","commitOrder":2,"curCode":"  private void doSolrRequest(String token, int expectedStatusCode, HttpSolrClient client, int trials)\n  throws Exception {\n    int lastStatusCode = 0;\n    for (int i = 0; i < trials; ++i) {\n      lastStatusCode = getStatusCode(token, null, null, client);\n      if (lastStatusCode == expectedStatusCode) {\n        return;\n      }\n      Thread.sleep(1000);\n    }\n    assertEquals(\"Did not receieve excepted status code\", expectedStatusCode, lastStatusCode);\n  }\n","date":"2016-12-19 23:15:04","endLine":150,"groupId":"30785","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doSolrRequest","params":"(Stringtoken@intexpectedStatusCode@HttpSolrClientclient@inttrials)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/37/c6b8cbe9bf7d85467f93c291fbbef13b5a757a.src","preCode":"  private void doSolrRequest(String token, int expectedStatusCode, HttpSolrClient client, int trials)\n  throws Exception {\n    int lastStatusCode = 0;\n    for (int i = 0; i < trials; ++i) {\n      lastStatusCode = getStatusCode(token, null, null, client);\n      if (lastStatusCode == expectedStatusCode) {\n        return;\n      }\n      Thread.sleep(1000);\n    }\n    assertEquals(\"Did not receieve excepted status code\", expectedStatusCode, lastStatusCode);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"B"},{"authorDate":"2016-06-18 07:49:48","commitOrder":2,"curCode":"  private void doSolrRequest(String token, int expectedStatusCode, HttpSolrClient client, int trials)\n  throws Exception {\n    int lastStatusCode = 0;\n    for (int i = 0; i < trials; ++i) {\n      lastStatusCode = getStatusCode(token, null, null, client);\n      if (lastStatusCode == expectedStatusCode) {\n        return;\n      }\n      Thread.sleep(1000);\n    }\n    assertEquals(\"Did not receieve excepted status code\", expectedStatusCode, lastStatusCode);\n  }\n","date":"2016-07-29 00:59:05","endLine":162,"groupId":"30785","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doSolrRequest","params":"(Stringtoken@intexpectedStatusCode@HttpSolrClientclient@inttrials)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ae/1c4393b88e53480b041e93b6387afe2907d30a.src","preCode":"  private void doSolrRequest(String token, int expectedStatusCode, HttpSolrClient client, int trials)\n  throws Exception {\n    int lastStatusCode = 0;\n    for (int i = 0; i < trials; ++i) {\n      lastStatusCode = getStatusCode(token, null, null, client);\n      if (lastStatusCode == expectedStatusCode) {\n        return;\n      }\n      Thread.sleep(1000);\n    }\n    assertEquals(\"Did not receieve excepted status code\", expectedStatusCode, lastStatusCode);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"NB"}],"commitId":"a1a8b2864e621c18aa86b21d4a244233e991a47d","commitMessage":"@@@SOLR-9513: Generic Hadoop authentication plugins.  GenericHadoopAuthPlugin and ConfigurableInternodeAuthHadoopPlugin\n","date":"2016-12-19 23:15:04","modifiedFileCount":"7","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2019-11-12 06:34:39","codes":[{"authorDate":"2016-12-19 23:15:04","commitOrder":3,"curCode":"  private void doSolrRequest(String token, int expectedStatusCode, HttpSolrClient client, int trials)\n  throws Exception {\n    int lastStatusCode = 0;\n    for (int i = 0; i < trials; ++i) {\n      lastStatusCode = getStatusCode(token, null, null, client);\n      if (lastStatusCode == expectedStatusCode) {\n        return;\n      }\n      Thread.sleep(1000);\n    }\n    assertEquals(\"Did not receieve excepted status code\", expectedStatusCode, lastStatusCode);\n  }\n","date":"2016-12-19 23:15:04","endLine":150,"groupId":"102845","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doSolrRequest","params":"(Stringtoken@intexpectedStatusCode@HttpSolrClientclient@inttrials)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/37/c6b8cbe9bf7d85467f93c291fbbef13b5a757a.src","preCode":"  private void doSolrRequest(String token, int expectedStatusCode, HttpSolrClient client, int trials)\n  throws Exception {\n    int lastStatusCode = 0;\n    for (int i = 0; i < trials; ++i) {\n      lastStatusCode = getStatusCode(token, null, null, client);\n      if (lastStatusCode == expectedStatusCode) {\n        return;\n      }\n      Thread.sleep(1000);\n    }\n    assertEquals(\"Did not receieve excepted status code\", expectedStatusCode, lastStatusCode);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/hadoop/TestDelegationWithHadoopAuth.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"N"},{"authorDate":"2019-11-12 06:34:39","commitOrder":3,"curCode":"  private void doSolrRequest(String token, int expectedStatusCode, HttpSolrClient client, int trials)\n  throws Exception {\n    int lastStatusCode = 0;\n    for (int i = 0; i < trials; ++i) {\n      lastStatusCode = getStatusCode(token, null, null, client);\n      if (lastStatusCode == expectedStatusCode) {\n        return;\n      }\n      Thread.sleep(1000);\n    }\n    assertEquals(\"Did not receive expected status code\", expectedStatusCode, lastStatusCode);\n  }\n","date":"2019-11-14 00:11:45","endLine":170,"groupId":"102845","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doSolrRequest","params":"(Stringtoken@intexpectedStatusCode@HttpSolrClientclient@inttrials)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c2/1bfde0daf536aaf448c723bb5610ddd1992091.src","preCode":"  private void doSolrRequest(String token, int expectedStatusCode, HttpSolrClient client, int trials)\n  throws Exception {\n    int lastStatusCode = 0;\n    for (int i = 0; i < trials; ++i) {\n      lastStatusCode = getStatusCode(token, null, null, client);\n      if (lastStatusCode == expectedStatusCode) {\n        return;\n      }\n      Thread.sleep(1000);\n    }\n    assertEquals(\"Did not receieve excepted status code\", expectedStatusCode, lastStatusCode);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithDelegationTokens.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"21a54c4bc70bff7db69ca993e7b4426167ce26a9","commitMessage":"@@@SOLR-13921: Processing UpdateRequest with delegation token throws NullPointerException\n\nSigned-off-by: Kevin Risden <krisden@apache.org>\n","date":"2019-11-14 00:11:45","modifiedFileCount":"2","status":"M","submitter":"Istvan Farkas"}]
