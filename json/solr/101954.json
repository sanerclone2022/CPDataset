[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2012-03-12 17:56:55","commitOrder":3,"curCode":"  private void createDynamicCurrencyField(String suffix, FieldType type) {\n    String name = \"*\" + POLY_FIELD_SEPARATOR + suffix;\n    Map<String, String> props = new HashMap<String, String>();\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    props.put(\"omitNorms\", \"true\");\n    int p = SchemaField.calcProps(name, type, props);\n    schema.registerDynamicField(SchemaField.create(name, type, p, null));\n  }\n","date":"2012-03-12 17:56:55","endLine":177,"groupId":"53351","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createDynamicCurrencyField","params":"(Stringsuffix@FieldTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f6/231dd091cb092af71bece5b054621a9bcff098.src","preCode":"  private void createDynamicCurrencyField(String suffix, FieldType type) {\n    String name = \"*\" + POLY_FIELD_SEPARATOR + suffix;\n    Map<String, String> props = new HashMap<String, String>();\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    props.put(\"omitNorms\", \"true\");\n    int p = SchemaField.calcProps(name, type, props);\n    schema.registerDynamicField(SchemaField.create(name, type, p, null));\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/CurrencyField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"MB"},{"authorDate":"2011-07-10 07:01:53","commitOrder":3,"curCode":"  static SchemaField registerPolyFieldDynamicPrototype(IndexSchema schema, FieldType type) {\n    String name = \"*\" + FieldType.POLY_FIELD_SEPARATOR + type.typeName;\n    Map<String, String> props = new HashMap<String, String>();\n    \r\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    int p = SchemaField.calcProps(name, type, props);\n    SchemaField proto = SchemaField.create(name,\n            type, p, null);\n    schema.registerDynamicField(proto);\n    return proto;\n  }\n","date":"2011-07-10 07:01:53","endLine":94,"groupId":"27372","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"registerPolyFieldDynamicPrototype","params":"(IndexSchemaschema@FieldTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/19/7acacbdf46db31edc7ceca6fc6c183bbc4d981.src","preCode":"  static SchemaField registerPolyFieldDynamicPrototype(IndexSchema schema, FieldType type) {\n    String name = \"*\" + FieldType.POLY_FIELD_SEPARATOR + type.typeName;\n    Map<String, String> props = new HashMap<String, String>();\n    \r\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    int p = SchemaField.calcProps(name, type, props);\n    SchemaField proto = SchemaField.create(name,\n            type, p, null);\n    schema.registerDynamicField(proto);\n    return proto;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"NB"}],"commitId":"8a9f7abba7aa99d140809154819e7ee1ca59cf89","commitMessage":"@@@SOLR-2202: Avoid dependency on \"tlong\" and \"string\" in schema.  add precisionStep param\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1299602 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-03-12 17:56:55","modifiedFileCount":"1","status":"M","submitter":"Jan H?ydahl"},{"authorTime":"2013-03-06 12:50:33","codes":[{"authorDate":"2013-03-06 12:50:33","commitOrder":4,"curCode":"  private void createDynamicCurrencyField(String suffix, FieldType type) {\n    String name = \"*\" + POLY_FIELD_SEPARATOR + suffix;\n    Map<String, String> props = new HashMap<String, String>();\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    props.put(\"omitNorms\", \"true\");\n    int p = SchemaField.calcProps(name, type, props);\n    schema.registerDynamicFields(SchemaField.create(name, type, p, null));\n  }\n","date":"2013-03-06 12:50:33","endLine":209,"groupId":"53351","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createDynamicCurrencyField","params":"(Stringsuffix@FieldTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b3/ca4728946ee9244a2e4accdb55083c4711ea9f.src","preCode":"  private void createDynamicCurrencyField(String suffix, FieldType type) {\n    String name = \"*\" + POLY_FIELD_SEPARATOR + suffix;\n    Map<String, String> props = new HashMap<String, String>();\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    props.put(\"omitNorms\", \"true\");\n    int p = SchemaField.calcProps(name, type, props);\n    schema.registerDynamicField(SchemaField.create(name, type, p, null));\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/CurrencyField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"M"},{"authorDate":"2013-03-06 12:50:33","commitOrder":4,"curCode":"  static SchemaField registerPolyFieldDynamicPrototype(IndexSchema schema, FieldType type) {\n    String name = \"*\" + FieldType.POLY_FIELD_SEPARATOR + type.typeName;\n    Map<String, String> props = new HashMap<String, String>();\n    \r\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    int p = SchemaField.calcProps(name, type, props);\n    SchemaField proto = SchemaField.create(name,\n            type, p, null);\n    schema.registerDynamicFields(proto);\n    return proto;\n  }\n","date":"2013-03-06 12:50:33","endLine":94,"groupId":"27372","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"registerPolyFieldDynamicPrototype","params":"(IndexSchemaschema@FieldTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/345468243a4484110087ed13bb9ed2f24383ba.src","preCode":"  static SchemaField registerPolyFieldDynamicPrototype(IndexSchema schema, FieldType type) {\n    String name = \"*\" + FieldType.POLY_FIELD_SEPARATOR + type.typeName;\n    Map<String, String> props = new HashMap<String, String>();\n    \r\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    int p = SchemaField.calcProps(name, type, props);\n    SchemaField proto = SchemaField.create(name,\n            type, p, null);\n    schema.registerDynamicField(proto);\n    return proto;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"4618a5a0fee3cb5ecf32ef42960bd7f9bb81237c","commitMessage":"@@@SOLR-4503: Add REST API methods to get schema information: fields.  dynamicFields.  fieldTypes.  and copyFields.  Restlet 2.1.1 is integrated and is used to service these requests.\nAlso fixes bugs in dynamic copyField logic described in SOLR-3798.\nAlso fixes a bug with proxied SolrCloud requests (SOLR-4210) when using the GET method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1453161 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-03-06 12:50:33","modifiedFileCount":"16","status":"M","submitter":"Steven Rowe"},{"authorTime":"2014-03-12 22:39:17","codes":[{"authorDate":"2014-03-12 22:39:17","commitOrder":5,"curCode":"  private void createDynamicCurrencyField(String suffix, FieldType type) {\n    String name = \"*\" + POLY_FIELD_SEPARATOR + suffix;\n    Map<String, String> props = new HashMap<>();\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    props.put(\"omitNorms\", \"true\");\n    int p = SchemaField.calcProps(name, type, props);\n    schema.registerDynamicFields(SchemaField.create(name, type, p, null));\n  }\n","date":"2014-03-12 22:39:17","endLine":209,"groupId":"53351","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createDynamicCurrencyField","params":"(Stringsuffix@FieldTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/73/79e0fa31bf7aa2561128f89d69a43048a8c4eb.src","preCode":"  private void createDynamicCurrencyField(String suffix, FieldType type) {\n    String name = \"*\" + POLY_FIELD_SEPARATOR + suffix;\n    Map<String, String> props = new HashMap<String, String>();\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    props.put(\"omitNorms\", \"true\");\n    int p = SchemaField.calcProps(name, type, props);\n    schema.registerDynamicFields(SchemaField.create(name, type, p, null));\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/CurrencyField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"M"},{"authorDate":"2014-03-12 22:39:17","commitOrder":5,"curCode":"  static SchemaField registerPolyFieldDynamicPrototype(IndexSchema schema, FieldType type) {\n    String name = \"*\" + FieldType.POLY_FIELD_SEPARATOR + type.typeName;\n    Map<String, String> props = new HashMap<>();\n    \r\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    int p = SchemaField.calcProps(name, type, props);\n    SchemaField proto = SchemaField.create(name,\n            type, p, null);\n    schema.registerDynamicFields(proto);\n    return proto;\n  }\n","date":"2014-03-12 22:39:17","endLine":96,"groupId":"27372","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"registerPolyFieldDynamicPrototype","params":"(IndexSchemaschema@FieldTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bd/ac4066e52589c57a5cac587417dd39420a3fbc.src","preCode":"  static SchemaField registerPolyFieldDynamicPrototype(IndexSchema schema, FieldType type) {\n    String name = \"*\" + FieldType.POLY_FIELD_SEPARATOR + type.typeName;\n    Map<String, String> props = new HashMap<String, String>();\n    \r\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    int p = SchemaField.calcProps(name, type, props);\n    SchemaField proto = SchemaField.create(name,\n            type, p, null);\n    schema.registerDynamicFields(proto);\n    return proto;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"3b67b17493216f6b0c81a981073fd5f61eace6f4","commitMessage":"@@@LUCENE-5512: remove redundant typing (diamond operator) in trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1576755 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-12 22:39:17","modifiedFileCount":"1241","status":"M","submitter":"Robert Muir"},{"authorTime":"2017-03-18 02:55:15","codes":[{"authorDate":"2014-03-12 22:39:17","commitOrder":6,"curCode":"  private void createDynamicCurrencyField(String suffix, FieldType type) {\n    String name = \"*\" + POLY_FIELD_SEPARATOR + suffix;\n    Map<String, String> props = new HashMap<>();\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    props.put(\"omitNorms\", \"true\");\n    int p = SchemaField.calcProps(name, type, props);\n    schema.registerDynamicFields(SchemaField.create(name, type, p, null));\n  }\n","date":"2014-03-12 22:39:17","endLine":209,"groupId":"53351","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createDynamicCurrencyField","params":"(Stringsuffix@FieldTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/73/79e0fa31bf7aa2561128f89d69a43048a8c4eb.src","preCode":"  private void createDynamicCurrencyField(String suffix, FieldType type) {\n    String name = \"*\" + POLY_FIELD_SEPARATOR + suffix;\n    Map<String, String> props = new HashMap<>();\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    props.put(\"omitNorms\", \"true\");\n    int p = SchemaField.calcProps(name, type, props);\n    schema.registerDynamicFields(SchemaField.create(name, type, p, null));\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/CurrencyField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"N"},{"authorDate":"2017-03-18 02:55:15","commitOrder":6,"curCode":"  static SchemaField registerPolyFieldDynamicPrototype(IndexSchema schema, FieldType subType, FieldType polyField) {\n    String name = \"*\" + FieldType.POLY_FIELD_SEPARATOR + subType.typeName;\n    Map<String, String> props = new HashMap<>();\n    \r\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    \r\n    if (polyField.hasProperty(DOC_VALUES)) {\n      props.put(\"docValues\", \"true\");\n    }\n    int p = SchemaField.calcProps(name, subType, props);\n    SchemaField proto = SchemaField.create(name,\n        subType, p, null);\n    schema.registerDynamicFields(proto);\n    return proto;\n  }\n","date":"2017-03-18 02:55:15","endLine":100,"groupId":"27372","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"registerPolyFieldDynamicPrototype","params":"(IndexSchemaschema@FieldTypesubType@FieldTypepolyField)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/73/a4f3c47d4ec16a8723b8dbaee4d68377ca91d7.src","preCode":"  static SchemaField registerPolyFieldDynamicPrototype(IndexSchema schema, FieldType type) {\n    String name = \"*\" + FieldType.POLY_FIELD_SEPARATOR + type.typeName;\n    Map<String, String> props = new HashMap<>();\n    \r\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    int p = SchemaField.calcProps(name, type, props);\n    SchemaField proto = SchemaField.create(name,\n            type, p, null);\n    schema.registerDynamicFields(proto);\n    return proto;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"3b660018457234387558ff626c8b95bb6f4ce853","commitMessage":"@@@SOLR-10237: Poly-Fields should work with subfield that have docValues=true\n","date":"2017-03-18 02:55:15","modifiedFileCount":"5","status":"M","submitter":"Tomas Fernandez Lobbe"},{"authorTime":"2017-03-18 02:55:15","codes":[{"authorDate":"2018-11-09 23:30:04","commitOrder":7,"curCode":"  private void createDynamicCurrencyField(String suffix, FieldType type) {\n    String name = \"*\" + POLY_FIELD_SEPARATOR + suffix;\n    Map<String, String> props = new HashMap<>();\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    props.put(\"omitNorms\", \"true\");\n    props.put(\"uninvertible\", \"true\");\n    int p = SchemaField.calcProps(name, type, props);\n    schema.registerDynamicFields(SchemaField.create(name, type, p, null));\n  }\n","date":"2018-11-09 23:30:04","endLine":104,"groupId":"101954","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createDynamicCurrencyField","params":"(Stringsuffix@FieldTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/1dba396da30807b6c9ebc86d281ebf613d71fb.src","preCode":"  private void createDynamicCurrencyField(String suffix, FieldType type) {\n    String name = \"*\" + POLY_FIELD_SEPARATOR + suffix;\n    Map<String, String> props = new HashMap<>();\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    props.put(\"omitNorms\", \"true\");\n    int p = SchemaField.calcProps(name, type, props);\n    schema.registerDynamicFields(SchemaField.create(name, type, p, null));\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/CurrencyField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2017-03-18 02:55:15","commitOrder":7,"curCode":"  static SchemaField registerPolyFieldDynamicPrototype(IndexSchema schema, FieldType subType, FieldType polyField) {\n    String name = \"*\" + FieldType.POLY_FIELD_SEPARATOR + subType.typeName;\n    Map<String, String> props = new HashMap<>();\n    \r\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    \r\n    if (polyField.hasProperty(DOC_VALUES)) {\n      props.put(\"docValues\", \"true\");\n    }\n    int p = SchemaField.calcProps(name, subType, props);\n    SchemaField proto = SchemaField.create(name,\n        subType, p, null);\n    schema.registerDynamicFields(proto);\n    return proto;\n  }\n","date":"2017-03-18 02:55:15","endLine":100,"groupId":"101954","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"registerPolyFieldDynamicPrototype","params":"(IndexSchemaschema@FieldTypesubType@FieldTypepolyField)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/73/a4f3c47d4ec16a8723b8dbaee4d68377ca91d7.src","preCode":"  static SchemaField registerPolyFieldDynamicPrototype(IndexSchema schema, FieldType subType, FieldType polyField) {\n    String name = \"*\" + FieldType.POLY_FIELD_SEPARATOR + subType.typeName;\n    Map<String, String> props = new HashMap<>();\n    \r\n    props.put(\"indexed\", \"true\");\n    props.put(\"stored\", \"false\");\n    props.put(\"multiValued\", \"false\");\n    \r\n    if (polyField.hasProperty(DOC_VALUES)) {\n      props.put(\"docValues\", \"true\");\n    }\n    int p = SchemaField.calcProps(name, subType, props);\n    SchemaField proto = SchemaField.create(name,\n        subType, p, null);\n    schema.registerDynamicFields(proto);\n    return proto;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/AbstractSubTypeFieldType.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"N"}],"commitId":"77a4bfaa90637cd3d9a8a2ef4889e163dab143aa","commitMessage":"@@@SOLR-12962: Added a new 'uninvertible' option for fields and fieldtypes. This defaults to 'true' for backcompat allowing a FieldCache to be built for indexed fields as needed.  but users are encouraged to set this to false (using docValues as needed) to reduce the risk of large fluxuations in heap size due to unexpected attempts to sort/facet/function on non-docValue fields.\n","date":"2018-11-09 23:30:04","modifiedFileCount":"22","status":"M","submitter":"Chris Hostetter"}]
