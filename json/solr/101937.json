[{"authorTime":"2021-08-10 09:28:22","codes":[{"authorDate":"2021-08-10 09:28:22","commitOrder":1,"curCode":"  public void testBasicCardinalityAlpha() throws Exception {\n    DocMaker docMaker = new DocMaker();\n    SplittableRandom random = new SplittableRandom();\n    int cardinality = 2;\n    docMaker.addField(\n        \"AlphaCard3\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.ALPHEBETIC)\n            .withMaxCardinality(cardinality, random));\n\n    Set<String> values = new HashSet<>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = docMaker.getDocument(random);\n      SolrInputField field = doc.getField(\"AlphaCard3\");\n      values.add(field.getValue().toString());\n    }\n    assertEquals(values.toString(), cardinality, values.size());\n  }\n","date":"2021-08-10 09:28:22","endLine":101,"groupId":"27606","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicCardinalityAlpha","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/51fcef4aebc5240b6f12b51fc5572286238d0b.src","preCode":"  public void testBasicCardinalityAlpha() throws Exception {\n    DocMaker docMaker = new DocMaker();\n    SplittableRandom random = new SplittableRandom();\n    int cardinality = 2;\n    docMaker.addField(\n        \"AlphaCard3\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.ALPHEBETIC)\n            .withMaxCardinality(cardinality, random));\n\n    Set<String> values = new HashSet<>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = docMaker.getDocument(random);\n      SolrInputField field = doc.getField(\"AlphaCard3\");\n      values.add(field.getValue().toString());\n    }\n    assertEquals(values.toString(), cardinality, values.size());\n  }\n","realPath":"solr/benchmark/src/test/org/apache/solr/bench/DockMakerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"},{"authorDate":"2021-08-10 09:28:22","commitOrder":1,"curCode":"  public void testBasicCardinalityUnicode() throws Exception {\n    DocMaker docMaker = new DocMaker();\n    SplittableRandom random = new SplittableRandom();\n    int cardinality = 4;\n    docMaker.addField(\n        \"UnicodeCard3\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.UNICODE)\n            .withMaxCardinality(cardinality, random));\n\n    HashSet<Object> values = new HashSet<>();\n    for (int i = 0; i < 20; i++) {\n      SolrInputDocument doc = docMaker.getDocument(random);\n      SolrInputField field = doc.getField(\"UnicodeCard3\");\n      \r\n      values.add(field.getValue().toString());\n    }\n\n    assertEquals(values.toString(), cardinality, values.size());\n  }\n","date":"2021-08-10 09:28:22","endLine":123,"groupId":"27608","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicCardinalityUnicode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/51fcef4aebc5240b6f12b51fc5572286238d0b.src","preCode":"  public void testBasicCardinalityUnicode() throws Exception {\n    DocMaker docMaker = new DocMaker();\n    SplittableRandom random = new SplittableRandom();\n    int cardinality = 4;\n    docMaker.addField(\n        \"UnicodeCard3\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.UNICODE)\n            .withMaxCardinality(cardinality, random));\n\n    HashSet<Object> values = new HashSet<>();\n    for (int i = 0; i < 20; i++) {\n      SolrInputDocument doc = docMaker.getDocument(random);\n      SolrInputField field = doc.getField(\"UnicodeCard3\");\n      \r\n      values.add(field.getValue().toString());\n    }\n\n    assertEquals(values.toString(), cardinality, values.size());\n  }\n","realPath":"solr/benchmark/src/test/org/apache/solr/bench/DockMakerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"}],"commitId":"890ef78421f8c0645ae9f4f53ebca1177e8141d9","commitMessage":"@@@SOLR-15428: Integrate the OpenJDK JMH micro benchmark framework for micro benchmarks and performance comparisons & investigation. (#214)\n\n","date":"2021-08-10 09:28:22","modifiedFileCount":"13","status":"B","submitter":"Mark Robert Miller"},{"authorTime":"2021-09-10 00:29:14","codes":[{"authorDate":"2021-09-10 00:29:14","commitOrder":2,"curCode":"  public void testBasicCardinalityAlpha() throws Exception {\n\n    Docs docs = docs();\n\n    int cardinality = 2;\n\n    docs.field(\"AlphaCard3\", strings().alpha().maxCardinality(cardinality).ofLengthBetween(1, 6));\n\n    Set<String> values = new HashSet<>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = docs.inputDocument();\n      SolrInputField field = doc.getField(\"AlphaCard3\");\n      values.add(field.getValue().toString());\n    }\n\n    assertEquals(values.toString(), cardinality, values.size());\n  }\n","date":"2021-09-10 00:29:14","endLine":70,"groupId":"101937","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testBasicCardinalityAlpha","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/57/93c535f5fde5cc00855210d4bf5a680393b288.src","preCode":"  public void testBasicCardinalityAlpha() throws Exception {\n    DocMaker docMaker = new DocMaker();\n    SplittableRandom random = new SplittableRandom();\n    int cardinality = 2;\n    docMaker.addField(\n        \"AlphaCard3\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.ALPHEBETIC)\n            .withMaxCardinality(cardinality, random));\n\n    Set<String> values = new HashSet<>();\n    for (int i = 0; i < 10; i++) {\n      SolrInputDocument doc = docMaker.getDocument(random);\n      SolrInputField field = doc.getField(\"AlphaCard3\");\n      values.add(field.getValue().toString());\n    }\n    assertEquals(values.toString(), cardinality, values.size());\n  }\n","realPath":"solr/benchmark/src/test/org/apache/solr/bench/DockMakerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2021-09-10 00:29:14","commitOrder":2,"curCode":"  public void testBasicCardinalityUnicode() throws Exception {\n    Docs docs = docs();\n    int cardinality = 4;\n    docs.field(\n        \"UnicodeCard3\",\n        strings()\n            .basicMultilingualPlaneAlphabet()\n            .maxCardinality(cardinality)\n            .ofLengthBetween(1, 6));\n\n    HashSet<Object> values = new HashSet<>();\n    for (int i = 0; i < 30; i++) {\n      SolrInputDocument doc = docs.inputDocument();\n      SolrInputField field = doc.getField(\"UnicodeCard3\");\n      log.info(\"field={}\", doc);\n      values.add(field.getValue().toString());\n    }\n\n    assertEquals(values.toString(), cardinality, values.size());\n  }\n","date":"2021-09-10 00:29:14","endLine":92,"groupId":"101937","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testBasicCardinalityUnicode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/57/93c535f5fde5cc00855210d4bf5a680393b288.src","preCode":"  public void testBasicCardinalityUnicode() throws Exception {\n    DocMaker docMaker = new DocMaker();\n    SplittableRandom random = new SplittableRandom();\n    int cardinality = 4;\n    docMaker.addField(\n        \"UnicodeCard3\",\n        FieldDef.FieldDefBuilder.aFieldDef()\n            .withContent(DocMaker.Content.UNICODE)\n            .withMaxCardinality(cardinality, random));\n\n    HashSet<Object> values = new HashSet<>();\n    for (int i = 0; i < 20; i++) {\n      SolrInputDocument doc = docMaker.getDocument(random);\n      SolrInputField field = doc.getField(\"UnicodeCard3\");\n      \r\n      values.add(field.getValue().toString());\n    }\n\n    assertEquals(values.toString(), cardinality, values.size());\n  }\n","realPath":"solr/benchmark/src/test/org/apache/solr/bench/DockMakerTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"88801396adf702ad394f557cdd610c4928a2e372","commitMessage":"@@@SOLR-15581: New DSL/impl for benchmark random data generation. (#254)\n\n","date":"2021-09-10 00:29:14","modifiedFileCount":"6","status":"M","submitter":"Mark Robert Miller"}]
