[{"authorTime":"2017-01-26 09:23:13","codes":[{"authorDate":"2017-03-13 17:52:49","commitOrder":2,"curCode":"  public static void beforeClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n\n    \r\n    System.setProperty(SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICYFACTORY, \"true\");\n    System.setProperty(SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICY, \"false\");\n\n    initCore(\"solrconfig-tlog.xml\", \"schema-inplace-updates.xml\");\n\n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n\n    \r\n    RefCounted<IndexWriter> iw = h.getCore().getSolrCoreState().getIndexWriter(h.getCore());\n    try {\n      IndexWriter writer = iw.get();\n      assertTrue(\"Actual merge policy is: \" + writer.getConfig().getMergePolicy(),\n          writer.getConfig().getMergePolicy() instanceof NoMergePolicy); \n    } finally {\n      iw.decref();\n    }\n\n    \r\n    IndexSchema schema = h.getCore().getLatestSchema();\n    for (String fieldName : Arrays.asList(\"_version_\",\n                                          \"inplace_l_dvo\",\n                                          \"inplace_updatable_float\",\n                                          \"inplace_updatable_int\", \n                                          \"inplace_updatable_float_with_default\",\n                                          \"inplace_updatable_int_with_default\")) {\n      \r\n      SchemaField field = schema.getField(fieldName);\n      assertTrue(field.toString(),\n                 field.hasDocValues() && ! field.indexed() && ! field.stored());\n    }\n    for (String fieldName : Arrays.asList(\"title_s\", \"regular_l\", \"stored_i\")) {\n      \r\n      SchemaField field = schema.getField(fieldName);\n      assertTrue(field.toString(), field.stored());\n    }    \n\n    \r\n    client = new EmbeddedSolrServer(h.getCoreContainer(), h.coreName);\n  }\n","date":"2017-03-13 17:52:49","endLine":121,"groupId":"9412","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/87/7467e1e5aec7208965b30529687358680c5277.src","preCode":"  public static void beforeClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n\n    \r\n    System.setProperty(SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICYFACTORY, \"true\");\n    System.setProperty(SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICY, \"false\");\n\n    initCore(\"solrconfig-tlog.xml\", \"schema-inplace-updates.xml\");\n\n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n\n    \r\n    RefCounted<IndexWriter> iw = h.getCore().getSolrCoreState().getIndexWriter(h.getCore());\n    try {\n      IndexWriter writer = iw.get();\n      assertTrue(\"Actual merge policy is: \" + writer.getConfig().getMergePolicy(),\n          writer.getConfig().getMergePolicy() instanceof NoMergePolicy); \n    } finally {\n      iw.decref();\n    }\n\n    \r\n    IndexSchema schema = h.getCore().getLatestSchema();\n    for (String fieldName : Arrays.asList(\"_version_\",\n                                          \"inplace_l_dvo\",\n                                          \"inplace_updatable_float\",\n                                          \"inplace_updatable_int\", \n                                          \"inplace_updatable_float_with_default\",\n                                          \"inplace_updatable_int_with_default\")) {\n      \r\n      SchemaField field = schema.getField(fieldName);\n      assertTrue(field.toString(),\n                 field.hasDocValues() && ! field.indexed() && ! field.stored());\n    }\n    for (String fieldName : Arrays.asList(\"title_s\", \"regular_l\", \"stored_i\")) {\n      \r\n      SchemaField field = schema.getField(fieldName);\n      assertTrue(field.toString(), field.stored());\n    }    \n\n    \r\n    client = new EmbeddedSolrServer(h.getCoreContainer(), h.coreName);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"MB"},{"authorDate":"2017-01-26 09:23:13","commitOrder":2,"curCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","date":"2017-01-26 09:23:13","endLine":73,"groupId":"32262","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9f/371d4d0a2a35f1828c855d96782c363eb13d6d.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestStressInPlaceUpdates.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"NB"}],"commitId":"b64382bb07ebae4c6f8711b5e0fb4341d2f09f4e","commitMessage":"@@@SOLR-10079: Force in-place standalone test to always use NoMergePolicy.  also assert that it was used\n","date":"2017-03-13 17:52:49","modifiedFileCount":"1","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":3,"curCode":"  public static void beforeClass() throws Exception {\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n\n    initCore(\"solrconfig-tlog.xml\", \"schema-inplace-updates.xml\");\n\n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n\n    \r\n    RefCounted<IndexWriter> iw = h.getCore().getSolrCoreState().getIndexWriter(h.getCore());\n    try {\n      IndexWriter writer = iw.get();\n      assertTrue(\"Actual merge policy is: \" + writer.getConfig().getMergePolicy(),\n          writer.getConfig().getMergePolicy() instanceof NoMergePolicy); \n    } finally {\n      iw.decref();\n    }\n\n    \r\n    IndexSchema schema = h.getCore().getLatestSchema();\n    for (String fieldName : Arrays.asList(\"_version_\",\n                                          \"inplace_l_dvo\",\n                                          \"inplace_updatable_float\",\n                                          \"inplace_updatable_int\", \n                                          \"inplace_updatable_float_with_default\",\n                                          \"inplace_updatable_int_with_default\")) {\n      \r\n      SchemaField field = schema.getField(fieldName);\n      assertTrue(field.toString(),\n                 field.hasDocValues() && ! field.indexed() && ! field.stored());\n    }\n    for (String fieldName : Arrays.asList(\"title_s\", \"regular_l\", \"stored_i\")) {\n      \r\n      SchemaField field = schema.getField(fieldName);\n      assertTrue(field.toString(), field.stored());\n    }    \n\n    \r\n    client = new EmbeddedSolrServer(h.getCoreContainer(), h.coreName);\n  }\n","date":"2017-06-29 17:00:17","endLine":111,"groupId":"102856","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b8/6af8fc01cab679fd9c8082a6adadbe75047753.src","preCode":"  public static void beforeClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n\n    \r\n    System.setProperty(SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICYFACTORY, \"true\");\n    System.setProperty(SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICY, \"false\");\n\n    initCore(\"solrconfig-tlog.xml\", \"schema-inplace-updates.xml\");\n\n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n\n    \r\n    RefCounted<IndexWriter> iw = h.getCore().getSolrCoreState().getIndexWriter(h.getCore());\n    try {\n      IndexWriter writer = iw.get();\n      assertTrue(\"Actual merge policy is: \" + writer.getConfig().getMergePolicy(),\n          writer.getConfig().getMergePolicy() instanceof NoMergePolicy); \n    } finally {\n      iw.decref();\n    }\n\n    \r\n    IndexSchema schema = h.getCore().getLatestSchema();\n    for (String fieldName : Arrays.asList(\"_version_\",\n                                          \"inplace_l_dvo\",\n                                          \"inplace_updatable_float\",\n                                          \"inplace_updatable_int\", \n                                          \"inplace_updatable_float_with_default\",\n                                          \"inplace_updatable_int_with_default\")) {\n      \r\n      SchemaField field = schema.getField(fieldName);\n      assertTrue(field.toString(),\n                 field.hasDocValues() && ! field.indexed() && ! field.stored());\n    }\n    for (String fieldName : Arrays.asList(\"title_s\", \"regular_l\", \"stored_i\")) {\n      \r\n      SchemaField field = schema.getField(fieldName);\n      assertTrue(field.toString(), field.stored());\n    }    \n\n    \r\n    client = new EmbeddedSolrServer(h.getCoreContainer(), h.coreName);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":3,"curCode":"  public static void beforeSuperClass() throws Exception {\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","date":"2017-06-29 17:00:17","endLine":67,"groupId":"102856","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e1/6109541305ade5d7efab97334fc32229e211fa.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestStressInPlaceUpdates.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"M","submitter":"Karl Wright"}]
