[{"authorTime":"2020-03-23 22:20:58","codes":[{"authorDate":"2020-03-23 22:20:58","commitOrder":1,"curCode":"  private void doRangeFacetWithRanges(Client client) throws Exception {\n    client.deleteByQuery(\"*:*\", null);\n    indexSimple(client);\n\n    final SolrParams p = params(\"q\", \"*:*\", \"rows\", \"0\");\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i, ranges:[{range:\\\"  [-5,7] \\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7]\\\",count:5}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"[-5,7)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7)\\\",count:4}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(-5,7]\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(-5,7)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(-5,7)\\\"}],include:\\\"lower\\\",other:[\\\"after\\\"]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(\n        params(p, \"json.facet\", \"{price:{type : range,field : num_i,mincount:3,\" +\n            \"ranges:[{range:\\\"(-5,7)\\\"},{range:\\\"(-5,7]\\\"}]}}\"\n        ),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(\n        params(p, \"json.facet\", \"{price:{type : range,field : num_i,\" +\n            \"ranges:[{range:\\\"(-5,7)\\\"},{range:\\\"(-5,7]\\\"}]}}\"\n        ),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2},{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(*,10]\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(*,10]\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"[-5,*)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"[*,*]\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[*,*]\\\",count:5}]}}\");\n  }\n","date":"2020-03-23 22:20:58","endLine":301,"groupId":"31205","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doRangeFacetWithRanges","params":"(Clientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0d/21636f64a5baf0adccada691924ab07b2370ab.src","preCode":"  private void doRangeFacetWithRanges(Client client) throws Exception {\n    client.deleteByQuery(\"*:*\", null);\n    indexSimple(client);\n\n    final SolrParams p = params(\"q\", \"*:*\", \"rows\", \"0\");\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i, ranges:[{range:\\\"  [-5,7] \\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7]\\\",count:5}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"[-5,7)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7)\\\",count:4}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(-5,7]\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(-5,7)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(-5,7)\\\"}],include:\\\"lower\\\",other:[\\\"after\\\"]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(\n        params(p, \"json.facet\", \"{price:{type : range,field : num_i,mincount:3,\" +\n            \"ranges:[{range:\\\"(-5,7)\\\"},{range:\\\"(-5,7]\\\"}]}}\"\n        ),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(\n        params(p, \"json.facet\", \"{price:{type : range,field : num_i,\" +\n            \"ranges:[{range:\\\"(-5,7)\\\"},{range:\\\"(-5,7]\\\"}]}}\"\n        ),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2},{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(*,10]\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(*,10]\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"[-5,*)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"[*,*]\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[*,*]\\\",count:5}]}}\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestJsonRangeFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"B"},{"authorDate":"2020-03-23 22:20:58","commitOrder":1,"curCode":"  private void doRangeFacetWithRangesInNewFormat(Client client) throws Exception {\n    client.deleteByQuery(\"*:*\", null);\n    indexSimple(client);\n    SolrParams p = params(\"q\", \"*:*\", \"rows\", \"0\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7)\\\",count:4}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:true ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7]\\\",count:5}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:true ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7]\\\",count:5}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,include:[\\\"lower\\\"], outer:\\\"before\\\",\" +\n            \"ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3},{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,mincount:3\" +\n            \"ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,\" +\n            \"ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{range:\\\"(-5,7)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3},{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:false ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,-5]\\\",count:0}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,-5)\\\",count:0}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,-5)\\\",count:0}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:true ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,-5]\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:\\\"*\\\", to:10,inclusive_from:false ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(*,10]\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:\\\"*\\\",inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5,inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:\\\"*\\\", to:\\\"*\\\",inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[*,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[*,*)\\\",count:5}]}}\");\n  }\n","date":"2020-03-23 22:20:58","endLine":395,"groupId":"31205","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doRangeFacetWithRangesInNewFormat","params":"(Clientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0d/21636f64a5baf0adccada691924ab07b2370ab.src","preCode":"  private void doRangeFacetWithRangesInNewFormat(Client client) throws Exception {\n    client.deleteByQuery(\"*:*\", null);\n    indexSimple(client);\n    SolrParams p = params(\"q\", \"*:*\", \"rows\", \"0\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7)\\\",count:4}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:true ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7]\\\",count:5}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:true ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7]\\\",count:5}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,include:[\\\"lower\\\"], outer:\\\"before\\\",\" +\n            \"ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3},{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,mincount:3\" +\n            \"ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,\" +\n            \"ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{range:\\\"(-5,7)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3},{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:false ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,-5]\\\",count:0}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,-5)\\\",count:0}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,-5)\\\",count:0}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:true ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,-5]\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:\\\"*\\\", to:10,inclusive_from:false ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(*,10]\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:\\\"*\\\",inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5,inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:\\\"*\\\", to:\\\"*\\\",inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[*,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[*,*)\\\",count:5}]}}\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestJsonRangeFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"B"}],"commitId":"06fd70fc0f3d399c4593cdaf9d5d06cd44cd920d","commitMessage":"@@@SOLR-14348: split TestJsonFacets to multiple test classes\n\n* TestJsonFacet split into 3 classes.  TestsJsonFacets.  TestJsonFacetErrors\n  and TestJsonRangeFacet\n* TestJsonFacets contains mainly terms faceting and stats\n* range facet covers distributed cases too\n","date":"2020-03-23 22:20:58","modifiedFileCount":"1","status":"B","submitter":"Munendra S N"},{"authorTime":"2020-12-17 01:42:24","codes":[{"authorDate":"2020-12-17 01:42:24","commitOrder":2,"curCode":"  private void doRangeFacetWithRanges(Client client) throws Exception {\n    client.queryDefaults().set(\"cache\", cache);\n    client.deleteByQuery(\"*:*\", null);\n    indexSimple(client);\n\n    final SolrParams p = params(\"q\", \"*:*\", \"rows\", \"0\");\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i, ranges:[{range:\\\"  [-5,7] \\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7]\\\",count:5}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"[-5,7)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7)\\\",count:4}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(-5,7]\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(-5,7)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(-5,7)\\\"}],include:\\\"lower\\\",other:[\\\"after\\\"]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(\n        params(p, \"json.facet\", \"{price:{type : range,field : num_i,mincount:3,\" +\n            \"ranges:[{range:\\\"(-5,7)\\\"},{range:\\\"(-5,7]\\\"}]}}\"\n        ),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(\n        params(p, \"json.facet\", \"{price:{type : range,field : num_i,\" +\n            \"ranges:[{range:\\\"(-5,7)\\\"},{range:\\\"(-5,7]\\\"}]}}\"\n        ),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2},{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(*,10]\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(*,10]\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"[-5,*)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"[*,*]\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[*,*]\\\",count:5}]}}\");\n  }\n","date":"2020-12-17 01:42:24","endLine":306,"groupId":"103205","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doRangeFacetWithRanges","params":"(Clientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/91/24da34175d19980be03f1c51e2b5e0eae71930.src","preCode":"  private void doRangeFacetWithRanges(Client client) throws Exception {\n    client.deleteByQuery(\"*:*\", null);\n    indexSimple(client);\n\n    final SolrParams p = params(\"q\", \"*:*\", \"rows\", \"0\");\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i, ranges:[{range:\\\"  [-5,7] \\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7]\\\",count:5}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"[-5,7)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7)\\\",count:4}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(-5,7]\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(-5,7)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(-5,7)\\\"}],include:\\\"lower\\\",other:[\\\"after\\\"]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(\n        params(p, \"json.facet\", \"{price:{type : range,field : num_i,mincount:3,\" +\n            \"ranges:[{range:\\\"(-5,7)\\\"},{range:\\\"(-5,7]\\\"}]}}\"\n        ),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(\n        params(p, \"json.facet\", \"{price:{type : range,field : num_i,\" +\n            \"ranges:[{range:\\\"(-5,7)\\\"},{range:\\\"(-5,7]\\\"}]}}\"\n        ),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2},{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"(*,10]\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(*,10]\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"[-5,*)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{range:\\\"[*,*]\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[*,*]\\\",count:5}]}}\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestJsonRangeFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"M"},{"authorDate":"2020-12-17 01:42:24","commitOrder":2,"curCode":"  private void doRangeFacetWithRangesInNewFormat(Client client) throws Exception {\n    client.queryDefaults().set(\"cache\", cache);\n    client.deleteByQuery(\"*:*\", null);\n    indexSimple(client);\n    SolrParams p = params(\"q\", \"*:*\", \"rows\", \"0\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7)\\\",count:4}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:true ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7]\\\",count:5}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:true ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7]\\\",count:5}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,include:[\\\"lower\\\"], outer:\\\"before\\\",\" +\n            \"ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3},{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,mincount:3\" +\n            \"ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,\" +\n            \"ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{range:\\\"(-5,7)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3},{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:false ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,-5]\\\",count:0}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,-5)\\\",count:0}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,-5)\\\",count:0}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:true ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,-5]\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:\\\"*\\\", to:10,inclusive_from:false ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(*,10]\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:\\\"*\\\",inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5,inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:\\\"*\\\", to:\\\"*\\\",inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[*,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[*,*)\\\",count:5}]}}\");\n  }\n","date":"2020-12-17 01:42:24","endLine":401,"groupId":"103205","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doRangeFacetWithRangesInNewFormat","params":"(Clientclient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/91/24da34175d19980be03f1c51e2b5e0eae71930.src","preCode":"  private void doRangeFacetWithRangesInNewFormat(Client client) throws Exception {\n    client.deleteByQuery(\"*:*\", null);\n    indexSimple(client);\n    SolrParams p = params(\"q\", \"*:*\", \"rows\", \"0\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7)\\\",count:4}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:true ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7]\\\",count:5}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:true ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,7]\\\",count:5}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,include:[\\\"lower\\\"], outer:\\\"before\\\",\" +\n            \"ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3},{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,mincount:3\" +\n            \"ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,\" +\n            \"ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{range:\\\"(-5,7)\\\"}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,7]\\\",count:3},{val:\\\"(-5,7)\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:false ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,-5]\\\",count:0}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:false ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(-5,-5)\\\",count:0}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,-5)\\\",count:0}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:true ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,-5]\\\",count:2}]}}\");\n\n    \r\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:\\\"*\\\", to:10,inclusive_from:false ,inclusive_to:true}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"(*,10]\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5, to:\\\"*\\\",inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:-5,inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[-5,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{from:\\\"*\\\", to:\\\"*\\\",inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[*,*)\\\",count:5}]}}\");\n    client.testJQ(params(p, \"json.facet\"\n        , \"{price:{type : range,field : num_i,ranges:[{inclusive_from:true ,inclusive_to:false}]}}\"),\n        \"facets=={count:6, price:{buckets:[{val:\\\"[*,*)\\\",count:5}]}}\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/facet/TestJsonRangeFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"}],"commitId":"0b5003cfed5187286ac49fa56d5aafe15165101d","commitMessage":"@@@SOLR-14939: JSON range faceting to support cache=false parameter (#1992)\n\n","date":"2020-12-17 01:42:24","modifiedFileCount":"4","status":"M","submitter":"Christine Poerschke"}]
