[{"authorTime":"2016-11-25 10:48:09","codes":[{"authorDate":"2016-11-25 10:48:09","commitOrder":1,"curCode":"  public void knnClassification_maxOutputClassesGreaterThanAvailable_shouldAssignCorrectClass() throws Exception {\n    UpdateRequestProcessor mockProcessor=mock(UpdateRequestProcessor.class);\n    prepareTrainedIndexMultiClass();\n\n    AddUpdateCommand update=new AddUpdateCommand(req());\n    SolrInputDocument unseenDocument1 = sdoc(ID, \"10\",\n        TITLE, \"word1 word1 word1\",\n        CONTENT, \"word2 word2 \",\n        AUTHOR, \"unseenAuthor\");\n    update.solrDoc=unseenDocument1;\n\n    ClassificationUpdateProcessorParams params= initParams(ClassificationUpdateProcessorFactory.Algorithm.KNN);\n    params.setMaxPredictedClasses(100);\n\n    updateProcessorToTest=new ClassificationUpdateProcessor(params,mockProcessor,reader,req().getSchema());\n    updateProcessorToTest.processAdd(update);\n\n    ArrayList<Object> assignedClasses = (ArrayList)unseenDocument1.getFieldValues(TRAINING_CLASS);\n    assertThat(assignedClasses.get(0),is(\"class2\"));\n    assertThat(assignedClasses.get(1),is(\"class1\"));\n  }\n","date":"2016-11-25 10:48:09","endLine":232,"groupId":"55646","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"knnClassification_maxOutputClassesGreaterThanAvailable_shouldAssignCorrectClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/2bb02c68b313359628f5dd6b4ed699a048478c.src","preCode":"  public void knnClassification_maxOutputClassesGreaterThanAvailable_shouldAssignCorrectClass() throws Exception {\n    UpdateRequestProcessor mockProcessor=mock(UpdateRequestProcessor.class);\n    prepareTrainedIndexMultiClass();\n\n    AddUpdateCommand update=new AddUpdateCommand(req());\n    SolrInputDocument unseenDocument1 = sdoc(ID, \"10\",\n        TITLE, \"word1 word1 word1\",\n        CONTENT, \"word2 word2 \",\n        AUTHOR, \"unseenAuthor\");\n    update.solrDoc=unseenDocument1;\n\n    ClassificationUpdateProcessorParams params= initParams(ClassificationUpdateProcessorFactory.Algorithm.KNN);\n    params.setMaxPredictedClasses(100);\n\n    updateProcessorToTest=new ClassificationUpdateProcessor(params,mockProcessor,reader,req().getSchema());\n    updateProcessorToTest.processAdd(update);\n\n    ArrayList<Object> assignedClasses = (ArrayList)unseenDocument1.getFieldValues(TRAINING_CLASS);\n    assertThat(assignedClasses.get(0),is(\"class2\"));\n    assertThat(assignedClasses.get(1),is(\"class1\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ClassificationUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"B"},{"authorDate":"2016-11-25 10:48:09","commitOrder":1,"curCode":"  public void knnMultiClass_maxOutputClasses2_shouldAssignMax2Classes() throws Exception {\n    UpdateRequestProcessor mockProcessor=mock(UpdateRequestProcessor.class);\n    prepareTrainedIndexMultiClass();\n\n    AddUpdateCommand update=new AddUpdateCommand(req());\n    SolrInputDocument unseenDocument1 = sdoc(ID, \"10\",\n        TITLE, \"word1 word1 word1\",\n        CONTENT, \"word2 word2 \",\n        AUTHOR, \"unseenAuthor\");\n    update.solrDoc=unseenDocument1;\n\n    ClassificationUpdateProcessorParams params= initParams(ClassificationUpdateProcessorFactory.Algorithm.KNN);\n    params.setMaxPredictedClasses(2);\n\n    updateProcessorToTest=new ClassificationUpdateProcessor(params,mockProcessor,reader,req().getSchema());\n    updateProcessorToTest.processAdd(update);\n\n    ArrayList<Object> assignedClasses = (ArrayList)unseenDocument1.getFieldValues(TRAINING_CLASS);\n    assertThat(assignedClasses.size(),is(2));\n    assertThat(assignedClasses.get(0),is(\"class2\"));\n    assertThat(assignedClasses.get(1),is(\"class1\"));\n  }\n","date":"2016-11-25 10:48:09","endLine":256,"groupId":"55646","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"knnMultiClass_maxOutputClasses2_shouldAssignMax2Classes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/2bb02c68b313359628f5dd6b4ed699a048478c.src","preCode":"  public void knnMultiClass_maxOutputClasses2_shouldAssignMax2Classes() throws Exception {\n    UpdateRequestProcessor mockProcessor=mock(UpdateRequestProcessor.class);\n    prepareTrainedIndexMultiClass();\n\n    AddUpdateCommand update=new AddUpdateCommand(req());\n    SolrInputDocument unseenDocument1 = sdoc(ID, \"10\",\n        TITLE, \"word1 word1 word1\",\n        CONTENT, \"word2 word2 \",\n        AUTHOR, \"unseenAuthor\");\n    update.solrDoc=unseenDocument1;\n\n    ClassificationUpdateProcessorParams params= initParams(ClassificationUpdateProcessorFactory.Algorithm.KNN);\n    params.setMaxPredictedClasses(2);\n\n    updateProcessorToTest=new ClassificationUpdateProcessor(params,mockProcessor,reader,req().getSchema());\n    updateProcessorToTest.processAdd(update);\n\n    ArrayList<Object> assignedClasses = (ArrayList)unseenDocument1.getFieldValues(TRAINING_CLASS);\n    assertThat(assignedClasses.size(),is(2));\n    assertThat(assignedClasses.get(0),is(\"class2\"));\n    assertThat(assignedClasses.get(1),is(\"class1\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ClassificationUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"B"}],"commitId":"950ff500325219ea7b45a4795d215d9deea3e66b","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n","date":"2016-11-25 10:48:09","modifiedFileCount":"16","status":"B","submitter":"Noble Paul"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2020-06-18 05:51:41","commitOrder":2,"curCode":"  public void knnClassification_maxOutputClassesGreaterThanAvailable_shouldAssignCorrectClass() throws Exception {\n    UpdateRequestProcessor mockProcessor=mock(UpdateRequestProcessor.class);\n    prepareTrainedIndexMultiClass();\n\n    AddUpdateCommand update=new AddUpdateCommand(req());\n    SolrInputDocument unseenDocument1 = sdoc(ID, \"10\",\n        TITLE, \"word1 word1 word1\",\n        CONTENT, \"word2 word2 \",\n        AUTHOR, \"unseenAuthor\");\n    update.solrDoc=unseenDocument1;\n\n    ClassificationUpdateProcessorParams params= initParams(ClassificationUpdateProcessorFactory.Algorithm.KNN);\n    params.setMaxPredictedClasses(100);\n\n    updateProcessorToTest=new ClassificationUpdateProcessor(params,mockProcessor,reader,req().getSchema());\n    updateProcessorToTest.processAdd(update);\n\n    @SuppressWarnings({\"unchecked\"})\n    ArrayList<Object> assignedClasses = (ArrayList)unseenDocument1.getFieldValues(TRAINING_CLASS);\n    assertThat(assignedClasses.get(0),is(\"class2\"));\n    assertThat(assignedClasses.get(1),is(\"class1\"));\n  }\n","date":"2020-06-18 05:51:41","endLine":243,"groupId":"102996","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"knnClassification_maxOutputClassesGreaterThanAvailable_shouldAssignCorrectClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/19/752bddb1fdd7970d905156529d04cad07c3a2e.src","preCode":"  public void knnClassification_maxOutputClassesGreaterThanAvailable_shouldAssignCorrectClass() throws Exception {\n    UpdateRequestProcessor mockProcessor=mock(UpdateRequestProcessor.class);\n    prepareTrainedIndexMultiClass();\n\n    AddUpdateCommand update=new AddUpdateCommand(req());\n    SolrInputDocument unseenDocument1 = sdoc(ID, \"10\",\n        TITLE, \"word1 word1 word1\",\n        CONTENT, \"word2 word2 \",\n        AUTHOR, \"unseenAuthor\");\n    update.solrDoc=unseenDocument1;\n\n    ClassificationUpdateProcessorParams params= initParams(ClassificationUpdateProcessorFactory.Algorithm.KNN);\n    params.setMaxPredictedClasses(100);\n\n    updateProcessorToTest=new ClassificationUpdateProcessor(params,mockProcessor,reader,req().getSchema());\n    updateProcessorToTest.processAdd(update);\n\n    ArrayList<Object> assignedClasses = (ArrayList)unseenDocument1.getFieldValues(TRAINING_CLASS);\n    assertThat(assignedClasses.get(0),is(\"class2\"));\n    assertThat(assignedClasses.get(1),is(\"class1\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ClassificationUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"},{"authorDate":"2020-06-18 05:51:41","commitOrder":2,"curCode":"  public void knnMultiClass_maxOutputClasses2_shouldAssignMax2Classes() throws Exception {\n    UpdateRequestProcessor mockProcessor=mock(UpdateRequestProcessor.class);\n    prepareTrainedIndexMultiClass();\n\n    AddUpdateCommand update=new AddUpdateCommand(req());\n    SolrInputDocument unseenDocument1 = sdoc(ID, \"10\",\n        TITLE, \"word1 word1 word1\",\n        CONTENT, \"word2 word2 \",\n        AUTHOR, \"unseenAuthor\");\n    update.solrDoc=unseenDocument1;\n\n    ClassificationUpdateProcessorParams params= initParams(ClassificationUpdateProcessorFactory.Algorithm.KNN);\n    params.setMaxPredictedClasses(2);\n\n    updateProcessorToTest=new ClassificationUpdateProcessor(params,mockProcessor,reader,req().getSchema());\n    updateProcessorToTest.processAdd(update);\n\n    @SuppressWarnings({\"unchecked\"})\n    ArrayList<Object> assignedClasses = (ArrayList)unseenDocument1.getFieldValues(TRAINING_CLASS);\n    assertThat(assignedClasses.size(),is(2));\n    assertThat(assignedClasses.get(0),is(\"class2\"));\n    assertThat(assignedClasses.get(1),is(\"class1\"));\n  }\n","date":"2020-06-18 05:51:41","endLine":268,"groupId":"102996","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"knnMultiClass_maxOutputClasses2_shouldAssignMax2Classes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/19/752bddb1fdd7970d905156529d04cad07c3a2e.src","preCode":"  public void knnMultiClass_maxOutputClasses2_shouldAssignMax2Classes() throws Exception {\n    UpdateRequestProcessor mockProcessor=mock(UpdateRequestProcessor.class);\n    prepareTrainedIndexMultiClass();\n\n    AddUpdateCommand update=new AddUpdateCommand(req());\n    SolrInputDocument unseenDocument1 = sdoc(ID, \"10\",\n        TITLE, \"word1 word1 word1\",\n        CONTENT, \"word2 word2 \",\n        AUTHOR, \"unseenAuthor\");\n    update.solrDoc=unseenDocument1;\n\n    ClassificationUpdateProcessorParams params= initParams(ClassificationUpdateProcessorFactory.Algorithm.KNN);\n    params.setMaxPredictedClasses(2);\n\n    updateProcessorToTest=new ClassificationUpdateProcessor(params,mockProcessor,reader,req().getSchema());\n    updateProcessorToTest.processAdd(update);\n\n    ArrayList<Object> assignedClasses = (ArrayList)unseenDocument1.getFieldValues(TRAINING_CLASS);\n    assertThat(assignedClasses.size(),is(2));\n    assertThat(assignedClasses.get(0),is(\"class2\"));\n    assertThat(assignedClasses.get(1),is(\"class1\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ClassificationUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"}]
