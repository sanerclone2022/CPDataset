[{"authorTime":"2013-02-26 23:59:05","codes":[{"authorDate":"2013-08-21 05:30:55","commitOrder":2,"curCode":"  static void accumSingle(int counts[], int startTermIndex, SortedDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      int term = si.getOrd(doc);\n      if (map != null && term >= 0) {\n        term = (int) map.getGlobalOrd(subIndex, term);\n      }\n      int arrIdx = term-startTermIndex;\n      if (arrIdx>=0 && arrIdx<counts.length) counts[arrIdx]++;\n    }\n  }\n","date":"2013-08-21 05:30:55","endLine":241,"groupId":"11420","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"accumSingle","params":"(intcounts[]@intstartTermIndex@SortedDocValuessi@DocIdSetIteratordisi@intsubIndex@OrdinalMapmap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fb/424fdee8b149668c2bb99a8370e4ac4a4d3212.src","preCode":"  static void accumSingle(int counts[], int startTermIndex, SortedDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      int term = si.getOrd(doc);\n      if (map != null && term >= 0) {\n        term = (int) map.getGlobalOrd(subIndex, term);\n      }\n      int arrIdx = term-startTermIndex;\n      if (arrIdx>=0 && arrIdx<counts.length) counts[arrIdx]++;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/request/DocValuesFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"MB"},{"authorDate":"2013-02-26 23:59:05","commitOrder":2,"curCode":"  static void accumMulti(int counts[], int startTermIndex, SortedSetDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      si.setDocument(doc);\n      \r\n      int term = (int) si.nextOrd();\n      if (term < 0) {\n        if (startTermIndex == -1) {\n          counts[0]++; \r\n        }\n        continue;\n      }\n      \n      do {\n        if (map != null) {\n          term = (int) map.getGlobalOrd(subIndex, term);\n        }\n        int arrIdx = term-startTermIndex;\n        if (arrIdx>=0 && arrIdx<counts.length) counts[arrIdx]++;\n      } while ((term = (int) si.nextOrd()) >= 0);\n    }\n  }\n","date":"2013-02-26 23:59:05","endLine":269,"groupId":"2160","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"accumMulti","params":"(intcounts[]@intstartTermIndex@SortedSetDocValuessi@DocIdSetIteratordisi@intsubIndex@OrdinalMapmap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4d/fc114a189f956d6285293fa417b47df043eac7.src","preCode":"  static void accumMulti(int counts[], int startTermIndex, SortedSetDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      si.setDocument(doc);\n      \r\n      int term = (int) si.nextOrd();\n      if (term < 0) {\n        if (startTermIndex == -1) {\n          counts[0]++; \r\n        }\n        continue;\n      }\n      \n      do {\n        if (map != null) {\n          term = (int) map.getGlobalOrd(subIndex, term);\n        }\n        int arrIdx = term-startTermIndex;\n        if (arrIdx>=0 && arrIdx<counts.length) counts[arrIdx]++;\n      } while ((term = (int) si.nextOrd()) >= 0);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/request/DocValuesFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"NB"}],"commitId":"39dbc26716009e1d3aefb744de2d8c722a6023a8","commitMessage":"@@@LUCENE-5178: add missing support for docvalues\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1515977 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-08-21 05:30:55","modifiedFileCount":"86","status":"M","submitter":"Robert Muir"},{"authorTime":"2013-11-30 09:32:26","codes":[{"authorDate":"2013-11-30 09:32:26","commitOrder":3,"curCode":"  static void accumSingle(int counts[], int startTermIndex, SortedDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    if (startTermIndex == -1 && (map == null || si.getValueCount() < disi.cost()*10)) {\n      \r\n      \r\n      accumSingleSeg(counts, si, disi, subIndex, map);\n    } else {\n      \r\n      accumSingleGeneric(counts, startTermIndex, si, disi, subIndex, map);\n    }\n  }\n","date":"2013-11-30 09:32:26","endLine":245,"groupId":"102625","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"accumSingle","params":"(intcounts[]@intstartTermIndex@SortedDocValuessi@DocIdSetIteratordisi@intsubIndex@OrdinalMapmap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/c04f87cde5b3b1b6aab637dcb5749f2455a075.src","preCode":"  static void accumSingle(int counts[], int startTermIndex, SortedDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      int term = si.getOrd(doc);\n      if (map != null && term >= 0) {\n        term = (int) map.getGlobalOrd(subIndex, term);\n      }\n      int arrIdx = term-startTermIndex;\n      if (arrIdx>=0 && arrIdx<counts.length) counts[arrIdx]++;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/request/DocValuesFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"},{"authorDate":"2013-11-30 09:32:26","commitOrder":3,"curCode":"  static void accumMulti(int counts[], int startTermIndex, SortedSetDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    if (startTermIndex == -1 && (map == null || si.getValueCount() < disi.cost()*10)) {\n      \r\n      \r\n      accumMultiSeg(counts, si, disi, subIndex, map);\n    } else {\n      \r\n      accumMultiGeneric(counts, startTermIndex, si, disi, subIndex, map);\n    }\n  }\n","date":"2013-11-30 09:32:26","endLine":291,"groupId":"102625","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"accumMulti","params":"(intcounts[]@intstartTermIndex@SortedSetDocValuessi@DocIdSetIteratordisi@intsubIndex@OrdinalMapmap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/c04f87cde5b3b1b6aab637dcb5749f2455a075.src","preCode":"  static void accumMulti(int counts[], int startTermIndex, SortedSetDocValues si, DocIdSetIterator disi, int subIndex, OrdinalMap map) throws IOException {\n    int doc;\n    while ((doc = disi.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      si.setDocument(doc);\n      \r\n      int term = (int) si.nextOrd();\n      if (term < 0) {\n        if (startTermIndex == -1) {\n          counts[0]++; \r\n        }\n        continue;\n      }\n      \n      do {\n        if (map != null) {\n          term = (int) map.getGlobalOrd(subIndex, term);\n        }\n        int arrIdx = term-startTermIndex;\n        if (arrIdx>=0 && arrIdx<counts.length) counts[arrIdx]++;\n      } while ((term = (int) si.nextOrd()) >= 0);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/request/DocValuesFacets.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"M"}],"commitId":"cafdce601cd20bd27186c78cca76d95ec3eaecac","commitMessage":"@@@SOLR-5512: Optimize DocValuesFacets\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1546675 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-11-30 09:32:26","modifiedFileCount":"3","status":"M","submitter":"Robert Muir"}]
