[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  protected double distance(int doc, DocValues dv1, DocValues dv2) {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return DistanceUtils.squaredEuclideanDistance(vals1, vals2);\n  }\n","date":"2011-07-10 07:01:53","endLine":54,"groupId":"29194","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"distance","params":"(intdoc@DocValuesdv1@DocValuesdv2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ad/9cdb82375cf6dab07d61639af4598c5d593219.src","preCode":"  protected double distance(int doc, DocValues dv1, DocValues dv2) {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return DistanceUtils.squaredEuclideanDistance(vals1, vals2);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  protected double distance(int doc, DocValues dv1, DocValues dv2) {\n    \r\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n    return DistanceUtils.vectorDistance(vals1, vals2, power, oneOverPower);\n  }\n","date":"2011-07-10 07:01:53","endLine":79,"groupId":"29194","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"distance","params":"(intdoc@DocValuesdv1@DocValuesdv2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f5/50577ef508627ab6aea4b3c893fc4fdf3db4a1.src","preCode":"  protected double distance(int doc, DocValues dv1, DocValues dv2) {\n    \r\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n    return DistanceUtils.vectorDistance(vals1, vals2, power, oneOverPower);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/VectorDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2011-12-14 02:39:06","codes":[{"authorDate":"2011-12-14 02:39:06","commitOrder":2,"curCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return DistanceUtils.squaredEuclideanDistance(vals1, vals2);\n  }\n","date":"2011-12-14 02:39:06","endLine":54,"groupId":"29194","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"distance","params":"(intdoc@FunctionValuesdv1@FunctionValuesdv2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e1/14f11a2b226e6545eeb3d51260cf52acaf89e0.src","preCode":"  protected double distance(int doc, DocValues dv1, DocValues dv2) {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return DistanceUtils.squaredEuclideanDistance(vals1, vals2);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2011-12-14 02:39:06","commitOrder":2,"curCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) {\n    \r\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n    return DistanceUtils.vectorDistance(vals1, vals2, power, oneOverPower);\n  }\n","date":"2011-12-14 02:39:06","endLine":79,"groupId":"29194","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"distance","params":"(intdoc@FunctionValuesdv1@FunctionValuesdv2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a7/1fa9ae54a6143c4f9fb5d7afc533b77d7ce286.src","preCode":"  protected double distance(int doc, DocValues dv1, DocValues dv2) {\n    \r\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n    return DistanceUtils.vectorDistance(vals1, vals2, power, oneOverPower);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/VectorDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"8d7749ea4fc55e54f4d7ead438c24f327ceb8358","commitMessage":"@@@LUCENE-3622: separate IndexDocValues interface from implementation (phase 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1213844 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-12-14 02:39:06","modifiedFileCount":"136","status":"M","submitter":"Robert Muir"},{"authorTime":"2011-12-14 02:39:06","codes":[{"authorDate":"2012-03-14 07:28:17","commitOrder":3,"curCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return DistanceUtils.distSquaredCartesian(vals1, vals2);\n  }\n","date":"2012-03-14 07:28:17","endLine":53,"groupId":"29194","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"distance","params":"(intdoc@FunctionValuesdv1@FunctionValuesdv2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c8/2b05a78f20941efd34a32f0eccb8e7a16d2575.src","preCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return DistanceUtils.squaredEuclideanDistance(vals1, vals2);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2011-12-14 02:39:06","commitOrder":3,"curCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) {\n    \r\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n    return DistanceUtils.vectorDistance(vals1, vals2, power, oneOverPower);\n  }\n","date":"2011-12-14 02:39:06","endLine":79,"groupId":"29194","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"distance","params":"(intdoc@FunctionValuesdv1@FunctionValuesdv2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a7/1fa9ae54a6143c4f9fb5d7afc533b77d7ce286.src","preCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) {\n    \r\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n    return DistanceUtils.vectorDistance(vals1, vals2, power, oneOverPower);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/VectorDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"N"}],"commitId":"2ac613aef9ba5e329b99d0e2a83ad5661df3b45d","commitMessage":"@@@LUCENE-3795: Replace contrib/spatial with modules/spatial  (merge from branch)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1300409 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-03-14 07:28:17","modifiedFileCount":"13","status":"M","submitter":"Ryan McKinley"},{"authorTime":"2014-01-25 03:40:14","codes":[{"authorDate":"2014-01-25 03:40:14","commitOrder":4,"curCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return distSquaredCartesian(vals1, vals2);\n  }\n","date":"2014-01-25 03:40:14","endLine":52,"groupId":"29194","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"distance","params":"(intdoc@FunctionValuesdv1@FunctionValuesdv2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8a/5ea40e0fb08792dee512efe23fdc1a974f957d.src","preCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return DistanceUtils.distSquaredCartesian(vals1, vals2);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2014-01-25 03:40:14","commitOrder":4,"curCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) {\n    \r\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n    return vectorDistance(vals1, vals2, power, oneOverPower);\n  }\n","date":"2014-01-25 03:40:14","endLine":78,"groupId":"29194","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"distance","params":"(intdoc@FunctionValuesdv1@FunctionValuesdv2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e5/cd8bc2c8daf729f19b3f8a39bbdbd688fed80a.src","preCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) {\n    \r\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n    return DistanceUtils.vectorDistance(vals1, vals2, power, oneOverPower);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/VectorDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"33d88bef57ef0d2c385ec88cc4d32e4f4dacd34f","commitMessage":"@@@LUCENE-5395: Upgrade Spatial4j 0.4. Moved away from stuff deprecated in Spatial4j.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1561129 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-01-25 03:40:14","modifiedFileCount":"22","status":"M","submitter":"David Wayne Smiley"},{"authorTime":"2016-10-03 03:18:22","codes":[{"authorDate":"2016-10-03 03:18:22","commitOrder":5,"curCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) throws IOException {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return distSquaredCartesian(vals1, vals2);\n  }\n","date":"2016-10-03 03:18:22","endLine":53,"groupId":"102084","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"distance","params":"(intdoc@FunctionValuesdv1@FunctionValuesdv2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/1a526277752f3b7fed6c48755c0d580f4b3c3e.src","preCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return distSquaredCartesian(vals1, vals2);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2016-10-03 03:18:22","commitOrder":5,"curCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) throws IOException {\n    \r\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n    return vectorDistance(vals1, vals2, power, oneOverPower);\n  }\n","date":"2016-10-03 03:18:22","endLine":77,"groupId":"102084","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"distance","params":"(intdoc@FunctionValuesdv1@FunctionValuesdv2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/47/4ece3de7fefc03971dc3e14066107d55a67d5c.src","preCode":"  protected double distance(int doc, FunctionValues dv1, FunctionValues dv2) {\n    \r\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n    return vectorDistance(vals1, vals2, power, oneOverPower);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/VectorDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"3182cd9872af3cb73a1f73e36de68b8d76646e59","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-10-03 03:18:22","modifiedFileCount":"570","status":"M","submitter":"Karl Wright"}]
