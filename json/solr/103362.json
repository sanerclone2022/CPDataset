[{"authorTime":"2015-06-15 10:51:36","codes":[{"authorDate":"2016-05-28 02:17:23","commitOrder":2,"curCode":"  private List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    List<Tuple> tuples = new ArrayList<>();\n    try {\n      tupleStream.open();\n      for (; ; ) {\n        Tuple t = tupleStream.read();\n        if (t.EOF) {\n          break;\n        } else {\n          tuples.add(t);\n        }\n      }\n    } finally {\n      IOUtils.closeQuietly(tupleStream);\n    }\n    return tuples;\n  }\n","date":"2016-10-12 00:13:47","endLine":81,"groupId":"53151","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuples","params":"(TupleStreamtupleStream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/23290844d2ecca6835c5376cc7c2ff13c4e99d.src","preCode":"  private List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    List<Tuple> tuples = new ArrayList<>();\n    try {\n      tupleStream.open();\n      for (; ; ) {\n        Tuple t = tupleStream.read();\n        if (t.EOF) {\n          break;\n        } else {\n          tuples.add(t);\n        }\n      }\n    } finally {\n      IOUtils.closeQuietly(tupleStream);\n    }\n    return tuples;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"},{"authorDate":"2015-06-15 10:51:36","commitOrder":2,"curCode":"  protected List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList();\n    for(;;) {\n      Tuple t = tupleStream.read();\n      if(t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n","date":"2015-06-15 10:51:36","endLine":842,"groupId":"32597","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getTuples","params":"(TupleStreamtupleStream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/54/70c2d7f19a9ff1e9218f154a27499215d010c2.src","preCode":"  protected List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList();\n    for(;;) {\n      Tuple t = tupleStream.read();\n      if(t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":829,"status":"NB"}],"commitId":"b00f10916bfdcd1bdf138ba46a8204091e0bb428","commitMessage":"@@@SOLR-8969: Resolve NPE for SQLHandler when in non-cloud mode\n","date":"2016-10-12 00:13:47","modifiedFileCount":"1","status":"M","submitter":"Kevin Risden"},{"authorTime":"2017-02-16 02:55:09","codes":[{"authorDate":"2016-05-28 02:17:23","commitOrder":3,"curCode":"  private List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    List<Tuple> tuples = new ArrayList<>();\n    try {\n      tupleStream.open();\n      for (; ; ) {\n        Tuple t = tupleStream.read();\n        if (t.EOF) {\n          break;\n        } else {\n          tuples.add(t);\n        }\n      }\n    } finally {\n      IOUtils.closeQuietly(tupleStream);\n    }\n    return tuples;\n  }\n","date":"2016-10-12 00:13:47","endLine":81,"groupId":"53151","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuples","params":"(TupleStreamtupleStream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/23290844d2ecca6835c5376cc7c2ff13c4e99d.src","preCode":"  private List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    List<Tuple> tuples = new ArrayList<>();\n    try {\n      tupleStream.open();\n      for (; ; ) {\n        Tuple t = tupleStream.read();\n        if (t.EOF) {\n          break;\n        } else {\n          tuples.add(t);\n        }\n      }\n    } finally {\n      IOUtils.closeQuietly(tupleStream);\n    }\n    return tuples;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"},{"authorDate":"2017-02-16 02:55:09","commitOrder":3,"curCode":"  protected List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList<>();\n    for(;;) {\n      Tuple t = tupleStream.read();\n      if(t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n","date":"2017-02-16 02:55:09","endLine":2334,"groupId":"32597","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getTuples","params":"(TupleStreamtupleStream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/35/f7ad05b9ee3396fa8843e6991745c9daaa5e3a.src","preCode":"  protected List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList();\n    for(;;) {\n      Tuple t = tupleStream.read();\n      if(t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2321,"status":"M"}],"commitId":"bfeb4e7f848221e946f51f96ebb2e900e84e787f","commitMessage":"@@@Merge branch 'jira/solr-8593'\n","date":"2017-02-16 02:55:09","modifiedFileCount":"11","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2019-03-05 05:16:02","codes":[{"authorDate":"2016-05-28 02:17:23","commitOrder":4,"curCode":"  private List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    List<Tuple> tuples = new ArrayList<>();\n    try {\n      tupleStream.open();\n      for (; ; ) {\n        Tuple t = tupleStream.read();\n        if (t.EOF) {\n          break;\n        } else {\n          tuples.add(t);\n        }\n      }\n    } finally {\n      IOUtils.closeQuietly(tupleStream);\n    }\n    return tuples;\n  }\n","date":"2016-10-12 00:13:47","endLine":81,"groupId":"53151","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuples","params":"(TupleStreamtupleStream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/23290844d2ecca6835c5376cc7c2ff13c4e99d.src","preCode":"  private List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    List<Tuple> tuples = new ArrayList<>();\n    try {\n      tupleStream.open();\n      for (; ; ) {\n        Tuple t = tupleStream.read();\n        if (t.EOF) {\n          break;\n        } else {\n          tuples.add(t);\n        }\n      }\n    } finally {\n      IOUtils.closeQuietly(tupleStream);\n    }\n    return tuples;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"},{"authorDate":"2019-03-05 05:16:02","commitOrder":4,"curCode":"  protected List<Tuple> getTuples(final SolrParams params) throws IOException {\n    log.info(\"Tuples from params: {}\", params);\n    TupleStream tupleStream = new SolrStream(this.cloudJettys.get(0).url, params);\n    \n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList<>();\n    for (;;) {\n      Tuple t = tupleStream.read();\n      log.info(\" ... {}\", t.fields);\n      if (t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n","date":"2019-03-05 05:16:02","endLine":2527,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getTuples","params":"(finalSolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/75/7452dd47827f16058de4906bab23d8735023cb.src","preCode":"  protected List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList<>();\n    for (;;) {\n      Tuple t = tupleStream.read();\n      if (t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2510,"status":"M"}],"commitId":"7bfe7b265a4091048707e782657f622e937b6e70","commitMessage":"@@@SOLR-13294: refactor test to include more loging to help diagnose some windows jenkins failures\n","date":"2019-03-05 05:16:02","modifiedFileCount":"1","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2019-03-28 03:31:57","codes":[{"authorDate":"2016-05-28 02:17:23","commitOrder":5,"curCode":"  private List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    List<Tuple> tuples = new ArrayList<>();\n    try {\n      tupleStream.open();\n      for (; ; ) {\n        Tuple t = tupleStream.read();\n        if (t.EOF) {\n          break;\n        } else {\n          tuples.add(t);\n        }\n      }\n    } finally {\n      IOUtils.closeQuietly(tupleStream);\n    }\n    return tuples;\n  }\n","date":"2016-10-12 00:13:47","endLine":81,"groupId":"53151","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuples","params":"(TupleStreamtupleStream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/23290844d2ecca6835c5376cc7c2ff13c4e99d.src","preCode":"  private List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    List<Tuple> tuples = new ArrayList<>();\n    try {\n      tupleStream.open();\n      for (; ; ) {\n        Tuple t = tupleStream.read();\n        if (t.EOF) {\n          break;\n        } else {\n          tuples.add(t);\n        }\n      }\n    } finally {\n      IOUtils.closeQuietly(tupleStream);\n    }\n    return tuples;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"},{"authorDate":"2019-03-28 03:31:57","commitOrder":5,"curCode":"  protected List<Tuple> getTuples(final SolrParams params, String baseUrl) throws IOException {\n    \r\n    TupleStream tupleStream = new SolrStream(baseUrl, params);\n\n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList<>();\n    for (;;) {\n      Tuple t = tupleStream.read();\n      \r\n      if (t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n","date":"2019-03-28 03:36:47","endLine":1910,"groupId":"32597","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getTuples","params":"(finalSolrParamsparams@StringbaseUrl)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c2/6db3a0faaf45539dd92ec3f4ae11b7f66510de.src","preCode":"  protected List<Tuple> getTuples(final SolrParams params) throws IOException {\n    log.info(\"Tuples from params: {}\", params);\n    TupleStream tupleStream = new SolrStream(this.cloudJettys.get(0).url, params);\n    \n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList<>();\n    for (;;) {\n      Tuple t = tupleStream.read();\n      log.info(\" ... {}\", t.fields);\n      if (t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1893,"status":"M"}],"commitId":"d407d556ccac137d812d92d6b0db7f68df4c84a2","commitMessage":"@@@SOLR-13294: TestSQLHandler failures on windows jenkins machines\n","date":"2019-03-28 03:36:47","modifiedFileCount":"1","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2021-06-30 07:03:38","codes":[{"authorDate":"2016-05-28 02:17:23","commitOrder":6,"curCode":"  private List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    List<Tuple> tuples = new ArrayList<>();\n    try {\n      tupleStream.open();\n      for (; ; ) {\n        Tuple t = tupleStream.read();\n        if (t.EOF) {\n          break;\n        } else {\n          tuples.add(t);\n        }\n      }\n    } finally {\n      IOUtils.closeQuietly(tupleStream);\n    }\n    return tuples;\n  }\n","date":"2016-10-12 00:13:47","endLine":81,"groupId":"103362","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuples","params":"(TupleStreamtupleStream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/23290844d2ecca6835c5376cc7c2ff13c4e99d.src","preCode":"  private List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    List<Tuple> tuples = new ArrayList<>();\n    try {\n      tupleStream.open();\n      for (; ; ) {\n        Tuple t = tupleStream.read();\n        if (t.EOF) {\n          break;\n        } else {\n          tuples.add(t);\n        }\n      }\n    } finally {\n      IOUtils.closeQuietly(tupleStream);\n    }\n    return tuples;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"},{"authorDate":"2021-06-30 07:03:38","commitOrder":6,"curCode":"  protected List<Tuple> getTuples(final SolrParams params, String baseUrl) throws IOException {\n    List<Tuple> tuples = new LinkedList<>();\n    try (TupleStream tupleStream = new SolrStream(baseUrl, params)) {\n      tupleStream.open();\n      for (; ; ) {\n        Tuple t = tupleStream.read();\n        if (t.EOF) {\n          break;\n        } else {\n          tuples.add(t);\n        }\n      }\n    }\n    return tuples;\n  }\n","date":"2021-06-30 07:03:38","endLine":1870,"groupId":"103362","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getTuples","params":"(finalSolrParamsparams@StringbaseUrl)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/68/defe739066264adf1a68f538fecafbf09bb42a.src","preCode":"  protected List<Tuple> getTuples(final SolrParams params, String baseUrl) throws IOException {\n    \r\n    TupleStream tupleStream = new SolrStream(baseUrl, params);\n\n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList<>();\n    for (; ; ) {\n      Tuple t = tupleStream.read();\n      \r\n      if (t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1856,"status":"M"}],"commitId":"0907fff65cb236897731972da49b7118a8c40a09","commitMessage":"@@@SOLR-15489: Implement OFFSET & FETCH for LIMIT SQL queries (#191)\n\n","date":"2021-06-30 07:03:38","modifiedFileCount":"7","status":"M","submitter":"Timothy Potter"}]
