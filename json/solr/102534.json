[{"authorTime":"2011-09-15 00:00:56","codes":[{"authorDate":"2011-09-15 00:00:56","commitOrder":1,"curCode":"  public Map<K, V> getOldestAccessedItems(int n) {\n    Map<K, V> result = new LinkedHashMap<K, V>();\n    if (n <= 0)\n      return result;\n    TreeSet<CacheEntry<K,V>> tree = new TreeSet<CacheEntry<K,V>>();\n    markAndSweepLock.lock();\n    try {\n      for (Map.Entry<Object, CacheEntry<K,V>> entry : map.entrySet()) {\n        CacheEntry<K,V> ce = entry.getValue();\n        ce.lastAccessedCopy = ce.lastAccessed;\n        if (tree.size() < n) {\n          tree.add(ce);\n        } else {\n          if (ce.lastAccessedCopy < tree.first().lastAccessedCopy) {\n            tree.remove(tree.first());\n            tree.add(ce);\n          }\n        }\n      }\n    } finally {\n      markAndSweepLock.unlock();\n    }\n    for (CacheEntry<K,V> e : tree) {\n      result.put(e.key, e.value);\n    }\n    return result;\n  }\n","date":"2011-09-15 00:00:56","endLine":436,"groupId":"15953","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getOldestAccessedItems","params":"(intn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/28/ce2ea6af704e6725d36f10b36748dfda8d2476.src","preCode":"  public Map<K, V> getOldestAccessedItems(int n) {\n    Map<K, V> result = new LinkedHashMap<K, V>();\n    if (n <= 0)\n      return result;\n    TreeSet<CacheEntry<K,V>> tree = new TreeSet<CacheEntry<K,V>>();\n    markAndSweepLock.lock();\n    try {\n      for (Map.Entry<Object, CacheEntry<K,V>> entry : map.entrySet()) {\n        CacheEntry<K,V> ce = entry.getValue();\n        ce.lastAccessedCopy = ce.lastAccessed;\n        if (tree.size() < n) {\n          tree.add(ce);\n        } else {\n          if (ce.lastAccessedCopy < tree.first().lastAccessedCopy) {\n            tree.remove(tree.first());\n            tree.add(ce);\n          }\n        }\n      }\n    } finally {\n      markAndSweepLock.unlock();\n    }\n    for (CacheEntry<K,V> e : tree) {\n      result.put(e.key, e.value);\n    }\n    return result;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":410,"status":"B"},{"authorDate":"2011-09-15 00:00:56","commitOrder":1,"curCode":"  public Map<K,V> getLatestAccessedItems(int n) {\n    Map<K,V> result = new LinkedHashMap<K,V>();\n    if (n <= 0)\n      return result;\n    TreeSet<CacheEntry<K,V>> tree = new TreeSet<CacheEntry<K,V>>();\n    \r\n    markAndSweepLock.lock();\n    try {\n      for (Map.Entry<Object, CacheEntry<K,V>> entry : map.entrySet()) {\n        CacheEntry<K,V> ce = entry.getValue();\n        ce.lastAccessedCopy = ce.lastAccessed;\n        if (tree.size() < n) {\n          tree.add(ce);\n        } else {\n          if (ce.lastAccessedCopy > tree.last().lastAccessedCopy) {\n            tree.remove(tree.last());\n            tree.add(ce);\n          }\n        }\n      }\n    } finally {\n      markAndSweepLock.unlock();\n    }\n    for (CacheEntry<K,V> e : tree) {\n      result.put(e.key, e.value);\n    }\n    return result;\n  }\n","date":"2011-09-15 00:00:56","endLine":465,"groupId":"51257","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getLatestAccessedItems","params":"(intn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/28/ce2ea6af704e6725d36f10b36748dfda8d2476.src","preCode":"  public Map<K,V> getLatestAccessedItems(int n) {\n    Map<K,V> result = new LinkedHashMap<K,V>();\n    if (n <= 0)\n      return result;\n    TreeSet<CacheEntry<K,V>> tree = new TreeSet<CacheEntry<K,V>>();\n    \r\n    markAndSweepLock.lock();\n    try {\n      for (Map.Entry<Object, CacheEntry<K,V>> entry : map.entrySet()) {\n        CacheEntry<K,V> ce = entry.getValue();\n        ce.lastAccessedCopy = ce.lastAccessed;\n        if (tree.size() < n) {\n          tree.add(ce);\n        } else {\n          if (ce.lastAccessedCopy > tree.last().lastAccessedCopy) {\n            tree.remove(tree.last());\n            tree.add(ce);\n          }\n        }\n      }\n    } finally {\n      markAndSweepLock.unlock();\n    }\n    for (CacheEntry<K,V> e : tree) {\n      result.put(e.key, e.value);\n    }\n    return result;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":438,"status":"B"}],"commitId":"a08639d08d75c1f8a42d2a7c7f770d7a3d65c107","commitMessage":"@@@SOLR-2758: Moved ConcurrentLRUCache from o.a.s.common.util package in the solrj module to the o.a.s.util package in the Solr core module.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1170699 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-09-15 00:00:56","modifiedFileCount":"2","status":"B","submitter":"Steven Rowe"},{"authorTime":"2014-03-12 22:39:17","codes":[{"authorDate":"2014-03-12 22:39:17","commitOrder":2,"curCode":"  public Map<K, V> getOldestAccessedItems(int n) {\n    Map<K, V> result = new LinkedHashMap<>();\n    if (n <= 0)\n      return result;\n    TreeSet<CacheEntry<K,V>> tree = new TreeSet<>();\n    markAndSweepLock.lock();\n    try {\n      for (Map.Entry<Object, CacheEntry<K,V>> entry : map.entrySet()) {\n        CacheEntry<K,V> ce = entry.getValue();\n        ce.lastAccessedCopy = ce.lastAccessed;\n        if (tree.size() < n) {\n          tree.add(ce);\n        } else {\n          if (ce.lastAccessedCopy < tree.first().lastAccessedCopy) {\n            tree.remove(tree.first());\n            tree.add(ce);\n          }\n        }\n      }\n    } finally {\n      markAndSweepLock.unlock();\n    }\n    for (CacheEntry<K,V> e : tree) {\n      result.put(e.key, e.value);\n    }\n    return result;\n  }\n","date":"2014-03-12 22:39:17","endLine":436,"groupId":"102534","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getOldestAccessedItems","params":"(intn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5b/5f7df94229bdb09af2dc4cf388c2461fc6cfd5.src","preCode":"  public Map<K, V> getOldestAccessedItems(int n) {\n    Map<K, V> result = new LinkedHashMap<K, V>();\n    if (n <= 0)\n      return result;\n    TreeSet<CacheEntry<K,V>> tree = new TreeSet<CacheEntry<K,V>>();\n    markAndSweepLock.lock();\n    try {\n      for (Map.Entry<Object, CacheEntry<K,V>> entry : map.entrySet()) {\n        CacheEntry<K,V> ce = entry.getValue();\n        ce.lastAccessedCopy = ce.lastAccessed;\n        if (tree.size() < n) {\n          tree.add(ce);\n        } else {\n          if (ce.lastAccessedCopy < tree.first().lastAccessedCopy) {\n            tree.remove(tree.first());\n            tree.add(ce);\n          }\n        }\n      }\n    } finally {\n      markAndSweepLock.unlock();\n    }\n    for (CacheEntry<K,V> e : tree) {\n      result.put(e.key, e.value);\n    }\n    return result;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":410,"status":"M"},{"authorDate":"2014-03-12 22:39:17","commitOrder":2,"curCode":"  public Map<K,V> getLatestAccessedItems(int n) {\n    Map<K,V> result = new LinkedHashMap<>();\n    if (n <= 0)\n      return result;\n    TreeSet<CacheEntry<K,V>> tree = new TreeSet<>();\n    \r\n    markAndSweepLock.lock();\n    try {\n      for (Map.Entry<Object, CacheEntry<K,V>> entry : map.entrySet()) {\n        CacheEntry<K,V> ce = entry.getValue();\n        ce.lastAccessedCopy = ce.lastAccessed;\n        if (tree.size() < n) {\n          tree.add(ce);\n        } else {\n          if (ce.lastAccessedCopy > tree.last().lastAccessedCopy) {\n            tree.remove(tree.last());\n            tree.add(ce);\n          }\n        }\n      }\n    } finally {\n      markAndSweepLock.unlock();\n    }\n    for (CacheEntry<K,V> e : tree) {\n      result.put(e.key, e.value);\n    }\n    return result;\n  }\n","date":"2014-03-12 22:39:17","endLine":465,"groupId":"102534","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getLatestAccessedItems","params":"(intn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5b/5f7df94229bdb09af2dc4cf388c2461fc6cfd5.src","preCode":"  public Map<K,V> getLatestAccessedItems(int n) {\n    Map<K,V> result = new LinkedHashMap<K,V>();\n    if (n <= 0)\n      return result;\n    TreeSet<CacheEntry<K,V>> tree = new TreeSet<CacheEntry<K,V>>();\n    \r\n    markAndSweepLock.lock();\n    try {\n      for (Map.Entry<Object, CacheEntry<K,V>> entry : map.entrySet()) {\n        CacheEntry<K,V> ce = entry.getValue();\n        ce.lastAccessedCopy = ce.lastAccessed;\n        if (tree.size() < n) {\n          tree.add(ce);\n        } else {\n          if (ce.lastAccessedCopy > tree.last().lastAccessedCopy) {\n            tree.remove(tree.last());\n            tree.add(ce);\n          }\n        }\n      }\n    } finally {\n      markAndSweepLock.unlock();\n    }\n    for (CacheEntry<K,V> e : tree) {\n      result.put(e.key, e.value);\n    }\n    return result;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":438,"status":"M"}],"commitId":"3b67b17493216f6b0c81a981073fd5f61eace6f4","commitMessage":"@@@LUCENE-5512: remove redundant typing (diamond operator) in trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1576755 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-12 22:39:17","modifiedFileCount":"1241","status":"M","submitter":"Robert Muir"}]
