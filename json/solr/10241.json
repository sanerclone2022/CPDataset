[{"authorTime":"2017-08-26 17:07:19","codes":[{"authorDate":"2017-08-26 17:07:19","commitOrder":1,"curCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return Arrays.stream(StatUtils.normalize(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","date":"2017-08-26 17:07:19","endLine":52,"groupId":"50848","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/af/e4c5dab67df708efb10a3d232e0c4e0cda1a3b.src","preCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return Arrays.stream(StatUtils.normalize(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/NormalizeEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"},{"authorDate":"2017-08-26 17:07:19","commitOrder":1,"curCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","date":"2017-08-26 17:07:19","endLine":53,"groupId":"50848","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3b/193c737877f37f833e29d0f02e016a53e70e9c.src","preCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"}],"commitId":"ddcb98e9c3e0d5f6acf59f872e8324e7ad144506","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-08-26 17:07:19","modifiedFileCount":"90","status":"B","submitter":"Karl Wright"},{"authorTime":"2017-08-26 17:07:19","codes":[{"authorDate":"2017-11-08 20:29:28","commitOrder":2,"curCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return Arrays.stream(StatUtils.normalize(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    } else if (value instanceof Matrix) {\n      Matrix matrix = (Matrix) value;\n      double[][] data = matrix.getData();\n      double[][] standardized = new double[data.length][];\n      for(int i=0; i<data.length; i++) {\n        double[] row = data[i];\n        standardized[i] = StatUtils.normalize(row);\n      }\n      return new Matrix(standardized);\n    } else {\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","date":"2017-11-08 20:29:28","endLine":60,"groupId":"50848","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/65/629cdde901c00e3b27bf1d2dd8f8857cd4ded4.src","preCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return Arrays.stream(StatUtils.normalize(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/NormalizeEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2017-08-26 17:07:19","commitOrder":2,"curCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","date":"2017-08-26 17:07:19","endLine":53,"groupId":"50848","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3b/193c737877f37f833e29d0f02e016a53e70e9c.src","preCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"}],"commitId":"dae5c570b939e1442b0c7eb1e62f6748e4c207f3","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-11-08 20:29:28","modifiedFileCount":"193","status":"M","submitter":"Karl Wright"},{"authorTime":"2017-12-05 10:08:58","codes":[{"authorDate":"2017-11-08 20:29:28","commitOrder":3,"curCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return Arrays.stream(StatUtils.normalize(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    } else if (value instanceof Matrix) {\n      Matrix matrix = (Matrix) value;\n      double[][] data = matrix.getData();\n      double[][] standardized = new double[data.length][];\n      for(int i=0; i<data.length; i++) {\n        double[] row = data[i];\n        standardized[i] = StatUtils.normalize(row);\n      }\n      return new Matrix(standardized);\n    } else {\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","date":"2017-11-08 20:29:28","endLine":60,"groupId":"50848","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/65/629cdde901c00e3b27bf1d2dd8f8857cd4ded4.src","preCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return Arrays.stream(StatUtils.normalize(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    } else if (value instanceof Matrix) {\n      Matrix matrix = (Matrix) value;\n      double[][] data = matrix.getData();\n      double[][] standardized = new double[data.length][];\n      for(int i=0; i<data.length; i++) {\n        double[] row = data[i];\n        standardized[i] = StatUtils.normalize(row);\n      }\n      return new Matrix(standardized);\n    } else {\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/NormalizeEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"},{"authorDate":"2017-12-05 10:08:58","commitOrder":3,"curCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((Number)value));\n    }\n  }\n","date":"2017-12-05 10:09:41","endLine":53,"groupId":"50848","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9a/7665fbbfe10fecf7ef93f1e3321b26f3eb47cd.src","preCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"}],"commitId":"8750e5f2a97e2011da7a3c821dca38a31d0f9bf1","commitMessage":"@@@SOLR-11485: Add olsRegress.  spline and derivative Stream Evaluators\n","date":"2017-12-05 10:09:41","modifiedFileCount":"46","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2018-07-16 18:24:45","codes":[{"authorDate":"2018-07-16 18:24:45","commitOrder":4,"curCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return Arrays.stream(StatUtils.normalize(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).boxed().collect(Collectors.toList());\n    } else if (value instanceof Matrix) {\n      Matrix matrix = (Matrix) value;\n      double[][] data = matrix.getData();\n      double[][] standardized = new double[data.length][];\n      for(int i=0; i<data.length; i++) {\n        double[] row = data[i];\n        standardized[i] = StatUtils.normalize(row);\n      }\n      return new Matrix(standardized);\n    } else {\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","date":"2018-07-16 18:24:45","endLine":60,"groupId":"50848","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/cbfc90e8282292e510a120c152dad975b43a64.src","preCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return Arrays.stream(StatUtils.normalize(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    } else if (value instanceof Matrix) {\n      Matrix matrix = (Matrix) value;\n      double[][] data = matrix.getData();\n      double[][] standardized = new double[data.length][];\n      for(int i=0; i<data.length; i++) {\n        double[] row = data[i];\n        standardized[i] = StatUtils.normalize(row);\n      }\n      return new Matrix(standardized);\n    } else {\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/NormalizeEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2018-07-16 18:24:45","commitOrder":4,"curCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).boxed().collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((Number)value));\n    }\n  }\n","date":"2018-07-16 18:24:45","endLine":52,"groupId":"50848","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/24/955432c07bfec89c3958adc123157d3cec8f8f.src","preCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((Number)value));\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"}],"commitId":"c97f27b06c1d7c250e9596a9bc7bf5ca11ef6ad3","commitMessage":"@@@Merge branch 'remove-constructor-wrapper-classes' of https://github.com/michaelbraun/lucene-solr:\nLUCENE-8345.  GitHub PR #392: Remove instantiation of redundant wrapper classes for primitives; add wrapper class constructors to forbiddenapis.\nThis closes #392\n","date":"2018-07-16 18:24:45","modifiedFileCount":"96","status":"M","submitter":"Uwe Schindler"},{"authorTime":"2018-07-16 18:24:45","codes":[{"authorDate":"2019-10-07 10:17:45","commitOrder":5,"curCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return Arrays.stream(StatUtils.normalize(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).boxed().collect(Collectors.toList());\n    } else if (value instanceof Matrix) {\n      Matrix matrix = (Matrix) value;\n      double[][] data = matrix.getData();\n      double[][] standardized = new double[data.length][];\n      for(int i=0; i<data.length; i++) {\n        double[] row = data[i];\n        standardized[i] = StatUtils.normalize(row);\n      }\n      Matrix m = new Matrix(standardized);\n      m.setRowLabels(matrix.getRowLabels());\n      m.setColumnLabels(matrix.getColumnLabels());\n      return m;\n    } else {\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","date":"2019-10-07 10:18:00","endLine":63,"groupId":"10241","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/19/71c1510f66cd0475e5616b60c47aeae97101aa.src","preCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return Arrays.stream(StatUtils.normalize(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).boxed().collect(Collectors.toList());\n    } else if (value instanceof Matrix) {\n      Matrix matrix = (Matrix) value;\n      double[][] data = matrix.getData();\n      double[][] standardized = new double[data.length][];\n      for(int i=0; i<data.length; i++) {\n        double[] row = data[i];\n        standardized[i] = StatUtils.normalize(row);\n      }\n      return new Matrix(standardized);\n    } else {\n      return doWork(Arrays.asList((BigDecimal)value));\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/NormalizeEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2018-07-16 18:24:45","commitOrder":5,"curCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).boxed().collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((Number)value));\n    }\n  }\n","date":"2018-07-16 18:24:45","endLine":52,"groupId":"10241","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"doWork","params":"(Objectvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/24/955432c07bfec89c3958adc123157d3cec8f8f.src","preCode":"  public Object doWork(Object value){\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      NaturalRanking rank = new NaturalRanking();      \n      return Arrays.stream(rank.rank(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).boxed().collect(Collectors.toList());\n    }\n    else{\n      return doWork(Arrays.asList((Number)value));\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RankEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"N"}],"commitId":"88fee95d54183c3c3d163660e99184c76d7cdb58","commitMessage":"@@@SOLR-13298: Allow zplot to plot matrices\n","date":"2019-10-07 10:18:00","modifiedFileCount":"9","status":"M","submitter":"Joel Bernstein"}]
