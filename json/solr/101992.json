[{"authorTime":"2015-08-01 00:21:44","codes":[{"authorDate":"2017-01-19 09:27:21","commitOrder":2,"curCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (!field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","date":"2017-01-19 09:27:21","endLine":95,"groupId":"29275","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getSingleValueSource","params":"(MultiValueSelectorchoice@SchemaFieldfield@QParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a2/dd8a8aaf6338e056a2df174d0fd47a20471ba3.src","preCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (!field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/PointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2015-08-01 00:21:44","commitOrder":2,"curCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (! field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","date":"2015-08-01 00:21:44","endLine":274,"groupId":"29275","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getSingleValueSource","params":"(MultiValueSelectorchoice@SchemaFieldfield@QParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/56/197cd36774c42a5ce6370fb94125a05a6419d9.src","preCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (! field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"NB"}],"commitId":"57934ba4480d71218c7f60d0417dbae9d26188d0","commitMessage":"@@@SOLR-8396: Add support for PointFields in Solr\n","date":"2017-01-19 09:27:21","modifiedFileCount":"33","status":"M","submitter":"Tomas Fernandez Lobbe"},{"authorTime":"2015-08-01 00:21:44","codes":[{"authorDate":"2017-02-15 08:24:25","commitOrder":3,"curCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (!field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedNumericSelector.Type selectorType = choice.getSortedNumericSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","date":"2017-02-15 08:24:25","endLine":89,"groupId":"29275","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getSingleValueSource","params":"(MultiValueSelectorchoice@SchemaFieldfield@QParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/11/68386dca5f36312c7d0846c22e820ada040f45.src","preCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (!field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/PointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2015-08-01 00:21:44","commitOrder":3,"curCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (! field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","date":"2015-08-01 00:21:44","endLine":274,"groupId":"29275","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getSingleValueSource","params":"(MultiValueSelectorchoice@SchemaFieldfield@QParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/56/197cd36774c42a5ce6370fb94125a05a6419d9.src","preCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (! field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"N"}],"commitId":"26298f35df118aad186e6eaf1ea5c2e5f50d607f","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n","date":"2017-02-15 08:24:25","modifiedFileCount":"40","status":"M","submitter":"Noble Paul"},{"authorTime":"2015-08-01 00:21:44","codes":[{"authorDate":"2017-02-15 09:32:14","commitOrder":4,"curCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (!field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","date":"2017-02-15 09:32:14","endLine":87,"groupId":"29275","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getSingleValueSource","params":"(MultiValueSelectorchoice@SchemaFieldfield@QParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9b/1ed380a3890f2384d03bf61f67984813f3dbc9.src","preCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (!field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedNumericSelector.Type selectorType = choice.getSortedNumericSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/PointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2015-08-01 00:21:44","commitOrder":4,"curCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (! field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","date":"2015-08-01 00:21:44","endLine":274,"groupId":"29275","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getSingleValueSource","params":"(MultiValueSelectorchoice@SchemaFieldfield@QParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/56/197cd36774c42a5ce6370fb94125a05a6419d9.src","preCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (! field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"N"}],"commitId":"325cbf00185e3fe2576720c83635cbed8ed12c0e","commitMessage":"@@@Revert \"Merge remote-tracking branch 'origin/master'\"\n\nThis reverts commit 26298f35df118aad186e6eaf1ea5c2e5f50d607f.  reversing\nchanges made to 65c6c576b720b19029a10bf14f81d4de23302863.\n\nundoing the merge commit\n","date":"2017-02-15 09:32:14","modifiedFileCount":"40","status":"M","submitter":"Noble Paul"},{"authorTime":"2015-08-01 00:21:44","codes":[{"authorDate":"2017-02-15 09:43:28","commitOrder":5,"curCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (!field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedNumericSelector.Type selectorType = choice.getSortedNumericSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","date":"2017-02-15 09:43:28","endLine":89,"groupId":"101992","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getSingleValueSource","params":"(MultiValueSelectorchoice@SchemaFieldfield@QParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/11/68386dca5f36312c7d0846c22e820ada040f45.src","preCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (!field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/PointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2015-08-01 00:21:44","commitOrder":5,"curCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (! field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","date":"2015-08-01 00:21:44","endLine":274,"groupId":"101992","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getSingleValueSource","params":"(MultiValueSelectorchoice@SchemaFieldfield@QParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/56/197cd36774c42a5ce6370fb94125a05a6419d9.src","preCode":"  public final ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {\n    \r\n    if (!field.multiValued()) {\n      \r\n      return getValueSource(field, parser);\n    }\n\n    \r\n    if (! field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n    \n    \r\n    \r\n    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();\n    if (null == selectorType) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              choice.toString() + \" is not a supported option for picking a single value\"\n                              + \" from the multivalued field: \" + field.getName() +\n                              \" (type: \" + this.getTypeName() + \")\");\n    }\n    \n    return getSingleValueSource(selectorType, field);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/TrieField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"N"}],"commitId":"9a1702a8f5b5496893a99c4e1f39cd58520786ae","commitMessage":"@@@SOLR-8029: Reverting the previous commit and the merge\n","date":"2017-02-15 09:43:28","modifiedFileCount":"41","status":"M","submitter":"Ishan Chattopadhyaya"}]
