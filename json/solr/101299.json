[{"authorTime":"2016-11-02 01:50:14","codes":[{"authorDate":"2016-11-02 01:50:14","commitOrder":1,"curCode":"  public void testMinMaxNormalizerMinEqualToMax() {\n    final Map<String,Object> params = new HashMap<String,Object>();\n    params.put(\"min\", \"10.0f\");\n    params.put(\"max\", \"10.0f\");\n    final NormalizerException expectedException =\n        new NormalizerException(\"MinMax Normalizer delta must not be zero \"\n            + \"| min = 10.0,max = 10.0,delta = 0.0\");\n    try {\n        implTestMinMax(params,\n              10.0f,\n              10.0f);\n        fail(\"testMinMaxNormalizerMinEqualToMax failed to throw exception: \"+expectedException);\n    } catch(NormalizerException actualException) {\n        assertEquals(expectedException.toString(), actualException.toString());\n    }\n  }\n","date":"2016-11-02 01:50:14","endLine":97,"groupId":"39915","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMinMaxNormalizerMinEqualToMax","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/5b3bccacd93937eb5266c2b4727233bae0e7c9.src","preCode":"  public void testMinMaxNormalizerMinEqualToMax() {\n    final Map<String,Object> params = new HashMap<String,Object>();\n    params.put(\"min\", \"10.0f\");\n    params.put(\"max\", \"10.0f\");\n    final NormalizerException expectedException =\n        new NormalizerException(\"MinMax Normalizer delta must not be zero \"\n            + \"| min = 10.0,max = 10.0,delta = 0.0\");\n    try {\n        implTestMinMax(params,\n              10.0f,\n              10.0f);\n        fail(\"testMinMaxNormalizerMinEqualToMax failed to throw exception: \"+expectedException);\n    } catch(NormalizerException actualException) {\n        assertEquals(expectedException.toString(), actualException.toString());\n    }\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/norm/TestMinMaxNormalizer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"},{"authorDate":"2016-11-02 01:50:14","commitOrder":1,"curCode":"  public void testNormalizer() {\n    final Map<String,Object> params = new HashMap<String,Object>();\n    params.put(\"min\", \"5.0f\");\n    params.put(\"max\", \"10.0f\");\n    final Normalizer n =\n        implTestMinMax(params,\n            5.0f,\n            10.0f);\n\n    float value = 8;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = 100;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = 150;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = -1;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = 5;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n  }\n","date":"2016-11-02 01:50:14","endLine":119,"groupId":"36144","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNormalizer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/5b3bccacd93937eb5266c2b4727233bae0e7c9.src","preCode":"  public void testNormalizer() {\n    final Map<String,Object> params = new HashMap<String,Object>();\n    params.put(\"min\", \"5.0f\");\n    params.put(\"max\", \"10.0f\");\n    final Normalizer n =\n        implTestMinMax(params,\n            5.0f,\n            10.0f);\n\n    float value = 8;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = 100;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = 150;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = -1;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = 5;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/norm/TestMinMaxNormalizer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"}],"commitId":"5a66b3bc089e4b3e73b1c41c4cdcd89b183b85e7","commitMessage":"@@@SOLR-8542: Adds Solr Learning to Rank (LTR) plugin for reranking results with machine learning models. (Michael Nilsson.  Diego Ceccarelli.  Joshua Pantony.  Jon Dorando.  Naveen Santhapuri.  Alessandro Benedetti.  David Grohmann.  Christine Poerschke)\n","date":"2016-11-02 01:50:14","modifiedFileCount":"0","status":"B","submitter":"Christine Poerschke"},{"authorTime":"2016-11-02 01:50:14","codes":[{"authorDate":"2019-08-03 15:30:49","commitOrder":2,"curCode":"  public void testMinMaxNormalizerMinEqualToMax() {\n    final Map<String,Object> params = new HashMap<String,Object>();\n    params.put(\"min\", \"10.0f\");\n    params.put(\"max\", \"10.0f\");\n    final NormalizerException expectedException =\n        new NormalizerException(\"MinMax Normalizer delta must not be zero \"\n            + \"| min = 10.0,max = 10.0,delta = 0.0\");\n    NormalizerException ex = SolrTestCaseJ4.expectThrows(NormalizerException.class,\n        () -> implTestMinMax(params, 10.0f, 10.0f)\n    );\n    assertEquals(expectedException.toString(), ex.toString());\n  }\n","date":"2019-08-03 15:30:49","endLine":94,"groupId":"101299","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMinMaxNormalizerMinEqualToMax","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/76/27ae95db036acf491e2050a81b86c73a5b68cf.src","preCode":"  public void testMinMaxNormalizerMinEqualToMax() {\n    final Map<String,Object> params = new HashMap<String,Object>();\n    params.put(\"min\", \"10.0f\");\n    params.put(\"max\", \"10.0f\");\n    final NormalizerException expectedException =\n        new NormalizerException(\"MinMax Normalizer delta must not be zero \"\n            + \"| min = 10.0,max = 10.0,delta = 0.0\");\n    try {\n        implTestMinMax(params,\n              10.0f,\n              10.0f);\n        fail(\"testMinMaxNormalizerMinEqualToMax failed to throw exception: \"+expectedException);\n    } catch(NormalizerException actualException) {\n        assertEquals(expectedException.toString(), actualException.toString());\n    }\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/norm/TestMinMaxNormalizer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2016-11-02 01:50:14","commitOrder":2,"curCode":"  public void testNormalizer() {\n    final Map<String,Object> params = new HashMap<String,Object>();\n    params.put(\"min\", \"5.0f\");\n    params.put(\"max\", \"10.0f\");\n    final Normalizer n =\n        implTestMinMax(params,\n            5.0f,\n            10.0f);\n\n    float value = 8;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = 100;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = 150;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = -1;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = 5;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n  }\n","date":"2016-11-02 01:50:14","endLine":119,"groupId":"101299","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNormalizer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/5b3bccacd93937eb5266c2b4727233bae0e7c9.src","preCode":"  public void testNormalizer() {\n    final Map<String,Object> params = new HashMap<String,Object>();\n    params.put(\"min\", \"5.0f\");\n    params.put(\"max\", \"10.0f\");\n    final Normalizer n =\n        implTestMinMax(params,\n            5.0f,\n            10.0f);\n\n    float value = 8;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = 100;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = 150;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = -1;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n    value = 5;\n    assertEquals((value - 5f) / (10f - 5f), n.normalize(value), 0.0001);\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/norm/TestMinMaxNormalizer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"N"}],"commitId":"8c4fde94fe93c70b95ed3563fb65972bb303e0af","commitMessage":"@@@SOLR-12555: use expectThrows() to verify the ex thrown in tests\n","date":"2019-08-03 15:30:49","modifiedFileCount":"89","status":"M","submitter":"Munendra S N"}]
