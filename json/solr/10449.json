[{"authorTime":"2019-10-29 06:49:21","codes":[{"authorDate":"2019-10-29 06:49:21","commitOrder":1,"curCode":"  public void replicaLocationTest() {\n    List<Replica> replicas = getBasicReplicaList();\n\n    \r\n    List<PreferenceRule> rules = PreferenceRule.from(ShardParams.SHARDS_PREFERENCE_REPLICA_LOCATION + \":http://host2:8983\");\n    NodePreferenceRulesComparator comparator = new NodePreferenceRulesComparator(rules, null);\n    replicas.sort(comparator);\n    assertEquals(\"node2\", replicas.get(0).getNodeName());\n    assertEquals(\"node1\", replicas.get(1).getNodeName());\n\n  }\n","date":"2019-10-29 06:49:21","endLine":42,"groupId":"61023","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"replicaLocationTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/24/5947a1788e5a47624d83fb0ce43a6cb82f46d4.src","preCode":"  public void replicaLocationTest() {\n    List<Replica> replicas = getBasicReplicaList();\n\n    \r\n    List<PreferenceRule> rules = PreferenceRule.from(ShardParams.SHARDS_PREFERENCE_REPLICA_LOCATION + \":http://host2:8983\");\n    NodePreferenceRulesComparator comparator = new NodePreferenceRulesComparator(rules, null);\n    replicas.sort(comparator);\n    assertEquals(\"node2\", replicas.get(0).getNodeName());\n    assertEquals(\"node1\", replicas.get(1).getNodeName());\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/NodePreferenceRulesComparatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"B"},{"authorDate":"2019-10-29 06:49:21","commitOrder":1,"curCode":"  public void replicaTypeTest() {\n    List<Replica> replicas = getBasicReplicaList();\n\n    List<PreferenceRule> rules = PreferenceRule.from(ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":NRT,\" +\n        ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":TLOG\");\n    NodePreferenceRulesComparator comparator = new NodePreferenceRulesComparator(rules, null);\n\n    replicas.sort(comparator);\n    assertEquals(\"node1\", replicas.get(0).getNodeName());\n    assertEquals(\"node2\", replicas.get(1).getNodeName());\n\n    \r\n    rules = PreferenceRule.from(ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":TLOG,\" +\n        ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":NRT\");\n    comparator = new NodePreferenceRulesComparator(rules, null);\n\n    replicas.sort(comparator);\n    assertEquals(\"node2\", replicas.get(0).getNodeName());\n    assertEquals(\"node1\", replicas.get(1).getNodeName());\n  }\n","date":"2019-10-29 06:49:21","endLine":63,"groupId":"15569","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"replicaTypeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/24/5947a1788e5a47624d83fb0ce43a6cb82f46d4.src","preCode":"  public void replicaTypeTest() {\n    List<Replica> replicas = getBasicReplicaList();\n\n    List<PreferenceRule> rules = PreferenceRule.from(ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":NRT,\" +\n        ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":TLOG\");\n    NodePreferenceRulesComparator comparator = new NodePreferenceRulesComparator(rules, null);\n\n    replicas.sort(comparator);\n    assertEquals(\"node1\", replicas.get(0).getNodeName());\n    assertEquals(\"node2\", replicas.get(1).getNodeName());\n\n    \r\n    rules = PreferenceRule.from(ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":TLOG,\" +\n        ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":NRT\");\n    comparator = new NodePreferenceRulesComparator(rules, null);\n\n    replicas.sort(comparator);\n    assertEquals(\"node2\", replicas.get(0).getNodeName());\n    assertEquals(\"node1\", replicas.get(1).getNodeName());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/NodePreferenceRulesComparatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"}],"commitId":"fa27e476f74bc4ba83e3fcdc39b421bc53a45d16","commitMessage":"@@@SOLR-13865: Migrate replica routing code to SolrJ (#974)\n\n* [SOLR-13865] Migrate replica routing code to  solrJ\n\n* Added a CommonTestInjection class.\n\n* Fixing imports.\n\n* Reverted extraneous streaming changes.\n\n* Fix precommit errors.\n\n* Changing name of the RLTManager.\n\n* Splitting up existing tests.\n\n* Updated documentation.\n\n* Added solr/CHANGES.txt entry\n","date":"2019-10-29 06:49:21","modifiedFileCount":"7","status":"B","submitter":"Houston Putman"},{"authorTime":"2020-12-01 03:05:48","codes":[{"authorDate":"2020-12-01 03:05:48","commitOrder":2,"curCode":"  public void replicaLocationTest() {\n    List<Replica> replicas = getBasicReplicaList();\n\n    \r\n    List<PreferenceRule> rules = PreferenceRule.from(ShardParams.SHARDS_PREFERENCE_REPLICA_LOCATION + \":http://node2:8983\");\n    NodePreferenceRulesComparator comparator = new NodePreferenceRulesComparator(rules, null);\n    replicas.sort(comparator);\n    assertEquals(\"node2\", getHost(replicas.get(0).getNodeName()));\n    assertEquals(\"node1\", getHost(replicas.get(1).getNodeName()));\n\n  }\n","date":"2020-12-01 03:05:48","endLine":44,"groupId":"10449","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"replicaLocationTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/63/c44db8b3c165ee2c87f1430188197ba886bd99.src","preCode":"  public void replicaLocationTest() {\n    List<Replica> replicas = getBasicReplicaList();\n\n    \r\n    List<PreferenceRule> rules = PreferenceRule.from(ShardParams.SHARDS_PREFERENCE_REPLICA_LOCATION + \":http://host2:8983\");\n    NodePreferenceRulesComparator comparator = new NodePreferenceRulesComparator(rules, null);\n    replicas.sort(comparator);\n    assertEquals(\"node2\", replicas.get(0).getNodeName());\n    assertEquals(\"node1\", replicas.get(1).getNodeName());\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/NodePreferenceRulesComparatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2020-12-01 03:05:48","commitOrder":2,"curCode":"  public void replicaTypeTest() {\n    List<Replica> replicas = getBasicReplicaList();\n\n    List<PreferenceRule> rules = PreferenceRule.from(ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":NRT,\" +\n        ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":TLOG\");\n    NodePreferenceRulesComparator comparator = new NodePreferenceRulesComparator(rules, null);\n\n    replicas.sort(comparator);\n    assertEquals(\"node1\", getHost(replicas.get(0).getNodeName()));\n    assertEquals(\"node2\", getHost(replicas.get(1).getNodeName()));\n\n    \r\n    rules = PreferenceRule.from(ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":TLOG,\" +\n        ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":NRT\");\n    comparator = new NodePreferenceRulesComparator(rules, null);\n\n    replicas.sort(comparator);\n    assertEquals(\"node2\", getHost(replicas.get(0).getNodeName()));\n    assertEquals(\"node1\", getHost(replicas.get(1).getNodeName()));\n  }\n","date":"2020-12-01 03:05:48","endLine":65,"groupId":"10449","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"replicaTypeTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/63/c44db8b3c165ee2c87f1430188197ba886bd99.src","preCode":"  public void replicaTypeTest() {\n    List<Replica> replicas = getBasicReplicaList();\n\n    List<PreferenceRule> rules = PreferenceRule.from(ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":NRT,\" +\n        ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":TLOG\");\n    NodePreferenceRulesComparator comparator = new NodePreferenceRulesComparator(rules, null);\n\n    replicas.sort(comparator);\n    assertEquals(\"node1\", replicas.get(0).getNodeName());\n    assertEquals(\"node2\", replicas.get(1).getNodeName());\n\n    \r\n    rules = PreferenceRule.from(ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":TLOG,\" +\n        ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + \":NRT\");\n    comparator = new NodePreferenceRulesComparator(rules, null);\n\n    replicas.sort(comparator);\n    assertEquals(\"node2\", replicas.get(0).getNodeName());\n    assertEquals(\"node1\", replicas.get(1).getNodeName());\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/NodePreferenceRulesComparatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"a0492840ee8690ddf48369665c744d16c7dd30cb","commitMessage":"@@@SOLR-12182: Don't persist base_url in ZK as the scheme is variable.  compute from node_name instead (#2010)\n\n","date":"2020-12-01 03:05:48","modifiedFileCount":"53","status":"M","submitter":"Timothy Potter"}]
