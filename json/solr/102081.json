[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues str1DV = str1.getValues(context, readerContext);\n    final DocValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) {\n        return dist.getDistance(str1DV.strVal(doc), str2DV.strVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","date":"2011-07-10 07:01:53","endLine":72,"groupId":"6936","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getValues","params":"(Mapcontext@AtomicReaderContextreaderContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/ce483059173a1bc9d469bef6be515fd38c79fa.src","preCode":"  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues str1DV = str1.getValues(context, readerContext);\n    final DocValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) {\n        return dist.getDistance(str1DV.strVal(doc), str2DV.strVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","date":"2011-07-10 07:01:53","endLine":81,"groupId":"6936","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"description","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/ce483059173a1bc9d469bef6be515fd38c79fa.src","preCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-12-14 02:39:06","commitOrder":2,"curCode":"  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues str1DV = str1.getValues(context, readerContext);\n    final FunctionValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) {\n        return dist.getDistance(str1DV.strVal(doc), str2DV.strVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","date":"2011-12-14 02:39:06","endLine":72,"groupId":"6936","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getValues","params":"(Mapcontext@AtomicReaderContextreaderContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a8/3153f2839c3e855771418e56c8c03c2f8aaa43.src","preCode":"  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final DocValues str1DV = str1.getValues(context, readerContext);\n    final DocValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) {\n        return dist.getDistance(str1DV.strVal(doc), str2DV.strVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":2,"curCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","date":"2011-07-10 07:01:53","endLine":81,"groupId":"6936","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"description","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/ce483059173a1bc9d469bef6be515fd38c79fa.src","preCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"8d7749ea4fc55e54f4d7ead438c24f327ceb8358","commitMessage":"@@@LUCENE-3622: separate IndexDocValues interface from implementation (phase 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1213844 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-12-14 02:39:06","modifiedFileCount":"136","status":"M","submitter":"Robert Muir"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2014-09-24 07:51:55","commitOrder":3,"curCode":"  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues str1DV = str1.getValues(context, readerContext);\n    final FunctionValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) {\n        return dist.getDistance(str1DV.strVal(doc), str2DV.strVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","date":"2014-09-24 07:51:55","endLine":67,"groupId":"6936","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getValues","params":"(Mapcontext@LeafReaderContextreaderContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bf/56c6eb200f40ee98e203274244368cdfb921d6.src","preCode":"  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues str1DV = str1.getValues(context, readerContext);\n    final FunctionValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) {\n        return dist.getDistance(str1DV.strVal(doc), str2DV.strVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":3,"curCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","date":"2011-07-10 07:01:53","endLine":81,"groupId":"6936","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"description","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/ce483059173a1bc9d469bef6be515fd38c79fa.src","preCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"85bf3181737a34e2d357f0c926d7ae8d07b9ae39","commitMessage":"@@@LUCENE-5569: *AtomicReader/AtomicReaderContext have been renamed to *LeafReader/LeafReaderContext\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1627178 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-24 07:51:55","modifiedFileCount":"459","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2014-10-14 05:19:47","commitOrder":4,"curCode":"  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues str1DV = str1.getValues(context, readerContext);\n    final FunctionValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) {\n        String s1 = str1DV.strVal(doc);\n        String s2 = str2DV.strVal(doc);\n        if (null == s1 || null == s2) {\n          \r\n          return (s1 == s2) ? 1.0F : 0.0F;\n        }\n        return dist.getDistance(s1, s2);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return str1DV.exists(doc) && str2DV.exists(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","date":"2014-10-14 05:19:47","endLine":78,"groupId":"6936","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getValues","params":"(Mapcontext@LeafReaderContextreaderContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/98d8fcb25375b6b3d6cb94cddabd95a3eeebf1.src","preCode":"  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues str1DV = str1.getValues(context, readerContext);\n    final FunctionValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) {\n        return dist.getDistance(str1DV.strVal(doc), str2DV.strVal(doc));\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":4,"curCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","date":"2011-07-10 07:01:53","endLine":81,"groupId":"6936","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"description","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/ce483059173a1bc9d469bef6be515fd38c79fa.src","preCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"269545dd91d67eacd5f902e0559259fc44c00d7d","commitMessage":"@@@SOLR-6540 Fix NPE from strdist() func when doc value source does not exist in a doc\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1631555 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-10-14 05:19:47","modifiedFileCount":"3","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2016-10-03 03:18:22","commitOrder":5,"curCode":"  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues str1DV = str1.getValues(context, readerContext);\n    final FunctionValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) throws IOException {\n        String s1 = str1DV.strVal(doc);\n        String s2 = str2DV.strVal(doc);\n        if (null == s1 || null == s2) {\n          \r\n          return (s1 == s2) ? 1.0F : 0.0F;\n        }\n        return dist.getDistance(s1, s2);\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return str1DV.exists(doc) && str2DV.exists(doc);\n      }\n\n      @Override\n      public String toString(int doc) throws IOException {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","date":"2016-10-03 03:18:22","endLine":77,"groupId":"6936","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getValues","params":"(Mapcontext@LeafReaderContextreaderContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8b/f9f1ad2ec64c5fab2845f1a8b6e5f011a640c3.src","preCode":"  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues str1DV = str1.getValues(context, readerContext);\n    final FunctionValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) {\n        String s1 = str1DV.strVal(doc);\n        String s2 = str2DV.strVal(doc);\n        if (null == s1 || null == s2) {\n          \r\n          return (s1 == s2) ? 1.0F : 0.0F;\n        }\n        return dist.getDistance(s1, s2);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return str1DV.exists(doc) && str2DV.exists(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":5,"curCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","date":"2011-07-10 07:01:53","endLine":81,"groupId":"6936","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"description","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/ce483059173a1bc9d469bef6be515fd38c79fa.src","preCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"3182cd9872af3cb73a1f73e36de68b8d76646e59","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-10-03 03:18:22","modifiedFileCount":"570","status":"M","submitter":"Karl Wright"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2020-06-13 23:00:58","commitOrder":6,"curCode":"  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    @SuppressWarnings({\"unchecked\"})\n    final FunctionValues str1DV = str1.getValues(context, readerContext);\n    @SuppressWarnings({\"unchecked\"})\n    final FunctionValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) throws IOException {\n        String s1 = str1DV.strVal(doc);\n        String s2 = str2DV.strVal(doc);\n        if (null == s1 || null == s2) {\n          \r\n          return (s1 == s2) ? 1.0F : 0.0F;\n        }\n        return dist.getDistance(s1, s2);\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return str1DV.exists(doc) && str2DV.exists(doc);\n      }\n\n      @Override\n      public String toString(int doc) throws IOException {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","date":"2020-06-13 23:00:58","endLine":80,"groupId":"6936","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getValues","params":"(Mapcontext@LeafReaderContextreaderContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/71/7657cc586325d1d65bbb64f23fec43b867b5c7.src","preCode":"  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues str1DV = str1.getValues(context, readerContext);\n    final FunctionValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) throws IOException {\n        String s1 = str1DV.strVal(doc);\n        String s2 = str2DV.strVal(doc);\n        if (null == s1 || null == s2) {\n          \r\n          return (s1 == s2) ? 1.0F : 0.0F;\n        }\n        return dist.getDistance(s1, s2);\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return str1DV.exists(doc) && str2DV.exists(doc);\n      }\n\n      @Override\n      public String toString(int doc) throws IOException {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":6,"curCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","date":"2011-07-10 07:01:53","endLine":81,"groupId":"6936","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"description","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/ce483059173a1bc9d469bef6be515fd38c79fa.src","preCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"a41aa20b0afaadf47ec6e58476a947c6936c1921","commitMessage":"@@@SOLR-14564: Fix or suppress remaining warnings in solr/core\n","date":"2020-06-13 23:00:58","modifiedFileCount":"91","status":"M","submitter":"Erick Erickson"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2021-06-03 06:17:26","commitOrder":7,"curCode":"  public FunctionValues getValues(Map<Object, Object> context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues str1DV = str1.getValues(context, readerContext);\n    final FunctionValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) throws IOException {\n        String s1 = str1DV.strVal(doc);\n        String s2 = str2DV.strVal(doc);\n        if (null == s1 || null == s2) {\n          \r\n          return (s1 == s2) ? 1.0F : 0.0F;\n        }\n        return dist.getDistance(s1, s2);\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return str1DV.exists(doc) && str2DV.exists(doc);\n      }\n\n      @Override\n      public String toString(int doc) throws IOException {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","date":"2021-06-03 06:17:26","endLine":77,"groupId":"102081","id":13,"instanceNumber":1,"isCurCommit":1,"methodName":"getValues","params":"(Map<Object@Object>context@LeafReaderContextreaderContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/19/005361e3bc77f72c29897ebfe9bddff5208c38.src","preCode":"  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    @SuppressWarnings({\"unchecked\"})\n    final FunctionValues str1DV = str1.getValues(context, readerContext);\n    @SuppressWarnings({\"unchecked\"})\n    final FunctionValues str2DV = str2.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n\n      @Override\n      public float floatVal(int doc) throws IOException {\n        String s1 = str1DV.strVal(doc);\n        String s2 = str2DV.strVal(doc);\n        if (null == s1 || null == s2) {\n          \r\n          return (s1 == s2) ? 1.0F : 0.0F;\n        }\n        return dist.getDistance(s1, s2);\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return str1DV.exists(doc) && str2DV.exists(doc);\n      }\n\n      @Override\n      public String toString(int doc) throws IOException {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"strdist\").append('(');\n        sb.append(str1DV.toString(doc)).append(',').append(str2DV.toString(doc))\n                .append(\", dist=\").append(dist.getClass().getName());\n        sb.append(')');\n        return sb.toString();\n      }\n    };\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":7,"curCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","date":"2011-07-10 07:01:53","endLine":81,"groupId":"102081","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"description","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/ce483059173a1bc9d469bef6be515fd38c79fa.src","preCode":"  public String description() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"strdist\").append('(');\n    sb.append(str1).append(',').append(str2).append(\", dist=\").append(dist.getClass().getName());\n    sb.append(')');\n    return sb.toString();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"c8e06a7298a2745c2b83102169073e2f8e8eceb5","commitMessage":"@@@SOLR-15385 Address many rawtypes warnings (#107)\n\nAddressed significant usage of raw types with Class.  Map.  and SolrRequest; removed over 400 SuppressWarning annotations.\n\nMap construction was replaced with Map.of when immutability was possible.  and Utils.makeMap when a mutable map was required.\n\nDiscovered a potential bug in the PackageStore tests where not all assertions were being verified - these tests will be fixed separately.\n\nCo-authored-by: David Smiley <dsmiley@salesforce.com>","date":"2021-06-03 06:17:26","modifiedFileCount":"244","status":"M","submitter":"Mike Drob"}]
