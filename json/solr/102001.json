[{"authorTime":"2017-01-22 06:57:11","codes":[{"authorDate":"2017-01-22 06:57:11","commitOrder":1,"curCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    double actualMin, actualMax;\n    if (min == null) {\n      actualMin = Double.NEGATIVE_INFINITY;\n    } else {\n      actualMin = Double.parseDouble(min);\n      if (!minInclusive) {\n        actualMin = DoublePoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Double.POSITIVE_INFINITY;\n    } else {\n      actualMax = Double.parseDouble(max);\n      if (!maxInclusive) {\n        actualMax = DoublePoint.nextDown(actualMax);\n      }\n    }\n    return DoublePoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","date":"2017-01-22 06:57:11","endLine":81,"groupId":"57144","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getPointRangeQuery","params":"(QParserparser@SchemaFieldfield@Stringmin@Stringmax@booleanminInclusive@booleanmaxInclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b9/a7311f5e22ec62691394cff729c6ae01afb859.src","preCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    double actualMin, actualMax;\n    if (min == null) {\n      actualMin = Double.NEGATIVE_INFINITY;\n    } else {\n      actualMin = Double.parseDouble(min);\n      if (!minInclusive) {\n        actualMin = DoublePoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Double.POSITIVE_INFINITY;\n    } else {\n      actualMax = Double.parseDouble(max);\n      if (!maxInclusive) {\n        actualMax = DoublePoint.nextDown(actualMax);\n      }\n    }\n    return DoublePoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/DoublePointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2017-01-22 06:57:11","commitOrder":1,"curCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    float actualMin, actualMax;\n    if (min == null) {\n      actualMin = Float.NEGATIVE_INFINITY;\n    } else {\n      actualMin = Float.parseFloat(min);\n      if (!minInclusive) {\n        actualMin = FloatPoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Float.POSITIVE_INFINITY;\n    } else {\n      actualMax = Float.parseFloat(max);\n      if (!maxInclusive) {\n        actualMax = FloatPoint.nextDown(actualMax);\n      }\n    }\n    return FloatPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","date":"2017-01-22 06:57:11","endLine":81,"groupId":"9545","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPointRangeQuery","params":"(QParserparser@SchemaFieldfield@Stringmin@Stringmax@booleanminInclusive@booleanmaxInclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7b/866fce9a6900313d3a459085442a931b205966.src","preCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    float actualMin, actualMax;\n    if (min == null) {\n      actualMin = Float.NEGATIVE_INFINITY;\n    } else {\n      actualMin = Float.parseFloat(min);\n      if (!minInclusive) {\n        actualMin = FloatPoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Float.POSITIVE_INFINITY;\n    } else {\n      actualMax = Float.parseFloat(max);\n      if (!maxInclusive) {\n        actualMax = FloatPoint.nextDown(actualMax);\n      }\n    }\n    return FloatPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/FloatPointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"285a1013ad04dd1cd5e5e41ffa93a87fe862c152","commitMessage":"@@@SOLR-10011: Refactor PointField & TrieField to now have a common base class.  NumericFieldType.\n\n  The TrieField.TrieTypes and PointField.PointTypes are now consolidated to NumericFieldType.NumberType. This\n  refactoring also fixes a bug whereby PointFields were not using DocValues for range queries for\n  indexed=false.  docValues=true fields.\n","date":"2017-01-22 06:57:11","modifiedFileCount":"14","status":"B","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":2,"curCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    double actualMin, actualMax;\n    if (min == null) {\n      actualMin = Double.NEGATIVE_INFINITY;\n    } else {\n      actualMin = parseDoubleFromUser(field.getName(), min);\n      if (!minInclusive) {\n        actualMin = DoublePoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Double.POSITIVE_INFINITY;\n    } else {\n      actualMax = parseDoubleFromUser(field.getName(), max);\n      if (!maxInclusive) {\n        actualMax = DoublePoint.nextDown(actualMax);\n      }\n    }\n    return DoublePoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","date":"2017-06-29 17:00:17","endLine":78,"groupId":"57144","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getPointRangeQuery","params":"(QParserparser@SchemaFieldfield@Stringmin@Stringmax@booleanminInclusive@booleanmaxInclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d2/cf6ed36dbae5b472e1799b270f2364072bd973.src","preCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    double actualMin, actualMax;\n    if (min == null) {\n      actualMin = Double.NEGATIVE_INFINITY;\n    } else {\n      actualMin = Double.parseDouble(min);\n      if (!minInclusive) {\n        actualMin = DoublePoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Double.POSITIVE_INFINITY;\n    } else {\n      actualMax = Double.parseDouble(max);\n      if (!maxInclusive) {\n        actualMax = DoublePoint.nextDown(actualMax);\n      }\n    }\n    return DoublePoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/DoublePointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":2,"curCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    float actualMin, actualMax;\n    if (min == null) {\n      actualMin = Float.NEGATIVE_INFINITY;\n    } else {\n      actualMin = parseFloatFromUser(field.getName(), min);\n      if (!minInclusive) {\n        actualMin = FloatPoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Float.POSITIVE_INFINITY;\n    } else {\n      actualMax = parseFloatFromUser(field.getName(), max);\n      if (!maxInclusive) {\n        actualMax = FloatPoint.nextDown(actualMax);\n      }\n    }\n    return FloatPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","date":"2017-06-29 17:00:17","endLine":78,"groupId":"57144","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getPointRangeQuery","params":"(QParserparser@SchemaFieldfield@Stringmin@Stringmax@booleanminInclusive@booleanmaxInclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e1/a97410323436afdbb1dd6534c162a1e0440884.src","preCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    float actualMin, actualMax;\n    if (min == null) {\n      actualMin = Float.NEGATIVE_INFINITY;\n    } else {\n      actualMin = Float.parseFloat(min);\n      if (!minInclusive) {\n        actualMin = FloatPoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Float.POSITIVE_INFINITY;\n    } else {\n      actualMax = Float.parseFloat(max);\n      if (!maxInclusive) {\n        actualMax = FloatPoint.nextDown(actualMax);\n      }\n    }\n    return FloatPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/FloatPointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"M","submitter":"Karl Wright"},{"authorTime":"2017-07-27 01:10:40","codes":[{"authorDate":"2017-07-27 01:10:40","commitOrder":3,"curCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    double actualMin, actualMax;\n    if (min == null) {\n      actualMin = Double.NEGATIVE_INFINITY;\n    } else {\n      actualMin = parseDoubleFromUser(field.getName(), min);\n      if (!minInclusive) {\n        if (actualMin == Double.POSITIVE_INFINITY) return new MatchNoDocsQuery();\n        actualMin = DoublePoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Double.POSITIVE_INFINITY;\n    } else {\n      actualMax = parseDoubleFromUser(field.getName(), max);\n      if (!maxInclusive) {\n        if (actualMax == Double.NEGATIVE_INFINITY) return new MatchNoDocsQuery();\n        actualMax = DoublePoint.nextDown(actualMax);\n      }\n    }\n    return DoublePoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","date":"2017-07-27 01:12:40","endLine":80,"groupId":"102001","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getPointRangeQuery","params":"(QParserparser@SchemaFieldfield@Stringmin@Stringmax@booleanminInclusive@booleanmaxInclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ed/c7c381d9c57df975bac6b94382b12aebc65489.src","preCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    double actualMin, actualMax;\n    if (min == null) {\n      actualMin = Double.NEGATIVE_INFINITY;\n    } else {\n      actualMin = parseDoubleFromUser(field.getName(), min);\n      if (!minInclusive) {\n        actualMin = DoublePoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Double.POSITIVE_INFINITY;\n    } else {\n      actualMax = parseDoubleFromUser(field.getName(), max);\n      if (!maxInclusive) {\n        actualMax = DoublePoint.nextDown(actualMax);\n      }\n    }\n    return DoublePoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/DoublePointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2017-07-27 01:10:40","commitOrder":3,"curCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    float actualMin, actualMax;\n    if (min == null) {\n      actualMin = Float.NEGATIVE_INFINITY;\n    } else {\n      actualMin = parseFloatFromUser(field.getName(), min);\n      if (!minInclusive) {\n        if (actualMin == Float.POSITIVE_INFINITY) return new MatchNoDocsQuery();\n        actualMin = FloatPoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Float.POSITIVE_INFINITY;\n    } else {\n      actualMax = parseFloatFromUser(field.getName(), max);\n      if (!maxInclusive) {\n        if (actualMax == Float.NEGATIVE_INFINITY) return new MatchNoDocsQuery();\n        actualMax = FloatPoint.nextDown(actualMax);\n      }\n    }\n    return FloatPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","date":"2017-07-27 01:12:40","endLine":80,"groupId":"102001","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getPointRangeQuery","params":"(QParserparser@SchemaFieldfield@Stringmin@Stringmax@booleanminInclusive@booleanmaxInclusive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c7/0655ad26bbb3adb149ce481093ad122f935f72.src","preCode":"  public Query getPointRangeQuery(QParser parser, SchemaField field, String min, String max, boolean minInclusive,\n      boolean maxInclusive) {\n    float actualMin, actualMax;\n    if (min == null) {\n      actualMin = Float.NEGATIVE_INFINITY;\n    } else {\n      actualMin = parseFloatFromUser(field.getName(), min);\n      if (!minInclusive) {\n        actualMin = FloatPoint.nextUp(actualMin);\n      }\n    }\n    if (max == null) {\n      actualMax = Float.POSITIVE_INFINITY;\n    } else {\n      actualMax = parseFloatFromUser(field.getName(), max);\n      if (!maxInclusive) {\n        actualMax = FloatPoint.nextDown(actualMax);\n      }\n    }\n    return FloatPoint.newRangeQuery(field.getName(), actualMin, actualMax);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/FloatPointField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"847ab9e326e9462aab9c5b6429cc6f1ee93acb1d","commitMessage":"@@@SOLR-11070.  SOLR-11056: Make docValues range queries behave the same as Trie/Point fields for Double/Float Infinity cases\n","date":"2017-07-27 01:12:40","modifiedFileCount":"5","status":"M","submitter":"Tomas Fernandez Lobbe"}]
