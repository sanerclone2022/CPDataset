[{"authorTime":"2016-02-19 08:28:19","codes":[{"authorDate":"2016-02-19 08:28:19","commitOrder":1,"curCode":"  public void testInvalidCoreNamesAreRejectedWhenCreatingCore() {\n    final Create createRequest = new Create();\n    \n    try {\n      createRequest.setCoreName(\"invalid$core@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid core\"));\n      assertTrue(exceptionMessage.contains(\"invalid$core@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, and alphanumerics\"));\n    }\n  }\n","date":"2016-02-19 08:28:19","endLine":176,"groupId":"14642","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidCoreNamesAreRejectedWhenCreatingCore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/14/3d2c32c3b6f809ea9f55b1712904b8cfada457.src","preCode":"  public void testInvalidCoreNamesAreRejectedWhenCreatingCore() {\n    final Create createRequest = new Create();\n    \n    try {\n      createRequest.setCoreName(\"invalid$core@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid core\"));\n      assertTrue(exceptionMessage.contains(\"invalid$core@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, and alphanumerics\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"B"},{"authorDate":"2016-02-19 08:28:19","commitOrder":1,"curCode":"  public void testInvalidCollectionNameRejectedWhenCreatingCollection() {\n    final Create createRequest = new Create();\n    try {\n      createRequest.setCollectionName(\"invalid$collection@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid collection\"));\n      assertTrue(exceptionMessage.contains(\"invalid$collection@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, and alphanumerics\"));\n    }\n  }\n","date":"2016-02-19 08:28:19","endLine":42,"groupId":"17870","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidCollectionNameRejectedWhenCreatingCollection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6f/ef14c9787ec5c86e1c780b732d85172eb51523.src","preCode":"  public void testInvalidCollectionNameRejectedWhenCreatingCollection() {\n    final Create createRequest = new Create();\n    try {\n      createRequest.setCollectionName(\"invalid$collection@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid collection\"));\n      assertTrue(exceptionMessage.contains(\"invalid$collection@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, and alphanumerics\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"B"}],"commitId":"8fe946bde2482a62b859952201496bff0679f914","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n","date":"2016-02-19 08:28:19","modifiedFileCount":"7","status":"B","submitter":"Noble Paul"},{"authorTime":"2016-03-04 18:54:10","codes":[{"authorDate":"2016-03-04 18:54:10","commitOrder":2,"curCode":"  public void testInvalidCoreNamesAreRejectedWhenCreatingCore() {\n    final Create createRequest = new Create();\n    \n    try {\n      createRequest.setCoreName(\"invalid$core@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid core\"));\n      assertTrue(exceptionMessage.contains(\"invalid$core@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n","date":"2016-03-04 18:54:10","endLine":176,"groupId":"14642","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidCoreNamesAreRejectedWhenCreatingCore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f3/c3d55d5fcd282fd6209b8fd6f118d51c4127c6.src","preCode":"  public void testInvalidCoreNamesAreRejectedWhenCreatingCore() {\n    final Create createRequest = new Create();\n    \n    try {\n      createRequest.setCoreName(\"invalid$core@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid core\"));\n      assertTrue(exceptionMessage.contains(\"invalid$core@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, and alphanumerics\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"},{"authorDate":"2016-03-04 18:54:10","commitOrder":2,"curCode":"  public void testInvalidCollectionNameRejectedWhenCreatingCollection() {\n    final Create createRequest = new Create();\n    try {\n      createRequest.setCollectionName(\"invalid$collection@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid collection\"));\n      assertTrue(exceptionMessage.contains(\"invalid$collection@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n","date":"2016-03-04 18:54:10","endLine":42,"groupId":"17870","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidCollectionNameRejectedWhenCreatingCollection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/5c31517bd0ee1538b1014e86a3ecce4b11d731.src","preCode":"  public void testInvalidCollectionNameRejectedWhenCreatingCollection() {\n    final Create createRequest = new Create();\n    try {\n      createRequest.setCollectionName(\"invalid$collection@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid collection\"));\n      assertTrue(exceptionMessage.contains(\"invalid$collection@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, and alphanumerics\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"M"}],"commitId":"517acece6a210b2d1baf75a39fe3b77ea59926b2","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n\nConflicts:\n\tsolr/CHANGES.txt\n","date":"2016-03-04 18:54:10","modifiedFileCount":"303","status":"M","submitter":"Noble Paul"},{"authorTime":"2016-03-10 05:15:40","codes":[{"authorDate":"2016-03-10 05:15:40","commitOrder":3,"curCode":"  public void testInvalidCoreNamesAreRejectedWhenCreatingCore() {\n    final Create createRequest = new Create();\n    \n    try {\n      createRequest.setCoreName(\"invalid$core@name\");\n      fail();\n    } catch (SolrException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid core\"));\n      assertTrue(exceptionMessage.contains(\"invalid$core@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n","date":"2016-03-10 05:15:58","endLine":175,"groupId":"14642","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidCoreNamesAreRejectedWhenCreatingCore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ef/4dad7b662210af67a3d7cc9b3fa6e1e1334ffc.src","preCode":"  public void testInvalidCoreNamesAreRejectedWhenCreatingCore() {\n    final Create createRequest = new Create();\n    \n    try {\n      createRequest.setCoreName(\"invalid$core@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid core\"));\n      assertTrue(exceptionMessage.contains(\"invalid$core@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2016-03-10 05:15:40","commitOrder":3,"curCode":"  public void testInvalidCollectionNameRejectedWhenCreatingCollection() {\n    final Create createRequest = new Create();\n    try {\n      createRequest.setCollectionName(\"invalid$collection@name\");\n      fail();\n    } catch (SolrException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid collection\"));\n      assertTrue(exceptionMessage.contains(\"invalid$collection@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n","date":"2016-03-10 05:15:58","endLine":43,"groupId":"17870","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidCollectionNameRejectedWhenCreatingCollection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c2/1e523855c091aed2d6ccbb9a012028575e4e9b.src","preCode":"  public void testInvalidCollectionNameRejectedWhenCreatingCollection() {\n    final Create createRequest = new Create();\n    try {\n      createRequest.setCollectionName(\"invalid$collection@name\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid collection\"));\n      assertTrue(exceptionMessage.contains(\"invalid$collection@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"}],"commitId":"f24810bdf1e8b1949970ce743373794e0b1ffc96","commitMessage":"@@@SOLR-8765: Throw SolrException rather than IAE on name validation\n","date":"2016-03-10 05:15:58","modifiedFileCount":"3","status":"M","submitter":"Alan Woodward"},{"authorTime":"2017-06-01 03:04:40","codes":[{"authorDate":"2016-03-10 05:15:40","commitOrder":4,"curCode":"  public void testInvalidCoreNamesAreRejectedWhenCreatingCore() {\n    final Create createRequest = new Create();\n    \n    try {\n      createRequest.setCoreName(\"invalid$core@name\");\n      fail();\n    } catch (SolrException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid core\"));\n      assertTrue(exceptionMessage.contains(\"invalid$core@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n","date":"2016-03-10 05:15:58","endLine":175,"groupId":"14642","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidCoreNamesAreRejectedWhenCreatingCore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ef/4dad7b662210af67a3d7cc9b3fa6e1e1334ffc.src","preCode":"  public void testInvalidCoreNamesAreRejectedWhenCreatingCore() {\n    final Create createRequest = new Create();\n    \n    try {\n      createRequest.setCoreName(\"invalid$core@name\");\n      fail();\n    } catch (SolrException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid core\"));\n      assertTrue(exceptionMessage.contains(\"invalid$core@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"N"},{"authorDate":"2017-06-01 03:04:40","commitOrder":4,"curCode":"  public void testInvalidCollectionNameRejectedWhenCreatingCollection() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CollectionAdminRequest.createCollection(\"invalid$collection@name\", null, 1, 1);\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid collection\"));\n    assertTrue(exceptionMessage.contains(\"invalid$collection@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n","date":"2017-06-01 03:04:40","endLine":40,"groupId":"38508","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidCollectionNameRejectedWhenCreatingCollection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/29/b273ede8760ea04e0e06a6f21365b1353ff427.src","preCode":"  public void testInvalidCollectionNameRejectedWhenCreatingCollection() {\n    final Create createRequest = new Create();\n    try {\n      createRequest.setCollectionName(\"invalid$collection@name\");\n      fail();\n    } catch (SolrException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid collection\"));\n      assertTrue(exceptionMessage.contains(\"invalid$collection@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"}],"commitId":"3291ef884d26e3f8cb43707f2acdf674f3e51c01","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-01 03:04:40","modifiedFileCount":"29","status":"M","submitter":"Karl Wright"},{"authorTime":"2017-06-01 03:04:40","codes":[{"authorDate":"2019-08-03 15:30:49","commitOrder":5,"curCode":"  public void testInvalidCoreNamesAreRejectedWhenCreatingCore() {\n    final Create createRequest = new Create();\n    SolrException e = expectThrows(SolrException.class, () -> createRequest.setCoreName(\"invalid$core@name\"));\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid core\"));\n    assertTrue(exceptionMessage.contains(\"invalid$core@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n","date":"2019-08-03 15:30:49","endLine":176,"groupId":"10936","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidCoreNamesAreRejectedWhenCreatingCore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/f59b71001dacb0d66f6572fca59d81bd99afaa.src","preCode":"  public void testInvalidCoreNamesAreRejectedWhenCreatingCore() {\n    final Create createRequest = new Create();\n    \n    try {\n      createRequest.setCoreName(\"invalid$core@name\");\n      fail();\n    } catch (SolrException e) {\n      final String exceptionMessage = e.getMessage();\n      assertTrue(exceptionMessage.contains(\"Invalid core\"));\n      assertTrue(exceptionMessage.contains(\"invalid$core@name\"));\n      assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"},{"authorDate":"2017-06-01 03:04:40","commitOrder":5,"curCode":"  public void testInvalidCollectionNameRejectedWhenCreatingCollection() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CollectionAdminRequest.createCollection(\"invalid$collection@name\", null, 1, 1);\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid collection\"));\n    assertTrue(exceptionMessage.contains(\"invalid$collection@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n","date":"2017-06-01 03:04:40","endLine":40,"groupId":"10936","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidCollectionNameRejectedWhenCreatingCollection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/29/b273ede8760ea04e0e06a6f21365b1353ff427.src","preCode":"  public void testInvalidCollectionNameRejectedWhenCreatingCollection() {\n    final SolrException e = expectThrows(SolrException.class, () -> {\n        CollectionAdminRequest.createCollection(\"invalid$collection@name\", null, 1, 1);\n      });\n    final String exceptionMessage = e.getMessage();\n    assertTrue(exceptionMessage.contains(\"Invalid collection\"));\n    assertTrue(exceptionMessage.contains(\"invalid$collection@name\"));\n    assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCollectionAdminRequest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"N"}],"commitId":"8c4fde94fe93c70b95ed3563fb65972bb303e0af","commitMessage":"@@@SOLR-12555: use expectThrows() to verify the ex thrown in tests\n","date":"2019-08-03 15:30:49","modifiedFileCount":"89","status":"M","submitter":"Munendra S N"}]
