[{"authorTime":"2015-07-17 19:20:13","codes":[{"authorDate":"2015-07-17 19:20:13","commitOrder":1,"curCode":"    private void addRawSparseProbabilistic(final long rawValue) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        final long substreamValue = (rawValue >>> log2m);\n        final byte p_w;\n\n        if(substreamValue == 0L) {\n            \r\n            \r\n            \r\n            \r\n            p_w = 0;\n        } else {\n            p_w = (byte)(1 + BitUtil.leastSignificantBit(substreamValue| pwMaxMask));\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        if(p_w == 0) {\n            return;\n        }\n\n        \r\n        final int j = (int)(rawValue & mBitsMask);\n\n        final byte currentValue;\n        if (sparseProbabilisticStorage.containsKey(j)) {\n          currentValue = sparseProbabilisticStorage.lget();\n        } else {\n          currentValue = 0;\n        }\n\n        if(p_w > currentValue) {\n            sparseProbabilisticStorage.put(j, p_w);\n        }\n    }\n","date":"2015-07-17 19:20:13","endLine":410,"groupId":"59506","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addRawSparseProbabilistic","params":"(finallongrawValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/2401bfc0f076d82017dfd9ce353333de0991ef.src","preCode":"    private void addRawSparseProbabilistic(final long rawValue) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        final long substreamValue = (rawValue >>> log2m);\n        final byte p_w;\n\n        if(substreamValue == 0L) {\n            \r\n            \r\n            \r\n            \r\n            p_w = 0;\n        } else {\n            p_w = (byte)(1 + BitUtil.leastSignificantBit(substreamValue| pwMaxMask));\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        if(p_w == 0) {\n            return;\n        }\n\n        \r\n        final int j = (int)(rawValue & mBitsMask);\n\n        final byte currentValue;\n        if (sparseProbabilisticStorage.containsKey(j)) {\n          currentValue = sparseProbabilisticStorage.lget();\n        } else {\n          currentValue = 0;\n        }\n\n        if(p_w > currentValue) {\n            sparseProbabilisticStorage.put(j, p_w);\n        }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/hll/HLL.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":367,"status":"B"},{"authorDate":"2015-07-17 19:20:13","commitOrder":1,"curCode":"    private void addRawProbabilistic(final long rawValue) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        final long substreamValue = (rawValue >>> log2m);\n        final byte p_w;\n\n        if (substreamValue == 0L) {\n            \r\n            \r\n            \r\n            \r\n            p_w = 0;\n        } else {\n            p_w = (byte)(1 + BitUtil.leastSignificantBit(substreamValue| pwMaxMask));\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        if(p_w == 0) {\n            return;\n        }\n\n        \r\n        final int j = (int)(rawValue & mBitsMask);\n\n        probabilisticStorage.setMaxRegister(j, p_w);\n    }\n","date":"2015-07-17 19:20:13","endLine":452,"groupId":"59506","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addRawProbabilistic","params":"(finallongrawValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/2401bfc0f076d82017dfd9ce353333de0991ef.src","preCode":"    private void addRawProbabilistic(final long rawValue) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        final long substreamValue = (rawValue >>> log2m);\n        final byte p_w;\n\n        if (substreamValue == 0L) {\n            \r\n            \r\n            \r\n            \r\n            p_w = 0;\n        } else {\n            p_w = (byte)(1 + BitUtil.leastSignificantBit(substreamValue| pwMaxMask));\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        if(p_w == 0) {\n            return;\n        }\n\n        \r\n        final int j = (int)(rawValue & mBitsMask);\n\n        probabilisticStorage.setMaxRegister(j, p_w);\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/hll/HLL.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":418,"status":"B"}],"commitId":"2dfad693d6870e43a63aba3b43a62bf6c146b4c9","commitMessage":"@@@SOLR-7787: Removed fastutil and java-hll dependency.  integrated HyperLogLog from java-hll into Solr core.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1691518 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-07-17 19:20:13","modifiedFileCount":"7","status":"B","submitter":"Dawid Weiss"},{"authorTime":"2015-07-17 19:20:13","codes":[{"authorDate":"2015-08-24 17:53:04","commitOrder":2,"curCode":"    private void addRawSparseProbabilistic(final long rawValue) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        final long substreamValue = (rawValue >>> log2m);\n        final byte p_w;\n\n        if(substreamValue == 0L) {\n            \r\n            \r\n            \r\n            \r\n            p_w = 0;\n        } else {\n            p_w = (byte)(1 + BitUtil.leastSignificantBit(substreamValue| pwMaxMask));\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        if(p_w == 0) {\n            return;\n        }\n\n        \r\n        final int j = (int)(rawValue & mBitsMask);\n\n        final byte currentValue;\n        final int index = sparseProbabilisticStorage.indexOf(j);\n        if (index >= 0) {\n          currentValue = sparseProbabilisticStorage.indexGet(index);\n        } else {\n          currentValue = 0;\n        }\n\n        if(p_w > currentValue) {\n            sparseProbabilisticStorage.put(j, p_w);\n        }\n    }\n","date":"2015-08-24 17:53:04","endLine":411,"groupId":"102478","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addRawSparseProbabilistic","params":"(finallongrawValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/ba80b37e0e55d696a85733e674f65ca2760e1a.src","preCode":"    private void addRawSparseProbabilistic(final long rawValue) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        final long substreamValue = (rawValue >>> log2m);\n        final byte p_w;\n\n        if(substreamValue == 0L) {\n            \r\n            \r\n            \r\n            \r\n            p_w = 0;\n        } else {\n            p_w = (byte)(1 + BitUtil.leastSignificantBit(substreamValue| pwMaxMask));\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        if(p_w == 0) {\n            return;\n        }\n\n        \r\n        final int j = (int)(rawValue & mBitsMask);\n\n        final byte currentValue;\n        if (sparseProbabilisticStorage.containsKey(j)) {\n          currentValue = sparseProbabilisticStorage.lget();\n        } else {\n          currentValue = 0;\n        }\n\n        if(p_w > currentValue) {\n            sparseProbabilisticStorage.put(j, p_w);\n        }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/hll/HLL.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":367,"status":"M"},{"authorDate":"2015-07-17 19:20:13","commitOrder":2,"curCode":"    private void addRawProbabilistic(final long rawValue) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        final long substreamValue = (rawValue >>> log2m);\n        final byte p_w;\n\n        if (substreamValue == 0L) {\n            \r\n            \r\n            \r\n            \r\n            p_w = 0;\n        } else {\n            p_w = (byte)(1 + BitUtil.leastSignificantBit(substreamValue| pwMaxMask));\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        if(p_w == 0) {\n            return;\n        }\n\n        \r\n        final int j = (int)(rawValue & mBitsMask);\n\n        probabilisticStorage.setMaxRegister(j, p_w);\n    }\n","date":"2015-07-17 19:20:13","endLine":452,"groupId":"102478","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addRawProbabilistic","params":"(finallongrawValue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/2401bfc0f076d82017dfd9ce353333de0991ef.src","preCode":"    private void addRawProbabilistic(final long rawValue) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        final long substreamValue = (rawValue >>> log2m);\n        final byte p_w;\n\n        if (substreamValue == 0L) {\n            \r\n            \r\n            \r\n            \r\n            p_w = 0;\n        } else {\n            p_w = (byte)(1 + BitUtil.leastSignificantBit(substreamValue| pwMaxMask));\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        if(p_w == 0) {\n            return;\n        }\n\n        \r\n        final int j = (int)(rawValue & mBitsMask);\n\n        probabilisticStorage.setMaxRegister(j, p_w);\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/hll/HLL.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":418,"status":"N"}],"commitId":"c1dc2fb6a6969fc61460fa0bd7459fb45a3e173a","commitMessage":"@@@SOLR-7790.  SOLR-7792.  SOLR-7791: Update Carrot2 clustering component to version 3.10.3. Upgrade HPPC library to version 0.7.1.  morfologik-stemming to version 1.10.0. (Dawid Weiss)\n\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1697345 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-24 17:53:04","modifiedFileCount":"10","status":"M","submitter":"Dawid Weiss"}]
