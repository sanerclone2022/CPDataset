[{"authorTime":"2016-12-19 23:15:04","codes":[{"authorDate":"2016-06-18 07:49:48","commitOrder":2,"curCode":"  public void init(FilterConfig conf) throws ServletException {\n    if (conf != null && \"zookeeper\".equals(conf.getInitParameter(\"signer.secret.provider\"))) {\n      SolrZkClient zkClient =\n          (SolrZkClient)conf.getServletContext().getAttribute(KerberosPlugin.DELEGATION_TOKEN_ZK_CLIENT);\n      conf.getServletContext().setAttribute(\"signer.secret.provider.zookeeper.curator.client\",\n          getCuratorClient(zkClient));\n    }\n    super.init(conf);\n  }\n","date":"2016-07-29 00:59:05","endLine":63,"groupId":"61352","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"(FilterConfigconf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7d/bb1ad85454ef66881bd640d5307763430e0d59.src","preCode":"  public void init(FilterConfig conf) throws ServletException {\n    if (conf != null && \"zookeeper\".equals(conf.getInitParameter(\"signer.secret.provider\"))) {\n      SolrZkClient zkClient =\n          (SolrZkClient)conf.getServletContext().getAttribute(KerberosPlugin.DELEGATION_TOKEN_ZK_CLIENT);\n      conf.getServletContext().setAttribute(\"signer.secret.provider.zookeeper.curator.client\",\n          getCuratorClient(zkClient));\n    }\n    super.init(conf);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"NB"},{"authorDate":"2016-12-19 23:15:04","commitOrder":2,"curCode":"  public void init(FilterConfig conf) throws ServletException {\n    if (conf != null && \"zookeeper\".equals(conf.getInitParameter(\"signer.secret.provider\"))) {\n      SolrZkClient zkClient =\n          (SolrZkClient)conf.getServletContext().getAttribute(DELEGATION_TOKEN_ZK_CLIENT);\n      conf.getServletContext().setAttribute(\"signer.secret.provider.zookeeper.curator.client\",\n          getCuratorClient(zkClient));\n    }\n    super.init(conf);\n  }\n","date":"2016-12-19 23:15:04","endLine":69,"groupId":"39086","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"(FilterConfigconf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fb/35e722281c826fcb5003f943c4aa42e8aa48fe.src","preCode":"  public void init(FilterConfig conf) throws ServletException {\n    if (conf != null && \"zookeeper\".equals(conf.getInitParameter(\"signer.secret.provider\"))) {\n      SolrZkClient zkClient =\n          (SolrZkClient)conf.getServletContext().getAttribute(DELEGATION_TOKEN_ZK_CLIENT);\n      conf.getServletContext().setAttribute(\"signer.secret.provider.zookeeper.curator.client\",\n          getCuratorClient(zkClient));\n    }\n    super.init(conf);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/security/HadoopAuthFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"a1a8b2864e621c18aa86b21d4a244233e991a47d","commitMessage":"@@@SOLR-9513: Generic Hadoop authentication plugins.  GenericHadoopAuthPlugin and ConfigurableInternodeAuthHadoopPlugin\n","date":"2016-12-19 23:15:04","modifiedFileCount":"7","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2017-08-09 18:46:53","codes":[{"authorDate":"2017-08-09 18:46:53","commitOrder":3,"curCode":"  public void init(FilterConfig conf) throws ServletException {\n    if (conf != null && \"zookeeper\".equals(conf.getInitParameter(\"signer.secret.provider\"))) {\n      SolrZkClient zkClient =\n          (SolrZkClient)conf.getServletContext().getAttribute(KerberosPlugin.DELEGATION_TOKEN_ZK_CLIENT);\n      try {\n        conf.getServletContext().setAttribute(\"signer.secret.provider.zookeeper.curator.client\",\n            getCuratorClient(zkClient));\n      } catch (InterruptedException | KeeperException e) {\n        throw new ServletException(e);\n      }\n    }\n    super.init(conf);\n  }\n","date":"2017-08-09 18:46:53","endLine":78,"groupId":"102015","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"(FilterConfigconf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ce/3544c0658a85afec0c98ff13e634b6f4f46366.src","preCode":"  public void init(FilterConfig conf) throws ServletException {\n    if (conf != null && \"zookeeper\".equals(conf.getInitParameter(\"signer.secret.provider\"))) {\n      SolrZkClient zkClient =\n          (SolrZkClient)conf.getServletContext().getAttribute(KerberosPlugin.DELEGATION_TOKEN_ZK_CLIENT);\n      conf.getServletContext().setAttribute(\"signer.secret.provider.zookeeper.curator.client\",\n          getCuratorClient(zkClient));\n    }\n    super.init(conf);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2017-08-09 18:46:53","commitOrder":3,"curCode":"  public void init(FilterConfig conf) throws ServletException {\n    if (conf != null && \"zookeeper\".equals(conf.getInitParameter(\"signer.secret.provider\"))) {\n      SolrZkClient zkClient =\n          (SolrZkClient)conf.getServletContext().getAttribute(DELEGATION_TOKEN_ZK_CLIENT);\n      try {\n        conf.getServletContext().setAttribute(\"signer.secret.provider.zookeeper.curator.client\",\n            getCuratorClient(zkClient));\n      } catch (KeeperException | InterruptedException e) {\n        throw new ServletException(e);\n      }\n    }\n    super.init(conf);\n  }\n","date":"2017-08-09 18:46:53","endLine":75,"groupId":"102015","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"(FilterConfigconf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/20/5becc88354ca6fc4f94d9aaeb29533159fd001.src","preCode":"  public void init(FilterConfig conf) throws ServletException {\n    if (conf != null && \"zookeeper\".equals(conf.getInitParameter(\"signer.secret.provider\"))) {\n      SolrZkClient zkClient =\n          (SolrZkClient)conf.getServletContext().getAttribute(DELEGATION_TOKEN_ZK_CLIENT);\n      conf.getServletContext().setAttribute(\"signer.secret.provider.zookeeper.curator.client\",\n          getCuratorClient(zkClient));\n    }\n    super.init(conf);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/security/HadoopAuthFilter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"b091934f9e98568b848d0584a1145c8e514cbd21","commitMessage":"@@@Create znode upfront and fix chroot handling in delegation token feature\n","date":"2017-08-09 18:46:53","modifiedFileCount":"4","status":"M","submitter":"Shalin Shekhar Mangar"}]
