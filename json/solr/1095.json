[{"authorTime":"2015-01-28 20:28:18","codes":[{"authorDate":"2015-01-28 20:28:18","commitOrder":2,"curCode":"  public void close() {\n    IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdown();\n      try {\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n          scheduler.shutdownNow();\n          if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n              .error(\"ExecutorService did not terminate\");\n        }\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n","date":"2015-01-28 20:28:18","endLine":443,"groupId":"39830","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"close","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3e/61c9df3b665f57d3c9d836ce3896072501f99c.src","preCode":"  public void close() {\n    IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdown();\n      try {\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n          scheduler.shutdownNow();\n          if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n              .error(\"ExecutorService did not terminate\");\n        }\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"B"},{"authorDate":"2015-01-28 20:28:18","commitOrder":2,"curCode":"  public void shutdownNow() {\n    IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdownNow(); \r\n      try {\n        if (!scheduler.awaitTermination(30, TimeUnit.SECONDS)) \n          log.error(\"ExecutorService did not terminate\");\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }    \n  }\n","date":"2015-01-28 20:28:18","endLine":469,"groupId":"39830","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shutdownNow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3e/61c9df3b665f57d3c9d836ce3896072501f99c.src","preCode":"  public void shutdownNow() {\n    IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdownNow(); \r\n      try {\n        if (!scheduler.awaitTermination(30, TimeUnit.SECONDS)) \n          log.error(\"ExecutorService did not terminate\");\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }    \n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":457,"status":"MB"}],"commitId":"92491f247237c50e36440da1769488408aa104de","commitMessage":"@@@SOLR-6954: Remove deprecated SolrClient.shutdown() method from trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1655277 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-28 20:28:18","modifiedFileCount":"7","status":"M","submitter":"Alan Woodward"},{"authorTime":"2016-01-13 01:17:47","codes":[{"authorDate":"2016-01-13 01:17:47","commitOrder":3,"curCode":"  public void close() {\n    if (internalHttpClient) IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdown();\n      try {\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n          scheduler.shutdownNow();\n          if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n              .error(\"ExecutorService did not terminate\");\n        }\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n","date":"2016-01-13 01:17:47","endLine":490,"groupId":"39830","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"close","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ac/27e97543d9830a2f9128da5c569f70070c4766.src","preCode":"  public void close() {\n    IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdown();\n      try {\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n          scheduler.shutdownNow();\n          if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n              .error(\"ExecutorService did not terminate\");\n        }\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":475,"status":"M"},{"authorDate":"2016-01-13 01:17:47","commitOrder":3,"curCode":"  public void shutdownNow() {\n    if (internalHttpClient) IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdownNow(); \r\n      try {\n        if (!scheduler.awaitTermination(30, TimeUnit.SECONDS)) \n          log.error(\"ExecutorService did not terminate\");\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }    \n  }\n","date":"2016-01-13 01:17:47","endLine":516,"groupId":"39830","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shutdownNow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ac/27e97543d9830a2f9128da5c569f70070c4766.src","preCode":"  public void shutdownNow() {\n    IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdownNow(); \r\n      try {\n        if (!scheduler.awaitTermination(30, TimeUnit.SECONDS)) \n          log.error(\"ExecutorService did not terminate\");\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }    \n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":504,"status":"M"}],"commitId":"d25c982e0dd0030a5984789e18201e723441ca8f","commitMessage":"@@@SOLR-7064: ConcurrentUpdateSolrClient should only close it's httpclient if it created it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1724288 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2016-01-13 01:17:47","modifiedFileCount":"1","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2017-02-23 02:00:42","codes":[{"authorDate":"2017-02-23 02:00:42","commitOrder":4,"curCode":"  public synchronized void close() {\n    if (closed) {\n      interruptRunnerThreadsPolling();\n      return;\n    }\n    closed = true;\n    \n    try {\n      if (shutdownExecutor) {\n        scheduler.shutdown();\n        interruptRunnerThreadsPolling();\n        try {\n          if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n            scheduler.shutdownNow();\n            if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n                .error(\"ExecutorService did not terminate\");\n          }\n        } catch (InterruptedException ie) {\n          scheduler.shutdownNow();\n          Thread.currentThread().interrupt();\n        }\n      } else {\n        interruptRunnerThreadsPolling();\n      }\n    } finally {\n      if (internalHttpClient) IOUtils.closeQuietly(client);\n      if (log.isDebugEnabled()) {\n        log.debug(\"STATS pollInteruppts={} pollExists={} blockLoops={} emptyQueueLoops={}\", pollInterrupts.get(), pollExits.get(), blockLoops.get(), emptyQueueLoops.get());\n      }\n    }\n  }\n","date":"2017-02-23 03:44:18","endLine":707,"groupId":"1095","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"close","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/ac2a534a2e886fed7380ee921a862fa2da7d79.src","preCode":"  public void close() {\n    if (internalHttpClient) IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdown();\n      try {\n        if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) {\n          scheduler.shutdownNow();\n          if (!scheduler.awaitTermination(60, TimeUnit.SECONDS)) log\n              .error(\"ExecutorService did not terminate\");\n        }\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":677,"status":"M"},{"authorDate":"2017-02-23 02:00:42","commitOrder":4,"curCode":"  public void shutdownNow() {\n    if (closed) {\n      return;\n    }\n    closed = true;\n    try {\n\n      if (shutdownExecutor) {\n        scheduler.shutdown();\n        interruptRunnerThreadsPolling();\n        scheduler.shutdownNow(); \r\n        try {\n          if (!scheduler.awaitTermination(30, TimeUnit.SECONDS))\n            log.error(\"ExecutorService did not terminate\");\n        } catch (InterruptedException ie) {\n          scheduler.shutdownNow();\n          Thread.currentThread().interrupt();\n        }\n      } else {\n        interruptRunnerThreadsPolling();\n      }\n    } finally {\n      if (internalHttpClient) IOUtils.closeQuietly(client);\n    }\n  }\n","date":"2017-02-23 03:44:18","endLine":753,"groupId":"1095","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shutdownNow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/ac2a534a2e886fed7380ee921a862fa2da7d79.src","preCode":"  public void shutdownNow() {\n    if (internalHttpClient) IOUtils.closeQuietly(client);\n    if (shutdownExecutor) {\n      scheduler.shutdownNow(); \r\n      try {\n        if (!scheduler.awaitTermination(30, TimeUnit.SECONDS)) \n          log.error(\"ExecutorService did not terminate\");\n      } catch (InterruptedException ie) {\n        scheduler.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }    \n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":729,"status":"M"}],"commitId":"d6337ac3e566c504766d69499ab470bd26744a29","commitMessage":"@@@SOLR-9824: Some bulk update paths could be very slow due to CUSC polling.\n","date":"2017-02-23 03:44:18","modifiedFileCount":"7","status":"M","submitter":"markrmiller"}]
