[{"authorTime":"2017-02-10 13:39:06","codes":[{"authorDate":"2017-02-10 13:39:06","commitOrder":1,"curCode":"  public void multManyFieldsWithValues() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(26.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 10.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(269.5791D, result);\n  }\n","date":"2017-02-10 13:39:51","endLine":163,"groupId":"62535","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"multManyFieldsWithValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a2/a6616ddb25d237f578300158f3d60337c97442.src","preCode":"  public void multManyFieldsWithValues() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(26.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 10.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(269.5791D, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"},{"authorDate":"2017-02-10 13:39:06","commitOrder":1,"curCode":"  public void multManyFieldsWithSubmults() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,mult(c,d))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n  }\n","date":"2017-02-10 13:39:51","endLine":178,"groupId":"62535","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"multManyFieldsWithSubmults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a2/a6616ddb25d237f578300158f3d60337c97442.src","preCode":"  public void multManyFieldsWithSubmults() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,mult(c,d))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"B"}],"commitId":"62489678d074edb2ee962e1c4ee38026ff504b2a","commitMessage":"@@@SOLR-9916: Adds Stream Evaluators to support evaluating values from tuples\n","date":"2017-02-10 13:39:51","modifiedFileCount":"6","status":"B","submitter":"Dennis Gove"},{"authorTime":"2019-10-11 09:18:45","codes":[{"authorDate":"2019-10-11 09:18:45","commitOrder":2,"curCode":"  public void multManyFieldsWithValues() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(24D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(26.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 10.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(269.5791D, result);\n  }\n","date":"2019-10-11 09:19:25","endLine":172,"groupId":"10833","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"multManyFieldsWithValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2d/6fe5a08273ffd4af12ccdc58beb2b53c3d09e8.src","preCode":"  public void multManyFieldsWithValues() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(26.4D, result);\n    \n    values.clear();\n    values.put(\"a\", 10.1);\n    values.put(\"b\", 2.1);\n    values.put(\"c\", 3.1);\n    values.put(\"d\", 4.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(269.5791D, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"},{"authorDate":"2019-10-11 09:18:45","commitOrder":2,"curCode":"  public void multManyFieldsWithSubmults() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,mult(c,d))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(24D, result);\n  }\n","date":"2019-10-11 09:19:25","endLine":186,"groupId":"10833","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"multManyFieldsWithSubmults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2d/6fe5a08273ffd4af12ccdc58beb2b53c3d09e8.src","preCode":"  public void multManyFieldsWithSubmults() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,mult(c,d))\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    values.put(\"b\", 2);\n    values.put(\"c\", 3);\n    values.put(\"d\", 4);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(24L, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"}],"commitId":"ad1c24e1903a74c611ec610aaf350d50d709519e","commitMessage":"@@@SOLR-13829: RecursiveEvaluator casts Continuous numbers to Discrete Numbers.  causing mismatch\n","date":"2019-10-11 09:19:25","modifiedFileCount":"17","status":"M","submitter":"Joel Bernstein"}]
