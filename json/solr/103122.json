[{"authorTime":"2013-06-27 04:18:33","codes":[{"authorDate":"2012-02-19 22:13:45","commitOrder":3,"curCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = new Runnable() {\n      @Override\n      public void run() {\n        try {\n          assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n        } catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = new Runnable() {\n      @Override\n      public void run() {\n        logReplayFinish.release();\n      }\n    };\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","date":"2012-02-19 22:13:45","endLine":508,"groupId":"18495","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCleanShutdown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/97/342d1e0dd8d0966bf508459191053d1c352ba6.src","preCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = new Runnable() {\n      @Override\n      public void run() {\n        try {\n          assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n        } catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = new Runnable() {\n      @Override\n      public void run() {\n        logReplayFinish.release();\n      }\n    };\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecovery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"NB"},{"authorDate":"2013-06-27 04:18:33","commitOrder":3,"curCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = new Runnable() {\n      @Override\n      public void run() {\n        try {\n          assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n        } catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = new Runnable() {\n      @Override\n      public void run() {\n        logReplayFinish.release();\n      }\n    };\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","date":"2013-06-27 04:18:33","endLine":704,"groupId":"18495","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCleanShutdown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a7/86702222f9ed799ef808f1237c408e8402db44.src","preCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = new Runnable() {\n      @Override\n      public void run() {\n        try {\n          assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n        } catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = new Runnable() {\n      @Override\n      public void run() {\n        logReplayFinish.release();\n      }\n    };\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":650,"status":"B"}],"commitId":"b9e1537a7e12e6c15622452e48d8ca8c23aa98c4","commitMessage":"@@@SOLR-4916: Add support to write and read Solr index files and transaction log files to and from HDFS.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497072 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 04:18:33","modifiedFileCount":"42","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2016-03-04 21:23:47","codes":[{"authorDate":"2016-03-04 21:23:47","commitOrder":4,"curCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","date":"2016-03-04 21:23:47","endLine":774,"groupId":"18495","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCleanShutdown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/7492f53b602d299d6e1c3dfd2f814145a8aa99.src","preCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = new Runnable() {\n      @Override\n      public void run() {\n        try {\n          assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n        } catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = new Runnable() {\n      @Override\n      public void run() {\n        logReplayFinish.release();\n      }\n    };\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecovery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":728,"status":"M"},{"authorDate":"2016-03-04 21:23:47","commitOrder":4,"curCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","date":"2016-03-04 21:23:47","endLine":701,"groupId":"18495","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCleanShutdown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d0/d61be5bcff6d6322edc3120b63273fc12281f3.src","preCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = new Runnable() {\n      @Override\n      public void run() {\n        try {\n          assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n        } catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = new Runnable() {\n      @Override\n      public void run() {\n        logReplayFinish.release();\n      }\n    };\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":655,"status":"M"}],"commitId":"c27dd8e03866082686ab3d17f7350f91975a8efc","commitMessage":"@@@SOLR-8750 : Use lambdas in code where SAM type interfaces are used\n","date":"2016-03-04 21:23:47","modifiedFileCount":"45","status":"M","submitter":"Noble Paul"},{"authorTime":"2016-03-04 21:23:47","codes":[{"authorDate":"2017-04-14 13:17:03","commitOrder":5,"curCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      String v1 = getNextVersion();\n      \n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",v1));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",v1));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","date":"2017-04-14 13:17:03","endLine":1113,"groupId":"18495","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCleanShutdown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/ec6b16f391a143bf4fc3b73743f8a3a0e16a41.src","preCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecovery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1065,"status":"M"},{"authorDate":"2016-03-04 21:23:47","commitOrder":5,"curCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","date":"2016-03-04 21:23:47","endLine":701,"groupId":"18495","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCleanShutdown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d0/d61be5bcff6d6322edc3120b63273fc12281f3.src","preCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":655,"status":"N"}],"commitId":"4dc367414fbaa6451a6ef0c5786adebf108c7608","commitMessage":"@@@SOLR-10151: Use monotonically incrementing counter for doc ids in TestRecovery.\n","date":"2017-04-14 13:17:03","modifiedFileCount":"1","status":"M","submitter":"markrmiller"},{"authorTime":"2019-12-08 09:03:25","codes":[{"authorDate":"2017-04-14 13:17:03","commitOrder":6,"curCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      String v1 = getNextVersion();\n      \n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",v1));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",v1));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","date":"2017-04-14 13:17:03","endLine":1113,"groupId":"18495","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCleanShutdown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b6/ec6b16f391a143bf4fc3b73743f8a3a0e16a41.src","preCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      String v1 = getNextVersion();\n      \n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",v1));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",v1));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecovery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1065,"status":"N"},{"authorDate":"2019-12-08 09:03:25","commitOrder":6,"curCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(TIMEOUT, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","date":"2019-12-11 05:15:24","endLine":648,"groupId":"18495","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCleanShutdown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a1/48d59599fd7cdd2bcd84eba7e57f8e321ef337.src","preCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":603,"status":"M"}],"commitId":"48775ea18e903f401d7ab0299947abdf32107b27","commitMessage":"@@@SOLR-14033: Fix Hadoop tests with security manager\n\nThis removes the Solr security manager hacks\nfor Hadoop. It does so by:\n* Using a fake group mapping class instead of ShellGroupMapping\n* Copies a few Hadoop classes and modifies them for tests with no Shell\n* Nulls out some of the static variables in the tests\n\nThe Hadoop files were copied from Apache Hadoop 3.2.0\nand copied to the test package to be only picked up\nduring tests. They were modified to remove the need to\nshell out for access. The assumption is that these\nHDFS integration tests only run on Unix based systems\nand therefore Windows compatibility was removed in some\nof the modified classes. The long term goal is to remove\nthese custom Hadoop classes. All the copied classes are\nin the org.apache.hadoop package.\n\nSigned-off-by: Kevin Risden <krisden@apache.org>\n","date":"2019-12-11 05:15:24","modifiedFileCount":"17","status":"M","submitter":"Kevin Risden"},{"authorTime":"2020-01-17 02:47:06","codes":[{"authorDate":"2020-01-17 02:47:06","commitOrder":7,"curCode":"  public void testCleanShutdown() throws Exception {\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      String v1 = getNextVersion();\n      \n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",v1));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",v1));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","date":"2020-01-17 02:47:06","endLine":1168,"groupId":"103122","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCleanShutdown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f4/df24c94837119d590d125caf3ff7e4ac72a719.src","preCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(timeout, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      String v1 = getNextVersion();\n      \n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",v1));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",v1));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecovery.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1122,"status":"M"},{"authorDate":"2020-01-17 02:47:06","commitOrder":7,"curCode":"  public void testCleanShutdown() throws Exception {\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(TIMEOUT, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","date":"2020-01-17 02:47:06","endLine":648,"groupId":"103122","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCleanShutdown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fa/146ea80edc483c7a0812725eb1e071fb397ddb.src","preCode":"  public void testCleanShutdown() throws Exception {\n    DirectUpdateHandler2.commitOnClose = true;\n    final Semaphore logReplay = new Semaphore(0);\n    final Semaphore logReplayFinish = new Semaphore(0);\n\n    UpdateLog.testing_logReplayHook = () -> {\n      try {\n        assertTrue(logReplay.tryAcquire(TIMEOUT, TimeUnit.SECONDS));\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    };\n\n    UpdateLog.testing_logReplayFinishHook = () -> logReplayFinish.release();\n\n    SolrQueryRequest req = req();\n    UpdateHandler uhandler = req.getCore().getUpdateHandler();\n    UpdateLog ulog = uhandler.getUpdateLog();\n\n    try {\n      clearIndex();\n      assertU(commit());\n\n      assertU(adoc(\"id\",\"E1\", \"val_i\",\"1\"));\n      assertU(adoc(\"id\",\"E2\", \"val_i\",\"1\"));\n\n      \r\n      logReplay.release(10);\n\n      h.close();\n      createCore();\n\n      \r\n      assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\");\n\n      \r\n      assertEquals(10, logReplay.availablePermits());\n\n    } finally {\n      DirectUpdateHandler2.commitOnClose = true;\n      UpdateLog.testing_logReplayHook = null;\n      UpdateLog.testing_logReplayFinishHook = null;\n\n      req().close();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":605,"status":"M"}],"commitId":"5f2d7c4855987670489d68884c787e4cfb377fa9","commitMessage":"@@@SOLR-14184: Internal 'test' variable DirectUpdateHandler2.commitOnClose has been removed and replaced with TestInjection.skipIndexWriterCommitOnClose\n","date":"2020-01-17 02:47:06","modifiedFileCount":"13","status":"M","submitter":"Chris Hostetter"}]
