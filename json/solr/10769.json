[{"authorTime":"2017-08-26 17:07:19","codes":[{"authorDate":"2017-03-24 08:08:11","commitOrder":2,"curCode":"  public void floorOneField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"floor(a)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(1L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(1L, result);\n    \n    values.clear();\n    values.put(\"a\", -1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(-2L, result);\n  }\n","date":"2017-04-02 09:58:04","endLine":67,"groupId":"10448","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"floorOneField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0f/bf16d909a07f7b84a6f7a0b04a2ed19c6d7266.src","preCode":"  public void floorOneField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"floor(a)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(1L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(1L, result);\n    \n    values.clear();\n    values.put(\"a\", -1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(-2L, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/FloorEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"NB"},{"authorDate":"2017-08-26 17:07:19","commitOrder":2,"curCode":"  public void multOneField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 6);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(6L, result);\n    \n    values.clear();\n    values.put(\"a\", 6.5);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(6.5D, result);\n  }\n","date":"2017-08-26 17:07:19","endLine":87,"groupId":"62535","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"multOneField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e5/a1acd32f09d81d15079249302017813f5a4c2d.src","preCode":"  public void multOneField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 6);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(6L, result);\n    \n    values.clear();\n    values.put(\"a\", 6.5);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(6.5D, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"ddcb98e9c3e0d5f6acf59f872e8324e7ad144506","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-08-26 17:07:19","modifiedFileCount":"90","status":"M","submitter":"Karl Wright"},{"authorTime":"2019-10-11 09:18:45","codes":[{"authorDate":"2019-10-11 09:18:45","commitOrder":3,"curCode":"  public void floorOneField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"floor(a)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(1D, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(1D, result);\n    \n    values.clear();\n    values.put(\"a\", -1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(-2D, result);\n  }\n","date":"2019-10-11 09:19:25","endLine":64,"groupId":"10769","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"floorOneField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3a/c678cfdc978b2abc98c6753043c0494d8f2bc7.src","preCode":"  public void floorOneField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"floor(a)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(1L, result);\n    \n    values.clear();\n    values.put(\"a\", 1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(1L, result);\n    \n    values.clear();\n    values.put(\"a\", -1.1);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(-2L, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/FloorEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2019-10-11 09:18:45","commitOrder":3,"curCode":"  public void multOneField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 6);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertEquals(6D, result);\n    \n    values.clear();\n    values.put(\"a\", 6.5);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(6.5D, result);\n  }\n","date":"2019-10-11 09:19:25","endLine":85,"groupId":"10769","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"multOneField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2d/6fe5a08273ffd4af12ccdc58beb2b53c3d09e8.src","preCode":"  public void multOneField() throws Exception{\n    StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a)\");\n    Object result;\n    \n    values.clear();\n    values.put(\"a\", 6);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Long);\n    Assert.assertEquals(6L, result);\n    \n    values.clear();\n    values.put(\"a\", 6.5);\n    result = evaluator.evaluate(new Tuple(values));\n    Assert.assertTrue(result instanceof Double);\n    Assert.assertEquals(6.5D, result);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/MultiplyEvaluatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"ad1c24e1903a74c611ec610aaf350d50d709519e","commitMessage":"@@@SOLR-13829: RecursiveEvaluator casts Continuous numbers to Discrete Numbers.  causing mismatch\n","date":"2019-10-11 09:19:25","modifiedFileCount":"17","status":"M","submitter":"Joel Bernstein"}]
