[{"authorTime":"2017-08-01 23:01:17","codes":[{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public void stringCastingTest() {\n    TestFloatValue val = new TestFloatValue();\n    \n    assertTrue(val instanceof StringValue);\n    StringValue casted = (StringValue)val;\n\n    val.setValue(20F).setExists(true);\n    assertEquals(\"20.0\", casted.getString());\n    assertTrue(casted.exists());\n\n    val.setValue(1234F).setExists(true);\n    assertEquals(\"1234.0\", casted.getString());\n    assertTrue(casted.exists());\n  }\n","date":"2017-10-18 01:52:02","endLine":60,"groupId":"56134","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"stringCastingTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0f/044b201e3b361761ae44c4d19f8b223bde261f.src","preCode":"  public void stringCastingTest() {\n    TestFloatValue val = new TestFloatValue();\n    \n    assertTrue(val instanceof StringValue);\n    StringValue casted = (StringValue)val;\n\n    val.setValue(20F).setExists(true);\n    assertEquals(\"20.0\", casted.getString());\n    assertTrue(casted.exists());\n\n    val.setValue(1234F).setExists(true);\n    assertEquals(\"1234.0\", casted.getString());\n    assertTrue(casted.exists());\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/value/CastingFloatValueTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public void objectCastingTest() {\n    TestFloatValue val = new TestFloatValue();\n    \n    assertTrue(val instanceof AnalyticsValue);\n    AnalyticsValue casted = (AnalyticsValue)val;\n\n    val.setValue(20F).setExists(true);\n    assertEquals(new Float(20F), casted.getObject());\n    assertTrue(casted.exists());\n\n    val.setValue(1234F).setExists(true);\n    assertEquals(new Float(1234F), casted.getObject());\n    assertTrue(casted.exists());\n  }\n","date":"2017-10-18 01:52:02","endLine":76,"groupId":"56134","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"objectCastingTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0f/044b201e3b361761ae44c4d19f8b223bde261f.src","preCode":"  public void objectCastingTest() {\n    TestFloatValue val = new TestFloatValue();\n    \n    assertTrue(val instanceof AnalyticsValue);\n    AnalyticsValue casted = (AnalyticsValue)val;\n\n    val.setValue(20F).setExists(true);\n    assertEquals(new Float(20F), casted.getObject());\n    assertTrue(casted.exists());\n\n    val.setValue(1234F).setExists(true);\n    assertEquals(new Float(1234F), casted.getObject());\n    assertTrue(casted.exists());\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/value/CastingFloatValueTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"}],"commitId":"86d84bff82ff8c7a1f6cadfe307685a4dce2f8d9","commitMessage":"@@@SOLR-11145.  SOLR-11146: Added comprehensive unit tests for Analytics Component 2.0 as well as analytics bug fixes.\n","date":"2017-10-18 01:52:02","modifiedFileCount":"41","status":"B","submitter":"Houston Putman"},{"authorTime":"2018-07-16 18:24:45","codes":[{"authorDate":"2017-08-01 23:01:17","commitOrder":2,"curCode":"  public void stringCastingTest() {\n    TestFloatValue val = new TestFloatValue();\n    \n    assertTrue(val instanceof StringValue);\n    StringValue casted = (StringValue)val;\n\n    val.setValue(20F).setExists(true);\n    assertEquals(\"20.0\", casted.getString());\n    assertTrue(casted.exists());\n\n    val.setValue(1234F).setExists(true);\n    assertEquals(\"1234.0\", casted.getString());\n    assertTrue(casted.exists());\n  }\n","date":"2017-10-18 01:52:02","endLine":60,"groupId":"101791","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"stringCastingTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0f/044b201e3b361761ae44c4d19f8b223bde261f.src","preCode":"  public void stringCastingTest() {\n    TestFloatValue val = new TestFloatValue();\n    \n    assertTrue(val instanceof StringValue);\n    StringValue casted = (StringValue)val;\n\n    val.setValue(20F).setExists(true);\n    assertEquals(\"20.0\", casted.getString());\n    assertTrue(casted.exists());\n\n    val.setValue(1234F).setExists(true);\n    assertEquals(\"1234.0\", casted.getString());\n    assertTrue(casted.exists());\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/value/CastingFloatValueTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2018-07-16 18:24:45","commitOrder":2,"curCode":"  public void objectCastingTest() {\n    TestFloatValue val = new TestFloatValue();\n    \n    assertTrue(val instanceof AnalyticsValue);\n    AnalyticsValue casted = (AnalyticsValue)val;\n\n    val.setValue(20F).setExists(true);\n    assertEquals(20F, casted.getObject());\n    assertTrue(casted.exists());\n\n    val.setValue(1234F).setExists(true);\n    assertEquals(1234F, casted.getObject());\n    assertTrue(casted.exists());\n  }\n","date":"2018-07-16 18:24:45","endLine":76,"groupId":"101791","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"objectCastingTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b2/f1e1338d1b761fabb3e22f56983c05dd580834.src","preCode":"  public void objectCastingTest() {\n    TestFloatValue val = new TestFloatValue();\n    \n    assertTrue(val instanceof AnalyticsValue);\n    AnalyticsValue casted = (AnalyticsValue)val;\n\n    val.setValue(20F).setExists(true);\n    assertEquals(new Float(20F), casted.getObject());\n    assertTrue(casted.exists());\n\n    val.setValue(1234F).setExists(true);\n    assertEquals(new Float(1234F), casted.getObject());\n    assertTrue(casted.exists());\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/value/CastingFloatValueTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"c97f27b06c1d7c250e9596a9bc7bf5ca11ef6ad3","commitMessage":"@@@Merge branch 'remove-constructor-wrapper-classes' of https://github.com/michaelbraun/lucene-solr:\nLUCENE-8345.  GitHub PR #392: Remove instantiation of redundant wrapper classes for primitives; add wrapper class constructors to forbiddenapis.\nThis closes #392\n","date":"2018-07-16 18:24:45","modifiedFileCount":"96","status":"M","submitter":"Uwe Schindler"}]
