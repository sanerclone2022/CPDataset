[{"authorTime":"2016-05-28 02:17:23","codes":[{"authorDate":"2016-05-23 14:35:53","commitOrder":2,"curCode":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n","date":"2016-05-23 14:35:53","endLine":1836,"groupId":"53150","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mapParams","params":"(String...vals)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/17/897598b96fa5c9895646b368ca346393d385e5.src","preCode":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1828,"status":"NB"},{"authorDate":"2016-05-28 02:17:23","commitOrder":2,"curCode":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n","date":"2016-10-12 00:13:47","endLine":91,"groupId":"53150","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mapParams","params":"(String...vals)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/23290844d2ecca6835c5376cc7c2ff13c4e99d.src","preCode":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"}],"commitId":"b00f10916bfdcd1bdf138ba46a8204091e0bb428","commitMessage":"@@@SOLR-8969: Resolve NPE for SQLHandler when in non-cloud mode\n","date":"2016-10-12 00:13:47","modifiedFileCount":"1","status":"M","submitter":"Kevin Risden"},{"authorTime":"2016-05-28 02:17:23","codes":[{"authorDate":"2016-11-24 11:30:21","commitOrder":3,"curCode":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n    if(random().nextBoolean()) params.add(\"wt\",\"javabin\");\n    return params;\n  }\n","date":"2016-11-24 11:30:21","endLine":2218,"groupId":"103363","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mapParams","params":"(String...vals)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d4/304095190eaea0bdd11f842cc8eb4fbe3df0a5.src","preCode":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2210,"status":"M"},{"authorDate":"2016-05-28 02:17:23","commitOrder":3,"curCode":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n","date":"2016-10-12 00:13:47","endLine":91,"groupId":"103363","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mapParams","params":"(String...vals)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/23290844d2ecca6835c5376cc7c2ff13c4e99d.src","preCode":"  public static SolrParams mapParams(String... vals) {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    assertEquals(\"Parameters passed in here must be in pairs!\", 0, (vals.length % 2));\n    for (int idx = 0; idx < vals.length; idx += 2) {\n      params.add(vals[idx], vals[idx + 1]);\n    }\n\n    return params;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"N"}],"commitId":"41d7b245749bb02ed46a5fed7c4ee3b7b58e8266","commitMessage":"@@@SOLR-9721: javabin Tuple parser for streaming and other end points\n","date":"2016-11-24 11:30:21","modifiedFileCount":"6","status":"M","submitter":"Noble Paul"}]
