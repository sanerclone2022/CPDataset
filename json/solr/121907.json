[{"authorTime":"2014-03-12 22:39:17","codes":[{"authorDate":"2014-03-16 22:11:07","commitOrder":3,"curCode":"  void doQuery(String expectedDocs, String... queryParams) throws Exception {\n    Set<String> expectedIds = new HashSet<>( StrUtils.splitSmart(expectedDocs, \",\", true) );\n\n    QueryResponse rsp = cloudClient.query(params(queryParams));\n    Set<String> obtainedIds = new HashSet<>();\n    for (SolrDocument doc : rsp.getResults()) {\n      obtainedIds.add((String) doc.get(\"id\"));\n    }\n\n    assertEquals(expectedIds, obtainedIds);\n  }\n","date":"2014-03-16 22:11:07","endLine":1530,"groupId":"26782","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doQuery","params":"(StringexpectedDocs@String...queryParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e5/f66c6ed66cbfe4c375fdd5d529aab9a0d967c1.src","preCode":"  void doQuery(String expectedDocs, String... queryParams) throws Exception {\n    Set<String> expectedIds = new HashSet<>( StrUtils.splitSmart(expectedDocs, \",\", true) );\n\n    QueryResponse rsp = cloudClient.query(params(queryParams));\n    Set<String> obtainedIds = new HashSet<>();\n    for (SolrDocument doc : rsp.getResults()) {\n      obtainedIds.add((String) doc.get(\"id\"));\n    }\n\n    assertEquals(expectedIds, obtainedIds);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1520,"status":"B"},{"authorDate":"2014-03-12 22:39:17","commitOrder":3,"curCode":"  void doRTG(String ids) throws Exception {\n    ss.query(params(\"qt\",\"/get\", \"ids\",ids));\n\n    Set<String> expectedIds = new HashSet<>( StrUtils.splitSmart(ids, \",\", true) );\n\n    QueryResponse rsp = cloudClient.query(params(\"qt\",\"/get\", \"ids\",ids));\n    Set<String> obtainedIds = new HashSet<>();\n    for (SolrDocument doc : rsp.getResults()) {\n      obtainedIds.add((String) doc.get(\"id\"));\n    }\n\n    assertEquals(expectedIds, obtainedIds);\n  }\n","date":"2014-03-12 22:39:17","endLine":342,"groupId":"6323","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doRTG","params":"(Stringids)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8e/3b0b0c4a7f2a8d2d54e8565807678240cb3aec.src","preCode":"  void doRTG(String ids) throws Exception {\n    ss.query(params(\"qt\",\"/get\", \"ids\",ids));\n\n    Set<String> expectedIds = new HashSet<>( StrUtils.splitSmart(ids, \",\", true) );\n\n    QueryResponse rsp = cloudClient.query(params(\"qt\",\"/get\", \"ids\",ids));\n    Set<String> obtainedIds = new HashSet<>();\n    for (SolrDocument doc : rsp.getResults()) {\n      obtainedIds.add((String) doc.get(\"id\"));\n    }\n\n    assertEquals(expectedIds, obtainedIds);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestDistribDocBasedVersion.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":330,"status":"NB"}],"commitId":"e790ae64c092ad441c7ab4830d4bbcc62f587f2f","commitMessage":"@@@SOLR-5550: shards.info is not returned by a short circuited distributed query\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1578078 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-16 22:11:07","modifiedFileCount":"5","status":"M","submitter":"Shalin Shekhar Mangar"},{"authorTime":"2014-12-31 22:05:48","codes":[{"authorDate":"2014-03-16 22:11:07","commitOrder":4,"curCode":"  void doQuery(String expectedDocs, String... queryParams) throws Exception {\n    Set<String> expectedIds = new HashSet<>( StrUtils.splitSmart(expectedDocs, \",\", true) );\n\n    QueryResponse rsp = cloudClient.query(params(queryParams));\n    Set<String> obtainedIds = new HashSet<>();\n    for (SolrDocument doc : rsp.getResults()) {\n      obtainedIds.add((String) doc.get(\"id\"));\n    }\n\n    assertEquals(expectedIds, obtainedIds);\n  }\n","date":"2014-03-16 22:11:07","endLine":1530,"groupId":"121907","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doQuery","params":"(StringexpectedDocs@String...queryParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e5/f66c6ed66cbfe4c375fdd5d529aab9a0d967c1.src","preCode":"  void doQuery(String expectedDocs, String... queryParams) throws Exception {\n    Set<String> expectedIds = new HashSet<>( StrUtils.splitSmart(expectedDocs, \",\", true) );\n\n    QueryResponse rsp = cloudClient.query(params(queryParams));\n    Set<String> obtainedIds = new HashSet<>();\n    for (SolrDocument doc : rsp.getResults()) {\n      obtainedIds.add((String) doc.get(\"id\"));\n    }\n\n    assertEquals(expectedIds, obtainedIds);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1520,"status":"N"},{"authorDate":"2014-12-31 22:05:48","commitOrder":4,"curCode":"  void doRTG(String ids) throws Exception {\n    solrClient.query(params(\"qt\", \"/get\", \"ids\", ids));\n\n    Set<String> expectedIds = new HashSet<>( StrUtils.splitSmart(ids, \",\", true) );\n\n    QueryResponse rsp = cloudClient.query(params(\"qt\",\"/get\", \"ids\",ids));\n    Set<String> obtainedIds = new HashSet<>();\n    for (SolrDocument doc : rsp.getResults()) {\n      obtainedIds.add((String) doc.get(\"id\"));\n    }\n\n    assertEquals(expectedIds, obtainedIds);\n  }\n","date":"2014-12-31 22:05:48","endLine":339,"groupId":"121907","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doRTG","params":"(Stringids)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/82/38a04b7db07517feab5b48b3f9aad88a58d89c.src","preCode":"  void doRTG(String ids) throws Exception {\n    ss.query(params(\"qt\",\"/get\", \"ids\",ids));\n\n    Set<String> expectedIds = new HashSet<>( StrUtils.splitSmart(ids, \",\", true) );\n\n    QueryResponse rsp = cloudClient.query(params(\"qt\",\"/get\", \"ids\",ids));\n    Set<String> obtainedIds = new HashSet<>();\n    for (SolrDocument doc : rsp.getResults()) {\n      obtainedIds.add((String) doc.get(\"id\"));\n    }\n\n    assertEquals(expectedIds, obtainedIds);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestDistribDocBasedVersion.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":327,"status":"M"}],"commitId":"ef809a0f10e78aec3f97c878f90ff74673f98745","commitMessage":"@@@SOLR-6895: Deprecate SolrServer classes and replace with SolrClient\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1648697 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-31 22:05:48","modifiedFileCount":"152","status":"M","submitter":"Alan Woodward"}]
