[{"authorTime":"2017-02-04 07:25:38","codes":[{"authorDate":"2017-02-04 07:25:38","commitOrder":1,"curCode":"  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"AnalyzingInfixSuggesterTest\");\n    try {\n      \r\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n","date":"2017-02-04 07:25:38","endLine":113,"groupId":"54486","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReloadDuringBuild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a8/188bbfb4e3b59cebe41822f032b4ecc5d04c32.src","preCode":"  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"AnalyzingInfixSuggesterTest\");\n    try {\n      \r\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2017-02-04 07:25:38","commitOrder":1,"curCode":"  public void testShutdownDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"AnalyzingInfixSuggesterTest\");\n    try {\n      \r\n      Future job = executor.submit(() -> \n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      Thread.sleep(100); \r\n      h.close();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n      initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\"); \r\n    }\n  }\n","date":"2017-02-04 07:25:38","endLine":135,"groupId":"54486","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testShutdownDuringBuild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a8/188bbfb4e3b59cebe41822f032b4ecc5d04c32.src","preCode":"  public void testShutdownDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"AnalyzingInfixSuggesterTest\");\n    try {\n      \r\n      Future job = executor.submit(() -> \n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      Thread.sleep(100); \r\n      h.close();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n      initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\"); \r\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"}],"commitId":"6c1a4b673a0b74d85d54593b76babe34bf543dbb","commitMessage":"@@@SOLR-6246: SolrSuggester.build() now throws SolrCoreState.CoreIsClosedException when a core reload/shutdown happens; add a random test lookup dictionary with configurable size; add {Analyzing. Blended}InfixSuggester reload/build tests; add a wrapped-exception expectThrows() variant to LuceneTestCase\n","date":"2017-02-04 07:25:38","modifiedFileCount":"2","status":"B","submitter":"Steve Rowe"},{"authorTime":"2018-07-31 10:49:30","codes":[{"authorDate":"2018-07-31 10:49:30","commitOrder":2,"curCode":"  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      \r\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n","date":"2018-07-31 10:49:49","endLine":117,"groupId":"54486","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReloadDuringBuild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/71bf0011577c9b728e392276a9bbff064f8e6c.src","preCode":"  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"AnalyzingInfixSuggesterTest\");\n    try {\n      \r\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2018-07-31 10:49:30","commitOrder":2,"curCode":"  public void testShutdownDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      LinkedHashMap<Class<? extends Throwable>, List<Class<? extends Throwable>>> expected = new LinkedHashMap<>();\n      expected.put(RuntimeException.class, Arrays.asList\n          (SolrCoreState.CoreIsClosedException.class, SolrException.class, IllegalStateException.class));\n      final Throwable[] outerException = new Throwable[1];\n      \r\n      Future job = executor.submit(() -> outerException[0] = expectThrowsAnyOf(expected,\n          () -> assertQ(req(\"qt\", rh_analyzing_long, SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n              \"//str[@name='command'][.='buildAll']\")));\n      Thread.sleep(100); \r\n      h.close();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n      Throwable wrappedException = outerException[0].getCause();\n      if (wrappedException instanceof SolrException) {\n        String expectedMessage = \"SolrCoreState already closed.\";\n        assertTrue(\"Expected wrapped SolrException message to contain '\" + expectedMessage \n            + \"' but message is '\" + wrappedException.getMessage() + \"'\", \n            wrappedException.getMessage().contains(expectedMessage));\n      } else if (wrappedException instanceof IllegalStateException\n          && ! (wrappedException instanceof SolrCoreState.CoreIsClosedException)) { \r\n        String expectedMessage = \"Cannot commit on an closed writer. Add documents first\";\n        assertTrue(\"Expected wrapped IllegalStateException message to contain '\" + expectedMessage\n                + \"' but message is '\" + wrappedException.getMessage() + \"'\",\n            wrappedException.getMessage().contains(expectedMessage));\n      }\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n      initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\"); \r\n    }\n  }\n","date":"2018-07-31 10:49:49","endLine":154,"groupId":"54485","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testShutdownDuringBuild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/71bf0011577c9b728e392276a9bbff064f8e6c.src","preCode":"  public void testShutdownDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"AnalyzingInfixSuggesterTest\");\n    try {\n      \r\n      Future job = executor.submit(() -> \n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      Thread.sleep(100); \r\n      h.close();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n      initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\"); \r\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"a08eadb4809b1d70d9cf6a098db9489f0325c260","commitMessage":"@@@Fix InfixSuggestersTest.testShutdownDuringBuild() failures\n","date":"2018-07-31 10:49:49","modifiedFileCount":"2","status":"M","submitter":"Steve Rowe"},{"authorTime":"2018-12-12 02:48:44","codes":[{"authorDate":"2018-07-31 10:49:30","commitOrder":3,"curCode":"  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      \r\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n","date":"2018-07-31 10:49:49","endLine":117,"groupId":"54486","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testReloadDuringBuild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/71bf0011577c9b728e392276a9bbff064f8e6c.src","preCode":"  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      \r\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"N"},{"authorDate":"2018-12-12 02:48:44","commitOrder":3,"curCode":"  public void testShutdownDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      LinkedHashMap<Class<? extends Throwable>, List<Class<? extends Throwable>>> expected = new LinkedHashMap<>();\n      expected.put(RuntimeException.class, Arrays.asList\n          (SolrCoreState.CoreIsClosedException.class, SolrException.class, IllegalStateException.class, NullPointerException.class));\n      final Throwable[] outerException = new Throwable[1];\n      \r\n      Future job = executor.submit(() -> outerException[0] = expectThrowsAnyOf(expected,\n          () -> assertQ(req(\"qt\", rh_analyzing_long, SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n              \"//str[@name='command'][.='buildAll']\")));\n      Thread.sleep(100); \r\n      h.close();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n      Throwable wrappedException = outerException[0].getCause();\n      if (wrappedException instanceof SolrException) {\n        String expectedMessage = \"SolrCoreState already closed.\";\n        assertTrue(\"Expected wrapped SolrException message to contain '\" + expectedMessage \n            + \"' but message is '\" + wrappedException.getMessage() + \"'\", \n            wrappedException.getMessage().contains(expectedMessage));\n      } else if (wrappedException instanceof IllegalStateException\n          && ! (wrappedException instanceof SolrCoreState.CoreIsClosedException)) { \r\n        String expectedMessage = \"Cannot commit on an closed writer. Add documents first\";\n        assertTrue(\"Expected wrapped IllegalStateException message to contain '\" + expectedMessage\n                + \"' but message is '\" + wrappedException.getMessage() + \"'\",\n            wrappedException.getMessage().contains(expectedMessage));\n      }\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n      initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\"); \r\n    }\n  }\n","date":"2018-12-12 02:48:44","endLine":154,"groupId":"54485","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testShutdownDuringBuild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b1/b02e12fc9bf9b0cf541c1caeedaef9281eb9b0.src","preCode":"  public void testShutdownDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      LinkedHashMap<Class<? extends Throwable>, List<Class<? extends Throwable>>> expected = new LinkedHashMap<>();\n      expected.put(RuntimeException.class, Arrays.asList\n          (SolrCoreState.CoreIsClosedException.class, SolrException.class, IllegalStateException.class));\n      final Throwable[] outerException = new Throwable[1];\n      \r\n      Future job = executor.submit(() -> outerException[0] = expectThrowsAnyOf(expected,\n          () -> assertQ(req(\"qt\", rh_analyzing_long, SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n              \"//str[@name='command'][.='buildAll']\")));\n      Thread.sleep(100); \r\n      h.close();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n      Throwable wrappedException = outerException[0].getCause();\n      if (wrappedException instanceof SolrException) {\n        String expectedMessage = \"SolrCoreState already closed.\";\n        assertTrue(\"Expected wrapped SolrException message to contain '\" + expectedMessage \n            + \"' but message is '\" + wrappedException.getMessage() + \"'\", \n            wrappedException.getMessage().contains(expectedMessage));\n      } else if (wrappedException instanceof IllegalStateException\n          && ! (wrappedException instanceof SolrCoreState.CoreIsClosedException)) { \r\n        String expectedMessage = \"Cannot commit on an closed writer. Add documents first\";\n        assertTrue(\"Expected wrapped IllegalStateException message to contain '\" + expectedMessage\n                + \"' but message is '\" + wrappedException.getMessage() + \"'\",\n            wrappedException.getMessage().contains(expectedMessage));\n      }\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n      initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\"); \r\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"6587f640d25adc6bb7e58a4fd5c2d123a5eebfcb","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-12-12 02:48:44","modifiedFileCount":"7","status":"M","submitter":"Karl Wright"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2020-06-18 05:51:41","commitOrder":4,"curCode":"  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      \r\n      @SuppressWarnings({\"rawtypes\"})\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n","date":"2020-06-18 05:51:41","endLine":118,"groupId":"54486","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testReloadDuringBuild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/315a550a2ccecaad2a1ce477c1c452909cfb93.src","preCode":"  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      \r\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2020-06-18 05:51:41","commitOrder":4,"curCode":"  public void testShutdownDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      LinkedHashMap<Class<? extends Throwable>, List<Class<? extends Throwable>>> expected = new LinkedHashMap<>();\n      expected.put(RuntimeException.class, Arrays.asList\n          (SolrCoreState.CoreIsClosedException.class, SolrException.class, IllegalStateException.class, NullPointerException.class));\n      final Throwable[] outerException = new Throwable[1];\n      \r\n      @SuppressWarnings({\"rawtypes\"})\n      Future job = executor.submit(() -> outerException[0] = expectThrowsAnyOf(expected,\n          () -> assertQ(req(\"qt\", rh_analyzing_long, SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n              \"//str[@name='command'][.='buildAll']\")));\n      Thread.sleep(100); \r\n      h.close();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n      Throwable wrappedException = outerException[0].getCause();\n      if (wrappedException instanceof SolrException) {\n        String expectedMessage = \"SolrCoreState already closed.\";\n        assertTrue(\"Expected wrapped SolrException message to contain '\" + expectedMessage \n            + \"' but message is '\" + wrappedException.getMessage() + \"'\", \n            wrappedException.getMessage().contains(expectedMessage));\n      } else if (wrappedException instanceof IllegalStateException\n          && ! (wrappedException instanceof SolrCoreState.CoreIsClosedException)) { \r\n        String expectedMessage = \"Cannot commit on an closed writer. Add documents first\";\n        assertTrue(\"Expected wrapped IllegalStateException message to contain '\" + expectedMessage\n                + \"' but message is '\" + wrappedException.getMessage() + \"'\",\n            wrappedException.getMessage().contains(expectedMessage));\n      }\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n      initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\"); \r\n    }\n  }\n","date":"2020-06-18 05:51:41","endLine":156,"groupId":"54485","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testShutdownDuringBuild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/315a550a2ccecaad2a1ce477c1c452909cfb93.src","preCode":"  public void testShutdownDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      LinkedHashMap<Class<? extends Throwable>, List<Class<? extends Throwable>>> expected = new LinkedHashMap<>();\n      expected.put(RuntimeException.class, Arrays.asList\n          (SolrCoreState.CoreIsClosedException.class, SolrException.class, IllegalStateException.class, NullPointerException.class));\n      final Throwable[] outerException = new Throwable[1];\n      \r\n      Future job = executor.submit(() -> outerException[0] = expectThrowsAnyOf(expected,\n          () -> assertQ(req(\"qt\", rh_analyzing_long, SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n              \"//str[@name='command'][.='buildAll']\")));\n      Thread.sleep(100); \r\n      h.close();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n      Throwable wrappedException = outerException[0].getCause();\n      if (wrappedException instanceof SolrException) {\n        String expectedMessage = \"SolrCoreState already closed.\";\n        assertTrue(\"Expected wrapped SolrException message to contain '\" + expectedMessage \n            + \"' but message is '\" + wrappedException.getMessage() + \"'\", \n            wrappedException.getMessage().contains(expectedMessage));\n      } else if (wrappedException instanceof IllegalStateException\n          && ! (wrappedException instanceof SolrCoreState.CoreIsClosedException)) { \r\n        String expectedMessage = \"Cannot commit on an closed writer. Add documents first\";\n        assertTrue(\"Expected wrapped IllegalStateException message to contain '\" + expectedMessage\n                + \"' but message is '\" + wrappedException.getMessage() + \"'\",\n            wrappedException.getMessage().contains(expectedMessage));\n      }\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n      initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\"); \r\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-07-13 23:49:56","codes":[{"authorDate":"2021-07-13 23:49:56","commitOrder":5,"curCode":"  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      \r\n      Future<?> job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      assertNotNull(\"Should have thrown exception\", job.get());\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n","date":"2021-07-13 23:49:56","endLine":117,"groupId":"103413","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testReloadDuringBuild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/17/d65c0bb20224c0f4cfdeae244adea3c414e8a4.src","preCode":"  public void testReloadDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      \r\n      @SuppressWarnings({\"rawtypes\"})\n      Future job = executor.submit(() ->\n          expectThrows(RuntimeException.class, SolrCoreState.CoreIsClosedException.class,\n              () -> assertQ(req(\"qt\", rh_analyzing_long,\n                  SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n                  \"//str[@name='command'][.='buildAll']\")));\n      h.reload();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2021-07-13 23:49:56","commitOrder":5,"curCode":"  public void testShutdownDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      LinkedHashMap<Class<? extends Throwable>, List<Class<? extends Throwable>>> expected = new LinkedHashMap<>();\n      expected.put(RuntimeException.class, Arrays.asList\n          (SolrCoreState.CoreIsClosedException.class, SolrException.class, IllegalStateException.class, NullPointerException.class));\n      final Throwable[] outerException = new Throwable[1];\n      \r\n      Future<?> job = executor.submit(() -> outerException[0] = expectThrowsAnyOf(expected,\n          () -> assertQ(req(\"qt\", rh_analyzing_long, SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n              \"//str[@name='command'][.='buildAll']\")));\n      Thread.sleep(100); \r\n      h.close();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n      Throwable wrappedException = outerException[0].getCause();\n      if (wrappedException instanceof SolrException) {\n        String expectedMessage = \"SolrCoreState already closed.\";\n        assertTrue(\"Expected wrapped SolrException message to contain '\" + expectedMessage \n            + \"' but message is '\" + wrappedException.getMessage() + \"'\", \n            wrappedException.getMessage().contains(expectedMessage));\n      } else if (wrappedException instanceof IllegalStateException\n          && ! (wrappedException instanceof SolrCoreState.CoreIsClosedException)) { \r\n        String expectedMessage = \"Cannot commit on an closed writer. Add documents first\";\n        assertTrue(\"Expected wrapped IllegalStateException message to contain '\" + expectedMessage\n                + \"' but message is '\" + wrappedException.getMessage() + \"'\",\n            wrappedException.getMessage().contains(expectedMessage));\n      }\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n      initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\"); \r\n    }\n  }\n","date":"2021-07-13 23:49:56","endLine":154,"groupId":"103413","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testShutdownDuringBuild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/17/d65c0bb20224c0f4cfdeae244adea3c414e8a4.src","preCode":"  public void testShutdownDuringBuild() throws Exception {\n    ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\");\n    try {\n      LinkedHashMap<Class<? extends Throwable>, List<Class<? extends Throwable>>> expected = new LinkedHashMap<>();\n      expected.put(RuntimeException.class, Arrays.asList\n          (SolrCoreState.CoreIsClosedException.class, SolrException.class, IllegalStateException.class, NullPointerException.class));\n      final Throwable[] outerException = new Throwable[1];\n      \r\n      @SuppressWarnings({\"rawtypes\"})\n      Future job = executor.submit(() -> outerException[0] = expectThrowsAnyOf(expected,\n          () -> assertQ(req(\"qt\", rh_analyzing_long, SuggesterParams.SUGGEST_BUILD_ALL, \"true\"),\n              \"//str[@name='command'][.='buildAll']\")));\n      Thread.sleep(100); \r\n      h.close();\n      \r\n      System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary\n          .getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"));\n      job.get();\n      Throwable wrappedException = outerException[0].getCause();\n      if (wrappedException instanceof SolrException) {\n        String expectedMessage = \"SolrCoreState already closed.\";\n        assertTrue(\"Expected wrapped SolrException message to contain '\" + expectedMessage \n            + \"' but message is '\" + wrappedException.getMessage() + \"'\", \n            wrappedException.getMessage().contains(expectedMessage));\n      } else if (wrappedException instanceof IllegalStateException\n          && ! (wrappedException instanceof SolrCoreState.CoreIsClosedException)) { \r\n        String expectedMessage = \"Cannot commit on an closed writer. Add documents first\";\n        assertTrue(\"Expected wrapped IllegalStateException message to contain '\" + expectedMessage\n                + \"' but message is '\" + wrappedException.getMessage() + \"'\",\n            wrappedException.getMessage().contains(expectedMessage));\n      }\n    } finally {\n      ExecutorUtil.shutdownAndAwaitTermination(executor);\n      initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\"); \r\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/InfixSuggestersTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"09986130545fabfb2cc76ced85a0da6ba536acf0","commitMessage":"@@@SOLR-15385 RawTypes Part VI (#207)\n\nCo-authored-by: Christine Poerschke <cpoerschke@apache.org>","date":"2021-07-13 23:49:56","modifiedFileCount":"185","status":"M","submitter":"Mike Drob"}]
