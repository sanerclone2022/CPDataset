[{"authorTime":"2019-08-11 15:35:25","codes":[{"authorDate":"2019-08-11 15:35:25","commitOrder":1,"curCode":"  private void checkTokenFilterNames(SimpleOrderedMap<Object> analyzerProps, String[] names) {\n    List<SimpleOrderedMap<Object>> tokenFilterProps = (List<SimpleOrderedMap<Object>>)analyzerProps.get(\"filters\");\n    assertEquals(names.length, tokenFilterProps.size());\n    for (int i = 0; i < names.length; i++) {\n      assertNull(tokenFilterProps.get(i).get(\"class\"));\n      assertEquals(names[i], tokenFilterProps.get(i).get(\"name\"));\n    }\n  }\n","date":"2019-08-11 15:35:25","endLine":125,"groupId":"6906","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkTokenFilterNames","params":"(SimpleOrderedMap<Object>analyzerProps@String[]names)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/36/6dbaaada8cbbe31655ebaa5e29cfdd413ff976.src","preCode":"  private void checkTokenFilterNames(SimpleOrderedMap<Object> analyzerProps, String[] names) {\n    List<SimpleOrderedMap<Object>> tokenFilterProps = (List<SimpleOrderedMap<Object>>)analyzerProps.get(\"filters\");\n    assertEquals(names.length, tokenFilterProps.size());\n    for (int i = 0; i < names.length; i++) {\n      assertNull(tokenFilterProps.get(i).get(\"class\"));\n      assertEquals(names[i], tokenFilterProps.get(i).get(\"name\"));\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/ResolveAnalyzerByNameTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"},{"authorDate":"2019-08-11 15:35:25","commitOrder":1,"curCode":"  private void checkCharFilterNames(SimpleOrderedMap<Object> analyzerProps, String[] names) {\n    List<SimpleOrderedMap<Object>> charFilterProps = (List<SimpleOrderedMap<Object>>)analyzerProps.get(\"charFilters\");\n    assertEquals(names.length, charFilterProps.size());\n    for (int i = 0; i < names.length; i++) {\n      assertNull(charFilterProps.get(i).get(\"class\"));\n      assertEquals(names[i], charFilterProps.get(i).get(\"name\"));\n    }\n  }\n","date":"2019-08-11 15:35:25","endLine":134,"groupId":"6906","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkCharFilterNames","params":"(SimpleOrderedMap<Object>analyzerProps@String[]names)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/36/6dbaaada8cbbe31655ebaa5e29cfdd413ff976.src","preCode":"  private void checkCharFilterNames(SimpleOrderedMap<Object> analyzerProps, String[] names) {\n    List<SimpleOrderedMap<Object>> charFilterProps = (List<SimpleOrderedMap<Object>>)analyzerProps.get(\"charFilters\");\n    assertEquals(names.length, charFilterProps.size());\n    for (int i = 0; i < names.length; i++) {\n      assertNull(charFilterProps.get(i).get(\"class\"));\n      assertEquals(names[i], charFilterProps.get(i).get(\"name\"));\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/ResolveAnalyzerByNameTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"B"}],"commitId":"9b986d268f3618d2137bbc8bd068a3db0d772049","commitMessage":"@@@SOLR-13593: Allow to look up analyzer components by their SPI names in field type configuration.\n","date":"2019-08-11 15:35:25","modifiedFileCount":"9","status":"B","submitter":"Tomoko Uchida"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2020-06-18 05:51:41","commitOrder":2,"curCode":"  private void checkTokenFilterNames(SimpleOrderedMap<Object> analyzerProps, String[] names) {\n    @SuppressWarnings({\"unchecked\"})\n    List<SimpleOrderedMap<Object>> tokenFilterProps = (List<SimpleOrderedMap<Object>>)analyzerProps.get(\"filters\");\n    assertEquals(names.length, tokenFilterProps.size());\n    for (int i = 0; i < names.length; i++) {\n      assertNull(tokenFilterProps.get(i).get(\"class\"));\n      assertEquals(names[i], tokenFilterProps.get(i).get(\"name\"));\n    }\n  }\n","date":"2020-06-18 05:51:41","endLine":131,"groupId":"102690","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"checkTokenFilterNames","params":"(SimpleOrderedMap<Object>analyzerProps@String[]names)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e0/ee0baf516f23da6af77058fd824eaee11288db.src","preCode":"  private void checkTokenFilterNames(SimpleOrderedMap<Object> analyzerProps, String[] names) {\n    List<SimpleOrderedMap<Object>> tokenFilterProps = (List<SimpleOrderedMap<Object>>)analyzerProps.get(\"filters\");\n    assertEquals(names.length, tokenFilterProps.size());\n    for (int i = 0; i < names.length; i++) {\n      assertNull(tokenFilterProps.get(i).get(\"class\"));\n      assertEquals(names[i], tokenFilterProps.get(i).get(\"name\"));\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/ResolveAnalyzerByNameTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2020-06-18 05:51:41","commitOrder":2,"curCode":"  private void checkCharFilterNames(SimpleOrderedMap<Object> analyzerProps, String[] names) {\n    @SuppressWarnings({\"unchecked\"})\n    List<SimpleOrderedMap<Object>> charFilterProps = (List<SimpleOrderedMap<Object>>)analyzerProps.get(\"charFilters\");\n    assertEquals(names.length, charFilterProps.size());\n    for (int i = 0; i < names.length; i++) {\n      assertNull(charFilterProps.get(i).get(\"class\"));\n      assertEquals(names[i], charFilterProps.get(i).get(\"name\"));\n    }\n  }\n","date":"2020-06-18 05:51:41","endLine":141,"groupId":"102690","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"checkCharFilterNames","params":"(SimpleOrderedMap<Object>analyzerProps@String[]names)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e0/ee0baf516f23da6af77058fd824eaee11288db.src","preCode":"  private void checkCharFilterNames(SimpleOrderedMap<Object> analyzerProps, String[] names) {\n    List<SimpleOrderedMap<Object>> charFilterProps = (List<SimpleOrderedMap<Object>>)analyzerProps.get(\"charFilters\");\n    assertEquals(names.length, charFilterProps.size());\n    for (int i = 0; i < names.length; i++) {\n      assertNull(charFilterProps.get(i).get(\"class\"));\n      assertEquals(names[i], charFilterProps.get(i).get(\"name\"));\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/ResolveAnalyzerByNameTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"}]
