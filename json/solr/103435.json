[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void doTestFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );    \n  }\n","date":"2011-07-10 07:01:53","endLine":79,"groupId":"51888","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestFieldStatisticsResult","params":"(Stringf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a0/124bab3a42daac876fc4b113b1778712a62218.src","preCode":"  public void doTestFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void doTestFieldStatisticsMissingResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-70.0']\"\n            , \"//long[@name='count'][.='3']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='2100.0']\"\n            , \"//double[@name='mean'][.='-23.333333333333332']\"\n            , \"//double[@name='stddev'][.='15.275252316519467']\"\n    );\n  }\n","date":"2011-07-10 07:01:53","endLine":155,"groupId":"51888","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestFieldStatisticsMissingResult","params":"(Stringf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a0/124bab3a42daac876fc4b113b1778712a62218.src","preCode":"  public void doTestFieldStatisticsMissingResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-70.0']\"\n            , \"//long[@name='count'][.='3']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='2100.0']\"\n            , \"//double[@name='mean'][.='-23.333333333333332']\"\n            , \"//double[@name='stddev'][.='15.275252316519467']\"\n    );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2013-02-17 02:50:20","codes":[{"authorDate":"2013-02-17 02:50:20","commitOrder":2,"curCode":"  public void doTestFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );    \n  }\n","date":"2013-02-17 02:50:20","endLine":93,"groupId":"51888","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestFieldStatisticsResult","params":"(Stringf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0f/a83fea53ec2a8b0249e01b34e5496a686a978d.src","preCode":"  public void doTestFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2013-02-17 02:50:20","commitOrder":2,"curCode":"  public void doTestFieldStatisticsMissingResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-70.0']\"\n            , \"//long[@name='count'][.='3']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='2100.0']\"\n            , \"//double[@name='mean'][.='-23.333333333333332']\"\n            , \"//double[@name='stddev'][.='15.275252316519467']\"\n    );\n  }\n","date":"2013-02-17 02:50:20","endLine":224,"groupId":"51888","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestFieldStatisticsMissingResult","params":"(Stringf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0f/a83fea53ec2a8b0249e01b34e5496a686a978d.src","preCode":"  public void doTestFieldStatisticsMissingResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-70.0']\"\n            , \"//long[@name='count'][.='3']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='2100.0']\"\n            , \"//double[@name='mean'][.='-23.333333333333332']\"\n            , \"//double[@name='stddev'][.='15.275252316519467']\"\n    );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"}],"commitId":"e61398084d3f1ca0f28c5c35d3318645d7a401ec","commitMessage":"@@@SOLR-3855: Doc values support.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1446922 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-02-17 02:50:20","modifiedFileCount":"32","status":"M","submitter":"Adrien Grand"},{"authorTime":"2013-11-21 14:27:11","codes":[{"authorDate":"2013-11-21 14:27:11","commitOrder":3,"curCode":"  public void doTestFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//long[@name='countDistinct'][.='4']\"\n            , \"count(//arr[@name='distinctValues']/*)='4'\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );    \n  }\n","date":"2013-11-21 14:27:11","endLine":95,"groupId":"51888","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestFieldStatisticsResult","params":"(Stringf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/8ee571137533282e759a5b222bb618eeee884f.src","preCode":"  public void doTestFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2013-11-21 14:27:11","commitOrder":3,"curCode":"  public void doTestFieldStatisticsMissingResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-70.0']\"\n            , \"//long[@name='count'][.='3']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='3']\"\n            , \"count(//arr[@name='distinctValues']/*)='3'\"\n            , \"//double[@name='sumOfSquares'][.='2100.0']\"\n            , \"//double[@name='mean'][.='-23.333333333333332']\"\n            , \"//double[@name='stddev'][.='15.275252316519467']\"\n    );\n  }\n","date":"2013-11-21 14:27:11","endLine":241,"groupId":"51888","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestFieldStatisticsMissingResult","params":"(Stringf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/33/8ee571137533282e759a5b222bb618eeee884f.src","preCode":"  public void doTestFieldStatisticsMissingResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\",\"*:*\", \"stats\",\"true\", \"stats.field\",f)\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-70.0']\"\n            , \"//long[@name='count'][.='3']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//double[@name='sumOfSquares'][.='2100.0']\"\n            , \"//double[@name='mean'][.='-23.333333333333332']\"\n            , \"//double[@name='stddev'][.='15.275252316519467']\"\n    );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"M"}],"commitId":"f7d1b43c9ec9631304d8018c1d3f570a73fa1730","commitMessage":"@@@SOLR-5428: New 'stats.calcdistinct' parameter in StatsComponent returns set of distinct values and their count. This can also be specified per field e.g. 'f.field.stats.calcdistinct'\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1544043 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-11-21 14:27:11","modifiedFileCount":"8","status":"M","submitter":"Shalin Shekhar Mangar"},{"authorTime":"2014-09-04 08:19:56","codes":[{"authorDate":"2014-09-04 08:19:56","commitOrder":4,"curCode":"  public void doTestFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//long[@name='countDistinct'][.='4']\"\n            , \"count(//arr[@name='distinctValues']/*)=4\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );    \n  }\n","date":"2014-09-04 08:19:56","endLine":111,"groupId":"51888","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestFieldStatisticsResult","params":"(Stringf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/03/ee6d8520ec25f5f373d2f78d569923ad717c2c.src","preCode":"  public void doTestFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//long[@name='countDistinct'][.='4']\"\n            , \"count(//arr[@name='distinctValues']/*)='4'\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2014-09-04 08:19:56","commitOrder":4,"curCode":"  public void doTestFieldStatisticsMissingResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-70.0']\"\n            , \"//long[@name='count'][.='3']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='3']\"\n            , \"count(//arr[@name='distinctValues']/*)=3\"\n            , \"//double[@name='sumOfSquares'][.='2100.0']\"\n            , \"//double[@name='mean'][.='-23.333333333333332']\"\n            , \"//double[@name='stddev'][.='15.275252316519467']\"\n    );\n  }\n","date":"2014-09-04 08:19:56","endLine":258,"groupId":"51888","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestFieldStatisticsMissingResult","params":"(Stringf)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/03/ee6d8520ec25f5f373d2f78d569923ad717c2c.src","preCode":"  public void doTestFieldStatisticsMissingResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-70.0']\"\n            , \"//long[@name='count'][.='3']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='3']\"\n            , \"count(//arr[@name='distinctValues']/*)='3'\"\n            , \"//double[@name='sumOfSquares'][.='2100.0']\"\n            , \"//double[@name='mean'][.='-23.333333333333332']\"\n            , \"//double[@name='stddev'][.='15.275252316519467']\"\n    );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"}],"commitId":"320f2d1884f344e1bb75e7c61494fc5538aff23c","commitMessage":"@@@SOLR-6024: Fix StatsComponent when using docValues=true multiValued=true (bug only on 4x trunk commit is just test changes demonstrating correct behavior)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1622386 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-04 08:19:56","modifiedFileCount":"1","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2014-09-10 07:00:04","codes":[{"authorDate":"2014-09-10 07:00:04","commitOrder":5,"curCode":"  public void doTestFieldStatisticsResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n\n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-100.0']\"\n              , \"//long[@name='count'][.='4']\"\n              , \"//long[@name='missing'][.='0']\"\n              , \"//long[@name='countDistinct'][.='4']\"\n              , \"count(//arr[@name='distinctValues']/*)=4\"\n              , \"//double[@name='sumOfSquares'][.='3000.0']\"\n              , \"//double[@name='mean'][.='-25.0']\"\n              , \"//double[@name='stddev'][.='12.909944487358056']\"\n              );  \n\n      assertQ(\"test statistics w/fq\", \n              req(baseParams, \n                  \"q\", \"*:*\", \"fq\", \"-id:4\",\n                  \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-30.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-60.0']\"\n              , \"//long[@name='count'][.='3']\"\n              , \"//long[@name='missing'][.='0']\"\n              , \"//long[@name='countDistinct'][.='3']\"\n              , \"count(//arr[@name='distinctValues']/*)=3\"\n              , \"//double[@name='sumOfSquares'][.='1400.0']\"\n              , \"//double[@name='mean'][.='-20.0']\"\n              , \"//double[@name='stddev'][.='10.0']\"\n              );  \n    }\n  }\n","date":"2014-09-10 07:00:04","endLine":146,"groupId":"49881","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestFieldStatisticsResult","params":"(Stringf@SolrParams[]baseParamsSet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/940ac64ad625d94bc5cd4d578bf3c3b24d1cee.src","preCode":"  public void doTestFieldStatisticsResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-100.0']\"\n            , \"//long[@name='count'][.='4']\"\n            , \"//long[@name='missing'][.='0']\"\n            , \"//long[@name='countDistinct'][.='4']\"\n            , \"count(//arr[@name='distinctValues']/*)=4\"\n            , \"//double[@name='sumOfSquares'][.='3000.0']\"\n            , \"//double[@name='mean'][.='-25.0']\"\n            , \"//double[@name='stddev'][.='12.909944487358056']\"\n    );    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2014-09-10 07:00:04","commitOrder":5,"curCode":"  public void doTestFieldStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n\n      SolrQueryRequest request = req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\");\n\n      assertQ(\"test statistics values\", request\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-70.0']\"\n              , \"//long[@name='count'][.='3']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='3']\"\n              , \"count(//arr[@name='distinctValues']/*)=3\"\n              , \"//double[@name='sumOfSquares'][.='2100.0']\"\n              , \"//double[@name='mean'][.='-23.333333333333332']\"\n              , \"//double[@name='stddev'][.='15.275252316519467']\"\n              );\n    }\n  }\n","date":"2014-09-10 07:00:04","endLine":329,"groupId":"58579","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestFieldStatisticsMissingResult","params":"(Stringf@SolrParams[]baseParamsSet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/940ac64ad625d94bc5cd4d578bf3c3b24d1cee.src","preCode":"  public void doTestFieldStatisticsMissingResult(String f) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    assertQ(\"test statistics values\", req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", f, \"stats.calcdistinct\", \"true\")\n            , \"//double[@name='min'][.='-40.0']\"\n            , \"//double[@name='max'][.='-10.0']\"\n            , \"//double[@name='sum'][.='-70.0']\"\n            , \"//long[@name='count'][.='3']\"\n            , \"//long[@name='missing'][.='1']\"\n            , \"//long[@name='countDistinct'][.='3']\"\n            , \"count(//arr[@name='distinctValues']/*)=3\"\n            , \"//double[@name='sumOfSquares'][.='2100.0']\"\n            , \"//double[@name='mean'][.='-23.333333333333332']\"\n            , \"//double[@name='stddev'][.='15.275252316519467']\"\n    );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"M"}],"commitId":"92f5ad5ea304926859a7de4f412f3690d22d405d","commitMessage":"@@@SOLR-6493: Fix fq exclusion via ex local param in multivalued stats.field\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1623884 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-10 07:00:04","modifiedFileCount":"2","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2014-09-10 07:00:04","codes":[{"authorDate":"2014-09-16 05:00:32","commitOrder":6,"curCode":"  public void doTestFieldStatisticsResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    \r\n    \r\n    \r\n    \r\n    final String all_possible_ex = \"fq1,fq2\";\n\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    final String fpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+f+\"']/\";\n\n    final String key = \"key_key\";\n    final String kpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+key+\"']/\";\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n      for (String ct : new String[] {\"stats.calcdistinct\", \"f.\"+f+\".stats.calcdistinct\"}) {\n        assertQ(\"test statistics values using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-40.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-100.0']\"\n                , fpre + \"long[@name='count'][.='4']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=4\"\n                , fpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , fpre + \"double[@name='mean'][.='-25.0']\"\n                , fpre + \"double[@name='stddev'][.='12.909944487358056']\"\n                );  \n        \n        assertQ(\"test statistics w/fq using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", \"fq\", \"-id:4\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n                );  \n        \n        \r\n\n        assertQ(\"test statistics w & w/fq via key override using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\",\n                    \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                    \"stats.field\", \"{!key=\"+key+\" ex=key_ex_tag,\"+all_possible_ex+\"}\"+f)\n\n                \r\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n\n                \r\n                , kpre + \"double[@name='min'][.='-40.0']\"\n                , kpre + \"double[@name='max'][.='-10.0']\"\n                , kpre + \"double[@name='sum'][.='-100.0']\"\n                , kpre + \"long[@name='count'][.='4']\"\n                , kpre + \"long[@name='missing'][.='0']\"\n                , kpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n                , kpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , kpre + \"double[@name='mean'][.='-25.0']\"\n                , kpre + \"double[@name='stddev'][.='12.909944487358056']\"\n\n                );  \n\n        \n\n      }\n    }\n\n  }\n","date":"2014-09-16 05:00:32","endLine":193,"groupId":"63246","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestFieldStatisticsResult","params":"(Stringf@SolrParams[]baseParamsSet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/01/f33fb429d8b91edfca02b3d998baeeb08c2fec.src","preCode":"  public void doTestFieldStatisticsResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n\n      assertQ(\"test statistics values\", \n              req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-100.0']\"\n              , \"//long[@name='count'][.='4']\"\n              , \"//long[@name='missing'][.='0']\"\n              , \"//long[@name='countDistinct'][.='4']\"\n              , \"count(//arr[@name='distinctValues']/*)=4\"\n              , \"//double[@name='sumOfSquares'][.='3000.0']\"\n              , \"//double[@name='mean'][.='-25.0']\"\n              , \"//double[@name='stddev'][.='12.909944487358056']\"\n              );  \n\n      assertQ(\"test statistics w/fq\", \n              req(baseParams, \n                  \"q\", \"*:*\", \"fq\", \"-id:4\",\n                  \"stats.calcdistinct\", \"true\")\n              , \"//double[@name='min'][.='-30.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-60.0']\"\n              , \"//long[@name='count'][.='3']\"\n              , \"//long[@name='missing'][.='0']\"\n              , \"//long[@name='countDistinct'][.='3']\"\n              , \"count(//arr[@name='distinctValues']/*)=3\"\n              , \"//double[@name='sumOfSquares'][.='1400.0']\"\n              , \"//double[@name='mean'][.='-20.0']\"\n              , \"//double[@name='stddev'][.='10.0']\"\n              );  \n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2014-09-10 07:00:04","commitOrder":6,"curCode":"  public void doTestFieldStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n\n      SolrQueryRequest request = req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\");\n\n      assertQ(\"test statistics values\", request\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-70.0']\"\n              , \"//long[@name='count'][.='3']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='3']\"\n              , \"count(//arr[@name='distinctValues']/*)=3\"\n              , \"//double[@name='sumOfSquares'][.='2100.0']\"\n              , \"//double[@name='mean'][.='-23.333333333333332']\"\n              , \"//double[@name='stddev'][.='15.275252316519467']\"\n              );\n    }\n  }\n","date":"2014-09-10 07:00:04","endLine":329,"groupId":"58579","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestFieldStatisticsMissingResult","params":"(Stringf@SolrParams[]baseParamsSet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/940ac64ad625d94bc5cd4d578bf3c3b24d1cee.src","preCode":"  public void doTestFieldStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n\n      SolrQueryRequest request = req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\");\n\n      assertQ(\"test statistics values\", request\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-70.0']\"\n              , \"//long[@name='count'][.='3']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='3']\"\n              , \"count(//arr[@name='distinctValues']/*)=3\"\n              , \"//double[@name='sumOfSquares'][.='2100.0']\"\n              , \"//double[@name='mean'][.='-23.333333333333332']\"\n              , \"//double[@name='stddev'][.='15.275252316519467']\"\n              );\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"N"}],"commitId":"a0e0d79233a03352e7ccb3d975a76c50d3d25e80","commitMessage":"@@@SOLR-6507: Fixed several bugs involving stats.field used with local params\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1625163 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-16 05:00:32","modifiedFileCount":"3","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2014-09-23 01:45:53","codes":[{"authorDate":"2014-09-23 01:45:53","commitOrder":7,"curCode":"  public void doTestFieldStatisticsResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    \r\n    \r\n    \r\n    \r\n    final String all_possible_ex = \"fq1,fq2\";\n\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    final String fpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+f+\"']/\";\n\n    final String key = \"key_key\";\n    final String kpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+key+\"']/\";\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n      for (String ct : new String[] {\"stats.calcdistinct\", \"f.\"+f+\".stats.calcdistinct\"}) {\n        assertQ(\"test statistics values using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-40.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-100.0']\"\n                , fpre + \"long[@name='count'][.='4']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=4\"\n                , fpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , fpre + \"double[@name='mean'][.='-25.0']\"\n                , fpre + \"double[@name='stddev'][.='12.909944487358056']\"\n                );  \n        \n        assertQ(\"test statistics w/fq using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", \"fq\", \"-id:4\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n                );  \n        \n        \r\n\n        assertQ(\"test statistics w & w/fq via key override using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\",\n                    \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                    \"stats.field\", \"{!key=\"+key+\" ex=key_ex_tag,\"+all_possible_ex+\"}\"+f)\n\n                \r\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n\n                \r\n                , kpre + \"double[@name='min'][.='-40.0']\"\n                , kpre + \"double[@name='max'][.='-10.0']\"\n                , kpre + \"double[@name='sum'][.='-100.0']\"\n                , kpre + \"long[@name='count'][.='4']\"\n                , kpre + \"long[@name='missing'][.='0']\"\n                , kpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n                , kpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , kpre + \"double[@name='mean'][.='-25.0']\"\n                , kpre + \"double[@name='stddev'][.='12.909944487358056']\"\n\n                );\n\n      }\n    }\n\n    \r\n    \r\n    \r\n    for (String param : new String[] {\n        \r\n        \"{!key=\"+key+\" ex=key_ex_tag}\" + f,\n        \"{!key=\"+key+\" ex=key_ex_tag v=\"+f+\"}\",\n        \r\n        \"{!lucene key=\"+key+\" ex=key_ex_tag}_val_:\\\"field(\"+f+\")\\\"\",\n        \"{!func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v=field(\"+f+\")}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='field(\"+f+\")'}\",\n        \r\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='sum(0,\"+f+\")'}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='product(1,\"+f+\")'}\",\n      }) {\n      \n      assertQ(\"test statistics over field specified as a function: \" + param,\n              \r\n              req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                  \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                  \"stats.field\", param)\n              \n              , kpre + \"double[@name='min'][.='-40.0']\"\n              , kpre + \"double[@name='max'][.='-10.0']\"\n              , kpre + \"double[@name='sum'][.='-100.0']\"\n              , kpre + \"long[@name='count'][.='4']\"\n              , kpre + \"long[@name='missing'][.='0']\"\n              , kpre + \"long[@name='countDistinct'][.='4']\"\n              , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n              , kpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n              , kpre + \"double[@name='mean'][.='-25.0']\"\n              , kpre + \"double[@name='stddev'][.='12.909944487358056']\"\n              \n              );\n    }\n    \n    \r\n    String func = \"product(2, \" + f + \")\";\n    assertQ(\"test function statistics & key override\", \n            \r\n            req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                \"stats.field\", \"{!func key=\"+key+\" ex=key_ex_tag}\"+func)\n\n            , kpre + \"double[@name='min'][.='-80.0']\"\n            , kpre + \"double[@name='max'][.='-20.0']\"\n            , kpre + \"double[@name='sum'][.='-200.0']\"\n            , kpre + \"long[@name='count'][.='4']\"\n            , kpre + \"long[@name='missing'][.='0']\"\n            , kpre + \"long[@name='countDistinct'][.='4']\"\n            , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n            , kpre + \"double[@name='sumOfSquares'][.='12000.0']\"\n            , kpre + \"double[@name='mean'][.='-50.0']\" \n            , kpre + \"double[@name='stddev'][.='25.81988897471611']\"\n            );\n  }\n","date":"2014-09-23 01:45:53","endLine":253,"groupId":"63246","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestFieldStatisticsResult","params":"(Stringf@SolrParams[]baseParamsSet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/e04c3cc5426bb2db6dfc12f2c3cae3b9571998.src","preCode":"  public void doTestFieldStatisticsResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    \r\n    \r\n    \r\n    \r\n    final String all_possible_ex = \"fq1,fq2\";\n\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    final String fpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+f+\"']/\";\n\n    final String key = \"key_key\";\n    final String kpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+key+\"']/\";\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n      for (String ct : new String[] {\"stats.calcdistinct\", \"f.\"+f+\".stats.calcdistinct\"}) {\n        assertQ(\"test statistics values using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-40.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-100.0']\"\n                , fpre + \"long[@name='count'][.='4']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=4\"\n                , fpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , fpre + \"double[@name='mean'][.='-25.0']\"\n                , fpre + \"double[@name='stddev'][.='12.909944487358056']\"\n                );  \n        \n        assertQ(\"test statistics w/fq using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", \"fq\", \"-id:4\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n                );  \n        \n        \r\n\n        assertQ(\"test statistics w & w/fq via key override using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\",\n                    \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                    \"stats.field\", \"{!key=\"+key+\" ex=key_ex_tag,\"+all_possible_ex+\"}\"+f)\n\n                \r\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n\n                \r\n                , kpre + \"double[@name='min'][.='-40.0']\"\n                , kpre + \"double[@name='max'][.='-10.0']\"\n                , kpre + \"double[@name='sum'][.='-100.0']\"\n                , kpre + \"long[@name='count'][.='4']\"\n                , kpre + \"long[@name='missing'][.='0']\"\n                , kpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n                , kpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , kpre + \"double[@name='mean'][.='-25.0']\"\n                , kpre + \"double[@name='stddev'][.='12.909944487358056']\"\n\n                );  \n\n        \n\n      }\n    }\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2014-09-23 01:45:53","commitOrder":7,"curCode":"  public void doTestFieldStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    final String fpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+f+\"']/\";\n    final String key = \"key_key\";\n    final String kpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+key+\"']/\";\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n\n      SolrQueryRequest request = req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\");\n\n      assertQ(\"test statistics values\", request\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-70.0']\"\n              , \"//long[@name='count'][.='3']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='3']\"\n              , \"count(//arr[@name='distinctValues']/*)=3\"\n              , \"//double[@name='sumOfSquares'][.='2100.0']\"\n              , \"//double[@name='mean'][.='-23.333333333333332']\"\n              , \"//double[@name='stddev'][.='15.275252316519467']\"\n              );\n    }\n\n    \r\n    \r\n    \r\n    for (String param : new String[] {\n        \r\n        \"{!key=\"+key+\" ex=key_ex_tag}\" + f,\n        \"{!key=\"+key+\" ex=key_ex_tag v=\"+f+\"}\",\n        \r\n        \"{!lucene key=\"+key+\" ex=key_ex_tag}_val_:\\\"field(\"+f+\")\\\"\",\n        \"{!func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v=field(\"+f+\")}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='field(\"+f+\")'}\",\n\n        \r\n        \r\n        \r\n      }) {\n      \n      assertQ(\"test statistics over field specified as a function: \" + param,\n              \r\n              req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                  \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                  \"stats.field\", param)\n              \n              , kpre + \"double[@name='min'][.='-40.0']\"\n              , kpre + \"double[@name='max'][.='-10.0']\"\n              , kpre + \"double[@name='sum'][.='-70.0']\"\n              , kpre + \"long[@name='count'][.='3']\"\n              , kpre + \"long[@name='missing'][.='1']\"\n              , kpre + \"long[@name='countDistinct'][.='3']\"\n              , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=3\"\n              , kpre + \"double[@name='sumOfSquares'][.='2100.0']\"\n              , kpre + \"double[@name='mean'][.='-23.333333333333332']\"\n              , kpre + \"double[@name='stddev'][.='15.275252316519467']\"\n              \n              );\n    }\n\n  }\n","date":"2014-09-23 01:45:53","endLine":500,"groupId":"58579","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestFieldStatisticsMissingResult","params":"(Stringf@SolrParams[]baseParamsSet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/e04c3cc5426bb2db6dfc12f2c3cae3b9571998.src","preCode":"  public void doTestFieldStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n\n      SolrQueryRequest request = req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\");\n\n      assertQ(\"test statistics values\", request\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-70.0']\"\n              , \"//long[@name='count'][.='3']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='3']\"\n              , \"count(//arr[@name='distinctValues']/*)=3\"\n              , \"//double[@name='sumOfSquares'][.='2100.0']\"\n              , \"//double[@name='mean'][.='-23.333333333333332']\"\n              , \"//double[@name='stddev'][.='15.275252316519467']\"\n              );\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":430,"status":"M"}],"commitId":"34890299dad35da35dd098a7a17928ba6ff10f38","commitMessage":"@@@SOLR-6354: stats.field can now be used to generate stats over the numeric results of arbitrary functions\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1626856 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-23 01:45:53","modifiedFileCount":"7","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2014-10-17 03:05:20","codes":[{"authorDate":"2014-09-23 01:45:53","commitOrder":8,"curCode":"  public void doTestFieldStatisticsResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    \r\n    \r\n    \r\n    \r\n    final String all_possible_ex = \"fq1,fq2\";\n\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    final String fpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+f+\"']/\";\n\n    final String key = \"key_key\";\n    final String kpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+key+\"']/\";\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n      for (String ct : new String[] {\"stats.calcdistinct\", \"f.\"+f+\".stats.calcdistinct\"}) {\n        assertQ(\"test statistics values using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-40.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-100.0']\"\n                , fpre + \"long[@name='count'][.='4']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=4\"\n                , fpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , fpre + \"double[@name='mean'][.='-25.0']\"\n                , fpre + \"double[@name='stddev'][.='12.909944487358056']\"\n                );  \n        \n        assertQ(\"test statistics w/fq using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", \"fq\", \"-id:4\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n                );  \n        \n        \r\n\n        assertQ(\"test statistics w & w/fq via key override using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\",\n                    \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                    \"stats.field\", \"{!key=\"+key+\" ex=key_ex_tag,\"+all_possible_ex+\"}\"+f)\n\n                \r\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n\n                \r\n                , kpre + \"double[@name='min'][.='-40.0']\"\n                , kpre + \"double[@name='max'][.='-10.0']\"\n                , kpre + \"double[@name='sum'][.='-100.0']\"\n                , kpre + \"long[@name='count'][.='4']\"\n                , kpre + \"long[@name='missing'][.='0']\"\n                , kpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n                , kpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , kpre + \"double[@name='mean'][.='-25.0']\"\n                , kpre + \"double[@name='stddev'][.='12.909944487358056']\"\n\n                );\n\n      }\n    }\n\n    \r\n    \r\n    \r\n    for (String param : new String[] {\n        \r\n        \"{!key=\"+key+\" ex=key_ex_tag}\" + f,\n        \"{!key=\"+key+\" ex=key_ex_tag v=\"+f+\"}\",\n        \r\n        \"{!lucene key=\"+key+\" ex=key_ex_tag}_val_:\\\"field(\"+f+\")\\\"\",\n        \"{!func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v=field(\"+f+\")}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='field(\"+f+\")'}\",\n        \r\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='sum(0,\"+f+\")'}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='product(1,\"+f+\")'}\",\n      }) {\n      \n      assertQ(\"test statistics over field specified as a function: \" + param,\n              \r\n              req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                  \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                  \"stats.field\", param)\n              \n              , kpre + \"double[@name='min'][.='-40.0']\"\n              , kpre + \"double[@name='max'][.='-10.0']\"\n              , kpre + \"double[@name='sum'][.='-100.0']\"\n              , kpre + \"long[@name='count'][.='4']\"\n              , kpre + \"long[@name='missing'][.='0']\"\n              , kpre + \"long[@name='countDistinct'][.='4']\"\n              , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n              , kpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n              , kpre + \"double[@name='mean'][.='-25.0']\"\n              , kpre + \"double[@name='stddev'][.='12.909944487358056']\"\n              \n              );\n    }\n    \n    \r\n    String func = \"product(2, \" + f + \")\";\n    assertQ(\"test function statistics & key override\", \n            \r\n            req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                \"stats.field\", \"{!func key=\"+key+\" ex=key_ex_tag}\"+func)\n\n            , kpre + \"double[@name='min'][.='-80.0']\"\n            , kpre + \"double[@name='max'][.='-20.0']\"\n            , kpre + \"double[@name='sum'][.='-200.0']\"\n            , kpre + \"long[@name='count'][.='4']\"\n            , kpre + \"long[@name='missing'][.='0']\"\n            , kpre + \"long[@name='countDistinct'][.='4']\"\n            , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n            , kpre + \"double[@name='sumOfSquares'][.='12000.0']\"\n            , kpre + \"double[@name='mean'][.='-50.0']\" \n            , kpre + \"double[@name='stddev'][.='25.81988897471611']\"\n            );\n  }\n","date":"2014-09-23 01:45:53","endLine":253,"groupId":"63246","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestFieldStatisticsResult","params":"(Stringf@SolrParams[]baseParamsSet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/e04c3cc5426bb2db6dfc12f2c3cae3b9571998.src","preCode":"  public void doTestFieldStatisticsResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    \r\n    \r\n    \r\n    \r\n    final String all_possible_ex = \"fq1,fq2\";\n\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    final String fpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+f+\"']/\";\n\n    final String key = \"key_key\";\n    final String kpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+key+\"']/\";\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n      for (String ct : new String[] {\"stats.calcdistinct\", \"f.\"+f+\".stats.calcdistinct\"}) {\n        assertQ(\"test statistics values using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-40.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-100.0']\"\n                , fpre + \"long[@name='count'][.='4']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=4\"\n                , fpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , fpre + \"double[@name='mean'][.='-25.0']\"\n                , fpre + \"double[@name='stddev'][.='12.909944487358056']\"\n                );  \n        \n        assertQ(\"test statistics w/fq using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", \"fq\", \"-id:4\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n                );  \n        \n        \r\n\n        assertQ(\"test statistics w & w/fq via key override using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\",\n                    \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                    \"stats.field\", \"{!key=\"+key+\" ex=key_ex_tag,\"+all_possible_ex+\"}\"+f)\n\n                \r\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n\n                \r\n                , kpre + \"double[@name='min'][.='-40.0']\"\n                , kpre + \"double[@name='max'][.='-10.0']\"\n                , kpre + \"double[@name='sum'][.='-100.0']\"\n                , kpre + \"long[@name='count'][.='4']\"\n                , kpre + \"long[@name='missing'][.='0']\"\n                , kpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n                , kpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , kpre + \"double[@name='mean'][.='-25.0']\"\n                , kpre + \"double[@name='stddev'][.='12.909944487358056']\"\n\n                );\n\n      }\n    }\n\n    \r\n    \r\n    \r\n    for (String param : new String[] {\n        \r\n        \"{!key=\"+key+\" ex=key_ex_tag}\" + f,\n        \"{!key=\"+key+\" ex=key_ex_tag v=\"+f+\"}\",\n        \r\n        \"{!lucene key=\"+key+\" ex=key_ex_tag}_val_:\\\"field(\"+f+\")\\\"\",\n        \"{!func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v=field(\"+f+\")}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='field(\"+f+\")'}\",\n        \r\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='sum(0,\"+f+\")'}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='product(1,\"+f+\")'}\",\n      }) {\n      \n      assertQ(\"test statistics over field specified as a function: \" + param,\n              \r\n              req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                  \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                  \"stats.field\", param)\n              \n              , kpre + \"double[@name='min'][.='-40.0']\"\n              , kpre + \"double[@name='max'][.='-10.0']\"\n              , kpre + \"double[@name='sum'][.='-100.0']\"\n              , kpre + \"long[@name='count'][.='4']\"\n              , kpre + \"long[@name='missing'][.='0']\"\n              , kpre + \"long[@name='countDistinct'][.='4']\"\n              , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n              , kpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n              , kpre + \"double[@name='mean'][.='-25.0']\"\n              , kpre + \"double[@name='stddev'][.='12.909944487358056']\"\n              \n              );\n    }\n    \n    \r\n    String func = \"product(2, \" + f + \")\";\n    assertQ(\"test function statistics & key override\", \n            \r\n            req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                \"stats.field\", \"{!func key=\"+key+\" ex=key_ex_tag}\"+func)\n\n            , kpre + \"double[@name='min'][.='-80.0']\"\n            , kpre + \"double[@name='max'][.='-20.0']\"\n            , kpre + \"double[@name='sum'][.='-200.0']\"\n            , kpre + \"long[@name='count'][.='4']\"\n            , kpre + \"long[@name='missing'][.='0']\"\n            , kpre + \"long[@name='countDistinct'][.='4']\"\n            , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n            , kpre + \"double[@name='sumOfSquares'][.='12000.0']\"\n            , kpre + \"double[@name='mean'][.='-50.0']\" \n            , kpre + \"double[@name='stddev'][.='25.81988897471611']\"\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"N"},{"authorDate":"2014-10-17 03:05:20","commitOrder":8,"curCode":"  public void doTestFieldStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    final String fpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+f+\"']/\";\n    final String key = \"key_key\";\n    final String kpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+key+\"']/\";\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n\n      SolrQueryRequest request = req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\");\n\n      assertQ(\"test statistics values\", request\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-70.0']\"\n              , \"//long[@name='count'][.='3']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='3']\"\n              , \"count(//arr[@name='distinctValues']/*)=3\"\n              , \"//double[@name='sumOfSquares'][.='2100.0']\"\n              , \"//double[@name='mean'][.='-23.333333333333332']\"\n              , \"//double[@name='stddev'][.='15.275252316519467']\"\n              );\n    }\n\n    \r\n    \r\n    \r\n    for (String param : new String[] {\n        \r\n        \"{!key=\"+key+\" ex=key_ex_tag}\" + f,\n        \"{!key=\"+key+\" ex=key_ex_tag v=\"+f+\"}\",\n        \r\n        \"{!lucene key=\"+key+\" ex=key_ex_tag}_val_:\\\"field(\"+f+\")\\\"\",\n        \"{!func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v=field(\"+f+\")}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='field(\"+f+\")'}\",\n        \r\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='sum(0,\"+f+\")'}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='product(1,\"+f+\")'}\",\n      }) {\n      \n      assertQ(\"test statistics over field specified as a function: \" + param,\n              \r\n              req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                  \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                  \"stats.field\", param)\n              \n              , kpre + \"double[@name='min'][.='-40.0']\"\n              , kpre + \"double[@name='max'][.='-10.0']\"\n              , kpre + \"double[@name='sum'][.='-70.0']\"\n              , kpre + \"long[@name='count'][.='3']\"\n              , kpre + \"long[@name='missing'][.='1']\"\n              , kpre + \"long[@name='countDistinct'][.='3']\"\n              , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=3\"\n              , kpre + \"double[@name='sumOfSquares'][.='2100.0']\"\n              , kpre + \"double[@name='mean'][.='-23.333333333333332']\"\n              , kpre + \"double[@name='stddev'][.='15.275252316519467']\"\n              \n              );\n    }\n\n  }\n","date":"2014-10-17 03:05:20","endLine":497,"groupId":"58579","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestFieldStatisticsMissingResult","params":"(Stringf@SolrParams[]baseParamsSet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/03/81a3c1c9e70786e05fdb80cfc8c6d188e90b4d.src","preCode":"  public void doTestFieldStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    final String fpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+f+\"']/\";\n    final String key = \"key_key\";\n    final String kpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+key+\"']/\";\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n\n      SolrQueryRequest request = req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\");\n\n      assertQ(\"test statistics values\", request\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-70.0']\"\n              , \"//long[@name='count'][.='3']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='3']\"\n              , \"count(//arr[@name='distinctValues']/*)=3\"\n              , \"//double[@name='sumOfSquares'][.='2100.0']\"\n              , \"//double[@name='mean'][.='-23.333333333333332']\"\n              , \"//double[@name='stddev'][.='15.275252316519467']\"\n              );\n    }\n\n    \r\n    \r\n    \r\n    for (String param : new String[] {\n        \r\n        \"{!key=\"+key+\" ex=key_ex_tag}\" + f,\n        \"{!key=\"+key+\" ex=key_ex_tag v=\"+f+\"}\",\n        \r\n        \"{!lucene key=\"+key+\" ex=key_ex_tag}_val_:\\\"field(\"+f+\")\\\"\",\n        \"{!func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v=field(\"+f+\")}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='field(\"+f+\")'}\",\n\n        \r\n        \r\n        \r\n      }) {\n      \n      assertQ(\"test statistics over field specified as a function: \" + param,\n              \r\n              req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                  \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                  \"stats.field\", param)\n              \n              , kpre + \"double[@name='min'][.='-40.0']\"\n              , kpre + \"double[@name='max'][.='-10.0']\"\n              , kpre + \"double[@name='sum'][.='-70.0']\"\n              , kpre + \"long[@name='count'][.='3']\"\n              , kpre + \"long[@name='missing'][.='1']\"\n              , kpre + \"long[@name='countDistinct'][.='3']\"\n              , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=3\"\n              , kpre + \"double[@name='sumOfSquares'][.='2100.0']\"\n              , kpre + \"double[@name='mean'][.='-23.333333333333332']\"\n              , kpre + \"double[@name='stddev'][.='15.275252316519467']\"\n              \n              );\n    }\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"M"}],"commitId":"d8146460f0eca4641f0e48793b6053a88be5c7d1","commitMessage":"@@@LUCENE-5961: Fix the exists() method for FunctionValues returned by many ValueSoures to behave properly when wrapping other ValueSources which do not exist for the specified document\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1632414 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-10-17 03:05:20","modifiedFileCount":"12","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2014-10-17 03:05:20","codes":[{"authorDate":"2015-05-08 01:58:58","commitOrder":9,"curCode":"  public void doTestFieldStatisticsResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    \r\n    \r\n    \r\n    \r\n    final String all_possible_ex = \"fq1,fq2\";\n\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    final String fpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+f+\"']/\";\n\n    final String key = \"key_key\";\n    final String kpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+key+\"']/\";\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n      for (String ct : new String[] {\"stats.calcdistinct\", \"f.\"+f+\".stats.calcdistinct\"}) {\n        assertQ(\"test statistics values using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-40.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-100.0']\"\n                , fpre + \"long[@name='count'][.='4']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=4\"\n                , fpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , fpre + \"double[@name='mean'][.='-25.0']\"\n                , fpre + \"double[@name='stddev'][.='12.909944487358056']\"\n                );  \n        \n        assertQ(\"test statistics w/fq using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", \"fq\", \"-id:4\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n                );  \n        \n        \r\n\n        assertQ(\"test statistics w & w/fq via key override using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\",\n                    \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                    \"stats.field\", \"{!key=\"+key+\" ex=key_ex_tag,\"+all_possible_ex+\"}\"+f)\n\n                \r\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n\n                \r\n                , kpre + \"double[@name='min'][.='-40.0']\"\n                , kpre + \"double[@name='max'][.='-10.0']\"\n                , kpre + \"double[@name='sum'][.='-100.0']\"\n                , kpre + \"long[@name='count'][.='4']\"\n                , kpre + \"long[@name='missing'][.='0']\"\n                , kpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n                , kpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , kpre + \"double[@name='mean'][.='-25.0']\"\n                , kpre + \"double[@name='stddev'][.='12.909944487358056']\"\n\n                );\n      }\n    }\n\n    \r\n    \r\n    \r\n    for (String param : new String[] {\n        \r\n        \"{!key=\"+key+\" ex=key_ex_tag}\" + f,\n        \"{!key=\"+key+\" ex=key_ex_tag v=\"+f+\"}\",\n        \r\n        \"{!lucene key=\"+key+\" ex=key_ex_tag}_val_:\\\"field(\"+f+\")\\\"\",\n        \"{!func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v=field(\"+f+\")}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='field(\"+f+\")'}\",\n        \r\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='sum(0,\"+f+\")'}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='product(1,\"+f+\")'}\",\n      }) {\n      \n      assertQ(\"test statistics over field specified as a function: \" + param,\n              \r\n              req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                  \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                  \"stats.field\", param)\n              \n              , kpre + \"double[@name='min'][.='-40.0']\"\n              , kpre + \"double[@name='max'][.='-10.0']\"\n              , kpre + \"double[@name='sum'][.='-100.0']\"\n              , kpre + \"long[@name='count'][.='4']\"\n              , kpre + \"long[@name='missing'][.='0']\"\n              , kpre + \"long[@name='countDistinct'][.='4']\"\n              , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n              , kpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n              , kpre + \"double[@name='mean'][.='-25.0']\"\n              , kpre + \"double[@name='stddev'][.='12.909944487358056']\"\n              \n              );\n    }\n    \n    \r\n    String func = \"product(2, \" + f + \")\";\n    assertQ(\"test function statistics & key override\", \n            \r\n            req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                \"stats.field\", \"{!func key=\"+key+\" ex=key_ex_tag}\"+func)\n\n            , kpre + \"double[@name='min'][.='-80.0']\"\n            , kpre + \"double[@name='max'][.='-20.0']\"\n            , kpre + \"double[@name='sum'][.='-200.0']\"\n            , kpre + \"long[@name='count'][.='4']\"\n            , kpre + \"long[@name='missing'][.='0']\"\n            , kpre + \"long[@name='countDistinct'][.='4']\"\n            , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n            , kpre + \"double[@name='sumOfSquares'][.='12000.0']\"\n            , kpre + \"double[@name='mean'][.='-50.0']\" \n            , kpre + \"double[@name='stddev'][.='25.81988897471611']\"\n            );\n\n    \r\n    assertQ(\"test function statistics & key override\", \n            \r\n            req(\"q\", \"*:*\", \"stats\", \"true\",\n                \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                \"stats.field\", \"{!key=\"+key+\" cardinality=true}\"+f)\n\n            , kpre + \"long[@name='cardinality'][.='3']\"\n            , \"count(\" + kpre + \"/*)=1\"\n            );\n  }\n","date":"2015-05-08 01:58:58","endLine":278,"groupId":"103435","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestFieldStatisticsResult","params":"(Stringf@SolrParams[]baseParamsSet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/94/25c02766b847bc006384b6fb47431b6151bf8c.src","preCode":"  public void doTestFieldStatisticsResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    \r\n    \r\n    \r\n    \r\n    final String all_possible_ex = \"fq1,fq2\";\n\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\", f, \"-30\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    final String fpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+f+\"']/\";\n\n    final String key = \"key_key\";\n    final String kpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+key+\"']/\";\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n      for (String ct : new String[] {\"stats.calcdistinct\", \"f.\"+f+\".stats.calcdistinct\"}) {\n        assertQ(\"test statistics values using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-40.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-100.0']\"\n                , fpre + \"long[@name='count'][.='4']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=4\"\n                , fpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , fpre + \"double[@name='mean'][.='-25.0']\"\n                , fpre + \"double[@name='stddev'][.='12.909944487358056']\"\n                );  \n        \n        assertQ(\"test statistics w/fq using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", \"fq\", \"-id:4\", ct, \"true\")\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n                );  \n        \n        \r\n\n        assertQ(\"test statistics w & w/fq via key override using: \" + ct, \n                req(baseParams, \"q\", \"*:*\", ct, \"true\",\n                    \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                    \"stats.field\", \"{!key=\"+key+\" ex=key_ex_tag,\"+all_possible_ex+\"}\"+f)\n\n                \r\n                , fpre + \"double[@name='min'][.='-30.0']\"\n                , fpre + \"double[@name='max'][.='-10.0']\"\n                , fpre + \"double[@name='sum'][.='-60.0']\"\n                , fpre + \"long[@name='count'][.='3']\"\n                , fpre + \"long[@name='missing'][.='0']\"\n                , fpre + \"long[@name='countDistinct'][.='3']\"\n                , \"count(\" + fpre + \"arr[@name='distinctValues']/*)=3\"\n                , fpre + \"double[@name='sumOfSquares'][.='1400.0']\"\n                , fpre + \"double[@name='mean'][.='-20.0']\"\n                , fpre + \"double[@name='stddev'][.='10.0']\"\n\n                \r\n                , kpre + \"double[@name='min'][.='-40.0']\"\n                , kpre + \"double[@name='max'][.='-10.0']\"\n                , kpre + \"double[@name='sum'][.='-100.0']\"\n                , kpre + \"long[@name='count'][.='4']\"\n                , kpre + \"long[@name='missing'][.='0']\"\n                , kpre + \"long[@name='countDistinct'][.='4']\"\n                , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n                , kpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n                , kpre + \"double[@name='mean'][.='-25.0']\"\n                , kpre + \"double[@name='stddev'][.='12.909944487358056']\"\n\n                );\n\n      }\n    }\n\n    \r\n    \r\n    \r\n    for (String param : new String[] {\n        \r\n        \"{!key=\"+key+\" ex=key_ex_tag}\" + f,\n        \"{!key=\"+key+\" ex=key_ex_tag v=\"+f+\"}\",\n        \r\n        \"{!lucene key=\"+key+\" ex=key_ex_tag}_val_:\\\"field(\"+f+\")\\\"\",\n        \"{!func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v=field(\"+f+\")}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='field(\"+f+\")'}\",\n        \r\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='sum(0,\"+f+\")'}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='product(1,\"+f+\")'}\",\n      }) {\n      \n      assertQ(\"test statistics over field specified as a function: \" + param,\n              \r\n              req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                  \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                  \"stats.field\", param)\n              \n              , kpre + \"double[@name='min'][.='-40.0']\"\n              , kpre + \"double[@name='max'][.='-10.0']\"\n              , kpre + \"double[@name='sum'][.='-100.0']\"\n              , kpre + \"long[@name='count'][.='4']\"\n              , kpre + \"long[@name='missing'][.='0']\"\n              , kpre + \"long[@name='countDistinct'][.='4']\"\n              , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n              , kpre + \"double[@name='sumOfSquares'][.='3000.0']\"\n              , kpre + \"double[@name='mean'][.='-25.0']\"\n              , kpre + \"double[@name='stddev'][.='12.909944487358056']\"\n              \n              );\n    }\n    \n    \r\n    String func = \"product(2, \" + f + \")\";\n    assertQ(\"test function statistics & key override\", \n            \r\n            req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                \"stats.field\", \"{!func key=\"+key+\" ex=key_ex_tag}\"+func)\n\n            , kpre + \"double[@name='min'][.='-80.0']\"\n            , kpre + \"double[@name='max'][.='-20.0']\"\n            , kpre + \"double[@name='sum'][.='-200.0']\"\n            , kpre + \"long[@name='count'][.='4']\"\n            , kpre + \"long[@name='missing'][.='0']\"\n            , kpre + \"long[@name='countDistinct'][.='4']\"\n            , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=4\"\n            , kpre + \"double[@name='sumOfSquares'][.='12000.0']\"\n            , kpre + \"double[@name='mean'][.='-50.0']\" \n            , kpre + \"double[@name='stddev'][.='25.81988897471611']\"\n            );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2014-10-17 03:05:20","commitOrder":9,"curCode":"  public void doTestFieldStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    final String fpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+f+\"']/\";\n    final String key = \"key_key\";\n    final String kpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+key+\"']/\";\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n\n      SolrQueryRequest request = req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\");\n\n      assertQ(\"test statistics values\", request\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-70.0']\"\n              , \"//long[@name='count'][.='3']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='3']\"\n              , \"count(//arr[@name='distinctValues']/*)=3\"\n              , \"//double[@name='sumOfSquares'][.='2100.0']\"\n              , \"//double[@name='mean'][.='-23.333333333333332']\"\n              , \"//double[@name='stddev'][.='15.275252316519467']\"\n              );\n    }\n\n    \r\n    \r\n    \r\n    for (String param : new String[] {\n        \r\n        \"{!key=\"+key+\" ex=key_ex_tag}\" + f,\n        \"{!key=\"+key+\" ex=key_ex_tag v=\"+f+\"}\",\n        \r\n        \"{!lucene key=\"+key+\" ex=key_ex_tag}_val_:\\\"field(\"+f+\")\\\"\",\n        \"{!func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v=field(\"+f+\")}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='field(\"+f+\")'}\",\n        \r\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='sum(0,\"+f+\")'}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='product(1,\"+f+\")'}\",\n      }) {\n      \n      assertQ(\"test statistics over field specified as a function: \" + param,\n              \r\n              req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                  \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                  \"stats.field\", param)\n              \n              , kpre + \"double[@name='min'][.='-40.0']\"\n              , kpre + \"double[@name='max'][.='-10.0']\"\n              , kpre + \"double[@name='sum'][.='-70.0']\"\n              , kpre + \"long[@name='count'][.='3']\"\n              , kpre + \"long[@name='missing'][.='1']\"\n              , kpre + \"long[@name='countDistinct'][.='3']\"\n              , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=3\"\n              , kpre + \"double[@name='sumOfSquares'][.='2100.0']\"\n              , kpre + \"double[@name='mean'][.='-23.333333333333332']\"\n              , kpre + \"double[@name='stddev'][.='15.275252316519467']\"\n              \n              );\n    }\n\n  }\n","date":"2014-10-17 03:05:20","endLine":497,"groupId":"103435","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestFieldStatisticsMissingResult","params":"(Stringf@SolrParams[]baseParamsSet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/03/81a3c1c9e70786e05fdb80cfc8c6d188e90b4d.src","preCode":"  public void doTestFieldStatisticsMissingResult(String f, SolrParams[] baseParamsSet) throws Exception {\n    assertU(adoc(\"id\", \"1\", f, \"-10\"));\n    assertU(adoc(\"id\", \"2\", f, \"-20\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\", f, \"-40\"));\n    assertU(commit());\n\n    final String fpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+f+\"']/\";\n    final String key = \"key_key\";\n    final String kpre = XPRE + \"lst[@name='stats_fields']/lst[@name='\"+key+\"']/\";\n\n    \r\n    for (SolrParams baseParams : baseParamsSet) {\n\n      SolrQueryRequest request = req(baseParams, \"q\", \"*:*\", \"stats.calcdistinct\", \"true\");\n\n      assertQ(\"test statistics values\", request\n              , \"//double[@name='min'][.='-40.0']\"\n              , \"//double[@name='max'][.='-10.0']\"\n              , \"//double[@name='sum'][.='-70.0']\"\n              , \"//long[@name='count'][.='3']\"\n              , \"//long[@name='missing'][.='1']\"\n              , \"//long[@name='countDistinct'][.='3']\"\n              , \"count(//arr[@name='distinctValues']/*)=3\"\n              , \"//double[@name='sumOfSquares'][.='2100.0']\"\n              , \"//double[@name='mean'][.='-23.333333333333332']\"\n              , \"//double[@name='stddev'][.='15.275252316519467']\"\n              );\n    }\n\n    \r\n    \r\n    \r\n    for (String param : new String[] {\n        \r\n        \"{!key=\"+key+\" ex=key_ex_tag}\" + f,\n        \"{!key=\"+key+\" ex=key_ex_tag v=\"+f+\"}\",\n        \r\n        \"{!lucene key=\"+key+\" ex=key_ex_tag}_val_:\\\"field(\"+f+\")\\\"\",\n        \"{!func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag}field(\"+f+\")\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v=field(\"+f+\")}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='field(\"+f+\")'}\",\n        \r\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='sum(0,\"+f+\")'}\",\n        \"{!type=func key=\"+key+\" ex=key_ex_tag v='product(1,\"+f+\")'}\",\n      }) {\n      \n      assertQ(\"test statistics over field specified as a function: \" + param,\n              \r\n              req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.calcdistinct\", \"true\",\n                  \"fq\", \"{!tag=key_ex_tag}-id:4\", \n                  \"stats.field\", param)\n              \n              , kpre + \"double[@name='min'][.='-40.0']\"\n              , kpre + \"double[@name='max'][.='-10.0']\"\n              , kpre + \"double[@name='sum'][.='-70.0']\"\n              , kpre + \"long[@name='count'][.='3']\"\n              , kpre + \"long[@name='missing'][.='1']\"\n              , kpre + \"long[@name='countDistinct'][.='3']\"\n              , \"count(\" + kpre + \"arr[@name='distinctValues']/*)=3\"\n              , kpre + \"double[@name='sumOfSquares'][.='2100.0']\"\n              , kpre + \"double[@name='mean'][.='-23.333333333333332']\"\n              , kpre + \"double[@name='stddev'][.='15.275252316519467']\"\n              \n              );\n    }\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"N"}],"commitId":"06ac78ae55c8c1e5f39205493887cda9ec6347ec","commitMessage":"@@@SOLR-6968: New 'cardinality' option for stats.field.  uses HyperLogLog to efficiently estimate the cardinality of a field w/bounded RAM\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1678245 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-05-08 01:58:58","modifiedFileCount":"5","status":"M","submitter":"Chris M. Hostetter"}]
