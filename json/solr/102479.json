[{"authorTime":"2015-07-17 19:20:13","codes":[{"authorDate":"2015-07-17 19:20:13","commitOrder":1,"curCode":"     double sparseProbabilisticAlgorithmCardinality() {\n        final int m = this.m;\n\n        \r\n        \r\n        double sum = 0;\n        int numberOfZeroes = 0;\n        for(int j=0; j<m; j++) {\n            final long register;\n            if (sparseProbabilisticStorage.containsKey(j)) {\n              register = sparseProbabilisticStorage.lget();\n            } else {\n              register = 0;\n            }\n\n            sum += 1.0 / (1L << register);\n            if(register == 0L) numberOfZeroes++;\n        }\n\n        \r\n        final double estimator = alphaMSquared / sum;\n        if((numberOfZeroes != 0) && (estimator < smallEstimatorCutoff)) {\n            return HLLUtil.smallEstimator(m, numberOfZeroes);\n        } else if(estimator <= largeEstimatorCutoff) {\n            return estimator;\n        } else {\n            return HLLUtil.largeEstimator(log2m, regwidth, estimator);\n        }\n    }\n","date":"2015-07-17 19:20:13","endLine":543,"groupId":"59509","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sparseProbabilisticAlgorithmCardinality","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/2401bfc0f076d82017dfd9ce353333de0991ef.src","preCode":"     double sparseProbabilisticAlgorithmCardinality() {\n        final int m = this.m;\n\n        \r\n        \r\n        double sum = 0;\n        int numberOfZeroes = 0;\n        for(int j=0; j<m; j++) {\n            final long register;\n            if (sparseProbabilisticStorage.containsKey(j)) {\n              register = sparseProbabilisticStorage.lget();\n            } else {\n              register = 0;\n            }\n\n            sum += 1.0 / (1L << register);\n            if(register == 0L) numberOfZeroes++;\n        }\n\n        \r\n        final double estimator = alphaMSquared / sum;\n        if((numberOfZeroes != 0) && (estimator < smallEstimatorCutoff)) {\n            return HLLUtil.smallEstimator(m, numberOfZeroes);\n        } else if(estimator <= largeEstimatorCutoff) {\n            return estimator;\n        } else {\n            return HLLUtil.largeEstimator(log2m, regwidth, estimator);\n        }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/hll/HLL.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":515,"status":"B"},{"authorDate":"2015-07-17 19:20:13","commitOrder":1,"curCode":"     double fullProbabilisticAlgorithmCardinality() {\n        final int m = this.m;\n\n        \r\n        \r\n        double sum = 0;\n        int numberOfZeroes = 0;\n        final LongIterator iterator = probabilisticStorage.registerIterator();\n        while(iterator.hasNext()) {\n            final long register = iterator.next();\n\n            sum += 1.0 / (1L << register);\n            if(register == 0L) numberOfZeroes++;\n        }\n\n        \r\n        final double estimator = alphaMSquared / sum;\n        if((numberOfZeroes != 0) && (estimator < smallEstimatorCutoff)) {\n            return HLLUtil.smallEstimator(m, numberOfZeroes);\n        } else if(estimator <= largeEstimatorCutoff) {\n            return estimator;\n        } else {\n            return HLLUtil.largeEstimator(log2m, regwidth, estimator);\n        }\n    }\n","date":"2015-07-17 19:20:13","endLine":577,"groupId":"59509","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fullProbabilisticAlgorithmCardinality","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/2401bfc0f076d82017dfd9ce353333de0991ef.src","preCode":"     double fullProbabilisticAlgorithmCardinality() {\n        final int m = this.m;\n\n        \r\n        \r\n        double sum = 0;\n        int numberOfZeroes = 0;\n        final LongIterator iterator = probabilisticStorage.registerIterator();\n        while(iterator.hasNext()) {\n            final long register = iterator.next();\n\n            sum += 1.0 / (1L << register);\n            if(register == 0L) numberOfZeroes++;\n        }\n\n        \r\n        final double estimator = alphaMSquared / sum;\n        if((numberOfZeroes != 0) && (estimator < smallEstimatorCutoff)) {\n            return HLLUtil.smallEstimator(m, numberOfZeroes);\n        } else if(estimator <= largeEstimatorCutoff) {\n            return estimator;\n        } else {\n            return HLLUtil.largeEstimator(log2m, regwidth, estimator);\n        }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/hll/HLL.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":553,"status":"B"}],"commitId":"2dfad693d6870e43a63aba3b43a62bf6c146b4c9","commitMessage":"@@@SOLR-7787: Removed fastutil and java-hll dependency.  integrated HyperLogLog from java-hll into Solr core.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1691518 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-07-17 19:20:13","modifiedFileCount":"7","status":"B","submitter":"Dawid Weiss"},{"authorTime":"2015-07-17 19:20:13","codes":[{"authorDate":"2015-08-24 17:53:04","commitOrder":2,"curCode":"     double sparseProbabilisticAlgorithmCardinality() {\n        final int m = this.m;\n\n        \r\n        \r\n        double sum = 0;\n        int numberOfZeroes = 0;\n        for(int j=0; j<m; j++) {\n            final long register;\n            if (sparseProbabilisticStorage.containsKey(j)) {\n              register = sparseProbabilisticStorage.get(j);\n            } else {\n              register = 0;\n            }\n\n            sum += 1.0 / (1L << register);\n            if(register == 0L) numberOfZeroes++;\n        }\n\n        \r\n        final double estimator = alphaMSquared / sum;\n        if((numberOfZeroes != 0) && (estimator < smallEstimatorCutoff)) {\n            return HLLUtil.smallEstimator(m, numberOfZeroes);\n        } else if(estimator <= largeEstimatorCutoff) {\n            return estimator;\n        } else {\n            return HLLUtil.largeEstimator(log2m, regwidth, estimator);\n        }\n    }\n","date":"2015-08-24 17:53:04","endLine":544,"groupId":"102479","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sparseProbabilisticAlgorithmCardinality","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/ba80b37e0e55d696a85733e674f65ca2760e1a.src","preCode":"     double sparseProbabilisticAlgorithmCardinality() {\n        final int m = this.m;\n\n        \r\n        \r\n        double sum = 0;\n        int numberOfZeroes = 0;\n        for(int j=0; j<m; j++) {\n            final long register;\n            if (sparseProbabilisticStorage.containsKey(j)) {\n              register = sparseProbabilisticStorage.lget();\n            } else {\n              register = 0;\n            }\n\n            sum += 1.0 / (1L << register);\n            if(register == 0L) numberOfZeroes++;\n        }\n\n        \r\n        final double estimator = alphaMSquared / sum;\n        if((numberOfZeroes != 0) && (estimator < smallEstimatorCutoff)) {\n            return HLLUtil.smallEstimator(m, numberOfZeroes);\n        } else if(estimator <= largeEstimatorCutoff) {\n            return estimator;\n        } else {\n            return HLLUtil.largeEstimator(log2m, regwidth, estimator);\n        }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/hll/HLL.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":516,"status":"M"},{"authorDate":"2015-07-17 19:20:13","commitOrder":2,"curCode":"     double fullProbabilisticAlgorithmCardinality() {\n        final int m = this.m;\n\n        \r\n        \r\n        double sum = 0;\n        int numberOfZeroes = 0;\n        final LongIterator iterator = probabilisticStorage.registerIterator();\n        while(iterator.hasNext()) {\n            final long register = iterator.next();\n\n            sum += 1.0 / (1L << register);\n            if(register == 0L) numberOfZeroes++;\n        }\n\n        \r\n        final double estimator = alphaMSquared / sum;\n        if((numberOfZeroes != 0) && (estimator < smallEstimatorCutoff)) {\n            return HLLUtil.smallEstimator(m, numberOfZeroes);\n        } else if(estimator <= largeEstimatorCutoff) {\n            return estimator;\n        } else {\n            return HLLUtil.largeEstimator(log2m, regwidth, estimator);\n        }\n    }\n","date":"2015-07-17 19:20:13","endLine":577,"groupId":"102479","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"fullProbabilisticAlgorithmCardinality","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/43/2401bfc0f076d82017dfd9ce353333de0991ef.src","preCode":"     double fullProbabilisticAlgorithmCardinality() {\n        final int m = this.m;\n\n        \r\n        \r\n        double sum = 0;\n        int numberOfZeroes = 0;\n        final LongIterator iterator = probabilisticStorage.registerIterator();\n        while(iterator.hasNext()) {\n            final long register = iterator.next();\n\n            sum += 1.0 / (1L << register);\n            if(register == 0L) numberOfZeroes++;\n        }\n\n        \r\n        final double estimator = alphaMSquared / sum;\n        if((numberOfZeroes != 0) && (estimator < smallEstimatorCutoff)) {\n            return HLLUtil.smallEstimator(m, numberOfZeroes);\n        } else if(estimator <= largeEstimatorCutoff) {\n            return estimator;\n        } else {\n            return HLLUtil.largeEstimator(log2m, regwidth, estimator);\n        }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/hll/HLL.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":553,"status":"N"}],"commitId":"c1dc2fb6a6969fc61460fa0bd7459fb45a3e173a","commitMessage":"@@@SOLR-7790.  SOLR-7792.  SOLR-7791: Update Carrot2 clustering component to version 3.10.3. Upgrade HPPC library to version 0.7.1.  morfologik-stemming to version 1.10.0. (Dawid Weiss)\n\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1697345 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-24 17:53:04","modifiedFileCount":"10","status":"M","submitter":"Dawid Weiss"}]
