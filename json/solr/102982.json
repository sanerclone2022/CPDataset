[{"authorTime":"2016-03-26 02:00:29","codes":[{"authorDate":"2016-03-26 02:00:29","commitOrder":1,"curCode":"  public void testMaxErrorsThrowsException() throws IOException {\n    ModifiableSolrParams requestParams = new ModifiableSolrParams();\n    requestParams.add(\"maxErrors\", \"5\");\n    try {\n      \r\n      assertAddsSucceedWithErrors(\"tolerant-chain-max-errors-not-set\", docs, requestParams, badIds);\n      fail(\"Expecting exception\");\n    } catch (SolrException e) {\n      assertTrue(e.getMessage(),\n                 e.getMessage().contains(\"ERROR: [doc=1] Error adding field 'weight'='b' msg=For input string: \\\"b\\\"\"));\n    }\n    \r\n    assertU(commit());\n    assertQ(req(\"q\",\"*:*\")\n        ,\"//result[@numFound='6']\");\n  }\n","date":"2016-03-26 02:02:55","endLine":243,"groupId":"57968","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMaxErrorsThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9b/bead8eb1e54be77944ad371422d905a933974b.src","preCode":"  public void testMaxErrorsThrowsException() throws IOException {\n    ModifiableSolrParams requestParams = new ModifiableSolrParams();\n    requestParams.add(\"maxErrors\", \"5\");\n    try {\n      \r\n      assertAddsSucceedWithErrors(\"tolerant-chain-max-errors-not-set\", docs, requestParams, badIds);\n      fail(\"Expecting exception\");\n    } catch (SolrException e) {\n      assertTrue(e.getMessage(),\n                 e.getMessage().contains(\"ERROR: [doc=1] Error adding field 'weight'='b' msg=For input string: \\\"b\\\"\"));\n    }\n    \r\n    assertU(commit());\n    assertQ(req(\"q\",\"*:*\")\n        ,\"//result[@numFound='6']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/TolerantUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"B"},{"authorDate":"2016-03-26 02:00:29","commitOrder":1,"curCode":"  public void testMaxErrors0() throws IOException {\n    \r\n    List<SolrInputDocument> smallBatch = docs.subList(0, 2);\n    ModifiableSolrParams requestParams = new ModifiableSolrParams();\n    requestParams.add(\"maxErrors\", \"0\");\n    try {\n      \r\n      assertAddsSucceedWithErrors(\"tolerant-chain-max-errors-10\", smallBatch, requestParams, \"1\");\n      fail(\"Expecting exception\");\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(\"ERROR: [doc=1] Error adding field 'weight'='b' msg=For input string: \\\"b\\\"\"));\n    }\n    \r\n    assertU(commit());\n    assertQ(req(\"q\",\"*:*\")\n        ,\"//result[@numFound='1']\");\n  }\n","date":"2016-03-26 02:02:55","endLine":276,"groupId":"57966","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMaxErrors0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9b/bead8eb1e54be77944ad371422d905a933974b.src","preCode":"  public void testMaxErrors0() throws IOException {\n    \r\n    List<SolrInputDocument> smallBatch = docs.subList(0, 2);\n    ModifiableSolrParams requestParams = new ModifiableSolrParams();\n    requestParams.add(\"maxErrors\", \"0\");\n    try {\n      \r\n      assertAddsSucceedWithErrors(\"tolerant-chain-max-errors-10\", smallBatch, requestParams, \"1\");\n      fail(\"Expecting exception\");\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(\"ERROR: [doc=1] Error adding field 'weight'='b' msg=For input string: \\\"b\\\"\"));\n    }\n    \r\n    assertU(commit());\n    assertQ(req(\"q\",\"*:*\")\n        ,\"//result[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/TolerantUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"B"}],"commitId":"f051f56be96b12f1f3e35978ca4c840ae06a801f","commitMessage":"@@@SOLR-445: new ToleranteUpdateProcessorFactory to support skipping update commands that cause failures when sending multiple updates in a single request.\n\nSOLR-8890: New static method in DistributedUpdateProcessorFactory to allow UpdateProcessorFactories to indicate request params that should be forwarded when DUP distributes updates.\n\nThis commit is a squashed merge from the jira/SOLR-445 branch (as of b08c284b26b1779d03693a45e219db89839461d0)\n","date":"2016-03-26 02:02:55","modifiedFileCount":"6","status":"B","submitter":"Chris Hostetter"},{"authorTime":"2019-08-03 15:30:49","codes":[{"authorDate":"2019-08-03 15:30:49","commitOrder":2,"curCode":"  public void testMaxErrorsThrowsException() throws IOException {\n    ModifiableSolrParams requestParams = new ModifiableSolrParams();\n    requestParams.add(\"maxErrors\", \"5\");\n\n    SolrException e = expectThrows(SolrException.class, () ->\n        assertAddsSucceedWithErrors(\"tolerant-chain-max-errors-not-set\", docs, requestParams, badIds));\n    assertTrue(e.getMessage(),\n        e.getMessage().contains(\"ERROR: [doc=1] Error adding field 'weight'='b' msg=For input string: \\\"b\\\"\"));\n    \r\n    assertU(commit());\n    assertQ(req(\"q\",\"*:*\"),\"//result[@numFound='6']\");\n  }\n","date":"2019-08-03 15:30:49","endLine":214,"groupId":"102982","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMaxErrorsThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/07/b3a8855f12f0a96fec07043318253572339e41.src","preCode":"  public void testMaxErrorsThrowsException() throws IOException {\n    ModifiableSolrParams requestParams = new ModifiableSolrParams();\n    requestParams.add(\"maxErrors\", \"5\");\n    try {\n      \r\n      assertAddsSucceedWithErrors(\"tolerant-chain-max-errors-not-set\", docs, requestParams, badIds);\n      fail(\"Expecting exception\");\n    } catch (SolrException e) {\n      assertTrue(e.getMessage(),\n                 e.getMessage().contains(\"ERROR: [doc=1] Error adding field 'weight'='b' msg=For input string: \\\"b\\\"\"));\n    }\n    \r\n    assertU(commit());\n    assertQ(req(\"q\",\"*:*\")\n        ,\"//result[@numFound='6']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/TolerantUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"},{"authorDate":"2019-08-03 15:30:49","commitOrder":2,"curCode":"  public void testMaxErrors0() throws IOException {\n    \r\n    List<SolrInputDocument> smallBatch = docs.subList(0, 2);\n    ModifiableSolrParams requestParams = new ModifiableSolrParams();\n    requestParams.add(\"maxErrors\", \"0\");\n\n    SolrException e = expectThrows(SolrException.class, () ->\n        assertAddsSucceedWithErrors(\"tolerant-chain-max-errors-10\", smallBatch, requestParams, \"1\"));\n    assertTrue(e.getMessage().contains(\"ERROR: [doc=1] Error adding field 'weight'='b' msg=For input string: \\\"b\\\"\"));\n\n    \r\n    assertU(commit());\n    assertQ(req(\"q\",\"*:*\"),\"//result[@numFound='1']\");\n  }\n","date":"2019-08-03 15:30:49","endLine":240,"groupId":"102982","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMaxErrors0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/07/b3a8855f12f0a96fec07043318253572339e41.src","preCode":"  public void testMaxErrors0() throws IOException {\n    \r\n    List<SolrInputDocument> smallBatch = docs.subList(0, 2);\n    ModifiableSolrParams requestParams = new ModifiableSolrParams();\n    requestParams.add(\"maxErrors\", \"0\");\n    try {\n      \r\n      assertAddsSucceedWithErrors(\"tolerant-chain-max-errors-10\", smallBatch, requestParams, \"1\");\n      fail(\"Expecting exception\");\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(\"ERROR: [doc=1] Error adding field 'weight'='b' msg=For input string: \\\"b\\\"\"));\n    }\n    \r\n    assertU(commit());\n    assertQ(req(\"q\",\"*:*\")\n        ,\"//result[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/TolerantUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"}],"commitId":"8c4fde94fe93c70b95ed3563fb65972bb303e0af","commitMessage":"@@@SOLR-12555: use expectThrows() to verify the ex thrown in tests\n","date":"2019-08-03 15:30:49","modifiedFileCount":"89","status":"M","submitter":"Munendra S N"}]
