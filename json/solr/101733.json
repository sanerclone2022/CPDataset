[{"authorTime":"2017-08-01 23:01:17","codes":[{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public void meanTest() throws Exception { \n    \r\n    Double intResult = (Double)getStatResult(\"mr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"mean\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    \r\n    Double longResult = (Double)getStatResult(\"mr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"mean\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    \r\n    Double floatResult = (Double)getStatResult(\"mr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"mean\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    \r\n    Double doubleResult = (Double)getStatResult(\"mr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"mean\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","date":"2017-10-18 01:52:02","endLine":176,"groupId":"51404","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"meanTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4f/b573da5519446658bdbb2704bd4bae52980c3c.src","preCode":"  public void meanTest() throws Exception { \n    \r\n    Double intResult = (Double)getStatResult(\"mr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"mean\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    \r\n    Double longResult = (Double)getStatResult(\"mr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"mean\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    \r\n    Double floatResult = (Double)getStatResult(\"mr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"mean\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    \r\n    Double doubleResult = (Double)getStatResult(\"mr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"mean\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"B"},{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public void medianTest() throws Exception { \n    \r\n    Double intResult = (Double)getStatResult(\"medr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"median\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    \r\n    Double longResult = (Double)getStatResult(\"medr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"median\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    \r\n    Double floatResult = (Double)getStatResult(\"medr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    \r\n    Double doubleResult = (Double)getStatResult(\"medr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","date":"2017-10-18 01:52:02","endLine":223,"groupId":"51404","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"medianTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4f/b573da5519446658bdbb2704bd4bae52980c3c.src","preCode":"  public void medianTest() throws Exception { \n    \r\n    Double intResult = (Double)getStatResult(\"medr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"median\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    \r\n    Double longResult = (Double)getStatResult(\"medr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"median\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    \r\n    Double floatResult = (Double)getStatResult(\"medr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    \r\n    Double doubleResult = (Double)getStatResult(\"medr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"B"}],"commitId":"86d84bff82ff8c7a1f6cadfe307685a4dce2f8d9","commitMessage":"@@@SOLR-11145.  SOLR-11146: Added comprehensive unit tests for Analytics Component 2.0 as well as analytics bug fixes.\n","date":"2017-10-18 01:52:02","modifiedFileCount":"41","status":"B","submitter":"Houston Putman"},{"authorTime":"2020-06-18 23:12:50","codes":[{"authorDate":"2020-06-18 23:12:50","commitOrder":2,"curCode":"  public void meanTest() throws Exception {\n    \r\n    Double intResult = (Double)getStatResult(\"mr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = calculateNumberStat(intTestStart, \"mean\");\n    assertEquals(getRawResponse(), intResult,intTest);\n\n    \r\n    Double longResult = (Double)getStatResult(\"mr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = calculateNumberStat(longTestStart, \"mean\");\n    assertEquals(getRawResponse(), longResult,longTest);\n\n    \r\n    Double floatResult = (Double)getStatResult(\"mr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = calculateNumberStat(floatTestStart, \"mean\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n\n    \r\n    Double doubleResult = (Double)getStatResult(\"mr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = calculateNumberStat(doubleTestStart, \"mean\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","date":"2020-06-18 23:12:50","endLine":182,"groupId":"101733","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"meanTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/31/0af596c3bd7de477b59d4d36f65b16cb92b13f.src","preCode":"  public void meanTest() throws Exception {\n    \r\n    Double intResult = (Double)getStatResult(\"mr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"mean\");\n    assertEquals(getRawResponse(), intResult,intTest);\n\n    \r\n    Double longResult = (Double)getStatResult(\"mr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"mean\");\n    assertEquals(getRawResponse(), longResult,longTest);\n\n    \r\n    Double floatResult = (Double)getStatResult(\"mr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"mean\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n\n    \r\n    Double doubleResult = (Double)getStatResult(\"mr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"mean\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"},{"authorDate":"2020-06-18 23:12:50","commitOrder":2,"curCode":"  public void medianTest() throws Exception {\n    \r\n    Double intResult = (Double)getStatResult(\"medr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = calculateNumberStat(intTestStart, \"median\");\n    assertEquals(getRawResponse(), intResult,intTest);\n\n    \r\n    Double longResult = (Double)getStatResult(\"medr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = calculateNumberStat(longTestStart, \"median\");\n    assertEquals(getRawResponse(), longResult,longTest);\n\n    \r\n    Double floatResult = (Double)getStatResult(\"medr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n\n    \r\n    Double doubleResult = (Double)getStatResult(\"medr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","date":"2020-06-18 23:12:50","endLine":229,"groupId":"101733","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"medianTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/31/0af596c3bd7de477b59d4d36f65b16cb92b13f.src","preCode":"  public void medianTest() throws Exception {\n    \r\n    Double intResult = (Double)getStatResult(\"medr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"median\");\n    assertEquals(getRawResponse(), intResult,intTest);\n\n    \r\n    Double longResult = (Double)getStatResult(\"medr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"median\");\n    assertEquals(getRawResponse(), longResult,longTest);\n\n    \r\n    Double floatResult = (Double)getStatResult(\"medr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n\n    \r\n    Double doubleResult = (Double)getStatResult(\"medr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"}],"commitId":"84729edbba04ad7de4b1cae635d8d0fbe803f124","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 2)\n","date":"2020-06-18 23:12:50","modifiedFileCount":"122","status":"M","submitter":"Erick Erickson"}]
