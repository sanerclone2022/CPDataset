[{"authorTime":"2017-01-31 13:57:33","codes":[{"authorDate":"2016-10-06 18:39:02","commitOrder":3,"curCode":"  public static void createCluster() throws Exception {\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-managed\").resolve(\"conf\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLL_NAME, \"conf1\", 1, 2)\n        .process(cluster.getSolrClient());\n  }\n","date":"2016-10-18 19:34:13","endLine":63,"groupId":"51810","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d5/94e481ea5364597f9f530c41f0dd22bcafa725.src","preCode":"  public static void createCluster() throws Exception {\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-managed\").resolve(\"conf\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLL_NAME, \"conf1\", 1, 2)\n        .process(cluster.getSolrClient());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReqParamsAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"NB"},{"authorDate":"2017-01-31 13:57:33","commitOrder":3,"curCode":"  public static void createCluster() throws Exception {\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-managed\").resolve(\"conf\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLL_NAME, \"conf1\", 1, 2)\n        .process(cluster.getSolrClient());\n  }\n","date":"2017-01-31 13:57:33","endLine":71,"groupId":"51810","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1a/f5d93bf7052e26badb7a61b5b39399a4669bff.src","preCode":"  public static void createCluster() throws Exception {\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-managed\").resolve(\"conf\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLL_NAME, \"conf1\", 1, 2)\n        .process(cluster.getSolrClient());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/V2ApiIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"}],"commitId":"71abe130697b0f279d6e3613145f1f8f052c7848","commitMessage":"@@@SOLR-8029: Added new style APIs and a framework for creating new APIs and mapping old APIs to new\n","date":"2017-01-31 13:57:33","modifiedFileCount":"43","status":"M","submitter":"Noble Paul"},{"authorTime":"2018-11-30 01:58:18","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":4,"curCode":"  public static void createCluster() throws Exception {\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-managed\").resolve(\"conf\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLL_NAME, \"conf1\", 1, 2)\n        .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(COLL_NAME, 1, 2);\n  }\n","date":"2018-11-30 01:58:51","endLine":67,"groupId":"103450","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/70/65b0dcc270b2e7d271b83887293b1694e0e598.src","preCode":"  public static void createCluster() throws Exception {\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-managed\").resolve(\"conf\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLL_NAME, \"conf1\", 1, 2)\n        .process(cluster.getSolrClient());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReqParamsAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2018-11-30 01:58:18","commitOrder":4,"curCode":"  public static void createCluster() throws Exception {\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-managed\").resolve(\"conf\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLL_NAME, \"conf1\", 1, 2)\n        .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(COLL_NAME, 1, 2);\n  }\n","date":"2018-11-30 01:58:51","endLine":56,"groupId":"103450","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cc/d97bf21b802ede5ce8a9eee52c426c493d61b9.src","preCode":"  public static void createCluster() throws Exception {\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    configureCluster(2)\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-managed\").resolve(\"conf\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLL_NAME, \"conf1\", 1, 2)\n        .process(cluster.getSolrClient());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/V2ApiIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"}]
