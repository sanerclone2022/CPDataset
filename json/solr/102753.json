[{"authorTime":"2013-06-27 04:18:33","codes":[{"authorDate":"2013-06-27 04:18:33","commitOrder":1,"curCode":"  public void testEOF() throws IOException {\n    Directory fsDir = new RAMDirectory();\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name,fsDir,fsLength);\n    testEof(name,directory,hdfsLength);\n  }\n","date":"2013-06-27 04:18:33","endLine":137,"groupId":"39322","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEOF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/23/491121d547df544be288604169b891f945cc0d.src","preCode":"  public void testEOF() throws IOException {\n    Directory fsDir = new RAMDirectory();\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name,fsDir,fsLength);\n    testEof(name,directory,hdfsLength);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"B"},{"authorDate":"2013-06-27 04:18:33","commitOrder":1,"curCode":"  public void testEOF() throws IOException {\n    Directory fsDir = FSDirectory.open(new File(file, \"normal\"));\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name, fsDir, fsLength);\n    testEof(name, directory, hdfsLength);\n  }\n","date":"2013-06-27 04:18:33","endLine":131,"groupId":"39322","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEOF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b8/29dcf549f4ef81f823643118c167935f6138b3.src","preCode":"  public void testEOF() throws IOException {\n    Directory fsDir = FSDirectory.open(new File(file, \"normal\"));\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name, fsDir, fsLength);\n    testEof(name, directory, hdfsLength);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"}],"commitId":"b9e1537a7e12e6c15622452e48d8ca8c23aa98c4","commitMessage":"@@@SOLR-4916: Add support to write and read Solr index files and transaction log files to and from HDFS.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497072 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 04:18:33","modifiedFileCount":"42","status":"B","submitter":"Mark Robert Miller"},{"authorTime":"2013-06-28 01:26:33","codes":[{"authorDate":"2013-06-27 04:18:33","commitOrder":2,"curCode":"  public void testEOF() throws IOException {\n    Directory fsDir = new RAMDirectory();\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name,fsDir,fsLength);\n    testEof(name,directory,hdfsLength);\n  }\n","date":"2013-06-27 04:18:33","endLine":137,"groupId":"39322","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEOF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/23/491121d547df544be288604169b891f945cc0d.src","preCode":"  public void testEOF() throws IOException {\n    Directory fsDir = new RAMDirectory();\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name,fsDir,fsLength);\n    testEof(name,directory,hdfsLength);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"N"},{"authorDate":"2013-06-28 01:26:33","commitOrder":2,"curCode":"  public void testEOF() throws IOException {\n    Directory fsDir = FSDirectory.open(new File(file, \"normal\"));\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name, fsDir, fsLength);\n    testEof(name, directory, hdfsLength);\n    fsDir.close();\n  }\n","date":"2013-06-28 01:26:33","endLine":133,"groupId":"39322","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEOF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/0445c7d6be707c04c8b58b84c7346c6c7b3fbf.src","preCode":"  public void testEOF() throws IOException {\n    Directory fsDir = FSDirectory.open(new File(file, \"normal\"));\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name, fsDir, fsLength);\n    testEof(name, directory, hdfsLength);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"4567a2f6cc1bb98aa02a3d60140f915b01c6bc5b","commitMessage":"@@@SOLR-4916: Fix test to close properly\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497468 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-28 01:26:33","modifiedFileCount":"1","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2014-09-14 05:46:29","codes":[{"authorDate":"2013-06-27 04:18:33","commitOrder":3,"curCode":"  public void testEOF() throws IOException {\n    Directory fsDir = new RAMDirectory();\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name,fsDir,fsLength);\n    testEof(name,directory,hdfsLength);\n  }\n","date":"2013-06-27 04:18:33","endLine":137,"groupId":"39322","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEOF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/23/491121d547df544be288604169b891f945cc0d.src","preCode":"  public void testEOF() throws IOException {\n    Directory fsDir = new RAMDirectory();\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name,fsDir,fsLength);\n    testEof(name,directory,hdfsLength);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"N"},{"authorDate":"2014-09-14 05:46:29","commitOrder":3,"curCode":"  public void testEOF() throws IOException {\n    Directory fsDir = FSDirectory.open(new File(file, \"normal\").toPath());\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name, fsDir, fsLength);\n    testEof(name, directory, hdfsLength);\n    fsDir.close();\n  }\n","date":"2014-09-14 05:46:29","endLine":132,"groupId":"39322","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testEOF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4d/e0b42d825fa63f0d7c00b4e3baad0dc8d95d50.src","preCode":"  public void testEOF() throws IOException {\n    Directory fsDir = FSDirectory.open(new File(file, \"normal\"));\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name, fsDir, fsLength);\n    testEof(name, directory, hdfsLength);\n    fsDir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"3eb66fb19ca2aa3d9dce53661f3233b6c9d3f974","commitMessage":"@@@LUCENE-5945: Full cutover to Path api from java.io.File\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1624784 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-14 05:46:29","modifiedFileCount":"293","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-09-14 05:46:29","codes":[{"authorDate":"2018-09-08 01:19:01","commitOrder":4,"curCode":"  public void testEOF() throws IOException {\n    Directory fsDir = new ByteBuffersDirectory();\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name,fsDir,fsLength);\n    testEof(name,directory,hdfsLength);\n  }\n","date":"2018-09-08 01:19:01","endLine":152,"groupId":"102753","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testEOF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b9/bd0291b78fadb0c9977f790a3fa40751ba5452.src","preCode":"  public void testEOF() throws IOException {\n    Directory fsDir = new RAMDirectory();\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name,fsDir,fsLength);\n    testEof(name,directory,hdfsLength);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"},{"authorDate":"2014-09-14 05:46:29","commitOrder":4,"curCode":"  public void testEOF() throws IOException {\n    Directory fsDir = FSDirectory.open(new File(file, \"normal\").toPath());\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name, fsDir, fsLength);\n    testEof(name, directory, hdfsLength);\n    fsDir.close();\n  }\n","date":"2014-09-14 05:46:29","endLine":132,"groupId":"102753","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testEOF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4d/e0b42d825fa63f0d7c00b4e3baad0dc8d95d50.src","preCode":"  public void testEOF() throws IOException {\n    Directory fsDir = FSDirectory.open(new File(file, \"normal\").toPath());\n    String name = \"test.eof\";\n    createFile(name, fsDir, directory);\n    long fsLength = fsDir.fileLength(name);\n    long hdfsLength = directory.fileLength(name);\n    assertEquals(fsLength, hdfsLength);\n    testEof(name, fsDir, fsLength);\n    testEof(name, directory, hdfsLength);\n    fsDir.close();\n  }\n","realPath":"solr/core/src/test/org/apache/solr/store/blockcache/BlockDirectoryTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"N"}],"commitId":"2c88922998ab3bc2e97d9c640bc01fd39d95fb34","commitMessage":"@@@SOLR-8742: In HdfsDirectoryTest replace RAMDirectory usages with ByteBuffersDirectory.\n","date":"2018-09-08 01:19:01","modifiedFileCount":"1","status":"M","submitter":"Steve Rowe"}]
