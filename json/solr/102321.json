[{"authorTime":"2014-12-22 15:05:34","codes":[{"authorDate":"2014-08-14 02:23:53","commitOrder":3,"curCode":"  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doFacets) return;\n    \n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_FACETS) != 0) {\n      countFacets(rb, sreq);\n    } else {\n      \r\n      \r\n      \r\n      if ((sreq.purpose & ShardRequest.PURPOSE_REFINE_FACETS) != 0) {\n        refineFacets(rb, sreq);\n      }\n      if ((sreq.purpose & ShardRequest.PURPOSE_REFINE_PIVOT_FACETS) != 0) {\n        refinePivotFacets(rb, sreq);\n      }\n    }\n  }\n","date":"2014-08-14 02:23:53","endLine":468,"groupId":"61426","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handleResponses","params":"(ResponseBuilderrb@ShardRequestsreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f3/86bc0d8b6a513931224bcc7906895d52427ccc.src","preCode":"  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doFacets) return;\n    \n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_FACETS) != 0) {\n      countFacets(rb, sreq);\n    } else {\n      \r\n      \r\n      \r\n      if ((sreq.purpose & ShardRequest.PURPOSE_REFINE_FACETS) != 0) {\n        refineFacets(rb, sreq);\n      }\n      if ((sreq.purpose & ShardRequest.PURPOSE_REFINE_PIVOT_FACETS) != 0) {\n        refinePivotFacets(rb, sreq);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"NB"},{"authorDate":"2014-12-22 15:05:34","commitOrder":3,"curCode":"  private void handleRegularResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      mergeIds(rb, sreq);\n    }\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TERM_STATS) != 0) {\n      updateStats(rb, sreq);\n    }\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_FIELDS) != 0) {\n      returnFields(rb, sreq);\n    }\n  }\n","date":"2014-12-22 15:05:34","endLine":751,"groupId":"32584","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRegularResponses","params":"(ResponseBuilderrb@ShardRequestsreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3f/ef56cec282153ead0c34e574ec2f77d3750470.src","preCode":"  private void handleRegularResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      mergeIds(rb, sreq);\n    }\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TERM_STATS) != 0) {\n      updateStats(rb, sreq);\n    }\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_FIELDS) != 0) {\n      returnFields(rb, sreq);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":739,"status":"B"}],"commitId":"73a6fca89032399c5317ea9760cacf0d30914a47","commitMessage":"@@@SOLR-1632: Distributed IDF.  finally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1647253 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-22 15:05:34","modifiedFileCount":"8","status":"M","submitter":"Anshum Gupta"},{"authorTime":"2016-02-01 11:25:37","codes":[{"authorDate":"2014-08-14 02:23:53","commitOrder":4,"curCode":"  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doFacets) return;\n    \n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_FACETS) != 0) {\n      countFacets(rb, sreq);\n    } else {\n      \r\n      \r\n      \r\n      if ((sreq.purpose & ShardRequest.PURPOSE_REFINE_FACETS) != 0) {\n        refineFacets(rb, sreq);\n      }\n      if ((sreq.purpose & ShardRequest.PURPOSE_REFINE_PIVOT_FACETS) != 0) {\n        refinePivotFacets(rb, sreq);\n      }\n    }\n  }\n","date":"2014-08-14 02:23:53","endLine":468,"groupId":"102321","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handleResponses","params":"(ResponseBuilderrb@ShardRequestsreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f3/86bc0d8b6a513931224bcc7906895d52427ccc.src","preCode":"  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doFacets) return;\n    \n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_FACETS) != 0) {\n      countFacets(rb, sreq);\n    } else {\n      \r\n      \r\n      \r\n      if ((sreq.purpose & ShardRequest.PURPOSE_REFINE_FACETS) != 0) {\n        refineFacets(rb, sreq);\n      }\n      if ((sreq.purpose & ShardRequest.PURPOSE_REFINE_PIVOT_FACETS) != 0) {\n        refinePivotFacets(rb, sreq);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/FacetComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"N"},{"authorDate":"2016-02-01 11:25:37","commitOrder":4,"curCode":"  protected void handleRegularResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      mergeIds(rb, sreq);\n    }\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TERM_STATS) != 0) {\n      updateStats(rb, sreq);\n    }\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_FIELDS) != 0) {\n      returnFields(rb, sreq);\n    }\n  }\n","date":"2016-02-01 11:25:37","endLine":764,"groupId":"102321","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"handleRegularResponses","params":"(ResponseBuilderrb@ShardRequestsreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/fe28dfe0e869d859e1ac1b8ae041200d924748.src","preCode":"  private void handleRegularResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0) {\n      mergeIds(rb, sreq);\n    }\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TERM_STATS) != 0) {\n      updateStats(rb, sreq);\n    }\n\n    if ((sreq.purpose & ShardRequest.PURPOSE_GET_FIELDS) != 0) {\n      returnFields(rb, sreq);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":752,"status":"M"}],"commitId":"4cdce3db77cde2506ac77dc9ced8c1f91ed9800f","commitMessage":"@@@SOLR-7968: Make QueryComponent extensible\n","date":"2016-02-01 11:25:37","modifiedFileCount":"3","status":"M","submitter":"David Smiley"}]
