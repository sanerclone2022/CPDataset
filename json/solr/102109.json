[{"authorTime":"2015-01-12 21:40:34","codes":[{"authorDate":"2015-01-12 21:40:34","commitOrder":1,"curCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             SortedDocValues collapseValues,\n                             int nullPolicy,\n                             IntIntOpenHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValues = collapseValues;\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","date":"2015-01-12 21:40:34","endLine":451,"groupId":"503","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"OrdScoreCollector","params":"(intmaxDoc@intsegments@SortedDocValuescollapseValues@intnullPolicy@IntIntOpenHashMapboostDocsMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/83/4f577251520df656ee9678d729bd1b391a0559.src","preCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             SortedDocValues collapseValues,\n                             int nullPolicy,\n                             IntIntOpenHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValues = collapseValues;\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":413,"status":"B"},{"authorDate":"2015-01-12 21:40:34","commitOrder":1,"curCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntOpenHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongOpenHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","date":"2015-01-12 21:40:34","endLine":666,"groupId":"24615","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"IntScoreCollector","params":"(intmaxDoc@intsegments@intnullValue@intnullPolicy@intsize@Stringfield@IntIntOpenHashMapboostDocsMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/83/4f577251520df656ee9678d729bd1b391a0559.src","preCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntOpenHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongOpenHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":631,"status":"B"}],"commitId":"d385c653c286bb5b3656332026aaf379ef5b00ac","commitMessage":"@@@SOLR-6581: Efficient DocValues support and numeric collapse field implementations for Collapse and Expand\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1651087 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-12 21:40:34","modifiedFileCount":"4","status":"B","submitter":"Joel Bernstein"},{"authorTime":"2015-08-24 17:53:04","codes":[{"authorDate":"2015-08-24 17:53:04","commitOrder":2,"curCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             SortedDocValues collapseValues,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValues = collapseValues;\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","date":"2015-08-24 17:53:04","endLine":450,"groupId":"503","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"OrdScoreCollector","params":"(intmaxDoc@intsegments@SortedDocValuescollapseValues@intnullPolicy@IntIntHashMapboostDocsMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cb/1097ee243a286164be969a62e5166607cd4828.src","preCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             SortedDocValues collapseValues,\n                             int nullPolicy,\n                             IntIntOpenHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValues = collapseValues;\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":412,"status":"M"},{"authorDate":"2015-08-24 17:53:04","commitOrder":2,"curCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","date":"2015-08-24 17:53:04","endLine":659,"groupId":"24615","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"IntScoreCollector","params":"(intmaxDoc@intsegments@intnullValue@intnullPolicy@intsize@Stringfield@IntIntHashMapboostDocsMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cb/1097ee243a286164be969a62e5166607cd4828.src","preCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntOpenHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongOpenHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":624,"status":"M"}],"commitId":"c1dc2fb6a6969fc61460fa0bd7459fb45a3e173a","commitMessage":"@@@SOLR-7790.  SOLR-7792.  SOLR-7791: Update Carrot2 clustering component to version 3.10.3. Upgrade HPPC library to version 0.7.1.  morfologik-stemming to version 1.10.0. (Dawid Weiss)\n\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1697345 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-24 17:53:04","modifiedFileCount":"10","status":"M","submitter":"Dawid Weiss"},{"authorTime":"2015-08-24 17:53:04","codes":[{"authorDate":"2016-10-03 03:18:22","commitOrder":3,"curCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n      \n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","date":"2016-10-03 03:18:22","endLine":523,"groupId":"503","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"OrdScoreCollector","params":"(intmaxDoc@intsegments@DocValuesProducercollapseValuesProducer@intnullPolicy@IntIntHashMapboostDocsMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/48/58d1c44517ebc98feb4473e3e8d9ea734591b9.src","preCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             SortedDocValues collapseValues,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValues = collapseValues;\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":483,"status":"M"},{"authorDate":"2015-08-24 17:53:04","commitOrder":3,"curCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","date":"2015-08-24 17:53:04","endLine":659,"groupId":"24615","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"IntScoreCollector","params":"(intmaxDoc@intsegments@intnullValue@intnullPolicy@intsize@Stringfield@IntIntHashMapboostDocsMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cb/1097ee243a286164be969a62e5166607cd4828.src","preCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":624,"status":"N"}],"commitId":"3182cd9872af3cb73a1f73e36de68b8d76646e59","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-10-03 03:18:22","modifiedFileCount":"570","status":"M","submitter":"Karl Wright"},{"authorTime":"2020-03-07 04:03:25","codes":[{"authorDate":"2020-03-07 04:03:25","commitOrder":4,"curCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n      \n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","date":"2020-03-09 08:26:04","endLine":571,"groupId":"503","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"OrdScoreCollector","params":"(intmaxDoc@intsegments@DocValuesProducercollapseValuesProducer@intnullPolicy@IntIntHashMapboostDocsMap@IndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/69/0f806a9ead43b9372aac66403f93e30d0288e0.src","preCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n      \n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":525,"status":"M"},{"authorDate":"2020-03-07 04:03:25","commitOrder":4,"curCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","date":"2020-03-09 08:26:04","endLine":800,"groupId":"24615","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"IntScoreCollector","params":"(intmaxDoc@intsegments@intnullValue@intnullPolicy@intsize@Stringfield@IntIntHashMapboostDocsMap@IndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/69/0f806a9ead43b9372aac66403f93e30d0288e0.src","preCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":759,"status":"M"}],"commitId":"01688cd8f108609b2c250e67b380bce396818001","commitMessage":"@@@SOLR-14073: Fix segment look ahead NPE in CollapsingQParserPlugin\n","date":"2020-03-09 08:26:04","modifiedFileCount":"2","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2020-03-07 04:03:25","codes":[{"authorDate":"2020-04-10 16:24:10","commitOrder":5,"curCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new IntIntDynamicMap(valueCount, -1);\n      this.scores = new IntFloatDynamicMap(valueCount, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","date":"2020-04-10 16:24:10","endLine":572,"groupId":"24966","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"OrdScoreCollector","params":"(intmaxDoc@intsegments@DocValuesProducercollapseValuesProducer@intnullPolicy@IntIntHashMapboostDocsMap@IndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/61/e4bed5c1c6853f002e8ee7eef39a1eae46964e.src","preCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n      \n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":528,"status":"M"},{"authorDate":"2020-03-07 04:03:25","commitOrder":5,"curCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","date":"2020-03-09 08:26:04","endLine":800,"groupId":"24615","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"IntScoreCollector","params":"(intmaxDoc@intsegments@intnullValue@intnullPolicy@intsize@Stringfield@IntIntHashMapboostDocsMap@IndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/69/0f806a9ead43b9372aac66403f93e30d0288e0.src","preCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":759,"status":"N"}],"commitId":"adbd714b37d794e9aa7615e61c431e42162c1d3c","commitMessage":"@@@SOLR-14365: CollapsingQParser - Avoiding always allocate int[] and float[] with size equals to number of unique values (WIP) (#1395)\n\n","date":"2020-04-10 16:24:10","modifiedFileCount":"1","status":"M","submitter":"Cao Manh Dat"},{"authorTime":"2020-09-29 21:49:49","codes":[{"authorDate":"2020-09-29 21:49:49","commitOrder":6,"curCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new IntIntDynamicMap(valueCount, -1);\n      this.scores = new IntFloatDynamicMap(valueCount, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","date":"2020-09-29 21:49:49","endLine":617,"groupId":"24966","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"OrdScoreCollector","params":"(intmaxDoc@intsegments@DocValuesProducercollapseValuesProducer@intnullPolicy@IntIntHashMapboostDocsMap@IndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9a/1e740bd8fb3cd95358bd57ec7a4102fd9b392f.src","preCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new IntIntDynamicMap(valueCount, -1);\n      this.scores = new IntFloatDynamicMap(valueCount, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":573,"status":"M"},{"authorDate":"2020-09-29 21:49:49","commitOrder":6,"curCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","date":"2020-09-29 21:49:49","endLine":841,"groupId":"24615","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"IntScoreCollector","params":"(intmaxDoc@intsegments@intnullValue@intnullPolicy@intsize@Stringfield@IntIntHashMapboostDocsMap@IndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9a/1e740bd8fb3cd95358bd57ec7a4102fd9b392f.src","preCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":800,"status":"M"}],"commitId":"1dba76c0d31b6f0294c1f257e5a1fc51a722b82f","commitMessage":"@@@SOLR-14333: Implement toString in Collapse filter  (#1371)\n\n","date":"2020-09-29 21:49:49","modifiedFileCount":"2","status":"M","submitter":"Guna Sekhar Dora Kovvuru"},{"authorTime":"2021-01-06 01:00:56","codes":[{"authorDate":"2021-01-06 01:00:56","commitOrder":7,"curCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new IntIntDynamicMap(valueCount, -1);\n      this.scores = new IntFloatDynamicMap(valueCount, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.boostedDocsCollector = BoostedDocsCollector.build(boostDocsMap);\n    }\n","date":"2021-01-06 01:00:56","endLine":600,"groupId":"24966","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"OrdScoreCollector","params":"(intmaxDoc@intsegments@DocValuesProducercollapseValuesProducer@intnullPolicy@IntIntHashMapboostDocsMap@IndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/25/6ec45dfccf4b7d94c5215e8e7a648432ac563d.src","preCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new IntIntDynamicMap(valueCount, -1);\n      this.scores = new IntFloatDynamicMap(valueCount, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":571,"status":"M"},{"authorDate":"2021-01-06 01:00:56","commitOrder":7,"curCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n      \n      this.boostedDocsCollector = BoostedDocsCollector.build(boostDocsMap);\n    }\n","date":"2021-01-06 01:00:56","endLine":796,"groupId":"24615","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"IntScoreCollector","params":"(intmaxDoc@intsegments@intnullValue@intnullPolicy@intsize@Stringfield@IntIntHashMapboostDocsMap@IndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/25/6ec45dfccf4b7d94c5215e8e7a648432ac563d.src","preCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostDocs = new IntArrayList();\n        this.boostKeys = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosts = true;\n      }\n\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":771,"status":"M"}],"commitId":"a48e937f599bc1487df3321c490589b0d8820616","commitMessage":"@@@SOLR-15048: Fixed collapse parser behavior when dealing with docs boosted by QueryElevationComponent that are in the null group to treat them consistently regardless of collapse field type or group head selector\n","date":"2021-01-06 01:00:56","modifiedFileCount":"2","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2021-01-07 01:07:32","codes":[{"authorDate":"2021-01-06 01:00:56","commitOrder":8,"curCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new IntIntDynamicMap(valueCount, -1);\n      this.scores = new IntFloatDynamicMap(valueCount, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.boostedDocsCollector = BoostedDocsCollector.build(boostDocsMap);\n    }\n","date":"2021-01-06 01:00:56","endLine":600,"groupId":"24966","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"OrdScoreCollector","params":"(intmaxDoc@intsegments@DocValuesProducercollapseValuesProducer@intnullPolicy@IntIntHashMapboostDocsMap@IndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/25/6ec45dfccf4b7d94c5215e8e7a648432ac563d.src","preCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new IntIntDynamicMap(valueCount, -1);\n      this.scores = new IntFloatDynamicMap(valueCount, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.boostedDocsCollector = BoostedDocsCollector.build(boostDocsMap);\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":571,"status":"N"},{"authorDate":"2021-01-07 01:07:32","commitOrder":8,"curCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n      \n      this.boostedDocsCollector = BoostedDocsCollector.build(boostDocsMap);\n    }\n","date":"2021-01-07 01:07:32","endLine":793,"groupId":"24335","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"IntScoreCollector","params":"(intmaxDoc@intsegments@intnullPolicy@intsize@Stringfield@IntIntHashMapboostDocsMap@IndexSearchersearcher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/ccaed8782b67bd1d6857cfc7865fef39b5701e.src","preCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullValue,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullValue = nullValue;\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n      \n      this.boostedDocsCollector = BoostedDocsCollector.build(boostDocsMap);\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":770,"status":"M"}],"commitId":"07071ca8e107d184f9dfc2a2271b5dcaaceda650","commitMessage":"@@@SOLR-15047: Fix collapse parser behavior when collapsing on numeric fields to differentiate '0' group from null group\n","date":"2021-01-07 01:07:32","modifiedFileCount":"2","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2021-02-17 16:47:03","codes":[{"authorDate":"2021-02-17 16:47:03","commitOrder":9,"curCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher,\n                             boolean collectElevatedDocsWhenCollapsing) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collectElevatedDocsWhenCollapsing = collectElevatedDocsWhenCollapsing;\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new IntIntDynamicMap(valueCount, -1);\n      this.scores = new IntFloatDynamicMap(valueCount, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.boostedDocsCollector = BoostedDocsCollector.build(boostDocsMap);\n    }\n","date":"2021-02-17 17:54:17","endLine":630,"groupId":"102109","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"OrdScoreCollector","params":"(intmaxDoc@intsegments@DocValuesProducercollapseValuesProducer@intnullPolicy@IntIntHashMapboostDocsMap@IndexSearchersearcher@booleancollectElevatedDocsWhenCollapsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/5f5659b4a5c46cad36046fa0c824648fcd1dd9.src","preCode":"    public OrdScoreCollector(int maxDoc,\n                             int segments,\n                             DocValuesProducer collapseValuesProducer,\n                             int nullPolicy,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) throws IOException {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.collapseValuesProducer = collapseValuesProducer;\n      this.collapseValues = collapseValuesProducer.getSorted(null);\n\n      int valueCount = collapseValues.getValueCount();\n      if(collapseValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)collapseValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n      this.ords = new IntIntDynamicMap(valueCount, -1);\n      this.scores = new IntFloatDynamicMap(valueCount, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.boostedDocsCollector = BoostedDocsCollector.build(boostDocsMap);\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":599,"status":"M"},{"authorDate":"2021-02-17 16:47:03","commitOrder":9,"curCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher,\n                             boolean collectElevatedDocsWhenCollapsing) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      this.collectElevatedDocsWhenCollapsing = collectElevatedDocsWhenCollapsing;\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n      \n      this.boostedDocsCollector = BoostedDocsCollector.build(boostDocsMap);\n    }\n","date":"2021-02-17 17:54:17","endLine":828,"groupId":"102109","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"IntScoreCollector","params":"(intmaxDoc@intsegments@intnullPolicy@intsize@Stringfield@IntIntHashMapboostDocsMap@IndexSearchersearcher@booleancollectElevatedDocsWhenCollapsing)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/5f5659b4a5c46cad36046fa0c824648fcd1dd9.src","preCode":"    public IntScoreCollector(int maxDoc,\n                             int segments,\n                             int nullPolicy,\n                             int size,\n                             String field,\n                             IntIntHashMap boostDocsMap,\n                             IndexSearcher searcher) {\n      this.maxDoc = maxDoc;\n      this.contexts = new LeafReaderContext[segments];\n      List<LeafReaderContext> con = searcher.getTopReaderContext().leaves();\n      for(int i=0; i<con.size(); i++) {\n        contexts[i] = con.get(i);\n      }\n\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == NullPolicy.EXPAND.getCode()) {\n        nullScores = new FloatArrayList();\n      }\n      this.cmap = new IntLongHashMap(size);\n      this.field = field;\n      \n      this.boostedDocsCollector = BoostedDocsCollector.build(boostDocsMap);\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":803,"status":"M"}],"commitId":"f142bf9c5437bbc9612c1d077c26f27755df7277","commitMessage":"@@@SOLR-15038: Add elevateOnlyDocsMatchingQuery and collectElevatedDocsWhenCollapsing parameters to query elevation.\n\nCloses #2134\n","date":"2021-02-17 17:54:17","modifiedFileCount":"4","status":"M","submitter":"Tobias Kaessmann"}]
