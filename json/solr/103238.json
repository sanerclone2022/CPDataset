[{"authorTime":"2014-06-12 03:35:19","codes":[{"authorDate":"2015-12-17 03:44:43","commitOrder":3,"curCode":"  private void assertCountOnly(QueryResponse rsp, int count) throws Exception {\n    NamedList response = rsp.getResponse();\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n  }\n","date":"2015-12-17 03:44:43","endLine":98,"groupId":"41514","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertCountOnly","params":"(QueryResponsersp@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/14/abd7452293e5940894818042bfa79d8284905d.src","preCode":"  private void assertCountOnly(QueryResponse rsp, int count) throws Exception {\n    NamedList response = rsp.getResponse();\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2014-06-12 03:35:19","commitOrder":3,"curCode":"  private void assertCount(QueryResponse rsp, int count) throws Exception {\n    NamedList response = rsp.getResponse();\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n\n    long numFound = rsp.getResults().getNumFound();\n    if(c.intValue() != numFound) {\n      throw new Exception(\"Count does not equal numFound:\"+c.intValue()+\":\"+numFound);\n    }\n  }\n","date":"2014-06-12 03:35:19","endLine":91,"groupId":"41514","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertCount","params":"(QueryResponsersp@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0a/d6bb8cf5837d35cfe11b6734774a069ed1eefd.src","preCode":"  private void assertCount(QueryResponse rsp, int count) throws Exception {\n    NamedList response = rsp.getResponse();\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n\n    long numFound = rsp.getResults().getNumFound();\n    if(c.intValue() != numFound) {\n      throw new Exception(\"Count does not equal numFound:\"+c.intValue()+\":\"+numFound);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"NB"}],"commitId":"d200689b2b89803167596896aebf882f01c4a465","commitMessage":"@@@SOLR-6398: Add IterativeMergeStrategy to support running Parallel Iterative Algorithms inside of Solr\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1720422 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-12-17 03:44:43","modifiedFileCount":"2","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2020-06-18 05:51:41","commitOrder":4,"curCode":"  private void assertCountOnly(QueryResponse rsp, int count) throws Exception {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList response = rsp.getResponse();\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n  }\n","date":"2020-06-18 05:51:41","endLine":107,"groupId":"103238","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertCountOnly","params":"(QueryResponsersp@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/94/d90e0fc462028763bf0566cbc07d8855751959.src","preCode":"  private void assertCountOnly(QueryResponse rsp, int count) throws Exception {\n    NamedList response = rsp.getResponse();\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2020-06-18 05:51:41","commitOrder":4,"curCode":"  private void assertCount(QueryResponse rsp, int count) throws Exception {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList response = rsp.getResponse();\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n\n    long numFound = rsp.getResults().getNumFound();\n    if(c.intValue() != numFound) {\n      throw new Exception(\"Count does not equal numFound:\"+c.intValue()+\":\"+numFound);\n    }\n  }\n","date":"2020-06-18 05:51:41","endLine":123,"groupId":"103238","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assertCount","params":"(QueryResponsersp@intcount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/94/d90e0fc462028763bf0566cbc07d8855751959.src","preCode":"  private void assertCount(QueryResponse rsp, int count) throws Exception {\n    NamedList response = rsp.getResponse();\n    NamedList analytics = (NamedList)response.get(\"analytics\");\n    Integer c = (Integer)analytics.get(\"mycount\");\n    if(c.intValue() != count) {\n      throw new Exception(\"Count is not correct:\"+count+\":\"+c.intValue());\n    }\n\n    long numFound = rsp.getResults().getNumFound();\n    if(c.intValue() != numFound) {\n      throw new Exception(\"Count does not equal numFound:\"+c.intValue()+\":\"+numFound);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"}]
