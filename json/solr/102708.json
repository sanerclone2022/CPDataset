[{"authorTime":"2012-04-15 22:41:44","codes":[{"authorDate":"2014-06-05 10:05:27","commitOrder":4,"curCode":"  private String[] xpathMatches(int... docIds) {\n    String[] tests = new String[docIds != null ? docIds.length + 1 : 1];\n    tests[0] = \"*[count(//doc)=\" + (tests.length-1) + \"]\";\n    if (docIds != null && docIds.length > 0) {\n      int i = 1;\n      for (int docId : docIds) {\n        tests[i++] = \"//result/doc/int[@name='id'][.='\" + docId + \"']\";\n      }\n    }\n    return tests;\n  }\n","date":"2014-06-05 10:05:27","endLine":62,"groupId":"39002","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"xpathMatches","params":"(int...docIds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1e/47de5e235f8165be0670ed3c1b3779f830018a.src","preCode":"  private String[] xpathMatches(int... docIds) {\n    String[] tests = new String[docIds != null ? docIds.length + 1 : 1];\n    tests[0] = \"*[count(//doc)=\" + (tests.length-1) + \"]\";\n    if (docIds != null && docIds.length > 0) {\n      int i = 1;\n      for (int docId : docIds) {\n        tests[i++] = \"//result/doc/int[@name='id'][.='\" + docId + \"']\";\n      }\n    }\n    return tests;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/DateRangeFieldTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2012-04-15 22:41:44","commitOrder":4,"curCode":"  private void checkHits(String fieldName, boolean exact, String pt, double distance, int count, int ... docIds) {\n    String [] tests = new String[docIds != null && docIds.length > 0 ? docIds.length + 1 : 1];\n    tests[0] = \"*[count(//doc)=\" + count + \"]\";\n    if (docIds != null && docIds.length > 0) {\n      int i = 1;\n      for (int docId : docIds) {\n        tests[i++] = \"//result/doc/int[@name='id'][.='\" + docId + \"']\";\n      }\n    }\n\n    String method = exact ? \"geofilt\" : \"bbox\";\n    int postFilterCount = DelegatingCollector.setLastDelegateCount;\n\n    \r\n    assertQ(req(\"fl\", \"id\", \"q\",\"*:* OR foo_i:\" + random().nextInt(100), \"rows\", \"1000\", \"fq\", \"{!\"+method+\" sfield=\" +fieldName +\"}\",\n              \"pt\", pt, \"d\", String.valueOf(distance)),\n              tests);\n    assertEquals(postFilterCount, DelegatingCollector.setLastDelegateCount);    \r\n    \n    \r\n    assertQ(req(\"fl\", \"id\", \"q\",\"*:* OR foo_i:\" + random().nextInt(100), \"rows\", \"1000\", \"fq\", \"{!\"+method+\" sfield=\" +fieldName + \" cache=false\" + \"}\",\n        \"pt\", pt, \"d\", String.valueOf(distance)),\n        tests);\n    assertEquals(postFilterCount, DelegatingCollector.setLastDelegateCount);      \r\n\n    \r\n    if (fieldName.endsWith(\"ll\")) {\n\n    assertQ(req(\"fl\", \"id\", \"q\",\"*:* OR foo_i:\" + random().nextInt(100)+100, \"rows\", \"1000\", \"fq\", \"{!\"+method+\" sfield=\" +fieldName + \" cache=false cost=150\" + \"}\",\n        \"pt\", pt, \"d\", String.valueOf(distance)),\n        tests);\n    assertEquals(postFilterCount + 1, DelegatingCollector.setLastDelegateCount);      \r\n\n    }\n  }\n","date":"2012-04-15 22:41:44","endLine":175,"groupId":"22124","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkHits","params":"(StringfieldName@booleanexact@Stringpt@doubledistance@intcount@int...docIds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/60/128706e3a2d7e34e2dc13bc38f8d956fe5c565.src","preCode":"  private void checkHits(String fieldName, boolean exact, String pt, double distance, int count, int ... docIds) {\n    String [] tests = new String[docIds != null && docIds.length > 0 ? docIds.length + 1 : 1];\n    tests[0] = \"*[count(//doc)=\" + count + \"]\";\n    if (docIds != null && docIds.length > 0) {\n      int i = 1;\n      for (int docId : docIds) {\n        tests[i++] = \"//result/doc/int[@name='id'][.='\" + docId + \"']\";\n      }\n    }\n\n    String method = exact ? \"geofilt\" : \"bbox\";\n    int postFilterCount = DelegatingCollector.setLastDelegateCount;\n\n    \r\n    assertQ(req(\"fl\", \"id\", \"q\",\"*:* OR foo_i:\" + random().nextInt(100), \"rows\", \"1000\", \"fq\", \"{!\"+method+\" sfield=\" +fieldName +\"}\",\n              \"pt\", pt, \"d\", String.valueOf(distance)),\n              tests);\n    assertEquals(postFilterCount, DelegatingCollector.setLastDelegateCount);    \r\n    \n    \r\n    assertQ(req(\"fl\", \"id\", \"q\",\"*:* OR foo_i:\" + random().nextInt(100), \"rows\", \"1000\", \"fq\", \"{!\"+method+\" sfield=\" +fieldName + \" cache=false\" + \"}\",\n        \"pt\", pt, \"d\", String.valueOf(distance)),\n        tests);\n    assertEquals(postFilterCount, DelegatingCollector.setLastDelegateCount);      \r\n\n    \r\n    if (fieldName.endsWith(\"ll\")) {\n\n    assertQ(req(\"fl\", \"id\", \"q\",\"*:* OR foo_i:\" + random().nextInt(100)+100, \"rows\", \"1000\", \"fq\", \"{!\"+method+\" sfield=\" +fieldName + \" cache=false cost=150\" + \"}\",\n        \"pt\", pt, \"d\", String.valueOf(distance)),\n        tests);\n    assertEquals(postFilterCount + 1, DelegatingCollector.setLastDelegateCount);      \r\n\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/SpatialFilterTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"NB"}],"commitId":"eee1f147873c9a7509e9a18ed39a300580d11c69","commitMessage":"@@@SOLR-6103: DateRangeField\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1600557 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-06-05 10:05:27","modifiedFileCount":"0","status":"M","submitter":"David Wayne Smiley"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":5,"curCode":"  private String[] xpathMatches(int... docIds) {\n    String[] tests = new String[docIds != null ? docIds.length + 1 : 1];\n    tests[0] = \"*[count(//doc)=\" + (tests.length-1) + \"]\";\n    if (docIds != null && docIds.length > 0) {\n      int i = 1;\n      for (int docId : docIds) {\n        tests[i++] = \"//result/doc/str[@name='id'][.='\" + docId + \"']\";\n      }\n    }\n    return tests;\n  }\n","date":"2017-06-29 17:00:17","endLine":126,"groupId":"102708","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"xpathMatches","params":"(int...docIds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ed/d25b0352e37de3447340469f823ccfc0edab79.src","preCode":"  private String[] xpathMatches(int... docIds) {\n    String[] tests = new String[docIds != null ? docIds.length + 1 : 1];\n    tests[0] = \"*[count(//doc)=\" + (tests.length-1) + \"]\";\n    if (docIds != null && docIds.length > 0) {\n      int i = 1;\n      for (int docId : docIds) {\n        tests[i++] = \"//result/doc/int[@name='id'][.='\" + docId + \"']\";\n      }\n    }\n    return tests;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/DateRangeFieldTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":5,"curCode":"  private void checkHits(String fieldName, boolean exact, String pt, double distance, int count, int ... docIds) {\n    String [] tests = new String[docIds != null && docIds.length > 0 ? docIds.length + 1 : 1];\n    tests[0] = \"*[count(//doc)=\" + count + \"]\";\n    if (docIds != null && docIds.length > 0) {\n      int i = 1;\n      for (int docId : docIds) {\n        tests[i++] = \"//result/doc/str[@name='id'][.='\" + docId + \"']\";\n      }\n    }\n\n    String method = exact ? \"geofilt\" : \"bbox\";\n    int postFilterCount = DelegatingCollector.setLastDelegateCount;\n\n    \r\n    assertQ(req(\"fl\", \"id\", \"q\",\"*:* OR foo_i:\" + random().nextInt(100), \"rows\", \"1000\", \"fq\", \"{!\"+method+\" sfield=\" +fieldName +\"}\",\n              \"pt\", pt, \"d\", String.valueOf(distance)),\n              tests);\n    assertEquals(postFilterCount, DelegatingCollector.setLastDelegateCount);    \r\n    \n    \r\n    assertQ(req(\"fl\", \"id\", \"q\",\"*:* OR foo_i:\" + random().nextInt(100), \"rows\", \"1000\", \"fq\", \"{!\"+method+\" sfield=\" +fieldName + \" cache=false\" + \"}\",\n        \"pt\", pt, \"d\", String.valueOf(distance)),\n        tests);\n    assertEquals(postFilterCount, DelegatingCollector.setLastDelegateCount);      \r\n\n    \r\n    if (fieldName.endsWith(\"ll\")) {\n\n    assertQ(req(\"fl\", \"id\", \"q\",\"*:* OR foo_i:\" + random().nextInt(100)+100, \"rows\", \"1000\", \"fq\", \"{!\"+method+\" sfield=\" +fieldName + \" cache=false cost=150\" + \"}\",\n        \"pt\", pt, \"d\", String.valueOf(distance)),\n        tests);\n    assertEquals(postFilterCount + 1, DelegatingCollector.setLastDelegateCount);      \r\n\n    }\n  }\n","date":"2017-06-29 17:00:17","endLine":173,"groupId":"102708","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"checkHits","params":"(StringfieldName@booleanexact@Stringpt@doubledistance@intcount@int...docIds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/66/034c94854b78800da75fd30565beb848d24c8b.src","preCode":"  private void checkHits(String fieldName, boolean exact, String pt, double distance, int count, int ... docIds) {\n    String [] tests = new String[docIds != null && docIds.length > 0 ? docIds.length + 1 : 1];\n    tests[0] = \"*[count(//doc)=\" + count + \"]\";\n    if (docIds != null && docIds.length > 0) {\n      int i = 1;\n      for (int docId : docIds) {\n        tests[i++] = \"//result/doc/int[@name='id'][.='\" + docId + \"']\";\n      }\n    }\n\n    String method = exact ? \"geofilt\" : \"bbox\";\n    int postFilterCount = DelegatingCollector.setLastDelegateCount;\n\n    \r\n    assertQ(req(\"fl\", \"id\", \"q\",\"*:* OR foo_i:\" + random().nextInt(100), \"rows\", \"1000\", \"fq\", \"{!\"+method+\" sfield=\" +fieldName +\"}\",\n              \"pt\", pt, \"d\", String.valueOf(distance)),\n              tests);\n    assertEquals(postFilterCount, DelegatingCollector.setLastDelegateCount);    \r\n    \n    \r\n    assertQ(req(\"fl\", \"id\", \"q\",\"*:* OR foo_i:\" + random().nextInt(100), \"rows\", \"1000\", \"fq\", \"{!\"+method+\" sfield=\" +fieldName + \" cache=false\" + \"}\",\n        \"pt\", pt, \"d\", String.valueOf(distance)),\n        tests);\n    assertEquals(postFilterCount, DelegatingCollector.setLastDelegateCount);      \r\n\n    \r\n    if (fieldName.endsWith(\"ll\")) {\n\n    assertQ(req(\"fl\", \"id\", \"q\",\"*:* OR foo_i:\" + random().nextInt(100)+100, \"rows\", \"1000\", \"fq\", \"{!\"+method+\" sfield=\" +fieldName + \" cache=false cost=150\" + \"}\",\n        \"pt\", pt, \"d\", String.valueOf(distance)),\n        tests);\n    assertEquals(postFilterCount + 1, DelegatingCollector.setLastDelegateCount);      \r\n\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/SpatialFilterTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"M","submitter":"Karl Wright"}]
