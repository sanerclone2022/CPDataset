[{"authorTime":"2018-11-30 01:58:18","codes":[{"authorDate":"2016-12-20 08:54:13","commitOrder":4,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    boolean useAlias = random().nextBoolean();\n    String collection;\n    if (useAlias) {\n      collection = COLLECTIONORALIAS + \"_collection\";\n    } else {\n      collection = COLLECTIONORALIAS;\n    }\n    CollectionAdminRequest.createCollection(collection, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n    if (useAlias) {\n      CollectionAdminRequest.createAlias(COLLECTIONORALIAS, collection).process(cluster.getSolrClient());\n    }\n  }\n","date":"2016-12-20 08:54:13","endLine":78,"groupId":"15566","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e5/5c83747d984bcd2af0c77c34757ebcf0ad716c.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    boolean useAlias = random().nextBoolean();\n    String collection;\n    if (useAlias) {\n      collection = COLLECTIONORALIAS + \"_collection\";\n    } else {\n      collection = COLLECTIONORALIAS;\n    }\n    CollectionAdminRequest.createCollection(collection, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n    if (useAlias) {\n      CollectionAdminRequest.createAlias(COLLECTIONORALIAS, collection).process(cluster.getSolrClient());\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/JDBCStreamTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"NB"},{"authorDate":"2018-11-30 01:58:18","commitOrder":4,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","date":"2018-11-30 01:58:51","endLine":85,"groupId":"21218","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6b/6b4afedf88f243718276b948d08f75daade293.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/BasicAuthIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"},{"authorTime":"2018-12-13 06:00:08","codes":[{"authorDate":"2016-12-20 08:54:13","commitOrder":5,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    boolean useAlias = random().nextBoolean();\n    String collection;\n    if (useAlias) {\n      collection = COLLECTIONORALIAS + \"_collection\";\n    } else {\n      collection = COLLECTIONORALIAS;\n    }\n    CollectionAdminRequest.createCollection(collection, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n    if (useAlias) {\n      CollectionAdminRequest.createAlias(COLLECTIONORALIAS, collection).process(cluster.getSolrClient());\n    }\n  }\n","date":"2016-12-20 08:54:13","endLine":78,"groupId":"15566","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e5/5c83747d984bcd2af0c77c34757ebcf0ad716c.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    boolean useAlias = random().nextBoolean();\n    String collection;\n    if (useAlias) {\n      collection = COLLECTIONORALIAS + \"_collection\";\n    } else {\n      collection = COLLECTIONORALIAS;\n    }\n    CollectionAdminRequest.createCollection(collection, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n    if (useAlias) {\n      CollectionAdminRequest.createAlias(COLLECTIONORALIAS, collection).process(cluster.getSolrClient());\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/JDBCStreamTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"},{"authorDate":"2018-12-13 06:00:08","commitOrder":5,"curCode":"  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","date":"2018-12-13 08:50:23","endLine":90,"groupId":"21218","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/04933ad6da6297c69daa315fa4ebe433bab6e1.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/BasicAuthIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"44b51cd041371051d0b73b54afebc99fc0fa4862","commitMessage":"@@@SOLR-13067: Harden BasicAuthIntegrationTest.\n","date":"2018-12-13 08:50:23","modifiedFileCount":"2","status":"M","submitter":"markrmiller"},{"authorTime":"2018-12-13 06:00:08","codes":[{"authorDate":"2021-01-18 23:59:41","commitOrder":6,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    boolean useAlias = random().nextBoolean();\n    String collection;\n    if (useAlias) {\n      collection = COLLECTIONORALIAS + \"_collection\";\n    } else {\n      collection = COLLECTIONORALIAS;\n    }\n    CollectionAdminRequest.createCollection(collection, \"conf\", 2, 1)\n        .setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE)\n        .process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n    if (useAlias) {\n      CollectionAdminRequest.createAlias(COLLECTIONORALIAS, collection).process(cluster.getSolrClient());\n    }\n  }\n","date":"2021-01-18 23:59:41","endLine":85,"groupId":"102800","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a7/abfadfa657c984668f8529ec1c6b591de0b9d9.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(4)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    boolean useAlias = random().nextBoolean();\n    String collection;\n    if (useAlias) {\n      collection = COLLECTIONORALIAS + \"_collection\";\n    } else {\n      collection = COLLECTIONORALIAS;\n    }\n    CollectionAdminRequest.createCollection(collection, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n    if (useAlias) {\n      CollectionAdminRequest.createAlias(COLLECTIONORALIAS, collection).process(cluster.getSolrClient());\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/JDBCStreamTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2018-12-13 06:00:08","commitOrder":6,"curCode":"  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","date":"2018-12-13 08:50:23","endLine":90,"groupId":"102800","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/04933ad6da6297c69daa315fa4ebe433bab6e1.src","preCode":"  public void setupCluster() throws Exception {\n    configureCluster(3)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 3, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(COLLECTION, 3, 3);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/BasicAuthIntegrationTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"}],"commitId":"8505d4d416fdf707bab55bc4da9a71ddb3374274","commitMessage":"@@@SOLR-15052: Per-replica states for reducing overseer bottlenecks (trunk) (#2177)\n\n","date":"2021-01-18 23:59:41","modifiedFileCount":"53","status":"M","submitter":"Noble Paul"}]
