[{"authorTime":"2019-03-13 12:54:32","codes":[{"authorDate":"2019-03-13 12:54:32","commitOrder":1,"curCode":"  public boolean updateParsedCollectionAliases(ZkController zkController) {\n    final Aliases aliases = zkController.getZkStateReader().getAliases(); \r\n    if (this.parsedAliases != aliases) {\n      if (this.parsedAliases != null) {\n        log.debug(\"Observing possibly updated alias: {}\", getAliasName());\n      }\n      \r\n      this.parsedAliases = aliases;\n      return true;\n    }\n    return false;\n  }\n","date":"2019-03-13 13:32:23","endLine":107,"groupId":"19388","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"updateParsedCollectionAliases","params":"(ZkControllerzkController)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7d/731494a6f7716b9d2ac053885f70f55539600c.src","preCode":"  public boolean updateParsedCollectionAliases(ZkController zkController) {\n    final Aliases aliases = zkController.getZkStateReader().getAliases(); \r\n    if (this.parsedAliases != aliases) {\n      if (this.parsedAliases != null) {\n        log.debug(\"Observing possibly updated alias: {}\", getAliasName());\n      }\n      \r\n      this.parsedAliases = aliases;\n      return true;\n    }\n    return false;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/api/collections/CategoryRoutedAlias.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2019-03-13 12:54:32","commitOrder":1,"curCode":"  public boolean updateParsedCollectionAliases(ZkController zkController) {\n    final Aliases aliases = zkController.getZkStateReader().getAliases(); \r\n    if (this.parsedCollectionsAliases != aliases) {\n      if (this.parsedCollectionsAliases != null) {\n        log.debug(\"Observing possibly updated alias: {}\", getAliasName());\n      }\n      this.parsedCollectionsDesc = parseCollections(aliases );\n      this.parsedCollectionsAliases = aliases;\n      return true;\n    }\n    return false;\n  }\n","date":"2019-03-13 13:32:23","endLine":247,"groupId":"19388","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"updateParsedCollectionAliases","params":"(ZkControllerzkController)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/94/a4a84e586eafb26423a661b8dce17044b16f59.src","preCode":"  public boolean updateParsedCollectionAliases(ZkController zkController) {\n    final Aliases aliases = zkController.getZkStateReader().getAliases(); \r\n    if (this.parsedCollectionsAliases != aliases) {\n      if (this.parsedCollectionsAliases != null) {\n        log.debug(\"Observing possibly updated alias: {}\", getAliasName());\n      }\n      this.parsedCollectionsDesc = parseCollections(aliases );\n      this.parsedCollectionsAliases = aliases;\n      return true;\n    }\n    return false;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"B"}],"commitId":"d8f2a02fdb11a484425f9fddfa7061711d2f0034","commitMessage":"@@@SOLR-13131 Category Routed Aliases\n","date":"2019-03-13 13:32:23","modifiedFileCount":"10","status":"B","submitter":"Gus Heck"},{"authorTime":"2019-07-15 21:57:13","codes":[{"authorDate":"2019-07-15 21:57:13","commitOrder":2,"curCode":"  public boolean updateParsedCollectionAliases(ZkStateReader zkStateReader, boolean contextualize) {\n    final Aliases aliases = zkStateReader.getAliases(); \r\n    if (this.aliases != aliases) {\n      if (this.aliases != null) {\n        log.debug(\"Observing possibly updated alias: {}\", getAliasName());\n      }\n      \r\n      this.aliases = aliases;\n      return true;\n    }\n    return false;\n  }\n","date":"2019-07-15 21:57:13","endLine":104,"groupId":"19388","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"updateParsedCollectionAliases","params":"(ZkStateReaderzkStateReader@booleancontextualize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c2/f4ec8baf2a8a0d01d0f553adb09ab7a914d975.src","preCode":"  public boolean updateParsedCollectionAliases(ZkController zkController) {\n    final Aliases aliases = zkController.getZkStateReader().getAliases(); \r\n    if (this.parsedAliases != aliases) {\n      if (this.parsedAliases != null) {\n        log.debug(\"Observing possibly updated alias: {}\", getAliasName());\n      }\n      \r\n      this.parsedAliases = aliases;\n      return true;\n    }\n    return false;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/api/collections/CategoryRoutedAlias.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2019-07-15 21:57:13","commitOrder":2,"curCode":"  public boolean updateParsedCollectionAliases(ZkStateReader zkStateReader, boolean contextualize) {\n    final Aliases aliases = zkStateReader.getAliases();\n    if (this.parsedCollectionsAliases != aliases) {\n      if (this.parsedCollectionsAliases != null) {\n        log.debug(\"Observing possibly updated alias: {}\", getAliasName());\n      }\n      this.parsedCollectionsDesc = parseCollections(aliases);\n      this.parsedCollectionsAliases = aliases;\n      return true;\n    }\n    if (contextualize) {\n      this.parsedCollectionsDesc = parseCollections(aliases);\n    }\n    return false;\n  }\n","date":"2019-07-15 21:57:13","endLine":259,"groupId":"19388","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"updateParsedCollectionAliases","params":"(ZkStateReaderzkStateReader@booleancontextualize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/96/fb0ef2520711f77cc1f3c3370457bdd4edd0bc.src","preCode":"  public boolean updateParsedCollectionAliases(ZkController zkController) {\n    final Aliases aliases = zkController.getZkStateReader().getAliases(); \r\n    if (this.parsedCollectionsAliases != aliases) {\n      if (this.parsedCollectionsAliases != null) {\n        log.debug(\"Observing possibly updated alias: {}\", getAliasName());\n      }\n      this.parsedCollectionsDesc = parseCollections(aliases );\n      this.parsedCollectionsAliases = aliases;\n      return true;\n    }\n    return false;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"}],"commitId":"c97551cc36c2b89320428a821e45c79951260673","commitMessage":"@@@SOLR-13375 - 2 dimensional routed aliases\n","date":"2019-07-15 21:57:13","modifiedFileCount":"21","status":"M","submitter":"Gus Heck"},{"authorTime":"2020-04-25 01:34:03","codes":[{"authorDate":"2020-04-25 01:34:03","commitOrder":3,"curCode":"  public boolean updateParsedCollectionAliases(ZkStateReader zkStateReader, boolean contextualize) {\n    final Aliases aliases = zkStateReader.getAliases(); \r\n    if (this.aliases != aliases) {\n      if (this.aliases != null) {\n        if (log.isDebugEnabled()) {\n          log.debug(\"Observing possibly updated alias: {}\", getAliasName());\n        }\n      }\n      \r\n      this.aliases = aliases;\n      return true;\n    }\n    return false;\n  }\n","date":"2020-04-25 01:34:03","endLine":104,"groupId":"102436","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"updateParsedCollectionAliases","params":"(ZkStateReaderzkStateReader@booleancontextualize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3e/55863fa3e3d1f64da9e796e97c62dd7e90c3dc.src","preCode":"  public boolean updateParsedCollectionAliases(ZkStateReader zkStateReader, boolean contextualize) {\n    final Aliases aliases = zkStateReader.getAliases(); \r\n    if (this.aliases != aliases) {\n      if (this.aliases != null) {\n        log.debug(\"Observing possibly updated alias: {}\", getAliasName());\n      }\n      \r\n      this.aliases = aliases;\n      return true;\n    }\n    return false;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/api/collections/CategoryRoutedAlias.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2020-04-25 01:34:03","commitOrder":3,"curCode":"  public boolean updateParsedCollectionAliases(ZkStateReader zkStateReader, boolean contextualize) {\n    final Aliases aliases = zkStateReader.getAliases();\n    if (this.parsedCollectionsAliases != aliases) {\n      if (this.parsedCollectionsAliases != null) {\n        if (log.isDebugEnabled()) {\n          log.debug(\"Observing possibly updated alias: {}\", getAliasName());\n        }\n      }\n      this.parsedCollectionsDesc = parseCollections(aliases);\n      this.parsedCollectionsAliases = aliases;\n      return true;\n    }\n    if (contextualize) {\n      this.parsedCollectionsDesc = parseCollections(aliases);\n    }\n    return false;\n  }\n","date":"2020-04-25 01:34:03","endLine":264,"groupId":"102436","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"updateParsedCollectionAliases","params":"(ZkStateReaderzkStateReader@booleancontextualize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3e/6b31e473f18e6fc75ef6de89b9d56aa501a015.src","preCode":"  public boolean updateParsedCollectionAliases(ZkStateReader zkStateReader, boolean contextualize) {\n    final Aliases aliases = zkStateReader.getAliases();\n    if (this.parsedCollectionsAliases != aliases) {\n      if (this.parsedCollectionsAliases != null) {\n        log.debug(\"Observing possibly updated alias: {}\", getAliasName());\n      }\n      this.parsedCollectionsDesc = parseCollections(aliases);\n      this.parsedCollectionsAliases = aliases;\n      return true;\n    }\n    if (contextualize) {\n      this.parsedCollectionsDesc = parseCollections(aliases);\n    }\n    return false;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"M"}],"commitId":"ecc98e8698a3ce8efa51712686697c0f33afab4d","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-04-25 01:34:03","modifiedFileCount":"31","status":"M","submitter":"Erick Erickson"}]
