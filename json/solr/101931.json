[{"authorTime":"2021-08-10 09:28:22","codes":[{"authorDate":"2021-08-10 09:28:22","commitOrder":1,"curCode":"  public Object indexLargeDoc(\n      MiniClusterState.MiniClusterBenchState miniClusterState,\n      BenchState state,\n      BenchState.Docs docState)\n      throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.setBasePath(miniClusterState.nodes.get(docState.random.nextInt(state.nodeCount)));\n    SolrInputDocument doc = docState.getLargeDoc();\n\n    updateRequest.add(doc);\n\n    return miniClusterState.client.request(updateRequest, state.collection);\n  }\n","date":"2021-08-10 09:28:22","endLine":160,"groupId":"46174","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"indexLargeDoc","params":"(MiniClusterState.MiniClusterBenchStateminiClusterState@BenchStatestate@BenchState.DocsdocState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ba/c84064c9e38c69cf0c23b85a5ca39e26eb2554.src","preCode":"  public Object indexLargeDoc(\n      MiniClusterState.MiniClusterBenchState miniClusterState,\n      BenchState state,\n      BenchState.Docs docState)\n      throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.setBasePath(miniClusterState.nodes.get(docState.random.nextInt(state.nodeCount)));\n    SolrInputDocument doc = docState.getLargeDoc();\n\n    updateRequest.add(doc);\n\n    return miniClusterState.client.request(updateRequest, state.collection);\n  }\n","realPath":"solr/benchmark/src/java/org/apache/solr/bench/index/CloudIndexing.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"B"},{"authorDate":"2021-08-10 09:28:22","commitOrder":1,"curCode":"  public Object indexSmallDoc(\n      MiniClusterState.MiniClusterBenchState miniClusterState,\n      BenchState state,\n      BenchState.Docs docState)\n      throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.setBasePath(miniClusterState.nodes.get(docState.random.nextInt(state.nodeCount)));\n    SolrInputDocument doc = docState.getSmallDoc();\n\n    updateRequest.add(doc);\n\n    return miniClusterState.client.request(updateRequest, state.collection);\n  }\n","date":"2021-08-10 09:28:22","endLine":176,"groupId":"46174","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"indexSmallDoc","params":"(MiniClusterState.MiniClusterBenchStateminiClusterState@BenchStatestate@BenchState.DocsdocState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ba/c84064c9e38c69cf0c23b85a5ca39e26eb2554.src","preCode":"  public Object indexSmallDoc(\n      MiniClusterState.MiniClusterBenchState miniClusterState,\n      BenchState state,\n      BenchState.Docs docState)\n      throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.setBasePath(miniClusterState.nodes.get(docState.random.nextInt(state.nodeCount)));\n    SolrInputDocument doc = docState.getSmallDoc();\n\n    updateRequest.add(doc);\n\n    return miniClusterState.client.request(updateRequest, state.collection);\n  }\n","realPath":"solr/benchmark/src/java/org/apache/solr/bench/index/CloudIndexing.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"B"}],"commitId":"890ef78421f8c0645ae9f4f53ebca1177e8141d9","commitMessage":"@@@SOLR-15428: Integrate the OpenJDK JMH micro benchmark framework for micro benchmarks and performance comparisons & investigation. (#214)\n\n","date":"2021-08-10 09:28:22","modifiedFileCount":"13","status":"B","submitter":"Mark Robert Miller"},{"authorTime":"2021-09-10 00:29:14","codes":[{"authorDate":"2021-09-10 00:29:14","commitOrder":2,"curCode":"  public Object indexLargeDoc(\n      MiniClusterState.MiniClusterBenchState miniClusterState, BenchState state) throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.setBasePath(\n        miniClusterState.nodes.get(miniClusterState.getRandom().nextInt(state.nodeCount)));\n    SolrInputDocument doc = state.getLargeDoc();\n    updateRequest.add(doc);\n\n    return miniClusterState.client.request(updateRequest, BenchState.COLLECTION);\n  }\n","date":"2021-09-10 00:29:14","endLine":160,"groupId":"101931","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"indexLargeDoc","params":"(MiniClusterState.MiniClusterBenchStateminiClusterState@BenchStatestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/98/1ce0dc455a297afb4af1d36606458684c884e4.src","preCode":"  public Object indexLargeDoc(\n      MiniClusterState.MiniClusterBenchState miniClusterState,\n      BenchState state,\n      BenchState.Docs docState)\n      throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.setBasePath(miniClusterState.nodes.get(docState.random.nextInt(state.nodeCount)));\n    SolrInputDocument doc = docState.getLargeDoc();\n\n    updateRequest.add(doc);\n\n    return miniClusterState.client.request(updateRequest, state.collection);\n  }\n","realPath":"solr/benchmark/src/java/org/apache/solr/bench/index/CloudIndexing.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"},{"authorDate":"2021-09-10 00:29:14","commitOrder":2,"curCode":"  public Object indexSmallDoc(\n      MiniClusterState.MiniClusterBenchState miniClusterState, BenchState state) throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.setBasePath(\n        miniClusterState.nodes.get(miniClusterState.getRandom().nextInt(state.nodeCount)));\n    SolrInputDocument doc = state.getSmallDoc();\n    updateRequest.add(doc);\n\n    return miniClusterState.client.request(updateRequest, BenchState.COLLECTION);\n  }\n","date":"2021-09-10 00:29:14","endLine":173,"groupId":"101931","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"indexSmallDoc","params":"(MiniClusterState.MiniClusterBenchStateminiClusterState@BenchStatestate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/98/1ce0dc455a297afb4af1d36606458684c884e4.src","preCode":"  public Object indexSmallDoc(\n      MiniClusterState.MiniClusterBenchState miniClusterState,\n      BenchState state,\n      BenchState.Docs docState)\n      throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.setBasePath(miniClusterState.nodes.get(docState.random.nextInt(state.nodeCount)));\n    SolrInputDocument doc = docState.getSmallDoc();\n\n    updateRequest.add(doc);\n\n    return miniClusterState.client.request(updateRequest, state.collection);\n  }\n","realPath":"solr/benchmark/src/java/org/apache/solr/bench/index/CloudIndexing.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"}],"commitId":"88801396adf702ad394f557cdd610c4928a2e372","commitMessage":"@@@SOLR-15581: New DSL/impl for benchmark random data generation. (#254)\n\n","date":"2021-09-10 00:29:14","modifiedFileCount":"6","status":"M","submitter":"Mark Robert Miller"}]
