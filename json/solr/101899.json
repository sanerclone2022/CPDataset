[{"authorTime":"2012-01-26 03:49:26","codes":[{"authorDate":"2012-08-09 02:01:11","commitOrder":3,"curCode":"  protected void setDistributedParams(ModifiableSolrParams params) {\n    \n    if (r.nextBoolean()) {\n      \r\n    } else {\n      \r\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < sliceCount; i++) {\n        if (i > 0) sb.append(',');\n        sb.append(\"shard\" + (i + 1));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n","date":"2012-08-09 02:01:11","endLine":476,"groupId":"57764","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setDistributedParams","params":"(ModifiableSolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/04/083a94e9ef6e288cf7638ec4b6e66db4f21ed2.src","preCode":"  protected void setDistributedParams(ModifiableSolrParams params) {\n    \n    if (r.nextBoolean()) {\n      \r\n    } else {\n      \r\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < sliceCount; i++) {\n        if (i > 0) sb.append(',');\n        sb.append(\"shard\" + (i + 1));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":463,"status":"B"},{"authorDate":"2012-01-26 03:49:26","commitOrder":3,"curCode":"  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      \r\n    } else {\n      \r\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < shardCount; i++) {\n        if (i > 0)\n          sb.append(',');\n        sb.append(\"shard\" + (i + 3));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n","date":"2012-01-26 03:49:26","endLine":84,"groupId":"57764","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setDistributedParams","params":"(ModifiableSolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7c/4ecebb7c0ddc1380db0471a2ba7766e68b3070.src","preCode":"  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      \r\n    } else {\n      \r\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < shardCount; i++) {\n        if (i > 0)\n          sb.append(',');\n        sb.append(\"shard\" + (i + 3));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"NB"}],"commitId":"e528549a3be113053ee976dbfeeb422f727dc515","commitMessage":"@@@still favor leaders with CloudSolrServer.  but also fall back to replicas after leaders\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1370864 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-09 02:01:11","modifiedFileCount":"10","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2015-01-24 00:13:32","codes":[{"authorDate":"2012-08-09 02:01:11","commitOrder":4,"curCode":"  protected void setDistributedParams(ModifiableSolrParams params) {\n    \n    if (r.nextBoolean()) {\n      \r\n    } else {\n      \r\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < sliceCount; i++) {\n        if (i > 0) sb.append(',');\n        sb.append(\"shard\" + (i + 1));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n","date":"2012-08-09 02:01:11","endLine":476,"groupId":"57764","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setDistributedParams","params":"(ModifiableSolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/04/083a94e9ef6e288cf7638ec4b6e66db4f21ed2.src","preCode":"  protected void setDistributedParams(ModifiableSolrParams params) {\n    \n    if (r.nextBoolean()) {\n      \r\n    } else {\n      \r\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < sliceCount; i++) {\n        if (i > 0) sb.append(',');\n        sb.append(\"shard\" + (i + 1));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":463,"status":"N"},{"authorDate":"2015-01-24 00:13:32","commitOrder":4,"curCode":"  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      \r\n    } else {\n      \r\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < getShardCount(); i++) {\n        if (i > 0)\n          sb.append(',');\n        sb.append(\"shard\" + (i + 3));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n","date":"2015-01-24 00:13:32","endLine":139,"groupId":"12527","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setDistributedParams","params":"(ModifiableSolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/97/ecca8e223ccf18eca36e60f2e5d65f3c9a6d7f.src","preCode":"  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      \r\n    } else {\n      \r\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < shardCount; i++) {\n        if (i > 0)\n          sb.append(',');\n        sb.append(\"shard\" + (i + 3));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"7fda449473be9bf78ef320474763607e9ef5ef93","commitMessage":"@@@SOLR-6902: Use JUnit rules instead of inheritance with distributed Solr tests to allow for multiple tests without the same class\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1654256 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-24 00:13:32","modifiedFileCount":"98","status":"M","submitter":"Erick Erickson"},{"authorTime":"2015-01-24 00:13:32","codes":[{"authorDate":"2019-06-11 00:07:43","commitOrder":5,"curCode":"  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      \r\n    } else {\n      \r\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < sliceCount; i++) {\n        if (i > 0) sb.append(',');\n        sb.append(\"shard\").append(i + 1);\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n","date":"2019-06-11 00:07:43","endLine":906,"groupId":"101899","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setDistributedParams","params":"(ModifiableSolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/b6f68a1b43099da41bc72ec8f072049f892820.src","preCode":"  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      \r\n    } else {\n      \r\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < sliceCount; i++) {\n        if (i > 0) sb.append(',');\n        sb.append(\"shard\" + (i + 1));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":893,"status":"M"},{"authorDate":"2015-01-24 00:13:32","commitOrder":5,"curCode":"  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      \r\n    } else {\n      \r\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < getShardCount(); i++) {\n        if (i > 0)\n          sb.append(',');\n        sb.append(\"shard\" + (i + 3));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n","date":"2015-01-24 00:13:32","endLine":139,"groupId":"101899","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setDistributedParams","params":"(ModifiableSolrParamsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/97/ecca8e223ccf18eca36e60f2e5d65f3c9a6d7f.src","preCode":"  protected void setDistributedParams(ModifiableSolrParams params) {\n\n    if (r.nextBoolean()) {\n      \r\n    } else {\n      \r\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < getShardCount(); i++) {\n        if (i > 0)\n          sb.append(',');\n        sb.append(\"shard\" + (i + 3));\n      }\n      params.set(\"shards\", sb.toString());\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"}],"commitId":"67104dd615c82de64839de60418110211438f574","commitMessage":"@@@LUCENE-8847: Code Cleanup: Rewrite StringBuilder.append with concatted strings (#707)\n\nThis specific commit affects all points in the casebase where the argument of a StringBuilder.append() call is itself a regular String concatenation.\nThis defeats the purpose of using StringBuilder and also introduces an extra alloction.\nThese changes should avoid that.\n\nant tests have run.  succeeded on local machine.\n\nRemoving test files from the changes.\n\nAnother suggested rework.","date":"2019-06-11 00:07:43","modifiedFileCount":"70","status":"M","submitter":"Koen De Groote"}]
