[{"authorTime":"2017-08-01 23:01:17","codes":[{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public void singleValueObjectTest() {\n    TestAnalyticsValue val = new TestAnalyticsValue();\n    TestBooleanValue filter = new TestBooleanValue();\n\n    AnalyticsValueStream uncasted = FilterFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, filter});\n    assertTrue(uncasted instanceof AnalyticsValue);\n    AnalyticsValue func = (AnalyticsValue) uncasted;\n\n    \r\n    val.setExists(false);\n    filter.setExists(false);\n    func.getObject();\n    assertFalse(func.exists());\n\n    val.setValue(\"1810-12-02T10:30:15Z\").setExists(true);\n    filter.setExists(false);\n    func.getObject();\n    assertFalse(func.exists());\n    \n    val.setExists(false);\n    filter.setValue(true).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n\n    \r\n    val.setValue(new Long(3)).setExists(true);\n    filter.setValue(true).setExists(true);\n    assertEquals(new Long(3), func.getObject());\n    assertTrue(func.exists());\n\n    val.setValue(new Date(2)).setExists(true);\n    filter.setValue(false).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n\n    val.setValue(\"3\").setExists(true);\n    filter.setValue(true).setExists(true);\n    assertEquals(\"3\", func.getObject());\n    assertTrue(func.exists());\n\n    val.setValue(new TestAnalyticsValue()).setExists(true);\n    filter.setValue(false).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n  }\n","date":"2017-10-18 01:52:02","endLine":439,"groupId":"18697","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"singleValueObjectTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e2/bcc7350f5f0e2b49d68db40fce329f0fd517d0.src","preCode":"  public void singleValueObjectTest() {\n    TestAnalyticsValue val = new TestAnalyticsValue();\n    TestBooleanValue filter = new TestBooleanValue();\n\n    AnalyticsValueStream uncasted = FilterFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, filter});\n    assertTrue(uncasted instanceof AnalyticsValue);\n    AnalyticsValue func = (AnalyticsValue) uncasted;\n\n    \r\n    val.setExists(false);\n    filter.setExists(false);\n    func.getObject();\n    assertFalse(func.exists());\n\n    val.setValue(\"1810-12-02T10:30:15Z\").setExists(true);\n    filter.setExists(false);\n    func.getObject();\n    assertFalse(func.exists());\n    \n    val.setExists(false);\n    filter.setValue(true).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n\n    \r\n    val.setValue(new Long(3)).setExists(true);\n    filter.setValue(true).setExists(true);\n    assertEquals(new Long(3), func.getObject());\n    assertTrue(func.exists());\n\n    val.setValue(new Date(2)).setExists(true);\n    filter.setValue(false).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n\n    val.setValue(\"3\").setExists(true);\n    filter.setValue(true).setExists(true);\n    assertEquals(\"3\", func.getObject());\n    assertTrue(func.exists());\n\n    val.setValue(new TestAnalyticsValue()).setExists(true);\n    filter.setValue(false).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/mapping/FilterFunctionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":395,"status":"B"},{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public void singleValueObjectTest() {\n    TestAnalyticsValue val = new TestAnalyticsValue();\n    TestAnalyticsValue remover = new TestAnalyticsValue();\n\n    AnalyticsValueStream uncasted = RemoveFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, remover});\n    assertTrue(uncasted instanceof AnalyticsValue);\n    AnalyticsValue func = (AnalyticsValue) uncasted;\n\n    \r\n    val.setExists(false);\n    remover.setExists(false);\n    func.getObject();\n    assertFalse(func.exists());\n\n    val.setExists(false);\n    remover.setValue(new Boolean(true)).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n    \n    \r\n    val.setValue(\"abc123\").setExists(true);\n    remover.setValue(new Date(123)).setExists(true);\n    assertEquals(\"abc123\", func.getObject());\n    assertTrue(func.exists());\n\n    val.setValue(new Double(23423.0)).setExists(true);\n    remover.setValue(new Double(23423.0)).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n    \n    val.setValue(new Long(234)).setExists(true);\n    remover.setExists(false);\n    assertEquals(new Long(234), func.getObject());\n    assertTrue(func.exists());\n  }\n","date":"2017-10-18 01:52:02","endLine":389,"groupId":"18697","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"singleValueObjectTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/05/226f9cc4458527bc8e20b3f980c2c444c0818b.src","preCode":"  public void singleValueObjectTest() {\n    TestAnalyticsValue val = new TestAnalyticsValue();\n    TestAnalyticsValue remover = new TestAnalyticsValue();\n\n    AnalyticsValueStream uncasted = RemoveFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, remover});\n    assertTrue(uncasted instanceof AnalyticsValue);\n    AnalyticsValue func = (AnalyticsValue) uncasted;\n\n    \r\n    val.setExists(false);\n    remover.setExists(false);\n    func.getObject();\n    assertFalse(func.exists());\n\n    val.setExists(false);\n    remover.setValue(new Boolean(true)).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n    \n    \r\n    val.setValue(\"abc123\").setExists(true);\n    remover.setValue(new Date(123)).setExists(true);\n    assertEquals(\"abc123\", func.getObject());\n    assertTrue(func.exists());\n\n    val.setValue(new Double(23423.0)).setExists(true);\n    remover.setValue(new Double(23423.0)).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n    \n    val.setValue(new Long(234)).setExists(true);\n    remover.setExists(false);\n    assertEquals(new Long(234), func.getObject());\n    assertTrue(func.exists());\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/mapping/RemoveFunctionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":355,"status":"B"}],"commitId":"86d84bff82ff8c7a1f6cadfe307685a4dce2f8d9","commitMessage":"@@@SOLR-11145.  SOLR-11146: Added comprehensive unit tests for Analytics Component 2.0 as well as analytics bug fixes.\n","date":"2017-10-18 01:52:02","modifiedFileCount":"41","status":"B","submitter":"Houston Putman"},{"authorTime":"2018-07-16 18:24:45","codes":[{"authorDate":"2018-07-16 18:24:45","commitOrder":2,"curCode":"  public void singleValueObjectTest() {\n    TestAnalyticsValue val = new TestAnalyticsValue();\n    TestBooleanValue filter = new TestBooleanValue();\n\n    AnalyticsValueStream uncasted = FilterFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, filter});\n    assertTrue(uncasted instanceof AnalyticsValue);\n    AnalyticsValue func = (AnalyticsValue) uncasted;\n\n    \r\n    val.setExists(false);\n    filter.setExists(false);\n    func.getObject();\n    assertFalse(func.exists());\n\n    val.setValue(\"1810-12-02T10:30:15Z\").setExists(true);\n    filter.setExists(false);\n    func.getObject();\n    assertFalse(func.exists());\n    \n    val.setExists(false);\n    filter.setValue(true).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n\n    \r\n    val.setValue(3L).setExists(true);\n    filter.setValue(true).setExists(true);\n    assertEquals(3L, func.getObject());\n    assertTrue(func.exists());\n\n    val.setValue(new Date(2)).setExists(true);\n    filter.setValue(false).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n\n    val.setValue(\"3\").setExists(true);\n    filter.setValue(true).setExists(true);\n    assertEquals(\"3\", func.getObject());\n    assertTrue(func.exists());\n\n    val.setValue(new TestAnalyticsValue()).setExists(true);\n    filter.setValue(false).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n  }\n","date":"2018-07-16 18:24:45","endLine":439,"groupId":"101638","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"singleValueObjectTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/87/dd3e712a87959cf48685fa6cd5e84069ea55af.src","preCode":"  public void singleValueObjectTest() {\n    TestAnalyticsValue val = new TestAnalyticsValue();\n    TestBooleanValue filter = new TestBooleanValue();\n\n    AnalyticsValueStream uncasted = FilterFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, filter});\n    assertTrue(uncasted instanceof AnalyticsValue);\n    AnalyticsValue func = (AnalyticsValue) uncasted;\n\n    \r\n    val.setExists(false);\n    filter.setExists(false);\n    func.getObject();\n    assertFalse(func.exists());\n\n    val.setValue(\"1810-12-02T10:30:15Z\").setExists(true);\n    filter.setExists(false);\n    func.getObject();\n    assertFalse(func.exists());\n    \n    val.setExists(false);\n    filter.setValue(true).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n\n    \r\n    val.setValue(new Long(3)).setExists(true);\n    filter.setValue(true).setExists(true);\n    assertEquals(new Long(3), func.getObject());\n    assertTrue(func.exists());\n\n    val.setValue(new Date(2)).setExists(true);\n    filter.setValue(false).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n\n    val.setValue(\"3\").setExists(true);\n    filter.setValue(true).setExists(true);\n    assertEquals(\"3\", func.getObject());\n    assertTrue(func.exists());\n\n    val.setValue(new TestAnalyticsValue()).setExists(true);\n    filter.setValue(false).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/mapping/FilterFunctionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":395,"status":"M"},{"authorDate":"2018-07-16 18:24:45","commitOrder":2,"curCode":"  public void singleValueObjectTest() {\n    TestAnalyticsValue val = new TestAnalyticsValue();\n    TestAnalyticsValue remover = new TestAnalyticsValue();\n\n    AnalyticsValueStream uncasted = RemoveFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, remover});\n    assertTrue(uncasted instanceof AnalyticsValue);\n    AnalyticsValue func = (AnalyticsValue) uncasted;\n\n    \r\n    val.setExists(false);\n    remover.setExists(false);\n    func.getObject();\n    assertFalse(func.exists());\n\n    val.setExists(false);\n    remover.setValue(Boolean.TRUE).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n    \n    \r\n    val.setValue(\"abc123\").setExists(true);\n    remover.setValue(new Date(123)).setExists(true);\n    assertEquals(\"abc123\", func.getObject());\n    assertTrue(func.exists());\n\n    val.setValue(23423.0d).setExists(true);\n    remover.setValue(23423.0d).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n    \n    val.setValue(234L).setExists(true);\n    remover.setExists(false);\n    assertEquals(234L, func.getObject());\n    assertTrue(func.exists());\n  }\n","date":"2018-07-16 18:24:45","endLine":389,"groupId":"101638","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"singleValueObjectTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/15/c3e6ef30f10960958ce386590e1e1f9335339f.src","preCode":"  public void singleValueObjectTest() {\n    TestAnalyticsValue val = new TestAnalyticsValue();\n    TestAnalyticsValue remover = new TestAnalyticsValue();\n\n    AnalyticsValueStream uncasted = RemoveFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, remover});\n    assertTrue(uncasted instanceof AnalyticsValue);\n    AnalyticsValue func = (AnalyticsValue) uncasted;\n\n    \r\n    val.setExists(false);\n    remover.setExists(false);\n    func.getObject();\n    assertFalse(func.exists());\n\n    val.setExists(false);\n    remover.setValue(new Boolean(true)).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n    \n    \r\n    val.setValue(\"abc123\").setExists(true);\n    remover.setValue(new Date(123)).setExists(true);\n    assertEquals(\"abc123\", func.getObject());\n    assertTrue(func.exists());\n\n    val.setValue(new Double(23423.0)).setExists(true);\n    remover.setValue(new Double(23423.0)).setExists(true);\n    func.getObject();\n    assertFalse(func.exists());\n    \n    val.setValue(new Long(234)).setExists(true);\n    remover.setExists(false);\n    assertEquals(new Long(234), func.getObject());\n    assertTrue(func.exists());\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/function/mapping/RemoveFunctionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":355,"status":"M"}],"commitId":"c97f27b06c1d7c250e9596a9bc7bf5ca11ef6ad3","commitMessage":"@@@Merge branch 'remove-constructor-wrapper-classes' of https://github.com/michaelbraun/lucene-solr:\nLUCENE-8345.  GitHub PR #392: Remove instantiation of redundant wrapper classes for primitives; add wrapper class constructors to forbiddenapis.\nThis closes #392\n","date":"2018-07-16 18:24:45","modifiedFileCount":"96","status":"M","submitter":"Uwe Schindler"}]
