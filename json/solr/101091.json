[{"authorTime":"2016-04-18 03:37:20","codes":[{"authorDate":"2015-06-21 00:24:08","commitOrder":2,"curCode":"  private static void createStoredStringField(String fieldName, SolrClient solrClient) throws Exception {\n    Map<String, Object> fieldAttributes = new LinkedHashMap<>();\n    fieldAttributes.put(\"name\", fieldName);\n    fieldAttributes.put(\"type\", \"string\");\n    fieldAttributes.put(\"stored\", true);\n    SchemaRequest.AddField addFieldRequest = new SchemaRequest.AddField(fieldAttributes);\n    addFieldRequest.process(solrClient);\n  }\n","date":"2015-06-21 00:24:08","endLine":69,"groupId":"37218","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createStoredStringField","params":"(StringfieldName@SolrClientsolrClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2e/a061104d9ed0da0132e9d9ab82a76985f889fd.src","preCode":"  private static void createStoredStringField(String fieldName, SolrClient solrClient) throws Exception {\n    Map<String, Object> fieldAttributes = new LinkedHashMap<>();\n    fieldAttributes.put(\"name\", fieldName);\n    fieldAttributes.put(\"type\", \"string\");\n    fieldAttributes.put(\"stored\", true);\n    SchemaRequest.AddField addFieldRequest = new SchemaRequest.AddField(fieldAttributes);\n    addFieldRequest.process(solrClient);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"NB"},{"authorDate":"2016-04-18 03:37:20","commitOrder":2,"curCode":"  private void addStringField(String fieldName, String collection, CloudSolrClient cloudClient) throws IOException, SolrServerException {\n    Map<String, Object> fieldAttributes = new LinkedHashMap<>();\n    fieldAttributes.put(\"name\", fieldName);\n    fieldAttributes.put(\"type\", \"string\");\n    SchemaRequest.AddField addFieldUpdateSchemaRequest = new SchemaRequest.AddField(fieldAttributes);\n    SchemaResponse.UpdateResponse addFieldResponse = addFieldUpdateSchemaRequest.process(cloudClient, collection);\n    assertEquals(0, addFieldResponse.getStatus());\n    assertNull(addFieldResponse.getResponse().get(\"errors\"));\n\n    log.info(\"added new field=\"+fieldName);\n  }\n","date":"2016-04-18 03:37:20","endLine":99,"groupId":"37218","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addStringField","params":"(StringfieldName@Stringcollection@CloudSolrClientcloudClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3b/d4dea938b423010a35c2c9a147f86f17a1a15a.src","preCode":"  private void addStringField(String fieldName, String collection, CloudSolrClient cloudClient) throws IOException, SolrServerException {\n    Map<String, Object> fieldAttributes = new LinkedHashMap<>();\n    fieldAttributes.put(\"name\", fieldName);\n    fieldAttributes.put(\"type\", \"string\");\n    SchemaRequest.AddField addFieldUpdateSchemaRequest = new SchemaRequest.AddField(fieldAttributes);\n    SchemaResponse.UpdateResponse addFieldResponse = addFieldUpdateSchemaRequest.process(cloudClient, collection);\n    assertEquals(0, addFieldResponse.getStatus());\n    assertNull(addFieldResponse.getResponse().get(\"errors\"));\n\n    log.info(\"added new field=\"+fieldName);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"}],"commitId":"aafdc372d98ec9e170501ed2fef91db892c6368f","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-04-18 03:37:20","modifiedFileCount":"5","status":"M","submitter":"Karl Wright"},{"authorTime":"2020-05-01 07:50:31","codes":[{"authorDate":"2015-06-21 00:24:08","commitOrder":3,"curCode":"  private static void createStoredStringField(String fieldName, SolrClient solrClient) throws Exception {\n    Map<String, Object> fieldAttributes = new LinkedHashMap<>();\n    fieldAttributes.put(\"name\", fieldName);\n    fieldAttributes.put(\"type\", \"string\");\n    fieldAttributes.put(\"stored\", true);\n    SchemaRequest.AddField addFieldRequest = new SchemaRequest.AddField(fieldAttributes);\n    addFieldRequest.process(solrClient);\n  }\n","date":"2015-06-21 00:24:08","endLine":69,"groupId":"101091","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createStoredStringField","params":"(StringfieldName@SolrClientsolrClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2e/a061104d9ed0da0132e9d9ab82a76985f889fd.src","preCode":"  private static void createStoredStringField(String fieldName, SolrClient solrClient) throws Exception {\n    Map<String, Object> fieldAttributes = new LinkedHashMap<>();\n    fieldAttributes.put(\"name\", fieldName);\n    fieldAttributes.put(\"type\", \"string\");\n    fieldAttributes.put(\"stored\", true);\n    SchemaRequest.AddField addFieldRequest = new SchemaRequest.AddField(fieldAttributes);\n    addFieldRequest.process(solrClient);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/request/SchemaTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"N"},{"authorDate":"2020-05-01 07:50:31","commitOrder":3,"curCode":"  private void addStringField(String fieldName, String collection, CloudSolrClient cloudClient) throws IOException, SolrServerException {\n    Map<String, Object> fieldAttributes = new LinkedHashMap<>();\n    fieldAttributes.put(\"name\", fieldName);\n    fieldAttributes.put(\"type\", \"string\");\n    SchemaRequest.AddField addFieldUpdateSchemaRequest = new SchemaRequest.AddField(fieldAttributes);\n    SchemaResponse.UpdateResponse addFieldResponse = addFieldUpdateSchemaRequest.process(cloudClient, collection);\n    assertEquals(0, addFieldResponse.getStatus());\n    assertNull(addFieldResponse.getResponse().get(\"errors\"));\n\n    log.info(\"added new field={}\", fieldName);\n  }\n","date":"2020-05-01 07:50:31","endLine":101,"groupId":"101091","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addStringField","params":"(StringfieldName@Stringcollection@CloudSolrClientcloudClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a2/375bafd95777677780cf5357c31ba55c879c9b.src","preCode":"  private void addStringField(String fieldName, String collection, CloudSolrClient cloudClient) throws IOException, SolrServerException {\n    Map<String, Object> fieldAttributes = new LinkedHashMap<>();\n    fieldAttributes.put(\"name\", fieldName);\n    fieldAttributes.put(\"type\", \"string\");\n    SchemaRequest.AddField addFieldUpdateSchemaRequest = new SchemaRequest.AddField(fieldAttributes);\n    SchemaResponse.UpdateResponse addFieldResponse = addFieldUpdateSchemaRequest.process(cloudClient, collection);\n    assertEquals(0, addFieldResponse.getStatus());\n    assertNull(addFieldResponse.getResponse().get(\"errors\"));\n\n    log.info(\"added new field=\"+fieldName);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"9ae05e9b4f318dc0bbb352a6a65573614d0be26d","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-05-01 07:50:31","modifiedFileCount":"170","status":"M","submitter":"Erick Erickson"}]
