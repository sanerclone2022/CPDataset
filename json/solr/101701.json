[{"authorTime":"2017-08-01 23:01:17","codes":[{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public void meanTest() throws Exception { \n    String[] params = new String[] {\n        \"o.mr.s.int_id\", \"mean(int_id)\",\n        \"o.mr.s.long_ld\", \"mean(long_ld)\",\n        \"o.mr.s.float_fd\", \"mean(float_fd)\",\n        \"o.mr.s.double_dd\", \"mean(double_dd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    \r\n    Double intResult = getValue(response, \"mr\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"mean\");\n    assertEquals(responseStr, intResult,intTest);\n    \n    \r\n    Double longResult = getValue(response, \"mr\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"mean\");\n    assertEquals(responseStr, longResult,longTest);\n    \n    \r\n    Double floatResult = getValue(response, \"mr\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"mean\");\n    assertEquals(responseStr, floatResult,floatTest);\n    \n    \r\n    Double doubleResult = getValue(response, \"mr\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"mean\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n  }\n","date":"2017-10-18 01:52:02","endLine":179,"groupId":"15786","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"meanTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/74/89f3f977b74921a45dce58a3330e91bd2af528.src","preCode":"  public void meanTest() throws Exception { \n    String[] params = new String[] {\n        \"o.mr.s.int_id\", \"mean(int_id)\",\n        \"o.mr.s.long_ld\", \"mean(long_ld)\",\n        \"o.mr.s.float_fd\", \"mean(float_fd)\",\n        \"o.mr.s.double_dd\", \"mean(double_dd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    \r\n    Double intResult = getValue(response, \"mr\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"mean\");\n    assertEquals(responseStr, intResult,intTest);\n    \n    \r\n    Double longResult = getValue(response, \"mr\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"mean\");\n    assertEquals(responseStr, longResult,longTest);\n    \n    \r\n    Double floatResult = getValue(response, \"mr\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"mean\");\n    assertEquals(responseStr, floatResult,floatTest);\n    \n    \r\n    Double doubleResult = getValue(response, \"mr\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"mean\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"B"},{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public void medianTest() throws Exception { \n    String[] params = new String[] {\n        \"o.medr.s.int_id\", \"median(int_id)\",\n        \"o.medr.s.long_ld\", \"median(long_ld)\",\n        \"o.medr.s.float_fd\", \"median(float_fd)\",\n        \"o.medr.s.double_dd\", \"median(double_dd)\",\n        \"o.medr.s.date_dtd\", \"median(date_dtd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    \r\n    Double intResult = getValue(response, \"medr\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"median\");\n    assertEquals(responseStr, intResult,intTest);\n    \n    \r\n    Double longResult = getValue(response, \"medr\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"median\");\n    assertEquals(responseStr, longResult,longTest);\n    \n    \r\n    Double floatResult = getValue(response, \"medr\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(responseStr, floatResult,floatTest);\n    \n    \r\n    Double doubleResult = getValue(response, \"medr\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n    \n    \r\n  }\n","date":"2017-10-18 01:52:02","endLine":247,"groupId":"15786","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"medianTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/74/89f3f977b74921a45dce58a3330e91bd2af528.src","preCode":"  public void medianTest() throws Exception { \n    String[] params = new String[] {\n        \"o.medr.s.int_id\", \"median(int_id)\",\n        \"o.medr.s.long_ld\", \"median(long_ld)\",\n        \"o.medr.s.float_fd\", \"median(float_fd)\",\n        \"o.medr.s.double_dd\", \"median(double_dd)\",\n        \"o.medr.s.date_dtd\", \"median(date_dtd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    \r\n    Double intResult = getValue(response, \"medr\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"median\");\n    assertEquals(responseStr, intResult,intTest);\n    \n    \r\n    Double longResult = getValue(response, \"medr\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"median\");\n    assertEquals(responseStr, longResult,longTest);\n    \n    \r\n    Double floatResult = getValue(response, \"medr\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(responseStr, floatResult,floatTest);\n    \n    \r\n    Double doubleResult = getValue(response, \"medr\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n    \n    \r\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"B"}],"commitId":"86d84bff82ff8c7a1f6cadfe307685a4dce2f8d9","commitMessage":"@@@SOLR-11145.  SOLR-11146: Added comprehensive unit tests for Analytics Component 2.0 as well as analytics bug fixes.\n","date":"2017-10-18 01:52:02","modifiedFileCount":"41","status":"B","submitter":"Houston Putman"},{"authorTime":"2020-06-18 23:12:50","codes":[{"authorDate":"2020-06-18 23:12:50","commitOrder":2,"curCode":"  public void meanTest() throws Exception {\n    String[] params = new String[] {\n        \"o.mr.s.int_id\", \"mean(int_id)\",\n        \"o.mr.s.long_ld\", \"mean(long_ld)\",\n        \"o.mr.s.float_fd\", \"mean(float_fd)\",\n        \"o.mr.s.double_dd\", \"mean(double_dd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    \r\n    Double intResult = getValue(response, \"mr\", \"int_id\");\n    Double intTest = calculateNumberStat(intTestStart, \"mean\");\n    assertEquals(responseStr, intResult,intTest);\n\n    \r\n    Double longResult = getValue(response, \"mr\", \"long_ld\");\n    Double longTest = calculateNumberStat(longTestStart, \"mean\");\n    assertEquals(responseStr, longResult,longTest);\n\n    \r\n    Double floatResult = getValue(response, \"mr\", \"float_fd\");\n    Double floatTest = calculateNumberStat(floatTestStart, \"mean\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    \r\n    Double doubleResult = getValue(response, \"mr\", \"double_dd\");\n    Double doubleTest = calculateNumberStat(doubleTestStart, \"mean\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n  }\n","date":"2020-06-18 23:12:50","endLine":183,"groupId":"101701","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"meanTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/76/ff31b8e96db54928a217f6a4bb4f59f68f625e.src","preCode":"  public void meanTest() throws Exception {\n    String[] params = new String[] {\n        \"o.mr.s.int_id\", \"mean(int_id)\",\n        \"o.mr.s.long_ld\", \"mean(long_ld)\",\n        \"o.mr.s.float_fd\", \"mean(float_fd)\",\n        \"o.mr.s.double_dd\", \"mean(double_dd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    \r\n    Double intResult = getValue(response, \"mr\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"mean\");\n    assertEquals(responseStr, intResult,intTest);\n\n    \r\n    Double longResult = getValue(response, \"mr\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"mean\");\n    assertEquals(responseStr, longResult,longTest);\n\n    \r\n    Double floatResult = getValue(response, \"mr\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"mean\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    \r\n    Double doubleResult = getValue(response, \"mr\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"mean\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2020-06-18 23:12:50","commitOrder":2,"curCode":"  public void medianTest() throws Exception {\n    String[] params = new String[] {\n        \"o.medr.s.int_id\", \"median(int_id)\",\n        \"o.medr.s.long_ld\", \"median(long_ld)\",\n        \"o.medr.s.float_fd\", \"median(float_fd)\",\n        \"o.medr.s.double_dd\", \"median(double_dd)\",\n        \"o.medr.s.date_dtd\", \"median(date_dtd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    \r\n    Double intResult = getValue(response, \"medr\", \"int_id\");\n    Double intTest = calculateNumberStat(intTestStart, \"median\");\n    assertEquals(responseStr, intResult,intTest);\n\n    \r\n    Double longResult = getValue(response, \"medr\", \"long_ld\");\n    Double longTest = calculateNumberStat(longTestStart, \"median\");\n    assertEquals(responseStr, longResult,longTest);\n\n    \r\n    Double floatResult = getValue(response, \"medr\", \"float_fd\");\n    Double floatTest = calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    \r\n    Double doubleResult = getValue(response, \"medr\", \"double_dd\");\n    Double doubleTest = calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n\n    \r\n  }\n","date":"2020-06-18 23:12:50","endLine":251,"groupId":"101701","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"medianTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/76/ff31b8e96db54928a217f6a4bb4f59f68f625e.src","preCode":"  public void medianTest() throws Exception {\n    String[] params = new String[] {\n        \"o.medr.s.int_id\", \"median(int_id)\",\n        \"o.medr.s.long_ld\", \"median(long_ld)\",\n        \"o.medr.s.float_fd\", \"median(float_fd)\",\n        \"o.medr.s.double_dd\", \"median(double_dd)\",\n        \"o.medr.s.date_dtd\", \"median(date_dtd)\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    \r\n    Double intResult = getValue(response, \"medr\", \"int_id\");\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"median\");\n    assertEquals(responseStr, intResult,intTest);\n\n    \r\n    Double longResult = getValue(response, \"medr\", \"long_ld\");\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"median\");\n    assertEquals(responseStr, longResult,longTest);\n\n    \r\n    Double floatResult = getValue(response, \"medr\", \"float_fd\");\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"median\");\n    assertEquals(responseStr, floatResult,floatTest);\n\n    \r\n    Double doubleResult = getValue(response, \"medr\", \"double_dd\");\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"median\");\n    assertEquals(responseStr, doubleResult,doubleTest);\n\n    \r\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyNoFacetCloudTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"}],"commitId":"84729edbba04ad7de4b1cae635d8d0fbe803f124","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 2)\n","date":"2020-06-18 23:12:50","modifiedFileCount":"122","status":"M","submitter":"Erick Erickson"}]
