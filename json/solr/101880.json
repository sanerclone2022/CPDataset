[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2012-08-09 02:01:11","commitOrder":2,"curCode":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    \r\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n","date":"2012-08-09 02:01:11","endLine":243,"groupId":"25915","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/5e96a6422f5b645afd711baa20132abe47ca48.src","preCode":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    \r\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":2,"curCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":312,"groupId":"48542","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setClientPort","params":"(intclientPort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/62/5c005f11ec08b13f49a770c56085c784621442.src","preCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/SolrZkServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"NB"}],"commitId":"e528549a3be113053ee976dbfeeb422f727dc515","commitMessage":"@@@still favor leaders with CloudSolrServer.  but also fall back to replicas after leaders\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1370864 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-09 02:01:11","modifiedFileCount":"10","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2012-08-15 01:16:43","commitOrder":3,"curCode":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    \r\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n","date":"2012-08-15 01:16:43","endLine":244,"groupId":"25915","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/04/8e6c20f0a896d084b21840753e10aa1492f3d5.src","preCode":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    \r\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":3,"curCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":312,"groupId":"48542","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setClientPort","params":"(intclientPort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/62/5c005f11ec08b13f49a770c56085c784621442.src","preCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/SolrZkServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"N"}],"commitId":"c607f548bb1f17b091800ecd4821dfe8cb3a9771","commitMessage":"@@@solrcloud: improve some logging.  improve some testing.  other minor tweaks\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1372981 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-15 01:16:43","modifiedFileCount":"12","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2012-11-20 11:36:14","commitOrder":4,"curCode":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    \r\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            System.out.println(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n","date":"2012-11-20 11:36:14","endLine":251,"groupId":"48542","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/37/29830ce2617e5a57976671eccce52c81132ac7.src","preCode":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    \r\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":4,"curCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":312,"groupId":"48542","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setClientPort","params":"(intclientPort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/62/5c005f11ec08b13f49a770c56085c784621442.src","preCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/SolrZkServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"N"}],"commitId":"dad188820eb7363f47070287b8d944cf20ae3cde","commitMessage":"@@@SOLR-3602: Update ZooKeeper to 3.4.5 \n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1411527 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-11-20 11:36:14","modifiedFileCount":"3","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2015-04-13 14:09:53","commitOrder":5,"curCode":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    \r\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            log.info(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n","date":"2015-04-13 14:09:53","endLine":511,"groupId":"18721","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/1a9a209fea07c18393988830bf9a87b33d6713.src","preCode":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    \r\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            System.out.println(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":449,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":5,"curCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":312,"groupId":"48542","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setClientPort","params":"(intclientPort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/62/5c005f11ec08b13f49a770c56085c784621442.src","preCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/SolrZkServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"N"}],"commitId":"2c9ae41b7877aecffcd9500a3d3986650edd3027","commitMessage":"@@@SOLR-7381: Improve logging by adding node name in MDC in SolrCloud mode and adding MDC to all thread pools\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1673116 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-04-13 14:09:53","modifiedFileCount":"35","status":"M","submitter":"Shalin Shekhar Mangar"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2018-03-19 04:15:57","commitOrder":6,"curCode":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    \r\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n            this.maxSessionTimeout = ZkTestServer.this.maxSessionTimeout;\n            this.minSessionTimeout = ZkTestServer.this.minSessionTimeout;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            log.info(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n","date":"2018-03-19 04:15:57","endLine":526,"groupId":"18721","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/21/6d3fe281dd97d7eafef1a3b5461f57328156eb.src","preCode":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    \r\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            log.info(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":462,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":6,"curCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":312,"groupId":"48542","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setClientPort","params":"(intclientPort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/62/5c005f11ec08b13f49a770c56085c784621442.src","preCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/SolrZkServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"N"}],"commitId":"f282a855f24ef712e8359085705aab97a1ec146b","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-03-19 04:15:57","modifiedFileCount":"21","status":"M","submitter":"Karl Wright"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":7,"curCode":"  public void run(boolean solrFormat) throws InterruptedException, IOException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    try {\n      if (zooThread != null) {\n        throw new IllegalStateException(\"ZK TEST SERVER IS ALREADY RUNNING\");\n      }\n      \r\n      zooThread = new Thread(\"ZkTestServer Run Thread\") {\n\n        @Override\n        public void run() {\n          ServerConfig config = new ServerConfig() {\n\n            {\n              setClientPort(ZkTestServer.this.clientPort);\n              this.dataDir = zkDir;\n              this.dataLogDir = zkDir;\n              this.tickTime = theTickTime;\n              this.maxSessionTimeout = ZkTestServer.this.maxSessionTimeout;\n              this.minSessionTimeout = ZkTestServer.this.minSessionTimeout;\n            }\n\n            public void setClientPort(int clientPort) {\n              if (clientPortAddress != null) {\n                try {\n                  this.clientPortAddress = new InetSocketAddress(\n                      InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n                } catch (UnknownHostException e) {\n                  throw new RuntimeException(e);\n                }\n              } else {\n                this.clientPortAddress = new InetSocketAddress(clientPort);\n              }\n              log.info(\"client port:\" + this.clientPortAddress);\n            }\n          };\n          try {\n            zkServer.runFromConfig(config);\n          } catch (Throwable t) {\n            log.error(\"zkServer error\", t);\n          }\n        }\n      };\n\n      ObjectReleaseTracker.track(zooThread);\n      zooThread.start();\n\n      int cnt = 0;\n      int port = -1;\n      try {\n        port = getPort();\n      } catch (IllegalStateException e) {\n\n      }\n      while (port < 1) {\n        Thread.sleep(100);\n        try {\n          port = getPort();\n        } catch (IllegalStateException e) {\n\n        }\n        if (cnt == 500) {\n          throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n        }\n        cnt++;\n      }\n      log.info(\"start zk server on port:\" + port);\n\n      waitForServerUp(getZkHost(), 30000);\n\n      init(solrFormat);\n    } catch (Exception e) {\n      log.error(\"Error trying to run ZK Test Server\", e);\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2018-11-30 01:58:51","endLine":599,"groupId":"39816","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"(booleansolrFormat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/85/f6afb17880d328e4a32f825dffd31776d7b826.src","preCode":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    \r\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n            this.maxSessionTimeout = ZkTestServer.this.maxSessionTimeout;\n            this.minSessionTimeout = ZkTestServer.this.minSessionTimeout;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n            log.info(\"client port:\" + this.clientPortAddress);\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n\n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n\n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n    log.info(\"start zk server on port:\" + port);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":524,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":7,"curCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":312,"groupId":"48542","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setClientPort","params":"(intclientPort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/62/5c005f11ec08b13f49a770c56085c784621442.src","preCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/SolrZkServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"N"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2019-06-04 08:50:35","commitOrder":8,"curCode":"  public void run(boolean solrFormat) throws InterruptedException, IOException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    try {\n      if (zooThread != null) {\n        throw new IllegalStateException(\"ZK TEST SERVER IS ALREADY RUNNING\");\n      }\n      \r\n      zooThread = new Thread(\"ZkTestServer Run Thread\") {\n\n        @Override\n        public void run() {\n          ServerConfig config = new ServerConfig() {\n\n            {\n              setClientPort(ZkTestServer.this.clientPort);\n              this.dataDir = zkDir.toFile();\n              this.dataLogDir = zkDir.toFile();\n              this.tickTime = theTickTime;\n              this.maxSessionTimeout = ZkTestServer.this.maxSessionTimeout;\n              this.minSessionTimeout = ZkTestServer.this.minSessionTimeout;\n            }\n\n            public void setClientPort(int clientPort) {\n              if (clientPortAddress != null) {\n                try {\n                  this.clientPortAddress = new InetSocketAddress(\n                      InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n                } catch (UnknownHostException e) {\n                  throw new RuntimeException(e);\n                }\n              } else {\n                this.clientPortAddress = new InetSocketAddress(clientPort);\n              }\n              log.info(\"client port:\" + this.clientPortAddress);\n            }\n          };\n          try {\n            zkServer.runFromConfig(config);\n          } catch (Throwable t) {\n            log.error(\"zkServer error\", t);\n          }\n        }\n      };\n\n      ObjectReleaseTracker.track(zooThread);\n      zooThread.start();\n\n      int cnt = 0;\n      int port = -1;\n      try {\n        port = getPort();\n      } catch (IllegalStateException e) {\n\n      }\n      while (port < 1) {\n        Thread.sleep(100);\n        try {\n          port = getPort();\n        } catch (IllegalStateException e) {\n\n        }\n        if (cnt == 500) {\n          throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n        }\n        cnt++;\n      }\n      log.info(\"start zk server on port:\" + port);\n\n      waitForServerUp(getZkHost(), 30000);\n\n      init(solrFormat);\n    } catch (Exception e) {\n      log.error(\"Error trying to run ZK Test Server\", e);\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-06-04 08:50:35","endLine":604,"groupId":"39816","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"(booleansolrFormat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cf/b9d2bc35c8752c27260983b2abbbdfd9ab18b7.src","preCode":"  public void run(boolean solrFormat) throws InterruptedException, IOException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    try {\n      if (zooThread != null) {\n        throw new IllegalStateException(\"ZK TEST SERVER IS ALREADY RUNNING\");\n      }\n      \r\n      zooThread = new Thread(\"ZkTestServer Run Thread\") {\n\n        @Override\n        public void run() {\n          ServerConfig config = new ServerConfig() {\n\n            {\n              setClientPort(ZkTestServer.this.clientPort);\n              this.dataDir = zkDir;\n              this.dataLogDir = zkDir;\n              this.tickTime = theTickTime;\n              this.maxSessionTimeout = ZkTestServer.this.maxSessionTimeout;\n              this.minSessionTimeout = ZkTestServer.this.minSessionTimeout;\n            }\n\n            public void setClientPort(int clientPort) {\n              if (clientPortAddress != null) {\n                try {\n                  this.clientPortAddress = new InetSocketAddress(\n                      InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n                } catch (UnknownHostException e) {\n                  throw new RuntimeException(e);\n                }\n              } else {\n                this.clientPortAddress = new InetSocketAddress(clientPort);\n              }\n              log.info(\"client port:\" + this.clientPortAddress);\n            }\n          };\n          try {\n            zkServer.runFromConfig(config);\n          } catch (Throwable t) {\n            log.error(\"zkServer error\", t);\n          }\n        }\n      };\n\n      ObjectReleaseTracker.track(zooThread);\n      zooThread.start();\n\n      int cnt = 0;\n      int port = -1;\n      try {\n        port = getPort();\n      } catch (IllegalStateException e) {\n\n      }\n      while (port < 1) {\n        Thread.sleep(100);\n        try {\n          port = getPort();\n        } catch (IllegalStateException e) {\n\n        }\n        if (cnt == 500) {\n          throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n        }\n        cnt++;\n      }\n      log.info(\"start zk server on port:\" + port);\n\n      waitForServerUp(getZkHost(), 30000);\n\n      init(solrFormat);\n    } catch (Exception e) {\n      log.error(\"Error trying to run ZK Test Server\", e);\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":529,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":8,"curCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":312,"groupId":"48542","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setClientPort","params":"(intclientPort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/62/5c005f11ec08b13f49a770c56085c784621442.src","preCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/SolrZkServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"N"}],"commitId":"7ebeab71f4b56d008835f0040468a07632024950","commitMessage":"@@@SOLR-8346: Upgrade Zookeeper to version 3.5.5\n","date":"2019-06-04 08:50:35","modifiedFileCount":"35","status":"M","submitter":"Erick Erickson"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2020-05-01 07:50:31","commitOrder":9,"curCode":"  public void run(boolean solrFormat) throws InterruptedException, IOException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    try {\n      if (zooThread != null) {\n        throw new IllegalStateException(\"ZK TEST SERVER IS ALREADY RUNNING\");\n      }\n      \r\n      zooThread = new Thread(\"ZkTestServer Run Thread\") {\n\n        @Override\n        public void run() {\n          ServerConfig config = new ServerConfig() {\n\n            {\n              setClientPort(ZkTestServer.this.clientPort);\n              this.dataDir = zkDir.toFile();\n              this.dataLogDir = zkDir.toFile();\n              this.tickTime = theTickTime;\n              this.maxSessionTimeout = ZkTestServer.this.maxSessionTimeout;\n              this.minSessionTimeout = ZkTestServer.this.minSessionTimeout;\n            }\n\n            public void setClientPort(int clientPort) {\n              if (clientPortAddress != null) {\n                try {\n                  this.clientPortAddress = new InetSocketAddress(\n                      InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n                } catch (UnknownHostException e) {\n                  throw new RuntimeException(e);\n                }\n              } else {\n                this.clientPortAddress = new InetSocketAddress(clientPort);\n              }\n              log.info(\"client port: {}\", this.clientPortAddress);\n            }\n          };\n          try {\n            zkServer.runFromConfig(config);\n          } catch (Throwable t) {\n            log.error(\"zkServer error\", t);\n          }\n        }\n      };\n\n      ObjectReleaseTracker.track(zooThread);\n      zooThread.start();\n\n      int cnt = 0;\n      int port = -1;\n      try {\n        port = getPort();\n      } catch (IllegalStateException e) {\n\n      }\n      while (port < 1) {\n        Thread.sleep(100);\n        try {\n          port = getPort();\n        } catch (IllegalStateException e) {\n\n        }\n        if (cnt == 500) {\n          throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n        }\n        cnt++;\n      }\n      log.info(\"start zk server on port: {}\", port);\n\n      waitForServerUp(getZkHost(), 30000);\n\n      init(solrFormat);\n    } catch (Exception e) {\n      log.error(\"Error trying to run ZK Test Server\", e);\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2020-05-01 07:50:31","endLine":606,"groupId":"13188","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"(booleansolrFormat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b1/af9d95d719ef606ce26d2c9f8f6b63906d45f9.src","preCode":"  public void run(boolean solrFormat) throws InterruptedException, IOException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    try {\n      if (zooThread != null) {\n        throw new IllegalStateException(\"ZK TEST SERVER IS ALREADY RUNNING\");\n      }\n      \r\n      zooThread = new Thread(\"ZkTestServer Run Thread\") {\n\n        @Override\n        public void run() {\n          ServerConfig config = new ServerConfig() {\n\n            {\n              setClientPort(ZkTestServer.this.clientPort);\n              this.dataDir = zkDir.toFile();\n              this.dataLogDir = zkDir.toFile();\n              this.tickTime = theTickTime;\n              this.maxSessionTimeout = ZkTestServer.this.maxSessionTimeout;\n              this.minSessionTimeout = ZkTestServer.this.minSessionTimeout;\n            }\n\n            public void setClientPort(int clientPort) {\n              if (clientPortAddress != null) {\n                try {\n                  this.clientPortAddress = new InetSocketAddress(\n                      InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n                } catch (UnknownHostException e) {\n                  throw new RuntimeException(e);\n                }\n              } else {\n                this.clientPortAddress = new InetSocketAddress(clientPort);\n              }\n              log.info(\"client port:\" + this.clientPortAddress);\n            }\n          };\n          try {\n            zkServer.runFromConfig(config);\n          } catch (Throwable t) {\n            log.error(\"zkServer error\", t);\n          }\n        }\n      };\n\n      ObjectReleaseTracker.track(zooThread);\n      zooThread.start();\n\n      int cnt = 0;\n      int port = -1;\n      try {\n        port = getPort();\n      } catch (IllegalStateException e) {\n\n      }\n      while (port < 1) {\n        Thread.sleep(100);\n        try {\n          port = getPort();\n        } catch (IllegalStateException e) {\n\n        }\n        if (cnt == 500) {\n          throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n        }\n        cnt++;\n      }\n      log.info(\"start zk server on port:\" + port);\n\n      waitForServerUp(getZkHost(), 30000);\n\n      init(solrFormat);\n    } catch (Exception e) {\n      log.error(\"Error trying to run ZK Test Server\", e);\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":531,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":9,"curCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":312,"groupId":"48542","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"setClientPort","params":"(intclientPort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/62/5c005f11ec08b13f49a770c56085c784621442.src","preCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/SolrZkServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"N"}],"commitId":"9ae05e9b4f318dc0bbb352a6a65573614d0be26d","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-05-01 07:50:31","modifiedFileCount":"170","status":"M","submitter":"Erick Erickson"},{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2021-03-16 04:50:45","commitOrder":10,"curCode":"  public void run(boolean solrFormat) throws InterruptedException, IOException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    AtomicReference<Throwable> zooError = new AtomicReference<>();\n    try {\n      if (zooThread != null) {\n        throw new IllegalStateException(\"ZK TEST SERVER IS ALREADY RUNNING\");\n      }\n      Thread parentThread = Thread.currentThread();\n      \r\n      zooThread = new Thread(\"ZkTestServer Run Thread\") {\n\n        @Override\n        public void run() {\n          ServerConfig config = new ServerConfig() {\n\n            {\n              setClientPort(ZkTestServer.this.clientPort);\n              this.dataDir = zkDir.toFile();\n              this.dataLogDir = zkDir.toFile();\n              this.tickTime = theTickTime;\n              this.maxSessionTimeout = ZkTestServer.this.maxSessionTimeout;\n              this.minSessionTimeout = ZkTestServer.this.minSessionTimeout;\n            }\n\n            public void setClientPort(int clientPort) {\n              if (clientPortAddress != null) {\n                try {\n                  this.clientPortAddress = new InetSocketAddress(\n                      InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n                } catch (UnknownHostException e) {\n                  throw new RuntimeException(e);\n                }\n              } else {\n                this.clientPortAddress = new InetSocketAddress(clientPort);\n              }\n              log.info(\"client port: {}\", this.clientPortAddress);\n            }\n          };\n          try {\n            zkServer.runFromConfig(config);\n          } catch (Throwable t) {\n            zooError.set(t);\n            parentThread.interrupt();\n          }\n        }\n      };\n\n      ObjectReleaseTracker.track(zooThread);\n      zooThread.start();\n\n      int cnt = 0;\n      int port = -1;\n      try {\n        port = getPort();\n      } catch (IllegalStateException ignored) {\n        \r\n      }\n      while (port < 1) {\n        Thread.sleep(100);\n        try {\n          port = getPort();\n        } catch (IllegalStateException ignored) {\n          \r\n        }\n        if (cnt == 500) {\n          throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n        }\n        cnt++;\n      }\n      log.info(\"start zk server on port: {}\", port);\n\n      waitForServerUp(getZkHost(), 30000);\n\n      init(solrFormat);\n    } catch (Exception e) {\n      RuntimeException toThrow = new RuntimeException(\"Could not get ZK port\");\n      Throwable t = zooError.get();\n      if (t != null) {\n        toThrow.initCause(t);\n        toThrow.addSuppressed(e);\n      } else {\n        toThrow.initCause(e);\n      }\n      throw toThrow;\n    }\n  }\n","date":"2021-03-24 23:07:52","endLine":625,"groupId":"101880","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"run","params":"(booleansolrFormat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/51/12aab0e77cc7fa1846b76825224f26fff16aea.src","preCode":"  public void run(boolean solrFormat) throws InterruptedException, IOException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    try {\n      if (zooThread != null) {\n        throw new IllegalStateException(\"ZK TEST SERVER IS ALREADY RUNNING\");\n      }\n      \r\n      zooThread = new Thread(\"ZkTestServer Run Thread\") {\n\n        @Override\n        public void run() {\n          ServerConfig config = new ServerConfig() {\n\n            {\n              setClientPort(ZkTestServer.this.clientPort);\n              this.dataDir = zkDir.toFile();\n              this.dataLogDir = zkDir.toFile();\n              this.tickTime = theTickTime;\n              this.maxSessionTimeout = ZkTestServer.this.maxSessionTimeout;\n              this.minSessionTimeout = ZkTestServer.this.minSessionTimeout;\n            }\n\n            public void setClientPort(int clientPort) {\n              if (clientPortAddress != null) {\n                try {\n                  this.clientPortAddress = new InetSocketAddress(\n                      InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n                } catch (UnknownHostException e) {\n                  throw new RuntimeException(e);\n                }\n              } else {\n                this.clientPortAddress = new InetSocketAddress(clientPort);\n              }\n              log.info(\"client port: {}\", this.clientPortAddress);\n            }\n          };\n          try {\n            zkServer.runFromConfig(config);\n          } catch (Throwable t) {\n            log.error(\"zkServer error\", t);\n          }\n        }\n      };\n\n      ObjectReleaseTracker.track(zooThread);\n      zooThread.start();\n\n      int cnt = 0;\n      int port = -1;\n      try {\n        port = getPort();\n      } catch (IllegalStateException e) {\n\n      }\n      while (port < 1) {\n        Thread.sleep(100);\n        try {\n          port = getPort();\n        } catch (IllegalStateException e) {\n\n        }\n        if (cnt == 500) {\n          throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n        }\n        cnt++;\n      }\n      log.info(\"start zk server on port: {}\", port);\n\n      waitForServerUp(getZkHost(), 30000);\n\n      init(solrFormat);\n    } catch (Exception e) {\n      log.error(\"Error trying to run ZK Test Server\", e);\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"M"},{"authorDate":"2011-07-10 07:01:53","commitOrder":10,"curCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":312,"groupId":"101880","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"setClientPort","params":"(intclientPort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/62/5c005f11ec08b13f49a770c56085c784621442.src","preCode":"  public void setClientPort(int clientPort) {\n    if (clientPortAddress != null) {\n      try {\n        this.clientPortAddress = new InetSocketAddress(\n                InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n      } catch (UnknownHostException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      this.clientPortAddress = new InetSocketAddress(clientPort);\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/SolrZkServer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"N"}],"commitId":"efc73319a7c29d8c2c96a287941f740a27fe0a76","commitMessage":"@@@SOLR-15249 Properly set ZK ACLs on /security.json\n","date":"2021-03-24 23:07:52","modifiedFileCount":"10","status":"M","submitter":"Mike Drob"}]
