[{"authorTime":"2016-07-12 08:10:27","codes":[{"authorDate":"2016-05-05 15:05:25","commitOrder":4,"curCode":"  public void testTopicStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    SolrClientCache cache = new SolrClientCache();\n\n    try {\n      \r\n      expression = StreamExpressionParser.parse(\"topic(collection1, collection1, q=\\\"a_s:hello\\\", fl=\\\"id\\\", id=\\\"1000000\\\", checkpointEvery=3)\");\n\n      stream = factory.constructStream(expression);\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n\n      \r\n      assertEquals(tuples.size(), 0);\n\n      cluster.getSolrClient().commit(\"collection1\");\n      \r\n\n              expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n              stream = factory.constructStream(expression);\n              context = new StreamContext();\n              context.setSolrClientCache(cache);\n              stream.setStreamContext(context);\n              tuples = getTuples(stream);\n              assertEquals(tuples.size(), 1);\n              List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n              assertEquals(checkpoints.size(), 2);\n              Long version1 = tuples.get(0).getLong(\"_version_\");\n\n      \r\n      new UpdateRequest()\n          .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      expression = StreamExpressionParser.parse(\"topic(collection1, collection1, fl=\\\"id\\\", q=\\\"a_s:hello\\\", id=\\\"1000000\\\", checkpointEvery=2)\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      try {\n        stream.open();\n        Tuple tuple1 = stream.read();\n        assertEquals((long) tuple1.getLong(\"id\"), 10l);\n        cluster.getSolrClient().commit(\"collection1\");\n\n                \r\n                expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n                TupleStream cstream = factory.constructStream(expression);\n                context = new StreamContext();\n                context.setSolrClientCache(cache);\n                cstream.setStreamContext(context);\n                tuples = getTuples(cstream);\n\n                assertEquals(tuples.size(), 1);\n                checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n                assertEquals(checkpoints.size(), 2);\n                Long version2 = tuples.get(0).getLong(\"_version_\");\n                assertEquals(version1, version2);\n\n        Tuple tuple2 = stream.read();\n        cluster.getSolrClient().commit(\"collection1\");\n        assertEquals((long) tuple2.getLong(\"id\"), 11l);\n\n                \r\n                expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n                cstream = factory.constructStream(expression);\n                context = new StreamContext();\n                context.setSolrClientCache(cache);\n                cstream.setStreamContext(context);\n                tuples = getTuples(cstream);\n\n                assertEquals(tuples.size(), 1);\n                checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n                assertEquals(checkpoints.size(), 2);\n                Long version3 = tuples.get(0).getLong(\"_version_\");\n                assertTrue(version3 > version2);\n\n        Tuple tuple3 = stream.read();\n        assertTrue(tuple3.EOF);\n      } finally {\n        stream.close();\n      }\n\n      \r\n\n      DaemonStream dstream = null;\n      try {\n        expression = StreamExpressionParser.parse(\"daemon(topic(collection1, collection1, fl=\\\"id\\\", q=\\\"a_s:hello\\\", id=\\\"1000000\\\", checkpointEvery=2), id=\\\"test\\\", runInterval=\\\"1000\\\", queueSize=\\\"9\\\")\");\n        dstream = (DaemonStream) factory.constructStream(expression);\n        context = new StreamContext();\n        context.setSolrClientCache(cache);\n        dstream.setStreamContext(context);\n\n        \r\n        new UpdateRequest()\n            .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n            .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n            .commit(cluster.getSolrClient(), COLLECTION);\n\n        \r\n        Tuple tuple = null;\n\n        dstream.open();\n        tuple = dstream.read();\n        assertEquals(12, (long) tuple.getLong(id));\n        tuple = dstream.read();\n        assertEquals(13, (long) tuple.getLong(id));\n        cluster.getSolrClient().commit(\"collection1\"); \r\n\n        \r\n        new UpdateRequest()\n            .add(id, \"14\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n            .add(id, \"15\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n            .commit(cluster.getSolrClient(), COLLECTION);\n\n        \r\n\n        tuple = dstream.read();\n        assertEquals(14, (long) tuple.getLong(id));\n        tuple = dstream.read(); \r\n        assertEquals(15, (long) tuple.getLong(id));\n\n        dstream.shutdown();\n        tuple = dstream.read();\n        assertTrue(tuple.EOF);\n      } finally {\n        dstream.close();\n      }\n    } finally {\n      cache.close();\n    }\n  }\n","date":"2016-05-05 15:05:25","endLine":2402,"groupId":"32838","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopicStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9a/0653a39300c062f120d31a6725fdd03a28d1f6.src","preCode":"  public void testTopicStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    SolrClientCache cache = new SolrClientCache();\n\n    try {\n      \r\n      expression = StreamExpressionParser.parse(\"topic(collection1, collection1, q=\\\"a_s:hello\\\", fl=\\\"id\\\", id=\\\"1000000\\\", checkpointEvery=3)\");\n\n      stream = factory.constructStream(expression);\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n\n      \r\n      assertEquals(tuples.size(), 0);\n\n      cluster.getSolrClient().commit(\"collection1\");\n      \r\n\n              expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n              stream = factory.constructStream(expression);\n              context = new StreamContext();\n              context.setSolrClientCache(cache);\n              stream.setStreamContext(context);\n              tuples = getTuples(stream);\n              assertEquals(tuples.size(), 1);\n              List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n              assertEquals(checkpoints.size(), 2);\n              Long version1 = tuples.get(0).getLong(\"_version_\");\n\n      \r\n      new UpdateRequest()\n          .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      expression = StreamExpressionParser.parse(\"topic(collection1, collection1, fl=\\\"id\\\", q=\\\"a_s:hello\\\", id=\\\"1000000\\\", checkpointEvery=2)\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      try {\n        stream.open();\n        Tuple tuple1 = stream.read();\n        assertEquals((long) tuple1.getLong(\"id\"), 10l);\n        cluster.getSolrClient().commit(\"collection1\");\n\n                \r\n                expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n                TupleStream cstream = factory.constructStream(expression);\n                context = new StreamContext();\n                context.setSolrClientCache(cache);\n                cstream.setStreamContext(context);\n                tuples = getTuples(cstream);\n\n                assertEquals(tuples.size(), 1);\n                checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n                assertEquals(checkpoints.size(), 2);\n                Long version2 = tuples.get(0).getLong(\"_version_\");\n                assertEquals(version1, version2);\n\n        Tuple tuple2 = stream.read();\n        cluster.getSolrClient().commit(\"collection1\");\n        assertEquals((long) tuple2.getLong(\"id\"), 11l);\n\n                \r\n                expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n                cstream = factory.constructStream(expression);\n                context = new StreamContext();\n                context.setSolrClientCache(cache);\n                cstream.setStreamContext(context);\n                tuples = getTuples(cstream);\n\n                assertEquals(tuples.size(), 1);\n                checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n                assertEquals(checkpoints.size(), 2);\n                Long version3 = tuples.get(0).getLong(\"_version_\");\n                assertTrue(version3 > version2);\n\n        Tuple tuple3 = stream.read();\n        assertTrue(tuple3.EOF);\n      } finally {\n        stream.close();\n      }\n\n      \r\n\n      DaemonStream dstream = null;\n      try {\n        expression = StreamExpressionParser.parse(\"daemon(topic(collection1, collection1, fl=\\\"id\\\", q=\\\"a_s:hello\\\", id=\\\"1000000\\\", checkpointEvery=2), id=\\\"test\\\", runInterval=\\\"1000\\\", queueSize=\\\"9\\\")\");\n        dstream = (DaemonStream) factory.constructStream(expression);\n        context = new StreamContext();\n        context.setSolrClientCache(cache);\n        dstream.setStreamContext(context);\n\n        \r\n        new UpdateRequest()\n            .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n            .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n            .commit(cluster.getSolrClient(), COLLECTION);\n\n        \r\n        Tuple tuple = null;\n\n        dstream.open();\n        tuple = dstream.read();\n        assertEquals(12, (long) tuple.getLong(id));\n        tuple = dstream.read();\n        assertEquals(13, (long) tuple.getLong(id));\n        cluster.getSolrClient().commit(\"collection1\"); \r\n\n        \r\n        new UpdateRequest()\n            .add(id, \"14\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n            .add(id, \"15\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n            .commit(cluster.getSolrClient(), COLLECTION);\n\n        \r\n\n        tuple = dstream.read();\n        assertEquals(14, (long) tuple.getLong(id));\n        tuple = dstream.read(); \r\n        assertEquals(15, (long) tuple.getLong(id));\n\n        dstream.shutdown();\n        tuple = dstream.read();\n        assertTrue(tuple.EOF);\n      } finally {\n        dstream.close();\n      }\n    } finally {\n      cache.close();\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2243,"status":"NB"},{"authorDate":"2016-07-12 08:10:27","commitOrder":4,"curCode":"  public void testParallelTopicStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"parallel\", ParallelStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    SolrClientCache cache = new SolrClientCache();\n\n    try {\n      \r\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n                                                         \"workers=\\\"2\\\", \" +\n                                                         \"sort=\\\"_version_ asc\\\",\" +\n                                                         \"topic(collection1, \" +\n                                                               \"collection1, \" +\n                                                               \"q=\\\"a_s:hello\\\", \" +\n                                                               \"fl=\\\"id\\\", \" +\n                                                               \"id=\\\"1000000\\\", \" +\n                                                               \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n\n      \r\n      assertEquals(tuples.size(), 0);\n\n      cluster.getSolrClient().commit(\"collection1\");\n      \r\n\n      expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000*\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n      assertEquals(tuples.size(), 2);\n      List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n      assertEquals(checkpoints.size(), 2);\n      String id1 = tuples.get(0).getString(\"id\");\n      String id2 = tuples.get(1).getString(\"id\");\n      assertTrue(id1.equals(\"1000000_0\"));\n      assertTrue(id2.equals(\"1000000_1\"));\n\n      \r\n      new UpdateRequest()\n          .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"a_s:hello\\\", \" +\n          \"fl=\\\"id\\\", \" +\n          \"id=\\\"1000000\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      assertTopicRun(stream, \"10\", \"11\");\n\n      \r\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"a_s:hello\\\", \" +\n          \"fl=\\\"id\\\", \" +\n          \"id=\\\"2000000\\\", \" +\n          \"initialCheckpoint=\\\"0\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      assertTopicRun(stream, \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\");\n\n      \r\n      \r\n      new UpdateRequest()\n          .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      \r\n      \r\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      assertTopicRun(stream, \"12\",\"13\");\n    } finally {\n      cache.close();\n    }\n  }\n","date":"2016-07-17 10:36:30","endLine":2659,"groupId":"3108","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParallelTopicStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4a/f565ae6ad6c9e50ff7e6d46d9780e6e29dcb28.src","preCode":"  public void testParallelTopicStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"parallel\", ParallelStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    SolrClientCache cache = new SolrClientCache();\n\n    try {\n      \r\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n                                                         \"workers=\\\"2\\\", \" +\n                                                         \"sort=\\\"_version_ asc\\\",\" +\n                                                         \"topic(collection1, \" +\n                                                               \"collection1, \" +\n                                                               \"q=\\\"a_s:hello\\\", \" +\n                                                               \"fl=\\\"id\\\", \" +\n                                                               \"id=\\\"1000000\\\", \" +\n                                                               \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n\n      \r\n      assertEquals(tuples.size(), 0);\n\n      cluster.getSolrClient().commit(\"collection1\");\n      \r\n\n      expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000*\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n      assertEquals(tuples.size(), 2);\n      List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n      assertEquals(checkpoints.size(), 2);\n      String id1 = tuples.get(0).getString(\"id\");\n      String id2 = tuples.get(1).getString(\"id\");\n      assertTrue(id1.equals(\"1000000_0\"));\n      assertTrue(id2.equals(\"1000000_1\"));\n\n      \r\n      new UpdateRequest()\n          .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"a_s:hello\\\", \" +\n          \"fl=\\\"id\\\", \" +\n          \"id=\\\"1000000\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      assertTopicRun(stream, \"10\", \"11\");\n\n      \r\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"a_s:hello\\\", \" +\n          \"fl=\\\"id\\\", \" +\n          \"id=\\\"2000000\\\", \" +\n          \"initialCheckpoint=\\\"0\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      assertTopicRun(stream, \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\");\n\n      \r\n      \r\n      new UpdateRequest()\n          .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      \r\n      \r\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      assertTopicRun(stream, \"12\",\"13\");\n    } finally {\n      cache.close();\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2533,"status":"B"}],"commitId":"fc3894e837701b78a4704cf27529c34c15666586","commitMessage":"@@@SOLR-9240:Support running the topic() Streaming Expression in parallel mode.\n","date":"2016-07-17 10:36:30","modifiedFileCount":"5","status":"M","submitter":"jbernste"},{"authorTime":"2016-07-12 23:36:05","codes":[{"authorDate":"2016-05-05 15:05:25","commitOrder":5,"curCode":"  public void testTopicStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    SolrClientCache cache = new SolrClientCache();\n\n    try {\n      \r\n      expression = StreamExpressionParser.parse(\"topic(collection1, collection1, q=\\\"a_s:hello\\\", fl=\\\"id\\\", id=\\\"1000000\\\", checkpointEvery=3)\");\n\n      stream = factory.constructStream(expression);\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n\n      \r\n      assertEquals(tuples.size(), 0);\n\n      cluster.getSolrClient().commit(\"collection1\");\n      \r\n\n              expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n              stream = factory.constructStream(expression);\n              context = new StreamContext();\n              context.setSolrClientCache(cache);\n              stream.setStreamContext(context);\n              tuples = getTuples(stream);\n              assertEquals(tuples.size(), 1);\n              List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n              assertEquals(checkpoints.size(), 2);\n              Long version1 = tuples.get(0).getLong(\"_version_\");\n\n      \r\n      new UpdateRequest()\n          .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      expression = StreamExpressionParser.parse(\"topic(collection1, collection1, fl=\\\"id\\\", q=\\\"a_s:hello\\\", id=\\\"1000000\\\", checkpointEvery=2)\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      try {\n        stream.open();\n        Tuple tuple1 = stream.read();\n        assertEquals((long) tuple1.getLong(\"id\"), 10l);\n        cluster.getSolrClient().commit(\"collection1\");\n\n                \r\n                expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n                TupleStream cstream = factory.constructStream(expression);\n                context = new StreamContext();\n                context.setSolrClientCache(cache);\n                cstream.setStreamContext(context);\n                tuples = getTuples(cstream);\n\n                assertEquals(tuples.size(), 1);\n                checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n                assertEquals(checkpoints.size(), 2);\n                Long version2 = tuples.get(0).getLong(\"_version_\");\n                assertEquals(version1, version2);\n\n        Tuple tuple2 = stream.read();\n        cluster.getSolrClient().commit(\"collection1\");\n        assertEquals((long) tuple2.getLong(\"id\"), 11l);\n\n                \r\n                expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n                cstream = factory.constructStream(expression);\n                context = new StreamContext();\n                context.setSolrClientCache(cache);\n                cstream.setStreamContext(context);\n                tuples = getTuples(cstream);\n\n                assertEquals(tuples.size(), 1);\n                checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n                assertEquals(checkpoints.size(), 2);\n                Long version3 = tuples.get(0).getLong(\"_version_\");\n                assertTrue(version3 > version2);\n\n        Tuple tuple3 = stream.read();\n        assertTrue(tuple3.EOF);\n      } finally {\n        stream.close();\n      }\n\n      \r\n\n      DaemonStream dstream = null;\n      try {\n        expression = StreamExpressionParser.parse(\"daemon(topic(collection1, collection1, fl=\\\"id\\\", q=\\\"a_s:hello\\\", id=\\\"1000000\\\", checkpointEvery=2), id=\\\"test\\\", runInterval=\\\"1000\\\", queueSize=\\\"9\\\")\");\n        dstream = (DaemonStream) factory.constructStream(expression);\n        context = new StreamContext();\n        context.setSolrClientCache(cache);\n        dstream.setStreamContext(context);\n\n        \r\n        new UpdateRequest()\n            .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n            .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n            .commit(cluster.getSolrClient(), COLLECTION);\n\n        \r\n        Tuple tuple = null;\n\n        dstream.open();\n        tuple = dstream.read();\n        assertEquals(12, (long) tuple.getLong(id));\n        tuple = dstream.read();\n        assertEquals(13, (long) tuple.getLong(id));\n        cluster.getSolrClient().commit(\"collection1\"); \r\n\n        \r\n        new UpdateRequest()\n            .add(id, \"14\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n            .add(id, \"15\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n            .commit(cluster.getSolrClient(), COLLECTION);\n\n        \r\n\n        tuple = dstream.read();\n        assertEquals(14, (long) tuple.getLong(id));\n        tuple = dstream.read(); \r\n        assertEquals(15, (long) tuple.getLong(id));\n\n        dstream.shutdown();\n        tuple = dstream.read();\n        assertTrue(tuple.EOF);\n      } finally {\n        dstream.close();\n      }\n    } finally {\n      cache.close();\n    }\n  }\n","date":"2016-05-05 15:05:25","endLine":2402,"groupId":"32838","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopicStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9a/0653a39300c062f120d31a6725fdd03a28d1f6.src","preCode":"  public void testTopicStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    SolrClientCache cache = new SolrClientCache();\n\n    try {\n      \r\n      expression = StreamExpressionParser.parse(\"topic(collection1, collection1, q=\\\"a_s:hello\\\", fl=\\\"id\\\", id=\\\"1000000\\\", checkpointEvery=3)\");\n\n      stream = factory.constructStream(expression);\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n\n      \r\n      assertEquals(tuples.size(), 0);\n\n      cluster.getSolrClient().commit(\"collection1\");\n      \r\n\n              expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n              stream = factory.constructStream(expression);\n              context = new StreamContext();\n              context.setSolrClientCache(cache);\n              stream.setStreamContext(context);\n              tuples = getTuples(stream);\n              assertEquals(tuples.size(), 1);\n              List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n              assertEquals(checkpoints.size(), 2);\n              Long version1 = tuples.get(0).getLong(\"_version_\");\n\n      \r\n      new UpdateRequest()\n          .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      expression = StreamExpressionParser.parse(\"topic(collection1, collection1, fl=\\\"id\\\", q=\\\"a_s:hello\\\", id=\\\"1000000\\\", checkpointEvery=2)\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      try {\n        stream.open();\n        Tuple tuple1 = stream.read();\n        assertEquals((long) tuple1.getLong(\"id\"), 10l);\n        cluster.getSolrClient().commit(\"collection1\");\n\n                \r\n                expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n                TupleStream cstream = factory.constructStream(expression);\n                context = new StreamContext();\n                context.setSolrClientCache(cache);\n                cstream.setStreamContext(context);\n                tuples = getTuples(cstream);\n\n                assertEquals(tuples.size(), 1);\n                checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n                assertEquals(checkpoints.size(), 2);\n                Long version2 = tuples.get(0).getLong(\"_version_\");\n                assertEquals(version1, version2);\n\n        Tuple tuple2 = stream.read();\n        cluster.getSolrClient().commit(\"collection1\");\n        assertEquals((long) tuple2.getLong(\"id\"), 11l);\n\n                \r\n                expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n                cstream = factory.constructStream(expression);\n                context = new StreamContext();\n                context.setSolrClientCache(cache);\n                cstream.setStreamContext(context);\n                tuples = getTuples(cstream);\n\n                assertEquals(tuples.size(), 1);\n                checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n                assertEquals(checkpoints.size(), 2);\n                Long version3 = tuples.get(0).getLong(\"_version_\");\n                assertTrue(version3 > version2);\n\n        Tuple tuple3 = stream.read();\n        assertTrue(tuple3.EOF);\n      } finally {\n        stream.close();\n      }\n\n      \r\n\n      DaemonStream dstream = null;\n      try {\n        expression = StreamExpressionParser.parse(\"daemon(topic(collection1, collection1, fl=\\\"id\\\", q=\\\"a_s:hello\\\", id=\\\"1000000\\\", checkpointEvery=2), id=\\\"test\\\", runInterval=\\\"1000\\\", queueSize=\\\"9\\\")\");\n        dstream = (DaemonStream) factory.constructStream(expression);\n        context = new StreamContext();\n        context.setSolrClientCache(cache);\n        dstream.setStreamContext(context);\n\n        \r\n        new UpdateRequest()\n            .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n            .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n            .commit(cluster.getSolrClient(), COLLECTION);\n\n        \r\n        Tuple tuple = null;\n\n        dstream.open();\n        tuple = dstream.read();\n        assertEquals(12, (long) tuple.getLong(id));\n        tuple = dstream.read();\n        assertEquals(13, (long) tuple.getLong(id));\n        cluster.getSolrClient().commit(\"collection1\"); \r\n\n        \r\n        new UpdateRequest()\n            .add(id, \"14\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n            .add(id, \"15\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n            .commit(cluster.getSolrClient(), COLLECTION);\n\n        \r\n\n        tuple = dstream.read();\n        assertEquals(14, (long) tuple.getLong(id));\n        tuple = dstream.read(); \r\n        assertEquals(15, (long) tuple.getLong(id));\n\n        dstream.shutdown();\n        tuple = dstream.read();\n        assertTrue(tuple.EOF);\n      } finally {\n        dstream.close();\n      }\n    } finally {\n      cache.close();\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2243,"status":"NB"},{"authorDate":"2016-07-12 23:36:05","commitOrder":5,"curCode":"  public void testParallelTopicStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\", \"subject\", \"ha ha bla blah0\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\", \"subject\", \"ha ha bla blah2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\", \"subject\", \"ha ha bla blah3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\", \"subject\", \"ha ha bla blah4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\", \"subject\", \"ha ha bla blah5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\",\"subject\", \"ha ha bla blah6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\",\"subject\", \"ha ha bla blah7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\", \"subject\", \"ha ha bla blah8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\", \"subject\", \"ha ha bla blah9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\", \"subject\", \"ha ha bla blah10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"parallel\", ParallelStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    SolrClientCache cache = new SolrClientCache();\n\n    try {\n      \r\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n                                                         \"workers=\\\"2\\\", \" +\n                                                         \"sort=\\\"_version_ asc\\\",\" +\n                                                         \"topic(collection1, \" +\n                                                               \"collection1, \" +\n                                                               \"q=\\\"a_s:hello\\\", \" +\n                                                               \"fl=\\\"id\\\", \" +\n                                                               \"id=\\\"1000000\\\", \" +\n                                                               \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n\n      \r\n      assertEquals(tuples.size(), 0);\n\n      cluster.getSolrClient().commit(\"collection1\");\n      \r\n\n      expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000*\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n      assertEquals(tuples.size(), 2);\n      List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n      assertEquals(checkpoints.size(), 2);\n      String id1 = tuples.get(0).getString(\"id\");\n      String id2 = tuples.get(1).getString(\"id\");\n      assertTrue(id1.equals(\"1000000_0\"));\n      assertTrue(id2.equals(\"1000000_1\"));\n\n      \r\n      new UpdateRequest()\n          .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"a_s:hello\\\", \" +\n          \"fl=\\\"id\\\", \" +\n          \"id=\\\"1000000\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      assertTopicRun(stream, \"10\", \"11\");\n\n      \r\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"a_s:hello\\\", \" +\n          \"fl=\\\"id\\\", \" +\n          \"id=\\\"2000000\\\", \" +\n          \"initialCheckpoint=\\\"0\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      assertTopicRun(stream, \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\");\n\n      \r\n      \r\n      new UpdateRequest()\n          .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      \r\n      \r\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      assertTopicRun(stream, \"12\",\"13\");\n\n      \r\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"subject:bla\\\", \" +\n          \"fl=\\\"subject\\\", \" +\n          \"id=\\\"3000000\\\", \" +\n          \"initialCheckpoint=\\\"0\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      assertTopicSubject(stream, \"ha ha bla blah0\",\n          \"ha ha bla blah1\",\n          \"ha ha bla blah2\",\n          \"ha ha bla blah3\",\n          \"ha ha bla blah4\",\n          \"ha ha bla blah5\",\n          \"ha ha bla blah6\",\n          \"ha ha bla blah7\",\n          \"ha ha bla blah8\",\n          \"ha ha bla blah9\",\n          \"ha ha bla blah10\");\n\n    } finally {\n      cache.close();\n    }\n  }\n","date":"2016-07-17 10:36:30","endLine":2690,"groupId":"3108","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testParallelTopicStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f2/446f3128def82b8421c5b41444e84148c9e443.src","preCode":"  public void testParallelTopicStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\", \"subject\", \"ha ha bla blah0\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\", \"subject\", \"ha ha bla blah2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\", \"subject\", \"ha ha bla blah3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\", \"subject\", \"ha ha bla blah4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\", \"subject\", \"ha ha bla blah5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\",\"subject\", \"ha ha bla blah6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\",\"subject\", \"ha ha bla blah7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\", \"subject\", \"ha ha bla blah8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\", \"subject\", \"ha ha bla blah9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\", \"subject\", \"ha ha bla blah10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"parallel\", ParallelStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    SolrClientCache cache = new SolrClientCache();\n\n    try {\n      \r\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n                                                         \"workers=\\\"2\\\", \" +\n                                                         \"sort=\\\"_version_ asc\\\",\" +\n                                                         \"topic(collection1, \" +\n                                                               \"collection1, \" +\n                                                               \"q=\\\"a_s:hello\\\", \" +\n                                                               \"fl=\\\"id\\\", \" +\n                                                               \"id=\\\"1000000\\\", \" +\n                                                               \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n\n      \r\n      assertEquals(tuples.size(), 0);\n\n      cluster.getSolrClient().commit(\"collection1\");\n      \r\n\n      expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000*\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n      assertEquals(tuples.size(), 2);\n      List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n      assertEquals(checkpoints.size(), 2);\n      String id1 = tuples.get(0).getString(\"id\");\n      String id2 = tuples.get(1).getString(\"id\");\n      assertTrue(id1.equals(\"1000000_0\"));\n      assertTrue(id2.equals(\"1000000_1\"));\n\n      \r\n      new UpdateRequest()\n          .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"a_s:hello\\\", \" +\n          \"fl=\\\"id\\\", \" +\n          \"id=\\\"1000000\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      assertTopicRun(stream, \"10\", \"11\");\n\n      \r\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"a_s:hello\\\", \" +\n          \"fl=\\\"id\\\", \" +\n          \"id=\\\"2000000\\\", \" +\n          \"initialCheckpoint=\\\"0\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      assertTopicRun(stream, \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\");\n\n      \r\n      \r\n      new UpdateRequest()\n          .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      \r\n      \r\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      assertTopicRun(stream, \"12\",\"13\");\n\n      \r\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"subject:bla\\\", \" +\n          \"fl=\\\"subject\\\", \" +\n          \"id=\\\"3000000\\\", \" +\n          \"initialCheckpoint=\\\"0\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      assertTopicSubject(stream, \"ha ha bla blah0\",\n          \"ha ha bla blah1\",\n          \"ha ha bla blah2\",\n          \"ha ha bla blah3\",\n          \"ha ha bla blah4\",\n          \"ha ha bla blah5\",\n          \"ha ha bla blah6\",\n          \"ha ha bla blah7\",\n          \"ha ha bla blah8\",\n          \"ha ha bla blah9\",\n          \"ha ha bla blah10\");\n\n    } finally {\n      cache.close();\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2533,"status":"MB"}],"commitId":"c3c1f8d6e6cb57cb30e736d5ff0387400729d216","commitMessage":"@@@SOLR-9240: Added testcase with text field in the fl for topic\n","date":"2016-07-17 10:36:30","modifiedFileCount":"1","status":"M","submitter":"jbernste"},{"authorTime":"2016-10-17 01:12:00","codes":[{"authorDate":"2016-10-17 01:12:00","commitOrder":6,"curCode":"  public void testTopicStream() throws Exception {\n    Assume.assumeTrue(!useAlias);\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    SolrClientCache cache = new SolrClientCache();\n\n    try {\n      \r\n      expression = StreamExpressionParser.parse(\"topic(collection1, collection1, q=\\\"a_s:hello\\\", fl=\\\"id\\\", id=\\\"1000000\\\", checkpointEvery=3)\");\n\n      stream = factory.constructStream(expression);\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n\n      \r\n      assertEquals(tuples.size(), 0);\n\n      cluster.getSolrClient().commit(\"collection1\");\n      \r\n\n              expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n              stream = factory.constructStream(expression);\n              context = new StreamContext();\n              context.setSolrClientCache(cache);\n              stream.setStreamContext(context);\n              tuples = getTuples(stream);\n              assertEquals(tuples.size(), 1);\n              List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n              assertEquals(checkpoints.size(), 2);\n              Long version1 = tuples.get(0).getLong(\"_version_\");\n\n      \r\n      new UpdateRequest()\n          .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n      expression = StreamExpressionParser.parse(\"topic(collection1, collection1, fl=\\\"id\\\", q=\\\"a_s:hello\\\", id=\\\"1000000\\\", checkpointEvery=2)\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      try {\n        stream.open();\n        Tuple tuple1 = stream.read();\n        assertEquals((long) tuple1.getLong(\"id\"), 10l);\n        cluster.getSolrClient().commit(\"collection1\");\n\n                \r\n                expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n                TupleStream cstream = factory.constructStream(expression);\n                context = new StreamContext();\n                context.setSolrClientCache(cache);\n                cstream.setStreamContext(context);\n                tuples = getTuples(cstream);\n\n                assertEquals(tuples.size(), 1);\n                checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n                assertEquals(checkpoints.size(), 2);\n                Long version2 = tuples.get(0).getLong(\"_version_\");\n                assertEquals(version1, version2);\n\n        Tuple tuple2 = stream.read();\n        cluster.getSolrClient().commit(\"collection1\");\n        assertEquals((long) tuple2.getLong(\"id\"), 11l);\n\n                \r\n                expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n                cstream = factory.constructStream(expression);\n                context = new StreamContext();\n                context.setSolrClientCache(cache);\n                cstream.setStreamContext(context);\n                tuples = getTuples(cstream);\n\n                assertEquals(tuples.size(), 1);\n                checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n                assertEquals(checkpoints.size(), 2);\n                Long version3 = tuples.get(0).getLong(\"_version_\");\n                assertTrue(version3 > version2);\n\n        Tuple tuple3 = stream.read();\n        assertTrue(tuple3.EOF);\n      } finally {\n        stream.close();\n      }\n\n      \r\n\n      DaemonStream dstream = null;\n      try {\n        expression = StreamExpressionParser.parse(\"daemon(topic(collection1, collection1, fl=\\\"id\\\", q=\\\"a_s:hello\\\", id=\\\"1000000\\\", checkpointEvery=2), id=\\\"test\\\", runInterval=\\\"1000\\\", queueSize=\\\"9\\\")\");\n        dstream = (DaemonStream) factory.constructStream(expression);\n        context = new StreamContext();\n        context.setSolrClientCache(cache);\n        dstream.setStreamContext(context);\n\n        \r\n        new UpdateRequest()\n            .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n            .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n            .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n        \r\n        Tuple tuple = null;\n\n        dstream.open();\n        tuple = dstream.read();\n        assertEquals(12, (long) tuple.getLong(id));\n        tuple = dstream.read();\n        assertEquals(13, (long) tuple.getLong(id));\n        cluster.getSolrClient().commit(\"collection1\"); \r\n\n        \r\n        new UpdateRequest()\n            .add(id, \"14\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n            .add(id, \"15\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n            .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n        \r\n\n        tuple = dstream.read();\n        assertEquals(14, (long) tuple.getLong(id));\n        tuple = dstream.read(); \r\n        assertEquals(15, (long) tuple.getLong(id));\n\n        dstream.shutdown();\n        tuple = dstream.read();\n        assertTrue(tuple.EOF);\n      } finally {\n        dstream.close();\n      }\n    } finally {\n      cache.close();\n    }\n  }\n","date":"2016-11-16 10:33:58","endLine":2750,"groupId":"10594","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopicStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/5a0627e367f2883c2da7bb6675912d977ef555.src","preCode":"  public void testTopicStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    SolrClientCache cache = new SolrClientCache();\n\n    try {\n      \r\n      expression = StreamExpressionParser.parse(\"topic(collection1, collection1, q=\\\"a_s:hello\\\", fl=\\\"id\\\", id=\\\"1000000\\\", checkpointEvery=3)\");\n\n      stream = factory.constructStream(expression);\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n\n      \r\n      assertEquals(tuples.size(), 0);\n\n      cluster.getSolrClient().commit(\"collection1\");\n      \r\n\n              expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n              stream = factory.constructStream(expression);\n              context = new StreamContext();\n              context.setSolrClientCache(cache);\n              stream.setStreamContext(context);\n              tuples = getTuples(stream);\n              assertEquals(tuples.size(), 1);\n              List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n              assertEquals(checkpoints.size(), 2);\n              Long version1 = tuples.get(0).getLong(\"_version_\");\n\n      \r\n      new UpdateRequest()\n          .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      expression = StreamExpressionParser.parse(\"topic(collection1, collection1, fl=\\\"id\\\", q=\\\"a_s:hello\\\", id=\\\"1000000\\\", checkpointEvery=2)\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      try {\n        stream.open();\n        Tuple tuple1 = stream.read();\n        assertEquals((long) tuple1.getLong(\"id\"), 10l);\n        cluster.getSolrClient().commit(\"collection1\");\n\n                \r\n                expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n                TupleStream cstream = factory.constructStream(expression);\n                context = new StreamContext();\n                context.setSolrClientCache(cache);\n                cstream.setStreamContext(context);\n                tuples = getTuples(cstream);\n\n                assertEquals(tuples.size(), 1);\n                checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n                assertEquals(checkpoints.size(), 2);\n                Long version2 = tuples.get(0).getLong(\"_version_\");\n                assertEquals(version1, version2);\n\n        Tuple tuple2 = stream.read();\n        cluster.getSolrClient().commit(\"collection1\");\n        assertEquals((long) tuple2.getLong(\"id\"), 11l);\n\n                \r\n                expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n                cstream = factory.constructStream(expression);\n                context = new StreamContext();\n                context.setSolrClientCache(cache);\n                cstream.setStreamContext(context);\n                tuples = getTuples(cstream);\n\n                assertEquals(tuples.size(), 1);\n                checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n                assertEquals(checkpoints.size(), 2);\n                Long version3 = tuples.get(0).getLong(\"_version_\");\n                assertTrue(version3 > version2);\n\n        Tuple tuple3 = stream.read();\n        assertTrue(tuple3.EOF);\n      } finally {\n        stream.close();\n      }\n\n      \r\n\n      DaemonStream dstream = null;\n      try {\n        expression = StreamExpressionParser.parse(\"daemon(topic(collection1, collection1, fl=\\\"id\\\", q=\\\"a_s:hello\\\", id=\\\"1000000\\\", checkpointEvery=2), id=\\\"test\\\", runInterval=\\\"1000\\\", queueSize=\\\"9\\\")\");\n        dstream = (DaemonStream) factory.constructStream(expression);\n        context = new StreamContext();\n        context.setSolrClientCache(cache);\n        dstream.setStreamContext(context);\n\n        \r\n        new UpdateRequest()\n            .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n            .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n            .commit(cluster.getSolrClient(), COLLECTION);\n\n        \r\n        Tuple tuple = null;\n\n        dstream.open();\n        tuple = dstream.read();\n        assertEquals(12, (long) tuple.getLong(id));\n        tuple = dstream.read();\n        assertEquals(13, (long) tuple.getLong(id));\n        cluster.getSolrClient().commit(\"collection1\"); \r\n\n        \r\n        new UpdateRequest()\n            .add(id, \"14\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n            .add(id, \"15\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n            .commit(cluster.getSolrClient(), COLLECTION);\n\n        \r\n\n        tuple = dstream.read();\n        assertEquals(14, (long) tuple.getLong(id));\n        tuple = dstream.read(); \r\n        assertEquals(15, (long) tuple.getLong(id));\n\n        dstream.shutdown();\n        tuple = dstream.read();\n        assertTrue(tuple.EOF);\n      } finally {\n        dstream.close();\n      }\n    } finally {\n      cache.close();\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2590,"status":"M"},{"authorDate":"2016-10-17 01:12:00","commitOrder":6,"curCode":"  public void testParallelTopicStream() throws Exception {\n\n    Assume.assumeTrue(!useAlias);\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\", \"subject\", \"ha ha bla blah0\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\", \"subject\", \"ha ha bla blah2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\", \"subject\", \"ha ha bla blah3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\", \"subject\", \"ha ha bla blah4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\", \"subject\", \"ha ha bla blah5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\",\"subject\", \"ha ha bla blah6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\",\"subject\", \"ha ha bla blah7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\", \"subject\", \"ha ha bla blah8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\", \"subject\", \"ha ha bla blah9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\", \"subject\", \"ha ha bla blah10\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"parallel\", ParallelStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    SolrClientCache cache = new SolrClientCache();\n\n    try {\n      \r\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n                                                         \"workers=\\\"2\\\", \" +\n                                                         \"sort=\\\"_version_ asc\\\",\" +\n                                                         \"topic(collection1, \" +\n                                                               \"collection1, \" +\n                                                               \"q=\\\"a_s:hello\\\", \" +\n                                                               \"fl=\\\"id\\\", \" +\n                                                               \"id=\\\"1000000\\\", \" +\n                                                               \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n\n      \r\n      assertEquals(tuples.size(), 0);\n\n      cluster.getSolrClient().commit(\"collection1\");\n      \r\n\n      expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000*\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n      assertEquals(tuples.size(), 2);\n      List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n      assertEquals(checkpoints.size(), 2);\n      String id1 = tuples.get(0).getString(\"id\");\n      String id2 = tuples.get(1).getString(\"id\");\n      assertTrue(id1.equals(\"1000000_0\"));\n      assertTrue(id2.equals(\"1000000_1\"));\n\n      \r\n      new UpdateRequest()\n          .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"a_s:hello\\\", \" +\n          \"fl=\\\"id\\\", \" +\n          \"id=\\\"1000000\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      assertTopicRun(stream, \"10\", \"11\");\n\n      \r\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"a_s:hello\\\", \" +\n          \"fl=\\\"id\\\", \" +\n          \"id=\\\"2000000\\\", \" +\n          \"initialCheckpoint=\\\"0\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      assertTopicRun(stream, \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\");\n\n      \r\n      \r\n      new UpdateRequest()\n          .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n      \r\n      \r\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      assertTopicRun(stream, \"12\",\"13\");\n\n      \r\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"subject:bla\\\", \" +\n          \"fl=\\\"subject\\\", \" +\n          \"id=\\\"3000000\\\", \" +\n          \"initialCheckpoint=\\\"0\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      assertTopicSubject(stream, \"ha ha bla blah0\",\n          \"ha ha bla blah1\",\n          \"ha ha bla blah2\",\n          \"ha ha bla blah3\",\n          \"ha ha bla blah4\",\n          \"ha ha bla blah5\",\n          \"ha ha bla blah6\",\n          \"ha ha bla blah7\",\n          \"ha ha bla blah8\",\n          \"ha ha bla blah9\",\n          \"ha ha bla blah10\");\n\n    } finally {\n      cache.close();\n    }\n  }\n","date":"2016-11-16 10:33:58","endLine":2912,"groupId":"10594","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testParallelTopicStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/5a0627e367f2883c2da7bb6675912d977ef555.src","preCode":"  public void testParallelTopicStream() throws Exception {\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"1\", \"subject\", \"ha ha bla blah0\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"2\", \"subject\", \"ha ha bla blah2\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\", \"subject\", \"ha ha bla blah3\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\", \"subject\", \"ha ha bla blah4\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"5\", \"subject\", \"ha ha bla blah5\")\n        .add(id, \"5\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"6\",\"subject\", \"ha ha bla blah6\")\n        .add(id, \"6\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"7\",\"subject\", \"ha ha bla blah7\")\n        .add(id, \"7\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"8\", \"subject\", \"ha ha bla blah8\")\n        .add(id, \"8\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\", \"subject\", \"ha ha bla blah9\")\n        .add(id, \"9\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\", \"subject\", \"ha ha bla blah10\")\n        .commit(cluster.getSolrClient(), COLLECTION);\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(\"collection1\", cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"topic\", TopicStream.class)\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"parallel\", ParallelStream.class)\n        .withFunctionName(\"daemon\", DaemonStream.class);\n\n    StreamExpression expression;\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    SolrClientCache cache = new SolrClientCache();\n\n    try {\n      \r\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n                                                         \"workers=\\\"2\\\", \" +\n                                                         \"sort=\\\"_version_ asc\\\",\" +\n                                                         \"topic(collection1, \" +\n                                                               \"collection1, \" +\n                                                               \"q=\\\"a_s:hello\\\", \" +\n                                                               \"fl=\\\"id\\\", \" +\n                                                               \"id=\\\"1000000\\\", \" +\n                                                               \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      StreamContext context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n\n      \r\n      assertEquals(tuples.size(), 0);\n\n      cluster.getSolrClient().commit(\"collection1\");\n      \r\n\n      expression = StreamExpressionParser.parse(\"search(collection1, q=\\\"id:1000000*\\\", fl=\\\"id, checkpoint_ss, _version_\\\", sort=\\\"id asc\\\")\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      tuples = getTuples(stream);\n      assertEquals(tuples.size(), 2);\n      List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\");\n      assertEquals(checkpoints.size(), 2);\n      String id1 = tuples.get(0).getString(\"id\");\n      String id2 = tuples.get(1).getString(\"id\");\n      assertTrue(id1.equals(\"1000000_0\"));\n      assertTrue(id2.equals(\"1000000_1\"));\n\n      \r\n      new UpdateRequest()\n          .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"a_s:hello\\\", \" +\n          \"fl=\\\"id\\\", \" +\n          \"id=\\\"1000000\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      assertTopicRun(stream, \"10\", \"11\");\n\n      \r\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"a_s:hello\\\", \" +\n          \"fl=\\\"id\\\", \" +\n          \"id=\\\"2000000\\\", \" +\n          \"initialCheckpoint=\\\"0\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      assertTopicRun(stream, \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\");\n\n      \r\n      \r\n      new UpdateRequest()\n          .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"9\")\n          .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"10\")\n          .commit(cluster.getSolrClient(), COLLECTION);\n\n      \r\n      \r\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n      assertTopicRun(stream, \"12\",\"13\");\n\n      \r\n\n      expression = StreamExpressionParser.parse(\"parallel(collection1, \" +\n          \"workers=\\\"2\\\", \" +\n          \"sort=\\\"_version_ asc\\\",\" +\n          \"topic(collection1, \" +\n          \"collection1, \" +\n          \"q=\\\"subject:bla\\\", \" +\n          \"fl=\\\"subject\\\", \" +\n          \"id=\\\"3000000\\\", \" +\n          \"initialCheckpoint=\\\"0\\\", \" +\n          \"partitionKeys=\\\"id\\\"))\");\n\n      stream = factory.constructStream(expression);\n      context = new StreamContext();\n      context.setSolrClientCache(cache);\n      stream.setStreamContext(context);\n\n      assertTopicSubject(stream, \"ha ha bla blah0\",\n          \"ha ha bla blah1\",\n          \"ha ha bla blah2\",\n          \"ha ha bla blah3\",\n          \"ha ha bla blah4\",\n          \"ha ha bla blah5\",\n          \"ha ha bla blah6\",\n          \"ha ha bla blah7\",\n          \"ha ha bla blah8\",\n          \"ha ha bla blah9\",\n          \"ha ha bla blah10\");\n\n    } finally {\n      cache.close();\n    }\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2753,"status":"M"}],"commitId":"ace423e958182aa8ad6329f5cc1dc3ca6cd877c7","commitMessage":"@@@SOLR-9077: Streaming expressions should support collection alias\n","date":"2016-11-16 10:33:58","modifiedFileCount":"11","status":"M","submitter":"Kevin Risden"}]
