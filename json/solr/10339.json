[{"authorTime":"2015-07-04 22:24:35","codes":[{"authorDate":"2015-07-04 22:24:35","commitOrder":1,"curCode":"  public MinMetric(StreamExpression expression, StreamFactory factory) throws IOException{\n    \r\n    String functionName = expression.getFunctionName();\n    String columnName = factory.getValueOperand(expression, 0);\n    \n    \r\n    if(null == columnName){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expected %s(columnName)\", expression, functionName));\n    }\n    if(1 != expression.getParameters().size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\", expression));\n    }\n    \n    init(functionName, columnName);    \n  }\n","date":"2015-07-04 22:24:35","endLine":53,"groupId":"57344","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"MinMetric","params":"(StreamExpressionexpression@StreamFactoryfactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/48/b77ae13ecd92ca5741843dead7774defb8928c.src","preCode":"  public MinMetric(StreamExpression expression, StreamFactory factory) throws IOException{\n    \r\n    String functionName = expression.getFunctionName();\n    String columnName = factory.getValueOperand(expression, 0);\n    \n    \r\n    if(null == columnName){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expected %s(columnName)\", expression, functionName));\n    }\n    if(1 != expression.getParameters().size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\", expression));\n    }\n    \n    init(functionName, columnName);    \n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/metrics/MinMetric.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"},{"authorDate":"2015-07-04 22:24:35","commitOrder":1,"curCode":"  public CountMetric(StreamExpression expression, StreamFactory factory) throws IOException{\n    \r\n    String functionName = expression.getFunctionName();\n    String columnName = factory.getValueOperand(expression, 0);\n    \n    \r\n    if(!\"*\".equals(columnName)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expected %s(*)\", expression, functionName));\n    }\n    if(1 != expression.getParameters().size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\", expression));\n    }\n    \n    init(functionName);\n    \n  }\n","date":"2015-07-04 22:24:35","endLine":52,"groupId":"57344","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"CountMetric","params":"(StreamExpressionexpression@StreamFactoryfactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8a/56164d5418f609e83470383820a7ac4b6503c4.src","preCode":"  public CountMetric(StreamExpression expression, StreamFactory factory) throws IOException{\n    \r\n    String functionName = expression.getFunctionName();\n    String columnName = factory.getValueOperand(expression, 0);\n    \n    \r\n    if(!\"*\".equals(columnName)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expected %s(*)\", expression, functionName));\n    }\n    if(1 != expression.getParameters().size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\", expression));\n    }\n    \n    init(functionName);\n    \n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/metrics/CountMetric.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"}],"commitId":"b22f711b6316df59789ac7421e972c0530cc0aef","commitMessage":"@@@SOLR-7707: Add StreamExpression Support to RollupStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1689168 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-07-04 22:24:35","modifiedFileCount":"17","status":"B","submitter":"Joel Bernstein"},{"authorTime":"2017-02-16 02:55:09","codes":[{"authorDate":"2015-07-04 22:24:35","commitOrder":2,"curCode":"  public MinMetric(StreamExpression expression, StreamFactory factory) throws IOException{\n    \r\n    String functionName = expression.getFunctionName();\n    String columnName = factory.getValueOperand(expression, 0);\n    \n    \r\n    if(null == columnName){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expected %s(columnName)\", expression, functionName));\n    }\n    if(1 != expression.getParameters().size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\", expression));\n    }\n    \n    init(functionName, columnName);    \n  }\n","date":"2015-07-04 22:24:35","endLine":53,"groupId":"10339","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"MinMetric","params":"(StreamExpressionexpression@StreamFactoryfactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/48/b77ae13ecd92ca5741843dead7774defb8928c.src","preCode":"  public MinMetric(StreamExpression expression, StreamFactory factory) throws IOException{\n    \r\n    String functionName = expression.getFunctionName();\n    String columnName = factory.getValueOperand(expression, 0);\n    \n    \r\n    if(null == columnName){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expected %s(columnName)\", expression, functionName));\n    }\n    if(1 != expression.getParameters().size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\", expression));\n    }\n    \n    init(functionName, columnName);    \n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/metrics/MinMetric.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"N"},{"authorDate":"2017-02-16 02:55:09","commitOrder":2,"curCode":"  public CountMetric(StreamExpression expression, StreamFactory factory) throws IOException{\n    \r\n    String functionName = expression.getFunctionName();\n    String columnName = factory.getValueOperand(expression, 0);\n\n    if(1 != expression.getParameters().size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\", expression));\n    }\n\n    init(functionName, columnName);\n  }\n","date":"2017-02-16 02:55:09","endLine":48,"groupId":"10339","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"CountMetric","params":"(StreamExpressionexpression@StreamFactoryfactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/61/b83398e30823b23934c0c83d5b11a67df6f20b.src","preCode":"  public CountMetric(StreamExpression expression, StreamFactory factory) throws IOException{\n    \r\n    String functionName = expression.getFunctionName();\n    String columnName = factory.getValueOperand(expression, 0);\n    \n    \r\n    if(!\"*\".equals(columnName)){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expected %s(*)\", expression, functionName));\n    }\n    if(1 != expression.getParameters().size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\", expression));\n    }\n    \n    init(functionName);\n    \n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/metrics/CountMetric.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"bfeb4e7f848221e946f51f96ebb2e900e84e787f","commitMessage":"@@@Merge branch 'jira/solr-8593'\n","date":"2017-02-16 02:55:09","modifiedFileCount":"11","status":"M","submitter":"Joel Bernstein"}]
