[{"authorTime":"2017-02-15 08:24:25","codes":[{"authorDate":"2017-02-15 08:24:25","commitOrder":1,"curCode":"  private void testMultiValuedIntPointFieldsAtomicUpdates(String field, String type) throws Exception {\n    assertU(adoc(sdoc(\"id\", \"1\", field, \"1\")));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=1\");\n\n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"add\", 2))));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=2\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"remove\", 1))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=1\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"set\", ImmutableList.of(1, 2, 3)))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='3']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=3\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"removeregex\", \".*\"))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=0\");\n    \n  }\n","date":"2017-02-15 08:24:25","endLine":1299,"groupId":"58945","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultiValuedIntPointFieldsAtomicUpdates","params":"(Stringfield@Stringtype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bf/34ce4f5607742d1fdf0fc09ffdec278617379b.src","preCode":"  private void testMultiValuedIntPointFieldsAtomicUpdates(String field, String type) throws Exception {\n    assertU(adoc(sdoc(\"id\", \"1\", field, \"1\")));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=1\");\n\n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"add\", 2))));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=2\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"remove\", 1))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=1\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"set\", ImmutableList.of(1, 2, 3)))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='3']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=3\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"removeregex\", \".*\"))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=0\");\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestPointFields.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1261,"status":"B"},{"authorDate":"2017-02-15 08:24:25","commitOrder":1,"curCode":"  private void testMultiValuedFloatPointFieldsAtomicUpdates(String field, String type) throws Exception {\n    assertU(adoc(sdoc(\"id\", \"1\", field, \"1.0\")));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1.0']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=1\");\n\n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"add\", 2.1f))));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1.0']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2.1']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=2\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"remove\", 1f))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2.1']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=1\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"set\", ImmutableList.of(1f, 2f, 3f)))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1.0']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2.0']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='3.0']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=3\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"removeregex\", \".*\"))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=0\");\n    \n  }\n","date":"2017-02-15 08:24:25","endLine":1339,"groupId":"58945","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiValuedFloatPointFieldsAtomicUpdates","params":"(Stringfield@Stringtype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bf/34ce4f5607742d1fdf0fc09ffdec278617379b.src","preCode":"  private void testMultiValuedFloatPointFieldsAtomicUpdates(String field, String type) throws Exception {\n    assertU(adoc(sdoc(\"id\", \"1\", field, \"1.0\")));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1.0']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=1\");\n\n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"add\", 2.1f))));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1.0']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2.1']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=2\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"remove\", 1f))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2.1']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=1\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"set\", ImmutableList.of(1f, 2f, 3f)))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1.0']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2.0']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='3.0']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=3\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"removeregex\", \".*\"))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=0\");\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestPointFields.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1301,"status":"B"}],"commitId":"26298f35df118aad186e6eaf1ea5c2e5f50d607f","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n","date":"2017-02-15 08:24:25","modifiedFileCount":"40","status":"B","submitter":"Noble Paul"},{"authorTime":"2017-07-15 01:54:27","codes":[{"authorDate":"2017-07-15 01:54:27","commitOrder":2,"curCode":"  public void testMultiValuedIntPointFieldsAtomicUpdates() throws Exception {\n    if (!Boolean.getBoolean(\"enable.update.log\")) {\n      return;\n    }\n    String[] ints = toStringArray(getRandomInts(3, false));\n    doTestMultiValuedPointFieldsAtomicUpdates(\"number_p_i_mv\", \"int\", ints);\n    doTestMultiValuedPointFieldsAtomicUpdates(\"number_p_i_ni_mv_dv\", \"int\", ints);\n    doTestMultiValuedPointFieldsAtomicUpdates(\"number_p_i_dv_ns_mv\", \"int\", ints);\n  }\n","date":"2017-07-15 01:54:35","endLine":426,"groupId":"102660","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultiValuedIntPointFieldsAtomicUpdates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/99/4e55e42bf83ea67b994b5fb6824d315756699a.src","preCode":"  private void testMultiValuedIntPointFieldsAtomicUpdates(String field, String type) throws Exception {\n    assertU(adoc(sdoc(\"id\", \"1\", field, \"1\")));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=1\");\n\n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"add\", 2))));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=2\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"remove\", 1))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=1\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"set\", ImmutableList.of(1, 2, 3)))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='3']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=3\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"removeregex\", \".*\"))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=0\");\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestPointFields.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":418,"status":"M"},{"authorDate":"2017-07-15 01:54:27","commitOrder":2,"curCode":"  public void testMultiValuedFloatPointFieldsAtomicUpdates() throws Exception {\n    if (!Boolean.getBoolean(\"enable.update.log\")) {\n      return;\n    }\n    String[] floats = toStringArray(getRandomFloats(3, false));\n    doTestMultiValuedPointFieldsAtomicUpdates(\"number_p_f_mv\", \"float\", floats);\n    doTestMultiValuedPointFieldsAtomicUpdates(\"number_p_f_ni_mv_dv\", \"float\", floats);\n    doTestMultiValuedPointFieldsAtomicUpdates(\"number_p_f_dv_ns_mv\", \"float\", floats);\n  }\n","date":"2017-07-15 01:54:35","endLine":1248,"groupId":"102660","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiValuedFloatPointFieldsAtomicUpdates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/99/4e55e42bf83ea67b994b5fb6824d315756699a.src","preCode":"  private void testMultiValuedFloatPointFieldsAtomicUpdates(String field, String type) throws Exception {\n    assertU(adoc(sdoc(\"id\", \"1\", field, \"1.0\")));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1.0']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=1\");\n\n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"add\", 2.1f))));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1.0']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2.1']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=2\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"remove\", 1f))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2.1']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=1\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"set\", ImmutableList.of(1f, 2f, 3f)))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='1.0']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='2.0']\",\n        \"//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \"[.='3.0']\",\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=3\");\n    \n    assertU(adoc(sdoc(\"id\", \"1\", field, ImmutableMap.of(\"removeregex\", \".*\"))));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"id:1\"),\n        \"count(//result/doc[1]/arr[@name='\" + field + \"']/\" + type + \")=0\");\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestPointFields.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1240,"status":"M"}],"commitId":"82515fd329ce02cee68ea533e7d4bfb022b2fb00","commitMessage":"@@@SOLR-10796: TestPointFields: increase randomized testing of non-trivial values (part 2)\n","date":"2017-07-15 01:54:35","modifiedFileCount":"1","status":"M","submitter":"Steve Rowe"}]
