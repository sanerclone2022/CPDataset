[{"authorTime":"2019-02-01 05:10:28","codes":[{"authorDate":"2017-02-12 06:07:15","commitOrder":6,"curCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    masterJetty.stop();\n    slaveJetty.stop();\n    masterJetty = slaveJetty = null;\n    master = slave = null;\n    masterClient.close();\n    slaveClient.close();\n    masterClient = slaveClient = null;\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","date":"2017-02-12 06:08:42","endLine":153,"groupId":"60565","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"tearDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9d/eb51de82568f1e73e85f01fc5dd2299baa3869.src","preCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    masterJetty.stop();\n    slaveJetty.stop();\n    masterJetty = slaveJetty = null;\n    master = slave = null;\n    masterClient.close();\n    slaveClient.close();\n    masterClient = slaveClient = null;\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"NB"},{"authorDate":"2019-02-01 05:10:28","commitOrder":6,"curCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    masterJetty.stop();\n    slaveJetty.stop();\n    masterJetty = slaveJetty = null;\n    master = slave = null;\n    masterClient.close();\n    slaveClient.close();\n    masterClient = slaveClient = null;\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","date":"2019-02-06 20:15:07","endLine":94,"groupId":"60565","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"tearDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/32c754a0afbb81ff607d6b40ef53abfdff997e.src","preCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    masterJetty.stop();\n    slaveJetty.stop();\n    masterJetty = slaveJetty = null;\n    master = slave = null;\n    masterClient.close();\n    slaveClient.close();\n    masterClient = slaveClient = null;\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerDiskOverFlow.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"}],"commitId":"b061947e9103ddbedd36ff684ce65b39ef263229","commitMessage":"@@@SOLR-12999: Index replication could delete segments before downloading segments from master if there is not enough disk space\n","date":"2019-02-06 20:15:07","modifiedFileCount":"6","status":"M","submitter":"Noble Paul"},{"authorTime":"2019-05-15 04:35:19","codes":[{"authorDate":"2017-02-12 06:07:15","commitOrder":7,"curCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    masterJetty.stop();\n    slaveJetty.stop();\n    masterJetty = slaveJetty = null;\n    master = slave = null;\n    masterClient.close();\n    slaveClient.close();\n    masterClient = slaveClient = null;\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","date":"2017-02-12 06:08:42","endLine":153,"groupId":"60565","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"tearDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9d/eb51de82568f1e73e85f01fc5dd2299baa3869.src","preCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    masterJetty.stop();\n    slaveJetty.stop();\n    masterJetty = slaveJetty = null;\n    master = slave = null;\n    masterClient.close();\n    slaveClient.close();\n    masterClient = slaveClient = null;\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"N"},{"authorDate":"2019-05-15 04:35:19","commitOrder":7,"curCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    masterJetty.stop();\n    slaveJetty.stop();\n    masterJetty = slaveJetty = null;\n    master = slave = null;\n    masterClient.close();\n    slaveClient.close();\n    masterClient = slaveClient = null;\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n    \n    IndexFetcher.usableDiskSpaceProvider = originalDiskSpaceprovider;\n    IndexFetcher.testWait = originalTestWait;\n  }\n","date":"2019-05-15 04:35:19","endLine":105,"groupId":"60565","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"tearDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/36/8d08f33d9c1fd5cf2654cc0eab98baacb088ad.src","preCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    masterJetty.stop();\n    slaveJetty.stop();\n    masterJetty = slaveJetty = null;\n    master = slave = null;\n    masterClient.close();\n    slaveClient.close();\n    masterClient = slaveClient = null;\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerDiskOverFlow.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"bf8c6ea435a39564d2a7de5c37cc9e522ca5b9cb","commitMessage":"@@@SOLR-12999: Harden TestReplicationHandlerDiskOverFlow against sporadic timing failures\n\n - ensure IndexFetcher injection is reset in @After method\n - replace System.out with Logger\n - Log and fail on any exceptions in any callbacks/threads\n - use CyclicBarrier (instead of CountdownLatch) to ensure the Query Thread loop doesn't monopolize\n   CPU preventing IndexFetcher callback from ever being run\n\n(Some of these improvements directly address jenkins failures we've been seeing)\n","date":"2019-05-15 04:35:19","modifiedFileCount":"1","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2019-06-28 01:28:06","codes":[{"authorDate":"2019-06-28 01:28:06","commitOrder":8,"curCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    if (null != masterJetty) {\n      masterJetty.stop();\n      masterJetty = null;\n    }\n    if (null != slaveJetty) {\n      slaveJetty.stop();\n      slaveJetty = null;\n    }\n    if (null != masterClient) {\n      masterClient.close();\n      masterClient = null;\n    }\n    if (null != slaveClient) {\n      slaveClient.close();\n      slaveClient = null;\n    }\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","date":"2019-06-28 01:28:06","endLine":167,"groupId":"39661","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"tearDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c0/80ba394c902d98c6991978a55c16dfdb451959.src","preCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    masterJetty.stop();\n    slaveJetty.stop();\n    masterJetty = slaveJetty = null;\n    master = slave = null;\n    masterClient.close();\n    slaveClient.close();\n    masterClient = slaveClient = null;\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2019-06-28 01:28:06","commitOrder":8,"curCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    if (null != masterJetty) {\n      masterJetty.stop();\n      masterJetty = null;\n    }\n    if (null != slaveJetty) {\n      slaveJetty.stop();\n       slaveJetty = null;\n    }\n    master = slave = null;\n    if (null != masterClient) {\n      masterClient.close();\n      masterClient = null;\n    }\n    if (null != slaveClient) {\n      slaveClient.close();\n      slaveClient = null;\n    }\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n    \n    IndexFetcher.usableDiskSpaceProvider = originalDiskSpaceprovider;\n    IndexFetcher.testWait = originalTestWait;\n  }\n","date":"2019-06-28 01:28:06","endLine":115,"groupId":"39661","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"tearDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9b/997d50e60c89639ac7d64d23962579a0b60a46.src","preCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    masterJetty.stop();\n    slaveJetty.stop();\n    masterJetty = slaveJetty = null;\n    master = slave = null;\n    masterClient.close();\n    slaveClient.close();\n    masterClient = slaveClient = null;\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n    \n    IndexFetcher.usableDiskSpaceProvider = originalDiskSpaceprovider;\n    IndexFetcher.testWait = originalTestWait;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerDiskOverFlow.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"7e57d3a9d93e8acb77ce299f8c79d92df563b864","commitMessage":"@@@SOLR-13574: Fix many test and test-framework classes to not fail on After/AfterClass cleanup if assumptions fail in Before/BeforeClass setup\n","date":"2019-06-28 01:28:06","modifiedFileCount":"93","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2020-08-06 05:52:48","codes":[{"authorDate":"2020-08-06 05:52:48","commitOrder":9,"curCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    if (null != leaderJetty) {\n      leaderJetty.stop();\n      leaderJetty = null;\n    }\n    if (null != followerJetty) {\n      followerJetty.stop();\n      followerJetty = null;\n    }\n    if (null != leaderClient) {\n      leaderClient.close();\n      leaderClient = null;\n    }\n    if (null != followerClient) {\n      followerClient.close();\n      followerClient = null;\n    }\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","date":"2020-08-06 05:52:48","endLine":180,"groupId":"39661","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"tearDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c5/38551811a59370825cce40fc406a1e85a37f6f.src","preCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    if (null != masterJetty) {\n      masterJetty.stop();\n      masterJetty = null;\n    }\n    if (null != slaveJetty) {\n      slaveJetty.stop();\n      slaveJetty = null;\n    }\n    if (null != masterClient) {\n      masterClient.close();\n      masterClient = null;\n    }\n    if (null != slaveClient) {\n      slaveClient.close();\n      slaveClient = null;\n    }\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"},{"authorDate":"2020-08-06 05:52:48","commitOrder":9,"curCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    if (null != leaderJetty) {\n      leaderJetty.stop();\n      leaderJetty = null;\n    }\n    if (null != followerJetty) {\n      followerJetty.stop();\n       followerJetty = null;\n    }\n    leader = follower = null;\n    if (null != leaderClient) {\n      leaderClient.close();\n      leaderClient = null;\n    }\n    if (null != followerClient) {\n      followerClient.close();\n      followerClient = null;\n    }\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n    \n    IndexFetcher.usableDiskSpaceProvider = originalDiskSpaceprovider;\n    IndexFetcher.testWait = originalTestWait;\n  }\n","date":"2020-08-06 05:52:48","endLine":115,"groupId":"39661","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"tearDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b3/254bff1d1591436ef3bd16d423710a61c57c72.src","preCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    if (null != masterJetty) {\n      masterJetty.stop();\n      masterJetty = null;\n    }\n    if (null != slaveJetty) {\n      slaveJetty.stop();\n       slaveJetty = null;\n    }\n    master = slave = null;\n    if (null != masterClient) {\n      masterClient.close();\n      masterClient = null;\n    }\n    if (null != slaveClient) {\n      slaveClient.close();\n      slaveClient = null;\n    }\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n    \n    IndexFetcher.usableDiskSpaceProvider = originalDiskSpaceprovider;\n    IndexFetcher.testWait = originalTestWait;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerDiskOverFlow.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"7110118ad4f1a68f39a1db1caab374594098243e","commitMessage":"@@@SOLR-14702: Remove oppressive language (part1) (#1711)\n\nReplace references to \"master\" and \"slave\" with \"leader\" and \"follower\"","date":"2020-08-06 05:52:48","modifiedFileCount":"28","status":"M","submitter":"Marcus"},{"authorTime":"2021-03-24 22:34:08","codes":[{"authorDate":"2021-03-24 22:34:08","commitOrder":10,"curCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    systemClearPropertySolrDisableUrlAllowList();\n    if (null != leaderJetty) {\n      leaderJetty.stop();\n      leaderJetty = null;\n    }\n    if (null != followerJetty) {\n      followerJetty.stop();\n      followerJetty = null;\n    }\n    if (null != leaderClient) {\n      leaderClient.close();\n      leaderClient = null;\n    }\n    if (null != followerClient) {\n      followerClient.close();\n      followerClient = null;\n    }\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","date":"2021-04-26 21:44:20","endLine":183,"groupId":"103449","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"tearDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/85/9fc3a18393ea81af3259d5d4a1ab1abd02e713.src","preCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    if (null != leaderJetty) {\n      leaderJetty.stop();\n      leaderJetty = null;\n    }\n    if (null != followerJetty) {\n      followerJetty.stop();\n      followerJetty = null;\n    }\n    if (null != leaderClient) {\n      leaderClient.close();\n      leaderClient = null;\n    }\n    if (null != followerClient) {\n      followerClient.close();\n      followerClient = null;\n    }\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2021-03-24 22:34:08","commitOrder":10,"curCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    if (null != leaderJetty) {\n      leaderJetty.stop();\n      leaderJetty = null;\n    }\n    if (null != followerJetty) {\n      followerJetty.stop();\n       followerJetty = null;\n    }\n    leader = follower = null;\n    if (null != leaderClient) {\n      leaderClient.close();\n      leaderClient = null;\n    }\n    if (null != followerClient) {\n      followerClient.close();\n      followerClient = null;\n    }\n    System.clearProperty(TEST_URL_ALLOW_LIST);\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n    \n    IndexFetcher.usableDiskSpaceProvider = originalDiskSpaceprovider;\n    IndexFetcher.testWait = originalTestWait;\n  }\n","date":"2021-04-26 21:44:20","endLine":117,"groupId":"103449","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"tearDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/09/822173599c74a2f2c3f30586ba927daf53ea87.src","preCode":"  public void tearDown() throws Exception {\n    super.tearDown();\n    if (null != leaderJetty) {\n      leaderJetty.stop();\n      leaderJetty = null;\n    }\n    if (null != followerJetty) {\n      followerJetty.stop();\n       followerJetty = null;\n    }\n    leader = follower = null;\n    if (null != leaderClient) {\n      leaderClient.close();\n      leaderClient = null;\n    }\n    if (null != followerClient) {\n      followerClient.close();\n      followerClient = null;\n    }\n    System.clearProperty(\"solr.indexfetcher.sotimeout\");\n    \n    IndexFetcher.usableDiskSpaceProvider = originalDiskSpaceprovider;\n    IndexFetcher.testWait = originalTestWait;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandlerDiskOverFlow.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"c7abf3f32ca439b73fbe0ed5a3a6d70ecc411cbb","commitMessage":"@@@SOLR-15217: Rename shardsWhitelist and extract AllowListUrlChecker.\n","date":"2021-04-26 21:44:20","modifiedFileCount":"27","status":"M","submitter":"Bruno Roustant"}]
