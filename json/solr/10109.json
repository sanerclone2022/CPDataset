[{"authorTime":"2015-06-24 21:07:09","codes":[{"authorDate":"2015-06-24 21:07:09","commitOrder":3,"curCode":"  private void assignComparator(){\n    if(ComparatorOrder.DESCENDING == order){\n      comparator = new ComparatorLambda() {\n        @Override\n        public int compare(Tuple leftTuple, Tuple rightTuple) {\n          Comparable leftComp = (Comparable)leftTuple.get(fieldName);\n          Comparable rightComp = (Comparable)rightTuple.get(fieldName);\n          \n          if(leftComp == rightComp){ return 0; } \r\n          if(null == leftComp){ return 1; }\n          if(null == rightComp){ return -1; }\n          \n          return rightComp.compareTo(leftComp);\n        }\n      };\n    }\n    else{\n      \r\n      comparator = new ComparatorLambda() {\n        @Override\n        public int compare(Tuple leftTuple, Tuple rightTuple) {\n          Comparable leftComp = (Comparable)leftTuple.get(fieldName);\n          Comparable rightComp = (Comparable)rightTuple.get(fieldName);\n          \n          if(leftComp == rightComp){ return 0; } \r\n          if(null == leftComp){ return -1; }\n          if(null == rightComp){ return 1; }\n          \n          return leftComp.compareTo(rightComp);\n        }\n      };\n    }\n  }\n","date":"2015-06-24 21:07:09","endLine":106,"groupId":"9521","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assignComparator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/94/1b2a184cb0aa1c0db1ca6ae4eb20f59926332e.src","preCode":"  private void assignComparator(){\n    if(ComparatorOrder.DESCENDING == order){\n      comparator = new ComparatorLambda() {\n        @Override\n        public int compare(Tuple leftTuple, Tuple rightTuple) {\n          Comparable leftComp = (Comparable)leftTuple.get(fieldName);\n          Comparable rightComp = (Comparable)rightTuple.get(fieldName);\n          \n          if(leftComp == rightComp){ return 0; } \r\n          if(null == leftComp){ return 1; }\n          if(null == rightComp){ return -1; }\n          \n          return rightComp.compareTo(leftComp);\n        }\n      };\n    }\n    else{\n      \r\n      comparator = new ComparatorLambda() {\n        @Override\n        public int compare(Tuple leftTuple, Tuple rightTuple) {\n          Comparable leftComp = (Comparable)leftTuple.get(fieldName);\n          Comparable rightComp = (Comparable)rightTuple.get(fieldName);\n          \n          if(leftComp == rightComp){ return 0; } \r\n          if(null == leftComp){ return -1; }\n          if(null == rightComp){ return 1; }\n          \n          return leftComp.compareTo(rightComp);\n        }\n      };\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/comp/FieldComparator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"MB"},{"authorDate":"2015-06-24 21:07:09","commitOrder":3,"curCode":"  public boolean test(Tuple leftTuple, Tuple rightTuple) {\n\n    Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n    Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n    \n    if(leftComp == rightComp){ return true; } \r\n    if(null == leftComp || null == rightComp){ return false; }\n    \n    return 0 == leftComp.compareTo(rightComp);\n  }\n","date":"2015-06-24 21:07:09","endLine":72,"groupId":"7495","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"(TupleleftTuple@TuplerightTuple)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/57/98b7fc713e40c35613f048a8e7aee9d9ab31ce.src","preCode":"  public boolean test(Tuple leftTuple, Tuple rightTuple) {\n\n    Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n    Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n    \n    if(leftComp == rightComp){ return true; } \r\n    if(null == leftComp || null == rightComp){ return false; }\n    \n    return 0 == leftComp.compareTo(rightComp);\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eq/FieldEqualitor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"}],"commitId":"33a4099b9850b4f5ee8f6fe237d07060a4272704","commitMessage":"@@@SOLR-7554: Add checks in Streams for incoming stream order\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1687258 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-06-24 21:07:09","modifiedFileCount":"18","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2015-06-24 21:07:09","codes":[{"authorDate":"2015-11-11 09:45:04","commitOrder":4,"curCode":"  private void assignComparator(){\n    if(ComparatorOrder.DESCENDING == order){\n      comparator = new ComparatorLambda() {\n        @Override\n        public int compare(Tuple leftTuple, Tuple rightTuple) {\n          Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n          Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n          \n          if(leftComp == rightComp){ return 0; } \r\n          if(null == leftComp){ return 1; }\n          if(null == rightComp){ return -1; }\n          \n          return rightComp.compareTo(leftComp);\n        }\n      };\n    }\n    else{\n      \r\n      comparator = new ComparatorLambda() {\n        @Override\n        public int compare(Tuple leftTuple, Tuple rightTuple) {\n          Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n          Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n          \n          if(leftComp == rightComp){ return 0; } \r\n          if(null == leftComp){ return -1; }\n          if(null == rightComp){ return 1; }\n          \n          return leftComp.compareTo(rightComp);\n        }\n      };\n    }\n  }\n","date":"2015-11-11 09:45:04","endLine":129,"groupId":"9521","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assignComparator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/46/95829ef954fe22caed1b85cd7d57f72e89bc29.src","preCode":"  private void assignComparator(){\n    if(ComparatorOrder.DESCENDING == order){\n      comparator = new ComparatorLambda() {\n        @Override\n        public int compare(Tuple leftTuple, Tuple rightTuple) {\n          Comparable leftComp = (Comparable)leftTuple.get(fieldName);\n          Comparable rightComp = (Comparable)rightTuple.get(fieldName);\n          \n          if(leftComp == rightComp){ return 0; } \r\n          if(null == leftComp){ return 1; }\n          if(null == rightComp){ return -1; }\n          \n          return rightComp.compareTo(leftComp);\n        }\n      };\n    }\n    else{\n      \r\n      comparator = new ComparatorLambda() {\n        @Override\n        public int compare(Tuple leftTuple, Tuple rightTuple) {\n          Comparable leftComp = (Comparable)leftTuple.get(fieldName);\n          Comparable rightComp = (Comparable)rightTuple.get(fieldName);\n          \n          if(leftComp == rightComp){ return 0; } \r\n          if(null == leftComp){ return -1; }\n          if(null == rightComp){ return 1; }\n          \n          return leftComp.compareTo(rightComp);\n        }\n      };\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/comp/FieldComparator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2015-06-24 21:07:09","commitOrder":4,"curCode":"  public boolean test(Tuple leftTuple, Tuple rightTuple) {\n\n    Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n    Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n    \n    if(leftComp == rightComp){ return true; } \r\n    if(null == leftComp || null == rightComp){ return false; }\n    \n    return 0 == leftComp.compareTo(rightComp);\n  }\n","date":"2015-06-24 21:07:09","endLine":72,"groupId":"7495","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"(TupleleftTuple@TuplerightTuple)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/57/98b7fc713e40c35613f048a8e7aee9d9ab31ce.src","preCode":"  public boolean test(Tuple leftTuple, Tuple rightTuple) {\n\n    Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n    Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n    \n    if(leftComp == rightComp){ return true; } \r\n    if(null == leftComp || null == rightComp){ return false; }\n    \n    return 0 == leftComp.compareTo(rightComp);\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eq/FieldEqualitor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"}],"commitId":"5c5812940a58fd97c03de6822bb82202ec852add","commitMessage":"@@@SOLR-7584: Adds Inner and LeftOuter Joins to the Streaming API and Streaming Expressions (Dennis Gove.  Corey Wu)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1713753 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-11-11 09:45:04","modifiedFileCount":"12","status":"M","submitter":"Dennis Gove"},{"authorTime":"2015-06-24 21:07:09","codes":[{"authorDate":"2016-04-07 05:18:10","commitOrder":5,"curCode":"  private void assignComparator(){\n    if(ComparatorOrder.DESCENDING == order){\n      comparator = (leftTuple, rightTuple) -> {\n        Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n        Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n\n        if(leftComp == rightComp){ return 0; } \r\n        if(null == leftComp){ return 1; }\n        if(null == rightComp){ return -1; }\n\n        return rightComp.compareTo(leftComp);\n      };\n    }\n    else{\n      \r\n      comparator = (leftTuple, rightTuple) -> {\n        Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n        Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n\n        if(leftComp == rightComp){ return 0; } \r\n        if(null == leftComp){ return -1; }\n        if(null == rightComp){ return 1; }\n\n        return leftComp.compareTo(rightComp);\n      };\n    }\n  }\n","date":"2016-04-07 05:18:10","endLine":124,"groupId":"7495","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assignComparator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/10/c7c294e6e76a4855b9d51bec41852d9d278b3b.src","preCode":"  private void assignComparator(){\n    if(ComparatorOrder.DESCENDING == order){\n      comparator = new ComparatorLambda() {\n        @Override\n        public int compare(Tuple leftTuple, Tuple rightTuple) {\n          Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n          Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n          \n          if(leftComp == rightComp){ return 0; } \r\n          if(null == leftComp){ return 1; }\n          if(null == rightComp){ return -1; }\n          \n          return rightComp.compareTo(leftComp);\n        }\n      };\n    }\n    else{\n      \r\n      comparator = new ComparatorLambda() {\n        @Override\n        public int compare(Tuple leftTuple, Tuple rightTuple) {\n          Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n          Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n          \n          if(leftComp == rightComp){ return 0; } \r\n          if(null == leftComp){ return -1; }\n          if(null == rightComp){ return 1; }\n          \n          return leftComp.compareTo(rightComp);\n        }\n      };\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/comp/FieldComparator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2015-06-24 21:07:09","commitOrder":5,"curCode":"  public boolean test(Tuple leftTuple, Tuple rightTuple) {\n\n    Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n    Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n    \n    if(leftComp == rightComp){ return true; } \r\n    if(null == leftComp || null == rightComp){ return false; }\n    \n    return 0 == leftComp.compareTo(rightComp);\n  }\n","date":"2015-06-24 21:07:09","endLine":72,"groupId":"7495","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"(TupleleftTuple@TuplerightTuple)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/57/98b7fc713e40c35613f048a8e7aee9d9ab31ce.src","preCode":"  public boolean test(Tuple leftTuple, Tuple rightTuple) {\n\n    Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n    Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n    \n    if(leftComp == rightComp){ return true; } \r\n    if(null == leftComp || null == rightComp){ return false; }\n    \n    return 0 == leftComp.compareTo(rightComp);\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eq/FieldEqualitor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"}],"commitId":"eda2a319595d01efaf05ed4bc4574682b91e7aaf","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-04-07 05:18:10","modifiedFileCount":"41","status":"M","submitter":"Karl Wright"},{"authorTime":"2020-06-14 20:11:23","codes":[{"authorDate":"2020-06-14 20:11:23","commitOrder":6,"curCode":"  private void assignComparator(){\n    if(ComparatorOrder.DESCENDING == order){\n      comparator = (leftTuple, rightTuple) -> {\n        @SuppressWarnings({\"rawtypes\"})\n        Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n        @SuppressWarnings({\"rawtypes\"})\n        Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n\n        if(leftComp == rightComp){ return 0; } \r\n        if(null == leftComp){ return 1; }\n        if(null == rightComp){ return -1; }\n\n        return rightComp.compareTo(leftComp);\n      };\n    }\n    else{\n      \r\n      comparator = (leftTuple, rightTuple) -> {\n        @SuppressWarnings({\"rawtypes\"})\n        Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n        @SuppressWarnings({\"rawtypes\"})\n        Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n\n        if(leftComp == rightComp){ return 0; } \r\n        if(null == leftComp){ return -1; }\n        if(null == rightComp){ return 1; }\n\n        return leftComp.compareTo(rightComp);\n      };\n    }\n  }\n","date":"2020-06-14 20:11:23","endLine":142,"groupId":"10109","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assignComparator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/36/ecc5e20c3155dae10723acef5bc5e9e051461c.src","preCode":"  private void assignComparator(){\n    if(ComparatorOrder.DESCENDING == order){\n      comparator = (leftTuple, rightTuple) -> {\n        Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n        Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n\n        if(leftComp == rightComp){ return 0; } \r\n        if(null == leftComp){ return 1; }\n        if(null == rightComp){ return -1; }\n\n        return rightComp.compareTo(leftComp);\n      };\n    }\n    else{\n      \r\n      comparator = (leftTuple, rightTuple) -> {\n        Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n        Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n\n        if(leftComp == rightComp){ return 0; } \r\n        if(null == leftComp){ return -1; }\n        if(null == rightComp){ return 1; }\n\n        return leftComp.compareTo(rightComp);\n      };\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/comp/FieldComparator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2020-06-14 20:11:23","commitOrder":6,"curCode":"  public boolean test(Tuple leftTuple, Tuple rightTuple) {\n\n    @SuppressWarnings({\"rawtypes\"})\n    Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n    @SuppressWarnings({\"rawtypes\"})\n    Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n    \n    if(leftComp == rightComp){ return true; } \r\n    if(null == leftComp || null == rightComp){ return false; }\n    \n    return 0 == leftComp.compareTo(rightComp);\n  }\n","date":"2020-06-14 20:11:23","endLine":88,"groupId":"10109","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"test","params":"(TupleleftTuple@TuplerightTuple)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2d/188cea686918fe42f4aa99650f0c3f26adb3f3.src","preCode":"  public boolean test(Tuple leftTuple, Tuple rightTuple) {\n\n    Comparable leftComp = (Comparable)leftTuple.get(leftFieldName);\n    Comparable rightComp = (Comparable)rightTuple.get(rightFieldName);\n    \n    if(leftComp == rightComp){ return true; } \r\n    if(null == leftComp || null == rightComp){ return false; }\n    \n    return 0 == leftComp.compareTo(rightComp);\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eq/FieldEqualitor.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"4e90e48ac29ee38662c04fcf7815d5170ceb2669","commitMessage":"@@@SOLR-14567: Fix or suppress remaining warnings in solrj\n","date":"2020-06-14 20:11:23","modifiedFileCount":"64","status":"M","submitter":"Erick Erickson"}]
