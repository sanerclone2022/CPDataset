[{"authorTime":"2014-12-22 15:05:34","codes":[{"authorDate":"2014-12-22 15:05:34","commitOrder":1,"curCode":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      LOG.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      LOG.warn(\"Invalid collection stats string, num fields \" + vals.length\n          + \" != 5, '\" + data + \"'\");\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      LOG.warn(\"Invalid collection stats string '\" + data + \"': \"\n          + e.toString());\n      return null;\n    }\n  }\n","date":"2014-12-22 15:05:34","endLine":78,"groupId":"55420","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"colStatsFromString","params":"(Stringdata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c3/4580fee1f16bec1c18b4ef8f1b57d15da8e9ce.src","preCode":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      LOG.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      LOG.warn(\"Invalid collection stats string, num fields \" + vals.length\n          + \" != 5, '\" + data + \"'\");\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      LOG.warn(\"Invalid collection stats string '\" + data + \"': \"\n          + e.toString());\n      return null;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2014-12-22 15:05:34","commitOrder":1,"curCode":"  private static TermStats termStatsFromString(String data, Term t) {\n    if (data == null || data.trim().length() == 0) {\n      LOG.warn(\"Invalid empty term stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length < 2) {\n      LOG.warn(\"Invalid term stats string, num fields \" + vals.length\n          + \" < 2, '\" + data + \"'\");\n      return null;\n    }\n    Term termToUse;\n    int idx = 0;\n    if (vals.length == 3) {\n      idx++;\n      \r\n      Term term = termFromString(vals[0]);\n      if (term != null) {\n        termToUse = term;\n        if (t != null) {\n          assert term.equals(t);\n        }\n      } else { \r\n        termToUse = t;\n      }\n    } else {\n      termToUse = t;\n    }\n    if (termToUse == null) {\n      LOG.warn(\"Missing term in termStats '\" + data + \"'\");\n      return null;\n    }\n    try {\n      long docFreq = Long.parseLong(vals[idx++]);\n      long totalTermFreq = Long.parseLong(vals[idx]);\n      return new TermStats(termToUse.toString(), docFreq, totalTermFreq);\n    } catch (Exception e) {\n      LOG.warn(\"Invalid termStats string '\" + data + \"'\");\n      return null;\n    }\n  }\n","date":"2014-12-22 15:05:34","endLine":163,"groupId":"41827","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"termStatsFromString","params":"(Stringdata@Termt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c3/4580fee1f16bec1c18b4ef8f1b57d15da8e9ce.src","preCode":"  private static TermStats termStatsFromString(String data, Term t) {\n    if (data == null || data.trim().length() == 0) {\n      LOG.warn(\"Invalid empty term stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length < 2) {\n      LOG.warn(\"Invalid term stats string, num fields \" + vals.length\n          + \" < 2, '\" + data + \"'\");\n      return null;\n    }\n    Term termToUse;\n    int idx = 0;\n    if (vals.length == 3) {\n      idx++;\n      \r\n      Term term = termFromString(vals[0]);\n      if (term != null) {\n        termToUse = term;\n        if (t != null) {\n          assert term.equals(t);\n        }\n      } else { \r\n        termToUse = t;\n      }\n    } else {\n      termToUse = t;\n    }\n    if (termToUse == null) {\n      LOG.warn(\"Missing term in termStats '\" + data + \"'\");\n      return null;\n    }\n    try {\n      long docFreq = Long.parseLong(vals[idx++]);\n      long totalTermFreq = Long.parseLong(vals[idx]);\n      return new TermStats(termToUse.toString(), docFreq, totalTermFreq);\n    } catch (Exception e) {\n      LOG.warn(\"Invalid termStats string '\" + data + \"'\");\n      return null;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"B"}],"commitId":"73a6fca89032399c5317ea9760cacf0d30914a47","commitMessage":"@@@SOLR-1632: Distributed IDF.  finally.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1647253 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-22 15:05:34","modifiedFileCount":"8","status":"B","submitter":"Anshum Gupta"},{"authorTime":"2018-08-23 06:26:37","codes":[{"authorDate":"2018-08-23 06:26:37","commitOrder":2,"curCode":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      log.warn(\"Invalid collection stats string, num fields \" + vals.length\n          + \" != 5, '\" + data + \"'\");\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid collection stats string '\" + data + \"': \"\n          + e.toString());\n      return null;\n    }\n  }\n","date":"2018-08-23 06:26:37","endLine":79,"groupId":"55420","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"colStatsFromString","params":"(Stringdata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/21/377d0aeff59b36d992c29840997b76255f0a00.src","preCode":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      LOG.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      LOG.warn(\"Invalid collection stats string, num fields \" + vals.length\n          + \" != 5, '\" + data + \"'\");\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      LOG.warn(\"Invalid collection stats string '\" + data + \"': \"\n          + e.toString());\n      return null;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2018-08-23 06:26:37","commitOrder":2,"curCode":"  private static TermStats termStatsFromString(String data, Term t) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty term stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length < 2) {\n      log.warn(\"Invalid term stats string, num fields \" + vals.length\n          + \" < 2, '\" + data + \"'\");\n      return null;\n    }\n    Term termToUse;\n    int idx = 0;\n    if (vals.length == 3) {\n      idx++;\n      \r\n      Term term = termFromString(vals[0]);\n      if (term != null) {\n        termToUse = term;\n        if (t != null) {\n          assert term.equals(t);\n        }\n      } else { \r\n        termToUse = t;\n      }\n    } else {\n      termToUse = t;\n    }\n    if (termToUse == null) {\n      log.warn(\"Missing term in termStats '\" + data + \"'\");\n      return null;\n    }\n    try {\n      long docFreq = Long.parseLong(vals[idx++]);\n      long totalTermFreq = Long.parseLong(vals[idx]);\n      return new TermStats(termToUse.toString(), docFreq, totalTermFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid termStats string '\" + data + \"'\");\n      return null;\n    }\n  }\n","date":"2018-08-23 06:26:37","endLine":164,"groupId":"41827","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"termStatsFromString","params":"(Stringdata@Termt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/21/377d0aeff59b36d992c29840997b76255f0a00.src","preCode":"  private static TermStats termStatsFromString(String data, Term t) {\n    if (data == null || data.trim().length() == 0) {\n      LOG.warn(\"Invalid empty term stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length < 2) {\n      LOG.warn(\"Invalid term stats string, num fields \" + vals.length\n          + \" < 2, '\" + data + \"'\");\n      return null;\n    }\n    Term termToUse;\n    int idx = 0;\n    if (vals.length == 3) {\n      idx++;\n      \r\n      Term term = termFromString(vals[0]);\n      if (term != null) {\n        termToUse = term;\n        if (t != null) {\n          assert term.equals(t);\n        }\n      } else { \r\n        termToUse = t;\n      }\n    } else {\n      termToUse = t;\n    }\n    if (termToUse == null) {\n      LOG.warn(\"Missing term in termStats '\" + data + \"'\");\n      return null;\n    }\n    try {\n      long docFreq = Long.parseLong(vals[idx++]);\n      long totalTermFreq = Long.parseLong(vals[idx]);\n      return new TermStats(termToUse.toString(), docFreq, totalTermFreq);\n    } catch (Exception e) {\n      LOG.warn(\"Invalid termStats string '\" + data + \"'\");\n      return null;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"8cde1277ec7151bd6ab62950ac93cbdd6ff04d9f","commitMessage":"@@@SOLR-12690: Regularize LoggerFactory declarations\n","date":"2018-08-23 06:26:37","modifiedFileCount":"93","status":"M","submitter":"Erick Erickson"},{"authorTime":"2019-10-08 01:52:22","codes":[{"authorDate":"2018-08-23 06:26:37","commitOrder":3,"curCode":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      log.warn(\"Invalid collection stats string, num fields \" + vals.length\n          + \" != 5, '\" + data + \"'\");\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid collection stats string '\" + data + \"': \"\n          + e.toString());\n      return null;\n    }\n  }\n","date":"2018-08-23 06:26:37","endLine":79,"groupId":"55420","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"colStatsFromString","params":"(Stringdata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/21/377d0aeff59b36d992c29840997b76255f0a00.src","preCode":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      log.warn(\"Invalid collection stats string, num fields \" + vals.length\n          + \" != 5, '\" + data + \"'\");\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid collection stats string '\" + data + \"': \"\n          + e.toString());\n      return null;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"},{"authorDate":"2019-10-08 01:52:22","commitOrder":3,"curCode":"  private static TermStats termStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty term stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length < 3) {\n      log.warn(\"Invalid term stats string, num fields \" + vals.length\n          + \" < 3, '\" + data + \"'\");\n      return null;\n    }\n    Term term = termFromEncodedString(vals[0]);\n    try {\n      long docFreq = Long.parseLong(vals[1]);\n      long totalTermFreq = Long.parseLong(vals[2]);\n      return new TermStats(term.toString(), docFreq, totalTermFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid termStats string '\" + data + \"'\");\n      return null;\n    }\n  }\n","date":"2019-10-08 01:53:52","endLine":293,"groupId":"41827","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"termStatsFromString","params":"(Stringdata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b3/90e6c31deec58816a95e230496fc728e72096c.src","preCode":"  private static TermStats termStatsFromString(String data, Term t) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty term stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length < 2) {\n      log.warn(\"Invalid term stats string, num fields \" + vals.length\n          + \" < 2, '\" + data + \"'\");\n      return null;\n    }\n    Term termToUse;\n    int idx = 0;\n    if (vals.length == 3) {\n      idx++;\n      \r\n      Term term = termFromString(vals[0]);\n      if (term != null) {\n        termToUse = term;\n        if (t != null) {\n          assert term.equals(t);\n        }\n      } else { \r\n        termToUse = t;\n      }\n    } else {\n      termToUse = t;\n    }\n    if (termToUse == null) {\n      log.warn(\"Missing term in termStats '\" + data + \"'\");\n      return null;\n    }\n    try {\n      long docFreq = Long.parseLong(vals[idx++]);\n      long totalTermFreq = Long.parseLong(vals[idx]);\n      return new TermStats(termToUse.toString(), docFreq, totalTermFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid termStats string '\" + data + \"'\");\n      return null;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"}],"commitId":"c0a446b179e8091f84e795ab04c6c3fcc9396ebe","commitMessage":"@@@SOLR-13790: LRUStatsCache size explosion and ineffective caching.\n","date":"2019-10-08 01:53:52","modifiedFileCount":"19","status":"M","submitter":"Andrzej Bialecki"},{"authorTime":"2020-04-19 07:08:15","codes":[{"authorDate":"2020-04-19 07:08:15","commitOrder":4,"curCode":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      log.warn(\"Invalid collection stats string, num fields {} != 5 '{}'\", vals.length, data);\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid collection stats string '{}', \", data, e);\n      return null;\n    }\n  }\n","date":"2020-04-19 07:08:15","endLine":178,"groupId":"102269","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"colStatsFromString","params":"(Stringdata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/b9ba8bad6283f80eb864f6979d6277a8ee67f6.src","preCode":"  private static CollectionStats colStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty collection stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length != 5) {\n      log.warn(\"Invalid collection stats string, num fields \" + vals.length\n          + \" != 5, '\" + data + \"'\");\n      return null;\n    }\n    String field = vals[0];\n    try {\n      long maxDoc = Long.parseLong(vals[1]);\n      long docCount = Long.parseLong(vals[2]);\n      long sumTotalTermFreq = Long.parseLong(vals[3]);\n      long sumDocFreq = Long.parseLong(vals[4]);\n      return new CollectionStats(field, maxDoc, docCount, sumTotalTermFreq,\n          sumDocFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid collection stats string '\" + data + \"': \"\n          + e.toString());\n      return null;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2020-04-19 07:08:15","commitOrder":4,"curCode":"  private static TermStats termStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty term stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length < 3) {\n      log.warn(\"Invalid term stats string, num fields {} < 3, '{}'\", vals.length, data);\n      return null;\n    }\n    Term term = termFromEncodedString(vals[0]);\n    try {\n      long docFreq = Long.parseLong(vals[1]);\n      long totalTermFreq = Long.parseLong(vals[2]);\n      return new TermStats(term.toString(), docFreq, totalTermFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid termStats string '{}'\", data);\n      return null;\n    }\n  }\n","date":"2020-04-19 07:08:15","endLine":290,"groupId":"102269","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"termStatsFromString","params":"(Stringdata)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/b9ba8bad6283f80eb864f6979d6277a8ee67f6.src","preCode":"  private static TermStats termStatsFromString(String data) {\n    if (data == null || data.trim().length() == 0) {\n      log.warn(\"Invalid empty term stats string\");\n      return null;\n    }\n    String[] vals = data.split(\",\");\n    if (vals.length < 3) {\n      log.warn(\"Invalid term stats string, num fields \" + vals.length\n          + \" < 3, '\" + data + \"'\");\n      return null;\n    }\n    Term term = termFromEncodedString(vals[0]);\n    try {\n      long docFreq = Long.parseLong(vals[1]);\n      long totalTermFreq = Long.parseLong(vals[2]);\n      return new TermStats(term.toString(), docFreq, totalTermFreq);\n    } catch (Exception e) {\n      log.warn(\"Invalid termStats string '\" + data + \"'\");\n      return null;\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/search/stats/StatsUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"M"}],"commitId":"1f1cdbffdf607db961049d1417b18dc6cbf53d7a","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-04-19 07:08:15","modifiedFileCount":"56","status":"M","submitter":"Erick Erickson"}]
