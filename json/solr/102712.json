[{"authorTime":"2013-07-23 20:53:31","codes":[{"authorDate":"2015-12-07 15:32:41","commitOrder":3,"curCode":"  public void testDefaultSchemaFactory() throws Exception {\n    deleteCore();\n    initCore(\"solrconfig-managed-schema-test.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    assertSchemaResource(collection, \"managed-schema\");\n  }\n","date":"2015-12-07 15:32:41","endLine":140,"groupId":"33029","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultSchemaFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/50/9f32a941f31a43ab52538d3cf41e6da13c8117.src","preCode":"  public void testDefaultSchemaFactory() throws Exception {\n    deleteCore();\n    initCore(\"solrconfig-managed-schema-test.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    assertSchemaResource(collection, \"managed-schema\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"},{"authorDate":"2013-07-23 20:53:31","commitOrder":3,"curCode":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    NamedList responseValues = response.getValues();\n    NamedList status = (NamedList)responseValues.get(\"status\");\n    NamedList collectionStatus = (NamedList)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n","date":"2013-07-23 20:53:31","endLine":135,"groupId":"26721","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSchemaResource","params":"(Stringcollection@StringexpectedSchemaResource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6c/9c9a6c709e47e397877d2ea704e152ba19485f.src","preCode":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    NamedList responseValues = response.getValues();\n    NamedList status = (NamedList)responseValues.get(\"status\");\n    NamedList collectionStatus = (NamedList)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"NB"}],"commitId":"0e886c19fa2bc511ba067afae91e8b22b4986a15","commitMessage":"@@@SOLR-8131: Make ManagedIndexSchemaFactory the default schemaFactory when luceneMatchVersion >= 6\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1718258 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-12-07 15:32:41","modifiedFileCount":"4","status":"M","submitter":"Varun Thacker"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2015-12-07 15:32:41","commitOrder":4,"curCode":"  public void testDefaultSchemaFactory() throws Exception {\n    deleteCore();\n    initCore(\"solrconfig-managed-schema-test.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    assertSchemaResource(collection, \"managed-schema\");\n  }\n","date":"2015-12-07 15:32:41","endLine":140,"groupId":"33029","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultSchemaFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/50/9f32a941f31a43ab52538d3cf41e6da13c8117.src","preCode":"  public void testDefaultSchemaFactory() throws Exception {\n    deleteCore();\n    initCore(\"solrconfig-managed-schema-test.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    assertSchemaResource(collection, \"managed-schema\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"N"},{"authorDate":"2020-06-18 05:51:41","commitOrder":4,"curCode":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList responseValues = response.getValues();\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList status = (NamedList)responseValues.get(\"status\");\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList collectionStatus = (NamedList)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n","date":"2020-06-18 05:51:41","endLine":156,"groupId":"26721","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSchemaResource","params":"(Stringcollection@StringexpectedSchemaResource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f0/ccd99e49ced0f2a6689b64abeba7d82d915b62.src","preCode":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    NamedList responseValues = response.getValues();\n    NamedList status = (NamedList)responseValues.get(\"status\");\n    NamedList collectionStatus = (NamedList)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-06-29 03:06:47","codes":[{"authorDate":"2015-12-07 15:32:41","commitOrder":5,"curCode":"  public void testDefaultSchemaFactory() throws Exception {\n    deleteCore();\n    initCore(\"solrconfig-managed-schema-test.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    assertSchemaResource(collection, \"managed-schema\");\n  }\n","date":"2015-12-07 15:32:41","endLine":140,"groupId":"33029","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultSchemaFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/50/9f32a941f31a43ab52538d3cf41e6da13c8117.src","preCode":"  public void testDefaultSchemaFactory() throws Exception {\n    deleteCore();\n    initCore(\"solrconfig-managed-schema-test.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    assertSchemaResource(collection, \"managed-schema\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"N"},{"authorDate":"2021-06-29 03:06:47","commitOrder":5,"curCode":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    NamedList<?> responseValues = response.getValues();\n    NamedList<?> status = (NamedList<?>)responseValues.get(\"status\");\n    NamedList<?> collectionStatus = (NamedList<?>)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n","date":"2021-06-29 03:06:47","endLine":153,"groupId":"33029","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSchemaResource","params":"(Stringcollection@StringexpectedSchemaResource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d2/09f9d9edba9ab7628b63b7b249bf1320187815.src","preCode":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList responseValues = response.getValues();\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList status = (NamedList)responseValues.get(\"status\");\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList collectionStatus = (NamedList)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"}],"commitId":"5e7310c344b4d31903acda93c7638bce125b63cf","commitMessage":"@@@SOLR-15385 RawTypes Part IV.  solr-core (#195)\n\n","date":"2021-06-29 03:06:47","modifiedFileCount":"93","status":"M","submitter":"Mike Drob"},{"authorTime":"2021-06-29 03:06:47","codes":[{"authorDate":"2021-09-16 20:43:31","commitOrder":6,"curCode":"  public void testDefaultSchemaFactory() throws Exception {\n    deleteCore();\n    initCore(\"solrconfig-managed-schema-test.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    assertSchemaResource(collection, \"managed-schema.xml\");\n  }\n","date":"2021-09-16 20:43:31","endLine":140,"groupId":"102712","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testDefaultSchemaFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/42/a5a79a321defc265288209deb339419792b44d.src","preCode":"  public void testDefaultSchemaFactory() throws Exception {\n    deleteCore();\n    initCore(\"solrconfig-managed-schema-test.xml\", \"schema-minimal.xml\", tmpSolrHome.getPath());\n\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    assertSchemaResource(collection, \"managed-schema\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"},{"authorDate":"2021-06-29 03:06:47","commitOrder":6,"curCode":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    NamedList<?> responseValues = response.getValues();\n    NamedList<?> status = (NamedList<?>)responseValues.get(\"status\");\n    NamedList<?> collectionStatus = (NamedList<?>)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n","date":"2021-06-29 03:06:47","endLine":153,"groupId":"102712","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSchemaResource","params":"(Stringcollection@StringexpectedSchemaResource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d2/09f9d9edba9ab7628b63b7b249bf1320187815.src","preCode":"  private void assertSchemaResource(String collection, String expectedSchemaResource) throws Exception {\n    final CoreContainer cores = h.getCoreContainer();\n    final CoreAdminHandler admin = new CoreAdminHandler(cores);\n    SolrQueryRequest request = req(CoreAdminParams.ACTION, CoreAdminParams.CoreAdminAction.STATUS.toString());\n    SolrQueryResponse response = new SolrQueryResponse();\n    admin.handleRequestBody(request, response);\n    assertNull(\"Exception on create\", response.getException());\n    NamedList<?> responseValues = response.getValues();\n    NamedList<?> status = (NamedList<?>)responseValues.get(\"status\");\n    NamedList<?> collectionStatus = (NamedList<?>)status.get(collection);\n    String collectionSchema = (String)collectionStatus.get(CoreAdminParams.SCHEMA);\n    assertEquals(\"Schema resource name differs from expected name\", expectedSchemaResource, collectionSchema);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/TestManagedSchema.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"N"}],"commitId":"df903cbdc1de7fb2c3469b9773d6f9d23d591a5d","commitMessage":"@@@ SOLR-10887: Append .xml to managed-schema file VERSION 2 (#279)\n\nManaged schema file is now called \"managed-schema.xml\".  however there is a fallback to \"managed-schema\" since that is a common legacy name for the file.   Updated the name of the files used in running tests.","date":"2021-09-16 20:43:31","modifiedFileCount":"9","status":"M","submitter":"Eric Pugh"}]
