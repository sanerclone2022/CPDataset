[{"authorTime":"2015-07-28 21:24:04","codes":[{"authorDate":"2014-03-12 22:39:17","commitOrder":3,"curCode":"  Set<Comparable> join(Collection<Doc> input, Map<Comparable, Set<Comparable>> joinMap) {\n    Set<Comparable> ids = new HashSet<>();\n    for (Doc doc : input) {\n      Collection<Comparable> output = joinMap.get(doc.id);\n      if (output == null) continue;\n      ids.addAll(output);\n    }\n    return ids;\n  }\n","date":"2014-03-12 22:39:17","endLine":271,"groupId":"58026","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"join","params":"(Collection<Doc>input@Map<Comparable@Set<Comparable>>joinMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f6/2ffe039d764d543eec74a791e2ff725ed7e1d8.src","preCode":"  Set<Comparable> join(Collection<Doc> input, Map<Comparable, Set<Comparable>> joinMap) {\n    Set<Comparable> ids = new HashSet<>();\n    for (Doc doc : input) {\n      Collection<Comparable> output = joinMap.get(doc.id);\n      if (output == null) continue;\n      ids.addAll(output);\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestJoin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"NB"},{"authorDate":"2015-07-28 21:24:04","commitOrder":3,"curCode":"  Set<Comparable> join(Collection<Doc> input, Map<Comparable, Set<Comparable>> joinMap) {\n    Set<Comparable> ids = new HashSet<Comparable>();\n    for (Doc doc : input) {\n      Collection<Comparable> output = joinMap.get(doc.id);\n      if (output == null) continue;\n      ids.addAll(output);\n    }\n    return ids;\n  }\n","date":"2015-07-28 21:24:04","endLine":355,"groupId":"58026","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(Collection<Doc>input@Map<Comparable@Set<Comparable>>joinMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/dd/73deb6ac131408ad0b63ecf2014e3c766ceaae.src","preCode":"  Set<Comparable> join(Collection<Doc> input, Map<Comparable, Set<Comparable>> joinMap) {\n    Set<Comparable> ids = new HashSet<Comparable>();\n    for (Doc doc : input) {\n      Collection<Comparable> output = joinMap.get(doc.id);\n      if (output == null) continue;\n      ids.addAll(output);\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/join/TestScoreJoinQPNoScore.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"B"}],"commitId":"65b595add44d9057889b3cf5a51e955384d83ebc","commitMessage":"@@@SOLR-6234: Scoring for query time join\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1693092 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-07-28 21:24:04","modifiedFileCount":"2","status":"M","submitter":"Mikhail Khludnev"},{"authorTime":"2015-07-28 21:24:04","codes":[{"authorDate":"2020-06-18 23:12:50","commitOrder":4,"curCode":"  Set<Comparable> join(Collection<Doc> input, Map<Comparable, Set<Comparable>> joinMap) {\n    @SuppressWarnings({\"rawtypes\"})\n    Set<Comparable> ids = new HashSet<>();\n    for (Doc doc : input) {\n      @SuppressWarnings({\"rawtypes\"})\n      Collection<Comparable> output = joinMap.get(doc.id);\n      if (output == null) continue;\n      ids.addAll(output);\n    }\n    return ids;\n  }\n","date":"2020-06-18 23:12:50","endLine":326,"groupId":"103084","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"join","params":"(Collection<Doc>input@Map<Comparable@Set<Comparable>>joinMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3c/d8fc2404e82bba7b629223f1818dfd205977bf.src","preCode":"  Set<Comparable> join(Collection<Doc> input, Map<Comparable, Set<Comparable>> joinMap) {\n    Set<Comparable> ids = new HashSet<>();\n    for (Doc doc : input) {\n      Collection<Comparable> output = joinMap.get(doc.id);\n      if (output == null) continue;\n      ids.addAll(output);\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/TestJoin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"M"},{"authorDate":"2015-07-28 21:24:04","commitOrder":4,"curCode":"  Set<Comparable> join(Collection<Doc> input, Map<Comparable, Set<Comparable>> joinMap) {\n    Set<Comparable> ids = new HashSet<Comparable>();\n    for (Doc doc : input) {\n      Collection<Comparable> output = joinMap.get(doc.id);\n      if (output == null) continue;\n      ids.addAll(output);\n    }\n    return ids;\n  }\n","date":"2015-07-28 21:24:04","endLine":355,"groupId":"103084","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(Collection<Doc>input@Map<Comparable@Set<Comparable>>joinMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/dd/73deb6ac131408ad0b63ecf2014e3c766ceaae.src","preCode":"  Set<Comparable> join(Collection<Doc> input, Map<Comparable, Set<Comparable>> joinMap) {\n    Set<Comparable> ids = new HashSet<Comparable>();\n    for (Doc doc : input) {\n      Collection<Comparable> output = joinMap.get(doc.id);\n      if (output == null) continue;\n      ids.addAll(output);\n    }\n    return ids;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/join/TestScoreJoinQPNoScore.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"N"}],"commitId":"84729edbba04ad7de4b1cae635d8d0fbe803f124","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 2)\n","date":"2020-06-18 23:12:50","modifiedFileCount":"122","status":"M","submitter":"Erick Erickson"}]
