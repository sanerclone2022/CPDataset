[{"authorTime":"2020-09-03 05:16:23","codes":[{"authorDate":"2020-09-03 05:16:23","commitOrder":1,"curCode":"  public void testIndexingAnonKids() throws Exception {\n    final String collection = \"test_anon\";\n    CollectionAdminRequest.createCollection(collection, ANON_KIDS_CONFIG, 1, 1).process(cluster.getSolrClient());\n    cluster.getSolrClient().setDefaultCollection(collection);\n    \n    \r\n    \r\n    \r\n    \r\n\n    \r\n    final SolrClient client = getSolrClient();\n\n    final SolrInputDocument p1 = new SolrInputDocument();\n    p1.setField(\"id\", \"P11!prod\");\n    p1.setField(\"type_s\", \"PRODUCT\");\n    p1.setField(\"name_s\", \"Swingline Stapler\");\n    p1.setField(\"description_t\", \"The Cadillac of office staplers ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P11!S21\");\n      s1.setField(\"type_s\", \"SKU\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 42);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P11!D41\");\n        m1.setField(\"type_s\", \"MANUAL\");\n        m1.setField(\"name_s\", \"Red Swingline Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.addChildDocument(m1);\n      }\n\n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P11!S31\");\n      s2.setField(\"type_s\", \"SKU\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 3);\n\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P11!D51\");\n      m1.setField(\"type_s\", \"MANUAL\");\n      m1.setField(\"name_s\", \"Quick Reference Guide\");\n      m1.setField(\"pages_i\", 1);\n      m1.setField(\"content_t\", \"How to use your stapler ...\");\n\n      final SolrInputDocument m2 = new SolrInputDocument();\n      m2.setField(\"id\", \"P11!D61\");\n      m2.setField(\"type_s\", \"MANUAL\");\n      m2.setField(\"name_s\", \"Warranty Details\");\n      m2.setField(\"pages_i\", 42);\n      m2.setField(\"content_t\", \"... lifetime guarantee ...\");\n\n      p1.addChildDocuments(Arrays.asList(s1, s2, m1, m2));\n    }\n    \n    client.add(p1);\n    \r\n    \n    client.commit();\n\n    final SolrDocumentList docs = getSolrClient().query\n      (new SolrQuery(\"description_t:Cadillac\").set(\"fl\", \"*,[child parentFilter='type_s:PRODUCT']\")).getResults();\n    \n    assertEquals(1, docs.getNumFound());\n    assertEquals(\"P11!prod\", docs.get(0).getFieldValue(\"id\"));\n\n    \r\n    assertEquals(5, docs.get(0).getChildDocumentCount());\n    assertEquals(5, docs.get(0).getChildDocuments().size());\n\n    \r\n    final SolrDocument red_stapler_brochure = docs.get(0).getChildDocuments().get(0);\n    assertEquals(\"P11!D41\", red_stapler_brochure.getFieldValue(\"id\"));\n    \n    final SolrDocument red_stapler = docs.get(0).getChildDocuments().get(1);\n    assertEquals(\"P11!S21\", red_stapler.getFieldValue(\"id\"));\n\n  }\n","date":"2020-09-03 05:16:23","endLine":151,"groupId":"51180","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexingAnonKids","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9d/22119c0afa9511f942990fe7f57b493f0ae886.src","preCode":"  public void testIndexingAnonKids() throws Exception {\n    final String collection = \"test_anon\";\n    CollectionAdminRequest.createCollection(collection, ANON_KIDS_CONFIG, 1, 1).process(cluster.getSolrClient());\n    cluster.getSolrClient().setDefaultCollection(collection);\n    \n    \r\n    \r\n    \r\n    \r\n\n    \r\n    final SolrClient client = getSolrClient();\n\n    final SolrInputDocument p1 = new SolrInputDocument();\n    p1.setField(\"id\", \"P11!prod\");\n    p1.setField(\"type_s\", \"PRODUCT\");\n    p1.setField(\"name_s\", \"Swingline Stapler\");\n    p1.setField(\"description_t\", \"The Cadillac of office staplers ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P11!S21\");\n      s1.setField(\"type_s\", \"SKU\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 42);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P11!D41\");\n        m1.setField(\"type_s\", \"MANUAL\");\n        m1.setField(\"name_s\", \"Red Swingline Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.addChildDocument(m1);\n      }\n\n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P11!S31\");\n      s2.setField(\"type_s\", \"SKU\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 3);\n\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P11!D51\");\n      m1.setField(\"type_s\", \"MANUAL\");\n      m1.setField(\"name_s\", \"Quick Reference Guide\");\n      m1.setField(\"pages_i\", 1);\n      m1.setField(\"content_t\", \"How to use your stapler ...\");\n\n      final SolrInputDocument m2 = new SolrInputDocument();\n      m2.setField(\"id\", \"P11!D61\");\n      m2.setField(\"type_s\", \"MANUAL\");\n      m2.setField(\"name_s\", \"Warranty Details\");\n      m2.setField(\"pages_i\", 42);\n      m2.setField(\"content_t\", \"... lifetime guarantee ...\");\n\n      p1.addChildDocuments(Arrays.asList(s1, s2, m1, m2));\n    }\n    \n    client.add(p1);\n    \r\n    \n    client.commit();\n\n    final SolrDocumentList docs = getSolrClient().query\n      (new SolrQuery(\"description_t:Cadillac\").set(\"fl\", \"*,[child parentFilter='type_s:PRODUCT']\")).getResults();\n    \n    assertEquals(1, docs.getNumFound());\n    assertEquals(\"P11!prod\", docs.get(0).getFieldValue(\"id\"));\n\n    \r\n    assertEquals(5, docs.get(0).getChildDocumentCount());\n    assertEquals(5, docs.get(0).getChildDocuments().size());\n\n    \r\n    final SolrDocument red_stapler_brochure = docs.get(0).getChildDocuments().get(0);\n    assertEquals(\"P11!D41\", red_stapler_brochure.getFieldValue(\"id\"));\n    \n    final SolrDocument red_stapler = docs.get(0).getChildDocuments().get(1);\n    assertEquals(\"P11!S21\", red_stapler.getFieldValue(\"id\"));\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/IndexingNestedDocuments.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"},{"authorDate":"2020-09-03 05:16:23","commitOrder":1,"curCode":"  public void testIndexingUsingNestPath() throws Exception {\n    final String collection = \"test_anon\";\n    CollectionAdminRequest.createCollection(collection, 1, 1).process(cluster.getSolrClient());\n    cluster.getSolrClient().setDefaultCollection(collection);\n    \n    \r\n    \r\n    \r\n    \r\n\n    \r\n    final SolrClient client = getSolrClient();\n\n    final SolrInputDocument p1 = new SolrInputDocument();\n    p1.setField(\"id\", \"P11!prod\");\n    p1.setField(\"name_s\", \"Swingline Stapler\");\n    p1.setField(\"description_t\", \"The Cadillac of office staplers ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P11!S21\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 42);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P11!D41\");\n        m1.setField(\"name_s\", \"Red Swingline Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.setField(\"manuals\", m1);\n      }\n\n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P11!S31\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 3);\n      \n      p1.setField(\"skus\", Arrays.asList(s1, s2));\n    }\n    {\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P11!D51\");\n      m1.setField(\"name_s\", \"Quick Reference Guide\");\n      m1.setField(\"pages_i\", 1);\n      m1.setField(\"content_t\", \"How to use your stapler ...\");\n\n      final SolrInputDocument m2 = new SolrInputDocument();\n      m2.setField(\"id\", \"P11!D61\");\n      m2.setField(\"name_s\", \"Warranty Details\");\n      m2.setField(\"pages_i\", 42);\n      m2.setField(\"content_t\", \"... lifetime guarantee ...\");\n\n      p1.setField(\"manuals\", Arrays.asList(m1, m2));\n    }\n\n    final SolrInputDocument p2 = new SolrInputDocument();\n    p2.setField(\"id\", \"P22!prod\");\n    p2.setField(\"name_s\", \"Mont Blanc Fountain Pen\");\n    p2.setField(\"description_t\", \"A Premium Writing Instrument ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P22!S22\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 89);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P22!D42\");\n        m1.setField(\"name_s\", \"Red Mont Blanc Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.setField(\"manuals\", m1);\n      }\n      \n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P22!S32\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 67);\n      \n      p2.setField(\"skus\", Arrays.asList(s1, s2));\n    }\n    {\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P22!D52\");\n      m1.setField(\"name_s\", \"How To Use A Pen\");\n      m1.setField(\"pages_i\", 42);\n      m1.setField(\"content_t\", \"Start by removing the cap ...\");\n\n      p2.setField(\"manuals\", m1);\n    }\n    \n    client.add(Arrays.asList(p1, p2));\n    \r\n    \n    client.commit();\n\n\n    \r\n\n    final SolrDocumentList docs = getSolrClient().query\n      (new SolrQuery(\"description_t:Writing\").set(\"fl\", \"*,[child]\")).getResults();\n    \n    assertEquals(1, docs.getNumFound());\n    assertEquals(\"P22!prod\", docs.get(0).getFieldValue(\"id\"));\n    \n    assertEquals(1, docs.get(0).getFieldValues(\"manuals\").size());\n    assertEquals(SolrDocument.class, docs.get(0).getFieldValues(\"manuals\").iterator().next().getClass());\n\n    assertEquals(2, docs.get(0).getFieldValues(\"skus\").size());\n    final List<Object> skus = new ArrayList<>(docs.get(0).getFieldValues(\"skus\"));\n    \n    assertEquals(SolrDocument.class, skus.get(0).getClass());\n    assertEquals(SolrDocument.class, skus.get(1).getClass());\n    \n    final SolrDocument red_pen = (SolrDocument) skus.get(0);\n    assertEquals(\"P22!S22\", red_pen.getFieldValue(\"id\"));\n\n    assertEquals(1, red_pen.getFieldValues(\"manuals\").size());\n    assertEquals(SolrDocument.class, red_pen.getFieldValues(\"manuals\").iterator().next().getClass());\n\n    final SolrDocument red_pen_brochure = (SolrDocument) red_pen.getFieldValues(\"manuals\").iterator().next();\n    assertEquals(\"P22!D42\", red_pen_brochure.getFieldValue(\"id\"));\n  }\n","date":"2020-09-03 05:16:23","endLine":279,"groupId":"51180","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexingUsingNestPath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9d/22119c0afa9511f942990fe7f57b493f0ae886.src","preCode":"  public void testIndexingUsingNestPath() throws Exception {\n    final String collection = \"test_anon\";\n    CollectionAdminRequest.createCollection(collection, 1, 1).process(cluster.getSolrClient());\n    cluster.getSolrClient().setDefaultCollection(collection);\n    \n    \r\n    \r\n    \r\n    \r\n\n    \r\n    final SolrClient client = getSolrClient();\n\n    final SolrInputDocument p1 = new SolrInputDocument();\n    p1.setField(\"id\", \"P11!prod\");\n    p1.setField(\"name_s\", \"Swingline Stapler\");\n    p1.setField(\"description_t\", \"The Cadillac of office staplers ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P11!S21\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 42);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P11!D41\");\n        m1.setField(\"name_s\", \"Red Swingline Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.setField(\"manuals\", m1);\n      }\n\n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P11!S31\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 3);\n      \n      p1.setField(\"skus\", Arrays.asList(s1, s2));\n    }\n    {\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P11!D51\");\n      m1.setField(\"name_s\", \"Quick Reference Guide\");\n      m1.setField(\"pages_i\", 1);\n      m1.setField(\"content_t\", \"How to use your stapler ...\");\n\n      final SolrInputDocument m2 = new SolrInputDocument();\n      m2.setField(\"id\", \"P11!D61\");\n      m2.setField(\"name_s\", \"Warranty Details\");\n      m2.setField(\"pages_i\", 42);\n      m2.setField(\"content_t\", \"... lifetime guarantee ...\");\n\n      p1.setField(\"manuals\", Arrays.asList(m1, m2));\n    }\n\n    final SolrInputDocument p2 = new SolrInputDocument();\n    p2.setField(\"id\", \"P22!prod\");\n    p2.setField(\"name_s\", \"Mont Blanc Fountain Pen\");\n    p2.setField(\"description_t\", \"A Premium Writing Instrument ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P22!S22\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 89);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P22!D42\");\n        m1.setField(\"name_s\", \"Red Mont Blanc Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.setField(\"manuals\", m1);\n      }\n      \n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P22!S32\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 67);\n      \n      p2.setField(\"skus\", Arrays.asList(s1, s2));\n    }\n    {\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P22!D52\");\n      m1.setField(\"name_s\", \"How To Use A Pen\");\n      m1.setField(\"pages_i\", 42);\n      m1.setField(\"content_t\", \"Start by removing the cap ...\");\n\n      p2.setField(\"manuals\", m1);\n    }\n    \n    client.add(Arrays.asList(p1, p2));\n    \r\n    \n    client.commit();\n\n\n    \r\n\n    final SolrDocumentList docs = getSolrClient().query\n      (new SolrQuery(\"description_t:Writing\").set(\"fl\", \"*,[child]\")).getResults();\n    \n    assertEquals(1, docs.getNumFound());\n    assertEquals(\"P22!prod\", docs.get(0).getFieldValue(\"id\"));\n    \n    assertEquals(1, docs.get(0).getFieldValues(\"manuals\").size());\n    assertEquals(SolrDocument.class, docs.get(0).getFieldValues(\"manuals\").iterator().next().getClass());\n\n    assertEquals(2, docs.get(0).getFieldValues(\"skus\").size());\n    final List<Object> skus = new ArrayList<>(docs.get(0).getFieldValues(\"skus\"));\n    \n    assertEquals(SolrDocument.class, skus.get(0).getClass());\n    assertEquals(SolrDocument.class, skus.get(1).getClass());\n    \n    final SolrDocument red_pen = (SolrDocument) skus.get(0);\n    assertEquals(\"P22!S22\", red_pen.getFieldValue(\"id\"));\n\n    assertEquals(1, red_pen.getFieldValues(\"manuals\").size());\n    assertEquals(SolrDocument.class, red_pen.getFieldValues(\"manuals\").iterator().next().getClass());\n\n    final SolrDocument red_pen_brochure = (SolrDocument) red_pen.getFieldValues(\"manuals\").iterator().next();\n    assertEquals(\"P22!D42\", red_pen_brochure.getFieldValue(\"id\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/IndexingNestedDocuments.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"}],"commitId":"a70a47d053954b0f13b7da6f5612432a8ea7a898","commitMessage":"@@@SOLR-14383: Fix nested indexing ref-guide documentation and corrisponding search examples\n\nSquashed commit of branch jira/SOLR-14383 as of...\n\ncommit 34da84c238f3aff57cd7bba8040ccf6f6d94cf15\nMerge: 5d293276a34 8bd79ec301f\nAuthor: Chris Hostetter <hossman@apache.org>\nDate:   Tue Sep 1 16:39:03 2020 -0700\n\n    Merge branch 'master' into jira/SOLR-14383\n","date":"2020-09-03 05:16:23","modifiedFileCount":"2","status":"B","submitter":"Chris Hostetter"},{"authorTime":"2020-09-03 05:16:23","codes":[{"authorDate":"2021-01-18 23:59:41","commitOrder":2,"curCode":"  public void testIndexingAnonKids() throws Exception {\n    final String collection = \"test_anon\";\n    CollectionAdminRequest.createCollection(collection, ANON_KIDS_CONFIG, 1, 1)\n        .setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE)\n        .process(cluster.getSolrClient());\n    cluster.getSolrClient().setDefaultCollection(collection);\n    \n    \r\n    \r\n    \r\n    \r\n\n    \r\n    final SolrClient client = getSolrClient();\n\n    final SolrInputDocument p1 = new SolrInputDocument();\n    p1.setField(\"id\", \"P11!prod\");\n    p1.setField(\"type_s\", \"PRODUCT\");\n    p1.setField(\"name_s\", \"Swingline Stapler\");\n    p1.setField(\"description_t\", \"The Cadillac of office staplers ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P11!S21\");\n      s1.setField(\"type_s\", \"SKU\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 42);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P11!D41\");\n        m1.setField(\"type_s\", \"MANUAL\");\n        m1.setField(\"name_s\", \"Red Swingline Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.addChildDocument(m1);\n      }\n\n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P11!S31\");\n      s2.setField(\"type_s\", \"SKU\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 3);\n\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P11!D51\");\n      m1.setField(\"type_s\", \"MANUAL\");\n      m1.setField(\"name_s\", \"Quick Reference Guide\");\n      m1.setField(\"pages_i\", 1);\n      m1.setField(\"content_t\", \"How to use your stapler ...\");\n\n      final SolrInputDocument m2 = new SolrInputDocument();\n      m2.setField(\"id\", \"P11!D61\");\n      m2.setField(\"type_s\", \"MANUAL\");\n      m2.setField(\"name_s\", \"Warranty Details\");\n      m2.setField(\"pages_i\", 42);\n      m2.setField(\"content_t\", \"... lifetime guarantee ...\");\n\n      p1.addChildDocuments(Arrays.asList(s1, s2, m1, m2));\n    }\n    \n    client.add(p1);\n    \r\n    \n    client.commit();\n\n    final SolrDocumentList docs = getSolrClient().query\n      (new SolrQuery(\"description_t:Cadillac\").set(\"fl\", \"*,[child parentFilter='type_s:PRODUCT']\")).getResults();\n    \n    assertEquals(1, docs.getNumFound());\n    assertEquals(\"P11!prod\", docs.get(0).getFieldValue(\"id\"));\n\n    \r\n    assertEquals(5, docs.get(0).getChildDocumentCount());\n    assertEquals(5, docs.get(0).getChildDocuments().size());\n\n    \r\n    final SolrDocument red_stapler_brochure = docs.get(0).getChildDocuments().get(0);\n    assertEquals(\"P11!D41\", red_stapler_brochure.getFieldValue(\"id\"));\n    \n    final SolrDocument red_stapler = docs.get(0).getChildDocuments().get(1);\n    assertEquals(\"P11!S21\", red_stapler.getFieldValue(\"id\"));\n\n  }\n","date":"2021-01-18 23:59:41","endLine":150,"groupId":"101117","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexingAnonKids","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c8/53c7ef782fa1ff33d44d3d51b8f10251ce8e66.src","preCode":"  public void testIndexingAnonKids() throws Exception {\n    final String collection = \"test_anon\";\n    CollectionAdminRequest.createCollection(collection, ANON_KIDS_CONFIG, 1, 1).process(cluster.getSolrClient());\n    cluster.getSolrClient().setDefaultCollection(collection);\n    \n    \r\n    \r\n    \r\n    \r\n\n    \r\n    final SolrClient client = getSolrClient();\n\n    final SolrInputDocument p1 = new SolrInputDocument();\n    p1.setField(\"id\", \"P11!prod\");\n    p1.setField(\"type_s\", \"PRODUCT\");\n    p1.setField(\"name_s\", \"Swingline Stapler\");\n    p1.setField(\"description_t\", \"The Cadillac of office staplers ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P11!S21\");\n      s1.setField(\"type_s\", \"SKU\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 42);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P11!D41\");\n        m1.setField(\"type_s\", \"MANUAL\");\n        m1.setField(\"name_s\", \"Red Swingline Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.addChildDocument(m1);\n      }\n\n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P11!S31\");\n      s2.setField(\"type_s\", \"SKU\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 3);\n\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P11!D51\");\n      m1.setField(\"type_s\", \"MANUAL\");\n      m1.setField(\"name_s\", \"Quick Reference Guide\");\n      m1.setField(\"pages_i\", 1);\n      m1.setField(\"content_t\", \"How to use your stapler ...\");\n\n      final SolrInputDocument m2 = new SolrInputDocument();\n      m2.setField(\"id\", \"P11!D61\");\n      m2.setField(\"type_s\", \"MANUAL\");\n      m2.setField(\"name_s\", \"Warranty Details\");\n      m2.setField(\"pages_i\", 42);\n      m2.setField(\"content_t\", \"... lifetime guarantee ...\");\n\n      p1.addChildDocuments(Arrays.asList(s1, s2, m1, m2));\n    }\n    \n    client.add(p1);\n    \r\n    \n    client.commit();\n\n    final SolrDocumentList docs = getSolrClient().query\n      (new SolrQuery(\"description_t:Cadillac\").set(\"fl\", \"*,[child parentFilter='type_s:PRODUCT']\")).getResults();\n    \n    assertEquals(1, docs.getNumFound());\n    assertEquals(\"P11!prod\", docs.get(0).getFieldValue(\"id\"));\n\n    \r\n    assertEquals(5, docs.get(0).getChildDocumentCount());\n    assertEquals(5, docs.get(0).getChildDocuments().size());\n\n    \r\n    final SolrDocument red_stapler_brochure = docs.get(0).getChildDocuments().get(0);\n    assertEquals(\"P11!D41\", red_stapler_brochure.getFieldValue(\"id\"));\n    \n    final SolrDocument red_stapler = docs.get(0).getChildDocuments().get(1);\n    assertEquals(\"P11!S21\", red_stapler.getFieldValue(\"id\"));\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/IndexingNestedDocuments.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2020-09-03 05:16:23","commitOrder":2,"curCode":"  public void testIndexingUsingNestPath() throws Exception {\n    final String collection = \"test_anon\";\n    CollectionAdminRequest.createCollection(collection, 1, 1).process(cluster.getSolrClient());\n    cluster.getSolrClient().setDefaultCollection(collection);\n    \n    \r\n    \r\n    \r\n    \r\n\n    \r\n    final SolrClient client = getSolrClient();\n\n    final SolrInputDocument p1 = new SolrInputDocument();\n    p1.setField(\"id\", \"P11!prod\");\n    p1.setField(\"name_s\", \"Swingline Stapler\");\n    p1.setField(\"description_t\", \"The Cadillac of office staplers ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P11!S21\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 42);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P11!D41\");\n        m1.setField(\"name_s\", \"Red Swingline Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.setField(\"manuals\", m1);\n      }\n\n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P11!S31\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 3);\n      \n      p1.setField(\"skus\", Arrays.asList(s1, s2));\n    }\n    {\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P11!D51\");\n      m1.setField(\"name_s\", \"Quick Reference Guide\");\n      m1.setField(\"pages_i\", 1);\n      m1.setField(\"content_t\", \"How to use your stapler ...\");\n\n      final SolrInputDocument m2 = new SolrInputDocument();\n      m2.setField(\"id\", \"P11!D61\");\n      m2.setField(\"name_s\", \"Warranty Details\");\n      m2.setField(\"pages_i\", 42);\n      m2.setField(\"content_t\", \"... lifetime guarantee ...\");\n\n      p1.setField(\"manuals\", Arrays.asList(m1, m2));\n    }\n\n    final SolrInputDocument p2 = new SolrInputDocument();\n    p2.setField(\"id\", \"P22!prod\");\n    p2.setField(\"name_s\", \"Mont Blanc Fountain Pen\");\n    p2.setField(\"description_t\", \"A Premium Writing Instrument ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P22!S22\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 89);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P22!D42\");\n        m1.setField(\"name_s\", \"Red Mont Blanc Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.setField(\"manuals\", m1);\n      }\n      \n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P22!S32\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 67);\n      \n      p2.setField(\"skus\", Arrays.asList(s1, s2));\n    }\n    {\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P22!D52\");\n      m1.setField(\"name_s\", \"How To Use A Pen\");\n      m1.setField(\"pages_i\", 42);\n      m1.setField(\"content_t\", \"Start by removing the cap ...\");\n\n      p2.setField(\"manuals\", m1);\n    }\n    \n    client.add(Arrays.asList(p1, p2));\n    \r\n    \n    client.commit();\n\n\n    \r\n\n    final SolrDocumentList docs = getSolrClient().query\n      (new SolrQuery(\"description_t:Writing\").set(\"fl\", \"*,[child]\")).getResults();\n    \n    assertEquals(1, docs.getNumFound());\n    assertEquals(\"P22!prod\", docs.get(0).getFieldValue(\"id\"));\n    \n    assertEquals(1, docs.get(0).getFieldValues(\"manuals\").size());\n    assertEquals(SolrDocument.class, docs.get(0).getFieldValues(\"manuals\").iterator().next().getClass());\n\n    assertEquals(2, docs.get(0).getFieldValues(\"skus\").size());\n    final List<Object> skus = new ArrayList<>(docs.get(0).getFieldValues(\"skus\"));\n    \n    assertEquals(SolrDocument.class, skus.get(0).getClass());\n    assertEquals(SolrDocument.class, skus.get(1).getClass());\n    \n    final SolrDocument red_pen = (SolrDocument) skus.get(0);\n    assertEquals(\"P22!S22\", red_pen.getFieldValue(\"id\"));\n\n    assertEquals(1, red_pen.getFieldValues(\"manuals\").size());\n    assertEquals(SolrDocument.class, red_pen.getFieldValues(\"manuals\").iterator().next().getClass());\n\n    final SolrDocument red_pen_brochure = (SolrDocument) red_pen.getFieldValues(\"manuals\").iterator().next();\n    assertEquals(\"P22!D42\", red_pen_brochure.getFieldValue(\"id\"));\n  }\n","date":"2020-09-03 05:16:23","endLine":279,"groupId":"101117","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexingUsingNestPath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9d/22119c0afa9511f942990fe7f57b493f0ae886.src","preCode":"  public void testIndexingUsingNestPath() throws Exception {\n    final String collection = \"test_anon\";\n    CollectionAdminRequest.createCollection(collection, 1, 1).process(cluster.getSolrClient());\n    cluster.getSolrClient().setDefaultCollection(collection);\n    \n    \r\n    \r\n    \r\n    \r\n\n    \r\n    final SolrClient client = getSolrClient();\n\n    final SolrInputDocument p1 = new SolrInputDocument();\n    p1.setField(\"id\", \"P11!prod\");\n    p1.setField(\"name_s\", \"Swingline Stapler\");\n    p1.setField(\"description_t\", \"The Cadillac of office staplers ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P11!S21\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 42);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P11!D41\");\n        m1.setField(\"name_s\", \"Red Swingline Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.setField(\"manuals\", m1);\n      }\n\n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P11!S31\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 3);\n      \n      p1.setField(\"skus\", Arrays.asList(s1, s2));\n    }\n    {\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P11!D51\");\n      m1.setField(\"name_s\", \"Quick Reference Guide\");\n      m1.setField(\"pages_i\", 1);\n      m1.setField(\"content_t\", \"How to use your stapler ...\");\n\n      final SolrInputDocument m2 = new SolrInputDocument();\n      m2.setField(\"id\", \"P11!D61\");\n      m2.setField(\"name_s\", \"Warranty Details\");\n      m2.setField(\"pages_i\", 42);\n      m2.setField(\"content_t\", \"... lifetime guarantee ...\");\n\n      p1.setField(\"manuals\", Arrays.asList(m1, m2));\n    }\n\n    final SolrInputDocument p2 = new SolrInputDocument();\n    p2.setField(\"id\", \"P22!prod\");\n    p2.setField(\"name_s\", \"Mont Blanc Fountain Pen\");\n    p2.setField(\"description_t\", \"A Premium Writing Instrument ...\");\n    {\n      final SolrInputDocument s1 = new SolrInputDocument();\n      s1.setField(\"id\", \"P22!S22\");\n      s1.setField(\"color_s\", \"RED\");\n      s1.setField(\"price_i\", 89);\n      { \n        final SolrInputDocument m1 = new SolrInputDocument();\n        m1.setField(\"id\", \"P22!D42\");\n        m1.setField(\"name_s\", \"Red Mont Blanc Brochure\");\n        m1.setField(\"pages_i\", 1);\n        m1.setField(\"content_t\", \"...\");\n\n        s1.setField(\"manuals\", m1);\n      }\n      \n      final SolrInputDocument s2 = new SolrInputDocument();\n      s2.setField(\"id\", \"P22!S32\");\n      s2.setField(\"color_s\", \"BLACK\");\n      s2.setField(\"price_i\", 67);\n      \n      p2.setField(\"skus\", Arrays.asList(s1, s2));\n    }\n    {\n      final SolrInputDocument m1 = new SolrInputDocument();\n      m1.setField(\"id\", \"P22!D52\");\n      m1.setField(\"name_s\", \"How To Use A Pen\");\n      m1.setField(\"pages_i\", 42);\n      m1.setField(\"content_t\", \"Start by removing the cap ...\");\n\n      p2.setField(\"manuals\", m1);\n    }\n    \n    client.add(Arrays.asList(p1, p2));\n    \r\n    \n    client.commit();\n\n\n    \r\n\n    final SolrDocumentList docs = getSolrClient().query\n      (new SolrQuery(\"description_t:Writing\").set(\"fl\", \"*,[child]\")).getResults();\n    \n    assertEquals(1, docs.getNumFound());\n    assertEquals(\"P22!prod\", docs.get(0).getFieldValue(\"id\"));\n    \n    assertEquals(1, docs.get(0).getFieldValues(\"manuals\").size());\n    assertEquals(SolrDocument.class, docs.get(0).getFieldValues(\"manuals\").iterator().next().getClass());\n\n    assertEquals(2, docs.get(0).getFieldValues(\"skus\").size());\n    final List<Object> skus = new ArrayList<>(docs.get(0).getFieldValues(\"skus\"));\n    \n    assertEquals(SolrDocument.class, skus.get(0).getClass());\n    assertEquals(SolrDocument.class, skus.get(1).getClass());\n    \n    final SolrDocument red_pen = (SolrDocument) skus.get(0);\n    assertEquals(\"P22!S22\", red_pen.getFieldValue(\"id\"));\n\n    assertEquals(1, red_pen.getFieldValues(\"manuals\").size());\n    assertEquals(SolrDocument.class, red_pen.getFieldValues(\"manuals\").iterator().next().getClass());\n\n    final SolrDocument red_pen_brochure = (SolrDocument) red_pen.getFieldValues(\"manuals\").iterator().next();\n    assertEquals(\"P22!D42\", red_pen_brochure.getFieldValue(\"id\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/IndexingNestedDocuments.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"N"}],"commitId":"8505d4d416fdf707bab55bc4da9a71ddb3374274","commitMessage":"@@@SOLR-15052: Per-replica states for reducing overseer bottlenecks (trunk) (#2177)\n\n","date":"2021-01-18 23:59:41","modifiedFileCount":"53","status":"M","submitter":"Noble Paul"}]
