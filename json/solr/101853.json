[{"authorTime":"2016-10-03 03:18:22","codes":[{"authorDate":"2016-10-03 03:18:22","commitOrder":1,"curCode":"  public static void initClassLogLevels() {\n    Class currentClass = RandomizedContext.current().getTargetClass();\n    LogLevel annotation = (LogLevel) currentClass.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, String> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedClassLogLevels.putAll(previousLevels);\n  }\n","date":"2016-10-03 03:18:22","endLine":309,"groupId":"51277","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"initClassLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/aecb14b3f866d177293bef8bd18cf414a80494.src","preCode":"  public static void initClassLogLevels() {\n    Class currentClass = RandomizedContext.current().getTargetClass();\n    LogLevel annotation = (LogLevel) currentClass.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, String> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedClassLogLevels.putAll(previousLevels);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"B"},{"authorDate":"2016-10-03 03:18:22","commitOrder":1,"curCode":"  public void initMethodLogLevels() {\n    Method method = RandomizedContext.current().getTargetMethod();\n    LogLevel annotation = method.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, String> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedMethodLogLevels.putAll(previousLevels);\n  }\n","date":"2016-10-03 03:18:22","endLine":322,"groupId":"51277","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initMethodLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/aecb14b3f866d177293bef8bd18cf414a80494.src","preCode":"  public void initMethodLogLevels() {\n    Method method = RandomizedContext.current().getTargetMethod();\n    LogLevel annotation = method.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, String> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedMethodLogLevels.putAll(previousLevels);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":314,"status":"B"}],"commitId":"3182cd9872af3cb73a1f73e36de68b8d76646e59","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-10-03 03:18:22","modifiedFileCount":"570","status":"B","submitter":"Karl Wright"},{"authorTime":"2018-03-26 18:20:49","codes":[{"authorDate":"2018-03-26 18:20:49","commitOrder":2,"curCode":"  public static void initClassLogLevels() {\n    Class currentClass = RandomizedContext.current().getTargetClass();\n    LogLevel annotation = (LogLevel) currentClass.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, Level> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedClassLogLevels.putAll(previousLevels);\n  }\n","date":"2018-03-26 18:20:49","endLine":410,"groupId":"54661","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"initClassLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/47/7891c8551d8810352d13b347261f0db20765f9.src","preCode":"  public static void initClassLogLevels() {\n    Class currentClass = RandomizedContext.current().getTargetClass();\n    LogLevel annotation = (LogLevel) currentClass.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, String> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedClassLogLevels.putAll(previousLevels);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":402,"status":"M"},{"authorDate":"2018-03-26 18:20:49","commitOrder":2,"curCode":"  public void initMethodLogLevels() {\n    Method method = RandomizedContext.current().getTargetMethod();\n    LogLevel annotation = method.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, Level> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedMethodLogLevels.putAll(previousLevels);\n  }\n","date":"2018-03-26 18:20:49","endLine":423,"groupId":"54661","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initMethodLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/47/7891c8551d8810352d13b347261f0db20765f9.src","preCode":"  public void initMethodLogLevels() {\n    Method method = RandomizedContext.current().getTargetMethod();\n    LogLevel annotation = method.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, String> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedMethodLogLevels.putAll(previousLevels);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":415,"status":"M"}],"commitId":"07d255a7087aede40b32c311f076a876cccdfb08","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-03-26 18:20:49","modifiedFileCount":"15","status":"M","submitter":"Karl Wright"},{"authorTime":"2018-03-26 18:20:49","codes":[{"authorDate":"2020-06-11 06:05:50","commitOrder":3,"curCode":"  public static void initClassLogLevels() {\n    @SuppressWarnings({\"rawtypes\"})\n    Class currentClass = RandomizedContext.current().getTargetClass();\n    @SuppressWarnings({\"unchecked\"})\n    LogLevel annotation = (LogLevel) currentClass.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, Level> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedClassLogLevels.putAll(previousLevels);\n  }\n","date":"2020-06-11 06:05:50","endLine":458,"groupId":"54661","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"initClassLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d7/0013be34940fcd641f29c2f307c1f73e35b36c.src","preCode":"  public static void initClassLogLevels() {\n    Class currentClass = RandomizedContext.current().getTargetClass();\n    LogLevel annotation = (LogLevel) currentClass.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, Level> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedClassLogLevels.putAll(previousLevels);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":448,"status":"M"},{"authorDate":"2018-03-26 18:20:49","commitOrder":3,"curCode":"  public void initMethodLogLevels() {\n    Method method = RandomizedContext.current().getTargetMethod();\n    LogLevel annotation = method.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, Level> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedMethodLogLevels.putAll(previousLevels);\n  }\n","date":"2018-03-26 18:20:49","endLine":423,"groupId":"54661","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"initMethodLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/47/7891c8551d8810352d13b347261f0db20765f9.src","preCode":"  public void initMethodLogLevels() {\n    Method method = RandomizedContext.current().getTargetMethod();\n    LogLevel annotation = method.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, Level> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedMethodLogLevels.putAll(previousLevels);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":415,"status":"N"}],"commitId":"07a203628ea46308612f4bb60686c313a6e4d75e","commitMessage":"@@@SOLR-14455: Fix or suppress warnings in solr/test-framework\n","date":"2020-06-11 06:05:50","modifiedFileCount":"12","status":"M","submitter":"Erick Erickson"},{"authorTime":"2018-03-26 18:20:49","codes":[{"authorDate":"2021-06-03 06:17:26","commitOrder":4,"curCode":"  public static void initClassLogLevels() {\n    Class<?> currentClass = RandomizedContext.current().getTargetClass();\n    LogLevel annotation = currentClass.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, Level> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedClassLogLevels.putAll(previousLevels);\n  }\n","date":"2021-06-03 06:17:26","endLine":487,"groupId":"101853","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"initClassLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3f/b48d9cb9bae981522addaae6b2dc7224adc7de.src","preCode":"  public static void initClassLogLevels() {\n    @SuppressWarnings({\"rawtypes\"})\n    Class currentClass = RandomizedContext.current().getTargetClass();\n    @SuppressWarnings({\"unchecked\"})\n    LogLevel annotation = (LogLevel) currentClass.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, Level> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedClassLogLevels.putAll(previousLevels);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":479,"status":"M"},{"authorDate":"2018-03-26 18:20:49","commitOrder":4,"curCode":"  public void initMethodLogLevels() {\n    Method method = RandomizedContext.current().getTargetMethod();\n    LogLevel annotation = method.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, Level> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedMethodLogLevels.putAll(previousLevels);\n  }\n","date":"2018-03-26 18:20:49","endLine":423,"groupId":"101853","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"initMethodLogLevels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/47/7891c8551d8810352d13b347261f0db20765f9.src","preCode":"  public void initMethodLogLevels() {\n    Method method = RandomizedContext.current().getTargetMethod();\n    LogLevel annotation = method.getAnnotation(LogLevel.class);\n    if (annotation == null) {\n      return;\n    }\n    Map<String, Level> previousLevels = LogLevel.Configurer.setLevels(annotation.value());\n    savedMethodLogLevels.putAll(previousLevels);\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":415,"status":"N"}],"commitId":"c8e06a7298a2745c2b83102169073e2f8e8eceb5","commitMessage":"@@@SOLR-15385 Address many rawtypes warnings (#107)\n\nAddressed significant usage of raw types with Class.  Map.  and SolrRequest; removed over 400 SuppressWarning annotations.\n\nMap construction was replaced with Map.of when immutability was possible.  and Utils.makeMap when a mutable map was required.\n\nDiscovered a potential bug in the PackageStore tests where not all assertions were being verified - these tests will be fixed separately.\n\nCo-authored-by: David Smiley <dsmiley@salesforce.com>","date":"2021-06-03 06:17:26","modifiedFileCount":"244","status":"M","submitter":"Mike Drob"}]
