[{"authorTime":"2017-05-31 19:56:14","codes":[{"authorDate":"2017-05-31 19:56:14","commitOrder":1,"curCode":"  public PointVectorStrategy(SpatialContext ctx, String fieldNamePrefix, FieldType fieldType) {\n    super(ctx, fieldNamePrefix);\n    this.fieldNameX = fieldNamePrefix+SUFFIX_X;\n    this.fieldNameY = fieldNamePrefix+SUFFIX_Y;\n\n    int numPairs = 0;\n    if ((this.hasStored = fieldType.stored())) {\n      numPairs++;\n    }\n    if ((this.hasDocVals = fieldType.docValuesType() != DocValuesType.NONE)) {\n      numPairs++;\n    }\n    if ((this.hasPointVals = fieldType.pointDimensionCount() > 0)) {\n      numPairs++;\n    }\n    if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {\n      if (hasPointVals) {\n        throw new IllegalArgumentException(\"pointValues and LegacyNumericType are mutually exclusive\");\n      }\n      final LegacyFieldType legacyType = (LegacyFieldType) fieldType;\n      if (legacyType.numericType() != LegacyNumericType.DOUBLE) {\n        throw new IllegalArgumentException(getClass() + \" does not support \" + legacyType.numericType());\n      }\n      numPairs++;\n      legacyNumericFieldType = new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);\n      legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());\n      legacyNumericFieldType.freeze();\n    } else {\n      legacyNumericFieldType = null;\n    }\n    this.fieldsLen = numPairs * 2;\n  }\n","date":"2017-05-31 19:56:14","endLine":178,"groupId":"23621","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"PointVectorStrategy","params":"(SpatialContextctx@StringfieldNamePrefix@FieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3b/29a61eea8681725f20bb1f56c010f2278e675d.src","preCode":"  public PointVectorStrategy(SpatialContext ctx, String fieldNamePrefix, FieldType fieldType) {\n    super(ctx, fieldNamePrefix);\n    this.fieldNameX = fieldNamePrefix+SUFFIX_X;\n    this.fieldNameY = fieldNamePrefix+SUFFIX_Y;\n\n    int numPairs = 0;\n    if ((this.hasStored = fieldType.stored())) {\n      numPairs++;\n    }\n    if ((this.hasDocVals = fieldType.docValuesType() != DocValuesType.NONE)) {\n      numPairs++;\n    }\n    if ((this.hasPointVals = fieldType.pointDimensionCount() > 0)) {\n      numPairs++;\n    }\n    if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {\n      if (hasPointVals) {\n        throw new IllegalArgumentException(\"pointValues and LegacyNumericType are mutually exclusive\");\n      }\n      final LegacyFieldType legacyType = (LegacyFieldType) fieldType;\n      if (legacyType.numericType() != LegacyNumericType.DOUBLE) {\n        throw new IllegalArgumentException(getClass() + \" does not support \" + legacyType.numericType());\n      }\n      numPairs++;\n      legacyNumericFieldType = new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);\n      legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());\n      legacyNumericFieldType.freeze();\n    } else {\n      legacyNumericFieldType = null;\n    }\n    this.fieldsLen = numPairs * 2;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"},{"authorDate":"2017-05-31 19:56:14","commitOrder":1,"curCode":"  public BBoxStrategy(SpatialContext ctx, String fieldNamePrefix, FieldType fieldType) {\n    super(ctx, fieldNamePrefix);\n    field_bbox = fieldNamePrefix;\n    field_minX = fieldNamePrefix + SUFFIX_MINX;\n    field_maxX = fieldNamePrefix + SUFFIX_MAXX;\n    field_minY = fieldNamePrefix + SUFFIX_MINY;\n    field_maxY = fieldNamePrefix + SUFFIX_MAXY;\n    field_xdl = fieldNamePrefix + SUFFIX_XDL;\n\n    fieldType.freeze();\n    this.optionsFieldType = fieldType;\n\n    int numQuads = 0;\n    if ((this.hasStored = fieldType.stored())) {\n      numQuads++;\n    }\n    if ((this.hasDocVals = fieldType.docValuesType() != DocValuesType.NONE)) {\n      numQuads++;\n    }\n    if ((this.hasPointVals = fieldType.pointDimensionCount() > 0)) {\n      numQuads++;\n    }\n    if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {\n      if (hasPointVals) {\n        throw new IllegalArgumentException(\"pointValues and LegacyNumericType are mutually exclusive\");\n      }\n      final LegacyFieldType legacyType = (LegacyFieldType) fieldType;\n      if (legacyType.numericType() != LegacyNumericType.DOUBLE) {\n        throw new IllegalArgumentException(getClass() + \" does not support \" + legacyType.numericType());\n      }\n      numQuads++;\n      legacyNumericFieldType = new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);\n      legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());\n      legacyNumericFieldType.freeze();\n    } else {\n      legacyNumericFieldType = null;\n    }\n\n    if (hasPointVals || legacyNumericFieldType != null) { \r\n      xdlFieldType = new FieldType(StringField.TYPE_NOT_STORED);\n      xdlFieldType.setIndexOptions(IndexOptions.DOCS);\n      xdlFieldType.freeze();\n    } else {\n      xdlFieldType = null;\n    }\n\n    this.fieldsLen = numQuads * 4 + (xdlFieldType != null ? 1 : 0);\n  }\n","date":"2017-05-31 19:56:14","endLine":203,"groupId":"4976","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"BBoxStrategy","params":"(SpatialContextctx@StringfieldNamePrefix@FieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c9/19eb8297d0eb6acf8649a56ce54f74bd676b87.src","preCode":"  public BBoxStrategy(SpatialContext ctx, String fieldNamePrefix, FieldType fieldType) {\n    super(ctx, fieldNamePrefix);\n    field_bbox = fieldNamePrefix;\n    field_minX = fieldNamePrefix + SUFFIX_MINX;\n    field_maxX = fieldNamePrefix + SUFFIX_MAXX;\n    field_minY = fieldNamePrefix + SUFFIX_MINY;\n    field_maxY = fieldNamePrefix + SUFFIX_MAXY;\n    field_xdl = fieldNamePrefix + SUFFIX_XDL;\n\n    fieldType.freeze();\n    this.optionsFieldType = fieldType;\n\n    int numQuads = 0;\n    if ((this.hasStored = fieldType.stored())) {\n      numQuads++;\n    }\n    if ((this.hasDocVals = fieldType.docValuesType() != DocValuesType.NONE)) {\n      numQuads++;\n    }\n    if ((this.hasPointVals = fieldType.pointDimensionCount() > 0)) {\n      numQuads++;\n    }\n    if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {\n      if (hasPointVals) {\n        throw new IllegalArgumentException(\"pointValues and LegacyNumericType are mutually exclusive\");\n      }\n      final LegacyFieldType legacyType = (LegacyFieldType) fieldType;\n      if (legacyType.numericType() != LegacyNumericType.DOUBLE) {\n        throw new IllegalArgumentException(getClass() + \" does not support \" + legacyType.numericType());\n      }\n      numQuads++;\n      legacyNumericFieldType = new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);\n      legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());\n      legacyNumericFieldType.freeze();\n    } else {\n      legacyNumericFieldType = null;\n    }\n\n    if (hasPointVals || legacyNumericFieldType != null) { \r\n      xdlFieldType = new FieldType(StringField.TYPE_NOT_STORED);\n      xdlFieldType.setIndexOptions(IndexOptions.DOCS);\n      xdlFieldType.freeze();\n    } else {\n      xdlFieldType = null;\n    }\n\n    this.fieldsLen = numQuads * 4 + (xdlFieldType != null ? 1 : 0);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/legacy/BBoxStrategy.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"B"}],"commitId":"97693234def7fb4fc92d8fbaab775705aaaaf565","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-05-31 19:56:14","modifiedFileCount":"119","status":"B","submitter":"Karl Wright"},{"authorTime":"2018-10-09 07:51:03","codes":[{"authorDate":"2018-10-09 07:51:03","commitOrder":2,"curCode":"  public PointVectorStrategy(SpatialContext ctx, String fieldNamePrefix, FieldType fieldType) {\n    super(ctx, fieldNamePrefix);\n    this.fieldNameX = fieldNamePrefix+SUFFIX_X;\n    this.fieldNameY = fieldNamePrefix+SUFFIX_Y;\n\n    int numPairs = 0;\n    if ((this.hasStored = fieldType.stored())) {\n      numPairs++;\n    }\n    if ((this.hasDocVals = fieldType.docValuesType() != DocValuesType.NONE)) {\n      numPairs++;\n    }\n    if ((this.hasPointVals = fieldType.pointDataDimensionCount() > 0)) {\n      numPairs++;\n    }\n    if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {\n      if (hasPointVals) {\n        throw new IllegalArgumentException(\"pointValues and LegacyNumericType are mutually exclusive\");\n      }\n      final LegacyFieldType legacyType = (LegacyFieldType) fieldType;\n      if (legacyType.numericType() != LegacyNumericType.DOUBLE) {\n        throw new IllegalArgumentException(getClass() + \" does not support \" + legacyType.numericType());\n      }\n      numPairs++;\n      legacyNumericFieldType = new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);\n      legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());\n      legacyNumericFieldType.freeze();\n    } else {\n      legacyNumericFieldType = null;\n    }\n    this.fieldsLen = numPairs * 2;\n  }\n","date":"2018-10-09 07:51:03","endLine":174,"groupId":"23621","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"PointVectorStrategy","params":"(SpatialContextctx@StringfieldNamePrefix@FieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4d/f76cad70fb4ca2a23566443c7cecc9ca9f64b7.src","preCode":"  public PointVectorStrategy(SpatialContext ctx, String fieldNamePrefix, FieldType fieldType) {\n    super(ctx, fieldNamePrefix);\n    this.fieldNameX = fieldNamePrefix+SUFFIX_X;\n    this.fieldNameY = fieldNamePrefix+SUFFIX_Y;\n\n    int numPairs = 0;\n    if ((this.hasStored = fieldType.stored())) {\n      numPairs++;\n    }\n    if ((this.hasDocVals = fieldType.docValuesType() != DocValuesType.NONE)) {\n      numPairs++;\n    }\n    if ((this.hasPointVals = fieldType.pointDimensionCount() > 0)) {\n      numPairs++;\n    }\n    if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {\n      if (hasPointVals) {\n        throw new IllegalArgumentException(\"pointValues and LegacyNumericType are mutually exclusive\");\n      }\n      final LegacyFieldType legacyType = (LegacyFieldType) fieldType;\n      if (legacyType.numericType() != LegacyNumericType.DOUBLE) {\n        throw new IllegalArgumentException(getClass() + \" does not support \" + legacyType.numericType());\n      }\n      numPairs++;\n      legacyNumericFieldType = new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);\n      legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());\n      legacyNumericFieldType.freeze();\n    } else {\n      legacyNumericFieldType = null;\n    }\n    this.fieldsLen = numPairs * 2;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"},{"authorDate":"2018-10-09 07:51:03","commitOrder":2,"curCode":"  public BBoxStrategy(SpatialContext ctx, String fieldNamePrefix, FieldType fieldType) {\n    super(ctx, fieldNamePrefix);\n    field_bbox = fieldNamePrefix;\n    field_minX = fieldNamePrefix + SUFFIX_MINX;\n    field_maxX = fieldNamePrefix + SUFFIX_MAXX;\n    field_minY = fieldNamePrefix + SUFFIX_MINY;\n    field_maxY = fieldNamePrefix + SUFFIX_MAXY;\n    field_xdl = fieldNamePrefix + SUFFIX_XDL;\n\n    fieldType.freeze();\n    this.optionsFieldType = fieldType;\n\n    int numQuads = 0;\n    if ((this.hasStored = fieldType.stored())) {\n      numQuads++;\n    }\n    if ((this.hasDocVals = fieldType.docValuesType() != DocValuesType.NONE)) {\n      numQuads++;\n    }\n    if ((this.hasPointVals = fieldType.pointDataDimensionCount() > 0)) {\n      numQuads++;\n    }\n    if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {\n      if (hasPointVals) {\n        throw new IllegalArgumentException(\"pointValues and LegacyNumericType are mutually exclusive\");\n      }\n      final LegacyFieldType legacyType = (LegacyFieldType) fieldType;\n      if (legacyType.numericType() != LegacyNumericType.DOUBLE) {\n        throw new IllegalArgumentException(getClass() + \" does not support \" + legacyType.numericType());\n      }\n      numQuads++;\n      legacyNumericFieldType = new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);\n      legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());\n      legacyNumericFieldType.freeze();\n    } else {\n      legacyNumericFieldType = null;\n    }\n\n    if (hasPointVals || legacyNumericFieldType != null) { \r\n      xdlFieldType = new FieldType(StringField.TYPE_NOT_STORED);\n      xdlFieldType.setIndexOptions(IndexOptions.DOCS);\n      xdlFieldType.freeze();\n    } else {\n      xdlFieldType = null;\n    }\n\n    this.fieldsLen = numQuads * 4 + (xdlFieldType != null ? 1 : 0);\n  }\n","date":"2018-10-09 07:51:03","endLine":204,"groupId":"4976","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"BBoxStrategy","params":"(SpatialContextctx@StringfieldNamePrefix@FieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b2/f239ec95b836c8d4394c7b87dfa64fc6ba4763.src","preCode":"  public BBoxStrategy(SpatialContext ctx, String fieldNamePrefix, FieldType fieldType) {\n    super(ctx, fieldNamePrefix);\n    field_bbox = fieldNamePrefix;\n    field_minX = fieldNamePrefix + SUFFIX_MINX;\n    field_maxX = fieldNamePrefix + SUFFIX_MAXX;\n    field_minY = fieldNamePrefix + SUFFIX_MINY;\n    field_maxY = fieldNamePrefix + SUFFIX_MAXY;\n    field_xdl = fieldNamePrefix + SUFFIX_XDL;\n\n    fieldType.freeze();\n    this.optionsFieldType = fieldType;\n\n    int numQuads = 0;\n    if ((this.hasStored = fieldType.stored())) {\n      numQuads++;\n    }\n    if ((this.hasDocVals = fieldType.docValuesType() != DocValuesType.NONE)) {\n      numQuads++;\n    }\n    if ((this.hasPointVals = fieldType.pointDimensionCount() > 0)) {\n      numQuads++;\n    }\n    if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {\n      if (hasPointVals) {\n        throw new IllegalArgumentException(\"pointValues and LegacyNumericType are mutually exclusive\");\n      }\n      final LegacyFieldType legacyType = (LegacyFieldType) fieldType;\n      if (legacyType.numericType() != LegacyNumericType.DOUBLE) {\n        throw new IllegalArgumentException(getClass() + \" does not support \" + legacyType.numericType());\n      }\n      numQuads++;\n      legacyNumericFieldType = new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);\n      legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());\n      legacyNumericFieldType.freeze();\n    } else {\n      legacyNumericFieldType = null;\n    }\n\n    if (hasPointVals || legacyNumericFieldType != null) { \r\n      xdlFieldType = new FieldType(StringField.TYPE_NOT_STORED);\n      xdlFieldType.setIndexOptions(IndexOptions.DOCS);\n      xdlFieldType.freeze();\n    } else {\n      xdlFieldType = null;\n    }\n\n    this.fieldsLen = numQuads * 4 + (xdlFieldType != null ? 1 : 0);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/legacy/BBoxStrategy.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"1118299c338253cea09640acdc48dc930dc27fda","commitMessage":"@@@LUCENE-8496: Selective indexing - modify BKDReader/BKDWriter to allow users to select a fewer number of dimensions to be used for creating the index than the total number of dimensions used for field encoding. i.e..  dimensions 0 to N may be used to determine how to split the inner nodes.  and dimensions N+1 to D are ignored and stored as data dimensions at the leaves.\n","date":"2018-10-09 07:51:03","modifiedFileCount":"72","status":"M","submitter":"Nicholas Knize"},{"authorTime":"2020-01-17 01:08:29","codes":[{"authorDate":"2020-01-17 01:08:29","commitOrder":3,"curCode":"  public PointVectorStrategy(SpatialContext ctx, String fieldNamePrefix, FieldType fieldType) {\n    super(ctx, fieldNamePrefix);\n    this.fieldNameX = fieldNamePrefix+SUFFIX_X;\n    this.fieldNameY = fieldNamePrefix+SUFFIX_Y;\n\n    int numPairs = 0;\n    if ((this.hasStored = fieldType.stored())) {\n      numPairs++;\n    }\n    if ((this.hasDocVals = fieldType.docValuesType() != DocValuesType.NONE)) {\n      numPairs++;\n    }\n    if ((this.hasPointVals = fieldType.pointDimensionCount() > 0)) {\n      numPairs++;\n    }\n    if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {\n      if (hasPointVals) {\n        throw new IllegalArgumentException(\"pointValues and LegacyNumericType are mutually exclusive\");\n      }\n      final LegacyFieldType legacyType = (LegacyFieldType) fieldType;\n      if (legacyType.numericType() != LegacyNumericType.DOUBLE) {\n        throw new IllegalArgumentException(getClass() + \" does not support \" + legacyType.numericType());\n      }\n      numPairs++;\n      legacyNumericFieldType = new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);\n      legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());\n      legacyNumericFieldType.freeze();\n    } else {\n      legacyNumericFieldType = null;\n    }\n    this.fieldsLen = numPairs * 2;\n  }\n","date":"2020-02-08 06:08:14","endLine":174,"groupId":"102455","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"PointVectorStrategy","params":"(SpatialContextctx@StringfieldNamePrefix@FieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/da/48fcb667a8e42d865e3724c97e54205ff50d9d.src","preCode":"  public PointVectorStrategy(SpatialContext ctx, String fieldNamePrefix, FieldType fieldType) {\n    super(ctx, fieldNamePrefix);\n    this.fieldNameX = fieldNamePrefix+SUFFIX_X;\n    this.fieldNameY = fieldNamePrefix+SUFFIX_Y;\n\n    int numPairs = 0;\n    if ((this.hasStored = fieldType.stored())) {\n      numPairs++;\n    }\n    if ((this.hasDocVals = fieldType.docValuesType() != DocValuesType.NONE)) {\n      numPairs++;\n    }\n    if ((this.hasPointVals = fieldType.pointDataDimensionCount() > 0)) {\n      numPairs++;\n    }\n    if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {\n      if (hasPointVals) {\n        throw new IllegalArgumentException(\"pointValues and LegacyNumericType are mutually exclusive\");\n      }\n      final LegacyFieldType legacyType = (LegacyFieldType) fieldType;\n      if (legacyType.numericType() != LegacyNumericType.DOUBLE) {\n        throw new IllegalArgumentException(getClass() + \" does not support \" + legacyType.numericType());\n      }\n      numPairs++;\n      legacyNumericFieldType = new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);\n      legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());\n      legacyNumericFieldType.freeze();\n    } else {\n      legacyNumericFieldType = null;\n    }\n    this.fieldsLen = numPairs * 2;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/legacy/PointVectorStrategy.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"},{"authorDate":"2020-01-17 01:08:29","commitOrder":3,"curCode":"  public BBoxStrategy(SpatialContext ctx, String fieldNamePrefix, FieldType fieldType) {\n    super(ctx, fieldNamePrefix);\n    field_bbox = fieldNamePrefix;\n    field_minX = fieldNamePrefix + SUFFIX_MINX;\n    field_maxX = fieldNamePrefix + SUFFIX_MAXX;\n    field_minY = fieldNamePrefix + SUFFIX_MINY;\n    field_maxY = fieldNamePrefix + SUFFIX_MAXY;\n    field_xdl = fieldNamePrefix + SUFFIX_XDL;\n\n    fieldType.freeze();\n    this.optionsFieldType = fieldType;\n\n    int numQuads = 0;\n    if ((this.hasStored = fieldType.stored())) {\n      numQuads++;\n    }\n    if ((this.hasDocVals = fieldType.docValuesType() != DocValuesType.NONE)) {\n      numQuads++;\n    }\n    if ((this.hasPointVals = fieldType.pointDimensionCount() > 0)) {\n      numQuads++;\n    }\n    if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {\n      if (hasPointVals) {\n        throw new IllegalArgumentException(\"pointValues and LegacyNumericType are mutually exclusive\");\n      }\n      final LegacyFieldType legacyType = (LegacyFieldType) fieldType;\n      if (legacyType.numericType() != LegacyNumericType.DOUBLE) {\n        throw new IllegalArgumentException(getClass() + \" does not support \" + legacyType.numericType());\n      }\n      numQuads++;\n      legacyNumericFieldType = new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);\n      legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());\n      legacyNumericFieldType.freeze();\n    } else {\n      legacyNumericFieldType = null;\n    }\n\n    if (hasPointVals || legacyNumericFieldType != null) { \r\n      xdlFieldType = new FieldType(StringField.TYPE_NOT_STORED);\n      xdlFieldType.setIndexOptions(IndexOptions.DOCS);\n      xdlFieldType.freeze();\n    } else {\n      xdlFieldType = null;\n    }\n\n    this.fieldsLen = numQuads * 4 + (xdlFieldType != null ? 1 : 0);\n  }\n","date":"2020-02-08 06:08:14","endLine":204,"groupId":"102455","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"BBoxStrategy","params":"(SpatialContextctx@StringfieldNamePrefix@FieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/84/f90ef7aa52594731ce5d27420b27f3eac47709.src","preCode":"  public BBoxStrategy(SpatialContext ctx, String fieldNamePrefix, FieldType fieldType) {\n    super(ctx, fieldNamePrefix);\n    field_bbox = fieldNamePrefix;\n    field_minX = fieldNamePrefix + SUFFIX_MINX;\n    field_maxX = fieldNamePrefix + SUFFIX_MAXX;\n    field_minY = fieldNamePrefix + SUFFIX_MINY;\n    field_maxY = fieldNamePrefix + SUFFIX_MAXY;\n    field_xdl = fieldNamePrefix + SUFFIX_XDL;\n\n    fieldType.freeze();\n    this.optionsFieldType = fieldType;\n\n    int numQuads = 0;\n    if ((this.hasStored = fieldType.stored())) {\n      numQuads++;\n    }\n    if ((this.hasDocVals = fieldType.docValuesType() != DocValuesType.NONE)) {\n      numQuads++;\n    }\n    if ((this.hasPointVals = fieldType.pointDataDimensionCount() > 0)) {\n      numQuads++;\n    }\n    if (fieldType.indexOptions() != IndexOptions.NONE && fieldType instanceof LegacyFieldType && ((LegacyFieldType)fieldType).numericType() != null) {\n      if (hasPointVals) {\n        throw new IllegalArgumentException(\"pointValues and LegacyNumericType are mutually exclusive\");\n      }\n      final LegacyFieldType legacyType = (LegacyFieldType) fieldType;\n      if (legacyType.numericType() != LegacyNumericType.DOUBLE) {\n        throw new IllegalArgumentException(getClass() + \" does not support \" + legacyType.numericType());\n      }\n      numQuads++;\n      legacyNumericFieldType = new LegacyFieldType(LegacyDoubleField.TYPE_NOT_STORED);\n      legacyNumericFieldType.setNumericPrecisionStep(legacyType.numericPrecisionStep());\n      legacyNumericFieldType.freeze();\n    } else {\n      legacyNumericFieldType = null;\n    }\n\n    if (hasPointVals || legacyNumericFieldType != null) { \r\n      xdlFieldType = new FieldType(StringField.TYPE_NOT_STORED);\n      xdlFieldType.setIndexOptions(IndexOptions.DOCS);\n      xdlFieldType.freeze();\n    } else {\n      xdlFieldType = null;\n    }\n\n    this.fieldsLen = numQuads * 4 + (xdlFieldType != null ? 1 : 0);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/legacy/BBoxStrategy.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"206a70e7b79050db0d351135e406cfb997cbeee1","commitMessage":"@@@LUCENE-9149: Increase data dimension limit in BKD\n","date":"2020-02-08 06:08:14","modifiedFileCount":"72","status":"M","submitter":"Nicholas Knize"}]
