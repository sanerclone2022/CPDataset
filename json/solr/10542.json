[{"authorTime":"2018-12-17 00:58:20","codes":[{"authorDate":"2016-04-08 18:07:13","commitOrder":5,"curCode":"  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      \r\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      \r\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      \r\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      \r\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      \r\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n","date":"2016-04-08 18:07:13","endLine":408,"groupId":"17894","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/11/d2784d9ae7e69d1590b5d00909d43c6304bd5f.src","preCode":"  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      \r\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      \r\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      \r\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      \r\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      \r\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"NB"},{"authorDate":"2018-12-17 00:58:20","commitOrder":5,"curCode":"  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (Http2SolrClient client = getHttp2SolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      \r\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      \r\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      \r\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n\n      \r\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n    }\n\n  }\n","date":"2018-12-17 00:58:20","endLine":363,"groupId":"3131","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ad/7838bb44f8d224796bc73ea4222192d170cc09.src","preCode":"  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (Http2SolrClient client = getHttp2SolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      \r\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      \r\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      \r\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n\n      \r\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n    }\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/Http2SolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":328,"status":"B"}],"commitId":"f80e8e11672d31c6e12069d2bd12a28b92e5a336","commitMessage":"@@@Merge jira/http2 branch to master\n","date":"2018-12-17 00:58:20","modifiedFileCount":"47","status":"M","submitter":"Cao Manh Dat"},{"authorTime":"2018-12-17 00:58:20","codes":[{"authorDate":"2019-08-03 15:30:49","commitOrder":6,"curCode":"  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      expectThrows(ParseException.class, () -> client.deleteById(\"id\"));\n\n      \r\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      \r\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      \r\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      \r\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      \r\n      client.setParser(new XMLResponseParser());\n      expectThrows(ParseException.class, () -> client.deleteByQuery(\"*:*\"));\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n","date":"2019-08-03 15:30:49","endLine":385,"groupId":"2447","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/44/6022382ccffaf90e9329348e939834603ef406.src","preCode":"  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      \r\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      \r\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      \r\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      \r\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      \r\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":351,"status":"M"},{"authorDate":"2018-12-17 00:58:20","commitOrder":6,"curCode":"  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (Http2SolrClient client = getHttp2SolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      \r\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      \r\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      \r\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n\n      \r\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n    }\n\n  }\n","date":"2018-12-17 00:58:20","endLine":363,"groupId":"3131","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ad/7838bb44f8d224796bc73ea4222192d170cc09.src","preCode":"  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (Http2SolrClient client = getHttp2SolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      \r\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      \r\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      \r\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n\n      \r\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n    }\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/Http2SolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":328,"status":"N"}],"commitId":"8c4fde94fe93c70b95ed3563fb65972bb303e0af","commitMessage":"@@@SOLR-12555: use expectThrows() to verify the ex thrown in tests\n","date":"2019-08-03 15:30:49","modifiedFileCount":"89","status":"M","submitter":"Munendra S N"},{"authorTime":"2020-05-13 05:50:07","codes":[{"authorDate":"2020-05-13 05:50:07","commitOrder":7,"curCode":"  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      expectThrows(BaseHttpSolrClient.RemoteSolrException.class, () -> client.deleteById(\"id\"));\n\n      \r\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      \r\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      \r\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      \r\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      \r\n      client.setParser(new XMLResponseParser());\n      expectThrows(BaseHttpSolrClient.RemoteSolrException.class, () -> client.deleteByQuery(\"*:*\"));\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n","date":"2020-05-13 05:50:07","endLine":384,"groupId":"10542","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/c27ebb33f276e75b4c6c5e184259890573f09e.src","preCode":"  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      expectThrows(ParseException.class, () -> client.deleteById(\"id\"));\n\n      \r\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      \r\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      \r\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      \r\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      \r\n      client.setParser(new XMLResponseParser());\n      expectThrows(ParseException.class, () -> client.deleteByQuery(\"*:*\"));\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":350,"status":"M"},{"authorDate":"2020-05-13 05:50:07","commitOrder":7,"curCode":"  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (Http2SolrClient client = getHttp2SolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (BaseHttpSolrClient.RemoteSolrException ignored) {}\n\n      \r\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      \r\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      \r\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n\n      \r\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (BaseHttpSolrClient.RemoteSolrException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n    }\n\n  }\n","date":"2020-05-13 05:50:07","endLine":374,"groupId":"10542","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/df0ca298cdb3fb83b4b8baf9a84d997a1b85cd.src","preCode":"  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (Http2SolrClient client = getHttp2SolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      \r\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      \r\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      \r\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      \r\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n\n      \r\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(EXPECTED_USER_AGENT, DebugServlet.headers.get(\"user-agent\"));\n    }\n\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/Http2SolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"M"}],"commitId":"adddab9d1466675cd79fd06c37592000a56841d2","commitMessage":"@@@SOLR-14456: Fix Content-Type header forwarding on compressed requests (#1480)\n\nCo-authored-by: Samuel Garc?a Mart?nez <samuelgma@inditex.com>","date":"2020-05-13 05:50:07","modifiedFileCount":"6","status":"M","submitter":"Samuel Garc?a Mart?nez"}]
