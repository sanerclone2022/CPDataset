[{"authorTime":"2016-10-04 21:45:50","codes":[{"authorDate":"2014-08-22 06:29:12","commitOrder":6,"curCode":"  public static void causeConnectionLoss(JettySolrRunner jetty) {\n    SolrDispatchFilter solrDispatchFilter = (SolrDispatchFilter) jetty\n        .getDispatchFilter().getFilter();\n    if (solrDispatchFilter != null) {\n      CoreContainer cores = solrDispatchFilter.getCores();\n      if (cores != null) {\n        SolrZkClient zkClient = cores.getZkController().getZkClient();\n        zkClient.getSolrZooKeeper().closeCnxn();\n      }\n    }\n  }\n","date":"2014-08-22 06:29:12","endLine":166,"groupId":"37189","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"causeConnectionLoss","params":"(JettySolrRunnerjetty)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d8/c1f7fe9daf5ebe6a48e8a84431e4211c9a5b73.src","preCode":"  public static void causeConnectionLoss(JettySolrRunner jetty) {\n    SolrDispatchFilter solrDispatchFilter = (SolrDispatchFilter) jetty\n        .getDispatchFilter().getFilter();\n    if (solrDispatchFilter != null) {\n      CoreContainer cores = solrDispatchFilter.getCores();\n      if (cores != null) {\n        SolrZkClient zkClient = cores.getZkController().getZkClient();\n        zkClient.getSolrZooKeeper().closeCnxn();\n      }\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"NB"},{"authorDate":"2016-10-04 21:45:50","commitOrder":6,"curCode":"  public void expireZkSession(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n      long sessionId = zkClient.getSolrZooKeeper().getSessionId();\n      zkServer.expire(sessionId);\n      log.info(\"Expired zookeeper session {} from node {}\", sessionId, jetty.getBaseUrl());\n    }\n  }\n","date":"2016-10-04 21:45:50","endLine":537,"groupId":"1214","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"expireZkSession","params":"(JettySolrRunnerjetty)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/74/cae539e60dcb94fd325cc6343cba1dc0caebac.src","preCode":"  public void expireZkSession(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n      long sessionId = zkClient.getSolrZooKeeper().getSessionId();\n      zkServer.expire(sessionId);\n      log.info(\"Expired zookeeper session {} from node {}\", sessionId, jetty.getBaseUrl());\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":528,"status":"B"}],"commitId":"5fbf135b8058e773275febba4baa8fa4a42e6ffc","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n\nSOLR-9589: Remove jackson dependency from SolrJ\n","date":"2016-10-04 21:45:50","modifiedFileCount":"30","status":"M","submitter":"Noble Paul"},{"authorTime":"2016-10-04 21:45:50","codes":[{"authorDate":"2017-05-23 10:44:01","commitOrder":7,"curCode":"  public static void causeConnectionLoss(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      monkeyLog(\"Will cause connection loss on \" + jetty.getLocalPort());\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n    }\n  }\n","date":"2017-05-23 10:58:51","endLine":172,"groupId":"32384","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"causeConnectionLoss","params":"(JettySolrRunnerjetty)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bd/bbdd2b6f80f967f9bfd08ead96cb1b81140581.src","preCode":"  public static void causeConnectionLoss(JettySolrRunner jetty) {\n    SolrDispatchFilter solrDispatchFilter = (SolrDispatchFilter) jetty\n        .getDispatchFilter().getFilter();\n    if (solrDispatchFilter != null) {\n      CoreContainer cores = solrDispatchFilter.getCores();\n      if (cores != null) {\n        SolrZkClient zkClient = cores.getZkController().getZkClient();\n        zkClient.getSolrZooKeeper().closeCnxn();\n      }\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2016-10-04 21:45:50","commitOrder":7,"curCode":"  public void expireZkSession(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n      long sessionId = zkClient.getSolrZooKeeper().getSessionId();\n      zkServer.expire(sessionId);\n      log.info(\"Expired zookeeper session {} from node {}\", sessionId, jetty.getBaseUrl());\n    }\n  }\n","date":"2016-10-04 21:45:50","endLine":537,"groupId":"1214","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"expireZkSession","params":"(JettySolrRunnerjetty)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/74/cae539e60dcb94fd325cc6343cba1dc0caebac.src","preCode":"  public void expireZkSession(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n      long sessionId = zkClient.getSolrZooKeeper().getSessionId();\n      zkServer.expire(sessionId);\n      log.info(\"Expired zookeeper session {} from node {}\", sessionId, jetty.getBaseUrl());\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":528,"status":"N"}],"commitId":"2fc41d565a4a0408a09856a37d3be7d87414ba3f","commitMessage":"@@@SOLR-10233: Add support for replica types\n","date":"2017-05-23 10:58:51","modifiedFileCount":"69","status":"M","submitter":"Tomas Fernandez Lobbe"},{"authorTime":"2020-05-01 07:50:31","codes":[{"authorDate":"2017-05-23 10:44:01","commitOrder":8,"curCode":"  public static void causeConnectionLoss(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      monkeyLog(\"Will cause connection loss on \" + jetty.getLocalPort());\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n    }\n  }\n","date":"2017-05-23 10:58:51","endLine":172,"groupId":"101886","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"causeConnectionLoss","params":"(JettySolrRunnerjetty)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bd/bbdd2b6f80f967f9bfd08ead96cb1b81140581.src","preCode":"  public static void causeConnectionLoss(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      monkeyLog(\"Will cause connection loss on \" + jetty.getLocalPort());\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/ChaosMonkey.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"N"},{"authorDate":"2020-05-01 07:50:31","commitOrder":8,"curCode":"  public void expireZkSession(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n      long sessionId = zkClient.getSolrZooKeeper().getSessionId();\n      zkServer.expire(sessionId);\n      if (log.isInfoEnabled()) {\n        log.info(\"Expired zookeeper session {} from node {}\", sessionId, jetty.getBaseUrl());\n      }\n    }\n  }\n","date":"2020-05-01 07:50:31","endLine":702,"groupId":"101886","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"expireZkSession","params":"(JettySolrRunnerjetty)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f6/5374f357804cbb8a225c86d9e6ee394982590a.src","preCode":"  public void expireZkSession(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n      long sessionId = zkClient.getSolrZooKeeper().getSessionId();\n      zkServer.expire(sessionId);\n      log.info(\"Expired zookeeper session {} from node {}\", sessionId, jetty.getBaseUrl());\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":691,"status":"M"}],"commitId":"9ae05e9b4f318dc0bbb352a6a65573614d0be26d","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-05-01 07:50:31","modifiedFileCount":"170","status":"M","submitter":"Erick Erickson"}]
