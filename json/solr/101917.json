[{"authorTime":"2013-04-22 22:26:55","codes":[{"authorDate":"2013-03-06 12:50:33","commitOrder":2,"curCode":"  public static String JQ(String request) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\"); \n\n    String response;\n    boolean failed=true;\n    try {\n      response = restTestHarness.query(request);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: \" + request);\n      }\n    }\n\n    return response;\n  }\n","date":"2013-03-06 12:50:33","endLine":178,"groupId":"29184","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"JQ","params":"(Stringrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7c/c995f7b8cf902048ef85e5d38bc3033e6be9e9.src","preCode":"  public static String JQ(String request) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\"); \n\n    String response;\n    boolean failed=true;\n    try {\n      response = restTestHarness.query(request);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: \" + request);\n      }\n    }\n\n    return response;\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"NB"},{"authorDate":"2013-04-22 22:26:55","commitOrder":2,"curCode":"  public static void assertJPost(String request, String content, double delta, String... tests) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\");\n\n    String response;\n    boolean failed = true;\n    try {\n      response = restTestHarness.post(request, content);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: \" + request);\n      }\n    }\n\n    for (String test : tests) {\n      if (null == test || 0 == test.length()) continue;\n      String testJSON = test.replaceAll(\"(?<!\\\\\\\\)\\'\", \"\\\"\");\n      testJSON = testJSON.replaceAll(\"\\\\\\\\\\'\", \"'\");\n\n      try {\n        failed = true;\n        String err = JSONTestUtil.match(response, testJSON, delta);\n        failed = false;\n        if (err != null) {\n          log.error(\"query failed JSON validation. error=\" + err +\n              \"\\n expected =\" + testJSON +\n              \"\\n response = \" + response +\n              \"\\n request = \" + request + \"\\n\"\n          );\n          throw new RuntimeException(err);\n        }\n      } finally {\n        if (failed) {\n          log.error(\"JSON query validation threw an exception.\" +\n              \"\\n expected =\" + testJSON +\n              \"\\n response = \" + response +\n              \"\\n request = \" + request + \"\\n\"\n          );\n        }\n      }\n    }\n  }\n","date":"2013-04-22 22:26:55","endLine":419,"groupId":"36278","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertJPost","params":"(Stringrequest@Stringcontent@doubledelta@String...tests)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5a/77b9f3acfe6caf210b651ca248f81f88edda9d.src","preCode":"  public static void assertJPost(String request, String content, double delta, String... tests) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\");\n\n    String response;\n    boolean failed = true;\n    try {\n      response = restTestHarness.post(request, content);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: \" + request);\n      }\n    }\n\n    for (String test : tests) {\n      if (null == test || 0 == test.length()) continue;\n      String testJSON = test.replaceAll(\"(?<!\\\\\\\\)\\'\", \"\\\"\");\n      testJSON = testJSON.replaceAll(\"\\\\\\\\\\'\", \"'\");\n\n      try {\n        failed = true;\n        String err = JSONTestUtil.match(response, testJSON, delta);\n        failed = false;\n        if (err != null) {\n          log.error(\"query failed JSON validation. error=\" + err +\n              \"\\n expected =\" + testJSON +\n              \"\\n response = \" + response +\n              \"\\n request = \" + request + \"\\n\"\n          );\n          throw new RuntimeException(err);\n        }\n      } finally {\n        if (failed) {\n          log.error(\"JSON query validation threw an exception.\" +\n              \"\\n expected =\" + testJSON +\n              \"\\n response = \" + response +\n              \"\\n request = \" + request + \"\\n\"\n          );\n        }\n      }\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":367,"status":"B"}],"commitId":"28b7111dc79fb0095814d617a5879fb93e70fb9c","commitMessage":"@@@SOLR-3251: Dynamically add fields to schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1470539 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-04-22 22:26:55","modifiedFileCount":"120","status":"M","submitter":"Steven Rowe"},{"authorTime":"2013-07-10 23:54:35","codes":[{"authorDate":"2013-03-06 12:50:33","commitOrder":3,"curCode":"  public static String JQ(String request) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\"); \n\n    String response;\n    boolean failed=true;\n    try {\n      response = restTestHarness.query(request);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: \" + request);\n      }\n    }\n\n    return response;\n  }\n","date":"2013-03-06 12:50:33","endLine":178,"groupId":"29184","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"JQ","params":"(Stringrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7c/c995f7b8cf902048ef85e5d38bc3033e6be9e9.src","preCode":"  public static String JQ(String request) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\"); \n\n    String response;\n    boolean failed=true;\n    try {\n      response = restTestHarness.query(request);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: \" + request);\n      }\n    }\n\n    return response;\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"N"},{"authorDate":"2013-07-10 23:54:35","commitOrder":3,"curCode":"  public static void assertJPost(String request, String content, double delta, String... tests) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\");\n\n    String response;\n    boolean failed = true;\n    try {\n      response = restTestHarness.post(request, content);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: \" + request);\n      }\n    }\n\n    for (String test : tests) {\n      if (null == test || 0 == test.length()) continue;\n      String testJSON = json(test);\n\n      try {\n        failed = true;\n        String err = JSONTestUtil.match(response, testJSON, delta);\n        failed = false;\n        if (err != null) {\n          log.error(\"query failed JSON validation. error=\" + err +\n              \"\\n expected =\" + testJSON +\n              \"\\n response = \" + response +\n              \"\\n request = \" + request + \"\\n\"\n          );\n          throw new RuntimeException(err);\n        }\n      } finally {\n        if (failed) {\n          log.error(\"JSON query validation threw an exception.\" +\n              \"\\n expected =\" + testJSON +\n              \"\\n response = \" + response +\n              \"\\n request = \" + request + \"\\n\"\n          );\n        }\n      }\n    }\n  }\n","date":"2013-07-10 23:54:35","endLine":416,"groupId":"34296","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertJPost","params":"(Stringrequest@Stringcontent@doubledelta@String...tests)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9d/551a99101423a129f2f98fcc98d50eb3d54614.src","preCode":"  public static void assertJPost(String request, String content, double delta, String... tests) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\");\n\n    String response;\n    boolean failed = true;\n    try {\n      response = restTestHarness.post(request, content);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: \" + request);\n      }\n    }\n\n    for (String test : tests) {\n      if (null == test || 0 == test.length()) continue;\n      String testJSON = test.replaceAll(\"(?<!\\\\\\\\)\\'\", \"\\\"\");\n      testJSON = testJSON.replaceAll(\"\\\\\\\\\\'\", \"'\");\n\n      try {\n        failed = true;\n        String err = JSONTestUtil.match(response, testJSON, delta);\n        failed = false;\n        if (err != null) {\n          log.error(\"query failed JSON validation. error=\" + err +\n              \"\\n expected =\" + testJSON +\n              \"\\n response = \" + response +\n              \"\\n request = \" + request + \"\\n\"\n          );\n          throw new RuntimeException(err);\n        }\n      } finally {\n        if (failed) {\n          log.error(\"JSON query validation threw an exception.\" +\n              \"\\n expected =\" + testJSON +\n              \"\\n response = \" + response +\n              \"\\n request = \" + request + \"\\n\"\n          );\n        }\n      }\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":365,"status":"M"}],"commitId":"7f1765f1fa447295cf4160eadbcadce05375d78f","commitMessage":"@@@tests: use single quoted json for readability\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1501809 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-07-10 23:54:35","modifiedFileCount":"3","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2020-05-01 07:50:31","codes":[{"authorDate":"2020-05-01 07:50:31","commitOrder":4,"curCode":"  public static String JQ(String request) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\"); \n\n    String response;\n    boolean failed=true;\n    try {\n      response = restTestHarness.query(request);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: {}\", request);\n      }\n    }\n\n    return response;\n  }\n","date":"2020-05-01 07:50:31","endLine":184,"groupId":"101917","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"JQ","params":"(Stringrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1c/d90bea1266f359697ac75d7d3433d1b5971eae.src","preCode":"  public static String JQ(String request) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\"); \n\n    String response;\n    boolean failed=true;\n    try {\n      response = restTestHarness.query(request);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: \" + request);\n      }\n    }\n\n    return response;\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2020-05-01 07:50:31","commitOrder":4,"curCode":"  public static void assertJPost(String request, String content, double delta, String... tests) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\");\n\n    String response;\n    boolean failed = true;\n    try {\n      response = restTestHarness.post(request, content);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: {}\", request);\n      }\n    }\n\n    for (String test : tests) {\n      if (null == test || 0 == test.length()) continue;\n      String testJSON = json(test);\n\n      try {\n        failed = true;\n        String err = JSONTestUtil.match(response, testJSON, delta);\n        failed = false;\n        if (err != null) {\n          log.error(\"query failed JSON validation. error={}\"\n              + \"\\n expected ={}\\n response = {}\\n request = {}\\n\"\n              , err, testJSON, response, request);\n          throw new RuntimeException(err);\n        }\n      } finally {\n        if (failed) {\n          log.error(\"JSON query validation threw an exception.\" +\n              \"\\n expected ={}\\n response = {}\\n request = {}\\n\"\n              ,testJSON, response, request);\n        }\n      }\n    }\n  }\n","date":"2020-05-01 07:50:31","endLine":408,"groupId":"101917","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"assertJPost","params":"(Stringrequest@Stringcontent@doubledelta@String...tests)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1c/d90bea1266f359697ac75d7d3433d1b5971eae.src","preCode":"  public static void assertJPost(String request, String content, double delta, String... tests) throws Exception {\n    int queryStartPos = request.indexOf('?');\n    String query;\n    String path;\n    if (-1 == queryStartPos) {\n      query = \"\";\n      path = request;\n    } else {\n      query = request.substring(queryStartPos + 1);\n      path = request.substring(0, queryStartPos);\n    }\n    query = setParam(query, \"wt\", \"json\");\n    request = path + '?' + setParam(query, \"indent\", \"on\");\n\n    String response;\n    boolean failed = true;\n    try {\n      response = restTestHarness.post(request, content);\n      failed = false;\n    } finally {\n      if (failed) {\n        log.error(\"REQUEST FAILED: \" + request);\n      }\n    }\n\n    for (String test : tests) {\n      if (null == test || 0 == test.length()) continue;\n      String testJSON = json(test);\n\n      try {\n        failed = true;\n        String err = JSONTestUtil.match(response, testJSON, delta);\n        failed = false;\n        if (err != null) {\n          log.error(\"query failed JSON validation. error=\" + err +\n              \"\\n expected =\" + testJSON +\n              \"\\n response = \" + response +\n              \"\\n request = \" + request + \"\\n\"\n          );\n          throw new RuntimeException(err);\n        }\n      } finally {\n        if (failed) {\n          log.error(\"JSON query validation threw an exception.\" +\n              \"\\n expected =\" + testJSON +\n              \"\\n response = \" + response +\n              \"\\n request = \" + request + \"\\n\"\n          );\n        }\n      }\n    }\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/util/RestTestBase.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":361,"status":"M"}],"commitId":"9ae05e9b4f318dc0bbb352a6a65573614d0be26d","commitMessage":"@@@LUCENE-7788: fail precommit on unparameterised log messages and examine for wasted work/objects\n","date":"2020-05-01 07:50:31","modifiedFileCount":"170","status":"M","submitter":"Erick Erickson"}]
