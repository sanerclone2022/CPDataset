[{"authorTime":"2016-08-03 23:12:57","codes":[{"authorDate":"2017-02-24 03:12:00","commitOrder":2,"curCode":"  private List<Future<NamedList>> callShards(List<String> baseUrls) throws IOException {\n\n    List<Future<NamedList>> futures = new ArrayList<>();\n    for (String baseUrl : baseUrls) {\n      SignificantTermsCall lc = new SignificantTermsCall(baseUrl,\n          this.params,\n          this.field,\n          this.minDocFreq,\n          this.maxDocFreq,\n          this.minTermLength,\n          this.numTerms);\n\n      Future<NamedList> future = executorService.submit(lc);\n      futures.add(future);\n    }\n\n    return futures;\n  }\n","date":"2017-02-24 03:18:03","endLine":299,"groupId":"46198","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"callShards","params":"(List<String>baseUrls)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f0/7742117953614d4969354b99033583346158c3.src","preCode":"  private List<Future<NamedList>> callShards(List<String> baseUrls) throws IOException {\n\n    List<Future<NamedList>> futures = new ArrayList<>();\n    for (String baseUrl : baseUrls) {\n      SignificantTermsCall lc = new SignificantTermsCall(baseUrl,\n          this.params,\n          this.field,\n          this.minDocFreq,\n          this.maxDocFreq,\n          this.minTermLength,\n          this.numTerms);\n\n      Future<NamedList> future = executorService.submit(lc);\n      futures.add(future);\n    }\n\n    return futures;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SignificantTermsStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"B"},{"authorDate":"2016-08-03 23:12:57","commitOrder":2,"curCode":"  private List<Future<NamedList>> callShards(List<String> baseUrls) throws IOException {\n\n    List<Future<NamedList>> futures = new ArrayList<>();\n    for (String baseUrl : baseUrls) {\n      FeaturesSelectionCall lc = new FeaturesSelectionCall(baseUrl,\n          this.params,\n          this.field,\n          this.outcome);\n\n      Future<NamedList> future = executorService.submit(lc);\n      futures.add(future);\n    }\n\n    return futures;\n  }\n","date":"2016-08-03 23:43:00","endLine":301,"groupId":"46198","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"callShards","params":"(List<String>baseUrls)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/00/7e3d8a88c66000857f0b893f9e10c45a42b29f.src","preCode":"  private List<Future<NamedList>> callShards(List<String> baseUrls) throws IOException {\n\n    List<Future<NamedList>> futures = new ArrayList<>();\n    for (String baseUrl : baseUrls) {\n      FeaturesSelectionCall lc = new FeaturesSelectionCall(baseUrl,\n          this.params,\n          this.field,\n          this.outcome);\n\n      Future<NamedList> future = executorService.submit(lc);\n      futures.add(future);\n    }\n\n    return futures;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"NB"}],"commitId":"dba733e7aa90bd607fdda0342b94bc17bb717c31","commitMessage":"@@@SOLR-10156: Add significantTerms Streaming Expression\n","date":"2017-02-24 03:18:03","modifiedFileCount":"4","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2016-08-03 23:12:57","codes":[{"authorDate":"2020-06-10 07:16:14","commitOrder":3,"curCode":"  private List<Future<NamedList>> callShards(List<String> baseUrls) throws IOException {\n\n    List<Future<NamedList>> futures = new ArrayList<>();\n    for (String baseUrl : baseUrls) {\n      SignificantTermsCall lc = new SignificantTermsCall(baseUrl,\n          this.params,\n          this.field,\n          this.minDocFreq,\n          this.maxDocFreq,\n          this.minTermLength,\n          this.numTerms);\n\n      @SuppressWarnings({\"rawtypes\"})\n      Future<NamedList> future = executorService.submit(lc);\n      futures.add(future);\n    }\n\n    return futures;\n  }\n","date":"2020-06-10 07:21:36","endLine":263,"groupId":"46198","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"callShards","params":"(List<String>baseUrls)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e0/50d381f5a9d109516f9941b2ffe3047fa60f76.src","preCode":"  private List<Future<NamedList>> callShards(List<String> baseUrls) throws IOException {\n\n    List<Future<NamedList>> futures = new ArrayList<>();\n    for (String baseUrl : baseUrls) {\n      SignificantTermsCall lc = new SignificantTermsCall(baseUrl,\n          this.params,\n          this.field,\n          this.minDocFreq,\n          this.maxDocFreq,\n          this.minTermLength,\n          this.numTerms);\n\n      Future<NamedList> future = executorService.submit(lc);\n      futures.add(future);\n    }\n\n    return futures;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SignificantTermsStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"},{"authorDate":"2016-08-03 23:12:57","commitOrder":3,"curCode":"  private List<Future<NamedList>> callShards(List<String> baseUrls) throws IOException {\n\n    List<Future<NamedList>> futures = new ArrayList<>();\n    for (String baseUrl : baseUrls) {\n      FeaturesSelectionCall lc = new FeaturesSelectionCall(baseUrl,\n          this.params,\n          this.field,\n          this.outcome);\n\n      Future<NamedList> future = executorService.submit(lc);\n      futures.add(future);\n    }\n\n    return futures;\n  }\n","date":"2016-08-03 23:43:00","endLine":301,"groupId":"46198","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"callShards","params":"(List<String>baseUrls)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/00/7e3d8a88c66000857f0b893f9e10c45a42b29f.src","preCode":"  private List<Future<NamedList>> callShards(List<String> baseUrls) throws IOException {\n\n    List<Future<NamedList>> futures = new ArrayList<>();\n    for (String baseUrl : baseUrls) {\n      FeaturesSelectionCall lc = new FeaturesSelectionCall(baseUrl,\n          this.params,\n          this.field,\n          this.outcome);\n\n      Future<NamedList> future = executorService.submit(lc);\n      futures.add(future);\n    }\n\n    return futures;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"N"}],"commitId":"c8f48d470108e5bbb356a9dbc8d040b75214c7dc","commitMessage":"@@@SOLR-14547: Fix or suppress warnings in solr/client/solrj/io/stream\n","date":"2020-06-10 07:21:36","modifiedFileCount":"43","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-06-22 00:19:37","codes":[{"authorDate":"2021-06-22 00:19:37","commitOrder":4,"curCode":"  private List<Future<NamedList<?>>> callShards(List<String> baseUrls) throws IOException {\n\n    List<Future<NamedList<?>>> futures = new ArrayList<>();\n    for (String baseUrl : baseUrls) {\n      SignificantTermsCall lc = new SignificantTermsCall(baseUrl,\n          this.params,\n          this.field,\n          this.minDocFreq,\n          this.maxDocFreq,\n          this.minTermLength,\n          this.numTerms);\n\n      Future<NamedList<?>> future = executorService.submit(lc);\n      futures.add(future);\n    }\n\n    return futures;\n  }\n","date":"2021-06-22 00:19:37","endLine":260,"groupId":"10266","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"callShards","params":"(List<String>baseUrls)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c2/edec8bf51296f38bfc88fdb7ccdfa8e23b5cbf.src","preCode":"  private List<Future<NamedList>> callShards(List<String> baseUrls) throws IOException {\n\n    List<Future<NamedList>> futures = new ArrayList<>();\n    for (String baseUrl : baseUrls) {\n      SignificantTermsCall lc = new SignificantTermsCall(baseUrl,\n          this.params,\n          this.field,\n          this.minDocFreq,\n          this.maxDocFreq,\n          this.minTermLength,\n          this.numTerms);\n\n      @SuppressWarnings({\"rawtypes\"})\n      Future<NamedList> future = executorService.submit(lc);\n      futures.add(future);\n    }\n\n    return futures;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SignificantTermsStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"M"},{"authorDate":"2021-06-22 00:19:37","commitOrder":4,"curCode":"  private List<Future<NamedList<?>>> callShards(List<String> baseUrls) throws IOException {\n\n    List<Future<NamedList<?>>> futures = new ArrayList<>();\n    for (String baseUrl : baseUrls) {\n      FeaturesSelectionCall lc = new FeaturesSelectionCall(baseUrl,\n          this.params,\n          this.field,\n          this.outcome);\n\n      Future<NamedList<?>> future = executorService.submit(lc);\n      futures.add(future);\n    }\n\n    return futures;\n  }\n","date":"2021-06-22 00:19:37","endLine":305,"groupId":"10266","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"callShards","params":"(List<String>baseUrls)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a4/6a4e9aace907e8a1a35e8d1294cae16c2dce3f.src","preCode":"  private List<Future<NamedList>> callShards(List<String> baseUrls) throws IOException {\n\n    List<Future<NamedList>> futures = new ArrayList<>();\n    for (String baseUrl : baseUrls) {\n      FeaturesSelectionCall lc = new FeaturesSelectionCall(baseUrl,\n          this.params,\n          this.field,\n          this.outcome);\n\n      Future<NamedList> future = executorService.submit(lc);\n      futures.add(future);\n    }\n\n    return futures;\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":291,"status":"M"}],"commitId":"1725e778ac86d88e2deff8f7339d45bb4e50a719","commitMessage":"@@@SOLR-15385 RawTypes Part III.  contrib and solrj (#169)\n\n* SOLR-15385 RawTypes Part III.  contrib and solrj\n\nCo-authored-by: Christine Poerschke <cpoerschke@apache.org>","date":"2021-06-22 00:19:37","modifiedFileCount":"216","status":"M","submitter":"Mike Drob"}]
