[{"authorTime":"2013-03-29 12:33:34","codes":[{"authorDate":"2013-03-14 08:11:06","commitOrder":2,"curCode":"  public void testExplicitSourceGlob()\n  {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getSchema();\n    \n    assertTrue(\"schema should contain explicit field 'sku1'\", schema.getFields().containsKey(\"sku1\"));\n    assertTrue(\"schema should contain explicit field 'sku2'\", schema.getFields().containsKey(\"sku2\"));\n    assertNull(\"'sku*' should not be (or match) a dynamic field\", schema.getDynamicPattern(\"sku*\"));\n    \n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    final String subsetPattern = \"*_dest_sub_s\";\n    final String dynamicPattern1 = schema.getDynamicPattern(subsetPattern);\n    assertTrue(\"'\" + subsetPattern + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern1 + \"'\",\n               dynamicPattern1.equals(\"*_s\"));\n    \n    final String dest_sub_no_ast_s = \"dest_sub_no_ast_s\";\n    assertFalse(schema.getFields().containsKey(dest_sub_no_ast_s)); \r\n    final String dynamicPattern2 = schema.getDynamicPattern(dest_sub_no_ast_s);\n    assertTrue(\"'\" + dest_sub_no_ast_s + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern2 + \"'\",\n               dynamicPattern2.equals(\"*_s\"));\n    \n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"sku2\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"1_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to dynamic dest *_s\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n        ,\"//result/doc[1]/arr[@name='sku1']/str[.='10-1839ACX-93']\"\n    );\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"1_dest_sub_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to *_dest_sub_s (*_s subset pattern)\", req\n        ,\"//*[@numFound='1']\");\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"dest_sub_no_ast_s:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to dest_sub_no_ast_s (*_s subset pattern no asterisk)\", req\n        ,\"//*[@numFound='1']\");\n  }\n","date":"2013-03-14 08:11:06","endLine":224,"groupId":"60493","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testExplicitSourceGlob","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f4/a28994a69fd8634500c41554172ece79b5030c.src","preCode":"  public void testExplicitSourceGlob()\n  {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getSchema();\n    \n    assertTrue(\"schema should contain explicit field 'sku1'\", schema.getFields().containsKey(\"sku1\"));\n    assertTrue(\"schema should contain explicit field 'sku2'\", schema.getFields().containsKey(\"sku2\"));\n    assertNull(\"'sku*' should not be (or match) a dynamic field\", schema.getDynamicPattern(\"sku*\"));\n    \n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    final String subsetPattern = \"*_dest_sub_s\";\n    final String dynamicPattern1 = schema.getDynamicPattern(subsetPattern);\n    assertTrue(\"'\" + subsetPattern + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern1 + \"'\",\n               dynamicPattern1.equals(\"*_s\"));\n    \n    final String dest_sub_no_ast_s = \"dest_sub_no_ast_s\";\n    assertFalse(schema.getFields().containsKey(dest_sub_no_ast_s)); \r\n    final String dynamicPattern2 = schema.getDynamicPattern(dest_sub_no_ast_s);\n    assertTrue(\"'\" + dest_sub_no_ast_s + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern2 + \"'\",\n               dynamicPattern2.equals(\"*_s\"));\n    \n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"sku2\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"1_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to dynamic dest *_s\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n        ,\"//result/doc[1]/arr[@name='sku1']/str[.='10-1839ACX-93']\"\n    );\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"1_dest_sub_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to *_dest_sub_s (*_s subset pattern)\", req\n        ,\"//*[@numFound='1']\");\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"dest_sub_no_ast_s:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to dest_sub_no_ast_s (*_s subset pattern no asterisk)\", req\n        ,\"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"NB"},{"authorDate":"2013-03-29 12:33:34","commitOrder":2,"curCode":"  public void testSourceGlobMatchesNoDynamicOrExplicitField()\n  {\n    \r\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getSchema();\n\n    assertNull(\"'testing123_*' should not be (or match) a dynamic or explicit field\", schema.getFieldOrNull(\"testing123_*\"));\n\n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"testing123_s\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n }\n","date":"2013-03-29 12:33:34","endLine":248,"groupId":"60496","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSourceGlobMatchesNoDynamicOrExplicitField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/6b89ae9197a849566dc46ca8886ee32baecc91.src","preCode":"  public void testSourceGlobMatchesNoDynamicOrExplicitField()\n  {\n    \r\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getSchema();\n\n    assertNull(\"'testing123_*' should not be (or match) a dynamic or explicit field\", schema.getFieldOrNull(\"testing123_*\"));\n\n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"testing123_s\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n }\n","realPath":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"B"}],"commitId":"167a4b84c3797fc692c81653efcd17c3548e9b63","commitMessage":"@@@SOLR-4650: copyField doesn't work with source globs that don't match any explicit or dynamic fields\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1462396 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-03-29 12:33:34","modifiedFileCount":"2","status":"M","submitter":"Steven Rowe"},{"authorTime":"2013-04-22 22:26:55","codes":[{"authorDate":"2013-04-22 22:26:55","commitOrder":3,"curCode":"  public void testExplicitSourceGlob()\n  {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n    \n    assertTrue(\"schema should contain explicit field 'sku1'\", schema.getFields().containsKey(\"sku1\"));\n    assertTrue(\"schema should contain explicit field 'sku2'\", schema.getFields().containsKey(\"sku2\"));\n    assertNull(\"'sku*' should not be (or match) a dynamic field\", schema.getDynamicPattern(\"sku*\"));\n    \n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    final String subsetPattern = \"*_dest_sub_s\";\n    final String dynamicPattern1 = schema.getDynamicPattern(subsetPattern);\n    assertTrue(\"'\" + subsetPattern + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern1 + \"'\",\n               dynamicPattern1.equals(\"*_s\"));\n    \n    final String dest_sub_no_ast_s = \"dest_sub_no_ast_s\";\n    assertFalse(schema.getFields().containsKey(dest_sub_no_ast_s)); \r\n    final String dynamicPattern2 = schema.getDynamicPattern(dest_sub_no_ast_s);\n    assertTrue(\"'\" + dest_sub_no_ast_s + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern2 + \"'\",\n               dynamicPattern2.equals(\"*_s\"));\n    \n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"sku2\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"1_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to dynamic dest *_s\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n        ,\"//result/doc[1]/arr[@name='sku1']/str[.='10-1839ACX-93']\"\n    );\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"1_dest_sub_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to *_dest_sub_s (*_s subset pattern)\", req\n        ,\"//*[@numFound='1']\");\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"dest_sub_no_ast_s:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to dest_sub_no_ast_s (*_s subset pattern no asterisk)\", req\n        ,\"//*[@numFound='1']\");\n  }\n","date":"2013-04-22 22:26:55","endLine":224,"groupId":"60493","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testExplicitSourceGlob","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/31/b003799b7cdfd9e9a3c0fc63a797425fc541cd.src","preCode":"  public void testExplicitSourceGlob()\n  {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getSchema();\n    \n    assertTrue(\"schema should contain explicit field 'sku1'\", schema.getFields().containsKey(\"sku1\"));\n    assertTrue(\"schema should contain explicit field 'sku2'\", schema.getFields().containsKey(\"sku2\"));\n    assertNull(\"'sku*' should not be (or match) a dynamic field\", schema.getDynamicPattern(\"sku*\"));\n    \n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    final String subsetPattern = \"*_dest_sub_s\";\n    final String dynamicPattern1 = schema.getDynamicPattern(subsetPattern);\n    assertTrue(\"'\" + subsetPattern + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern1 + \"'\",\n               dynamicPattern1.equals(\"*_s\"));\n    \n    final String dest_sub_no_ast_s = \"dest_sub_no_ast_s\";\n    assertFalse(schema.getFields().containsKey(dest_sub_no_ast_s)); \r\n    final String dynamicPattern2 = schema.getDynamicPattern(dest_sub_no_ast_s);\n    assertTrue(\"'\" + dest_sub_no_ast_s + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern2 + \"'\",\n               dynamicPattern2.equals(\"*_s\"));\n    \n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"sku2\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"1_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to dynamic dest *_s\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n        ,\"//result/doc[1]/arr[@name='sku1']/str[.='10-1839ACX-93']\"\n    );\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"1_dest_sub_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to *_dest_sub_s (*_s subset pattern)\", req\n        ,\"//*[@numFound='1']\");\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"dest_sub_no_ast_s:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to dest_sub_no_ast_s (*_s subset pattern no asterisk)\", req\n        ,\"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"},{"authorDate":"2013-04-22 22:26:55","commitOrder":3,"curCode":"  public void testSourceGlobMatchesNoDynamicOrExplicitField()\n  {\n    \r\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n\n    assertNull(\"'testing123_*' should not be (or match) a dynamic or explicit field\", schema.getFieldOrNull(\"testing123_*\"));\n\n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"testing123_s\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n  }\n","date":"2013-04-22 22:26:55","endLine":248,"groupId":"60496","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSourceGlobMatchesNoDynamicOrExplicitField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/31/b003799b7cdfd9e9a3c0fc63a797425fc541cd.src","preCode":"  public void testSourceGlobMatchesNoDynamicOrExplicitField()\n  {\n    \r\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getSchema();\n\n    assertNull(\"'testing123_*' should not be (or match) a dynamic or explicit field\", schema.getFieldOrNull(\"testing123_*\"));\n\n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"testing123_s\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"}],"commitId":"28b7111dc79fb0095814d617a5879fb93e70fb9c","commitMessage":"@@@SOLR-3251: Dynamically add fields to schema.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1470539 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-04-22 22:26:55","modifiedFileCount":"120","status":"M","submitter":"Steven Rowe"},{"authorTime":"2014-03-12 22:39:17","codes":[{"authorDate":"2014-03-12 22:39:17","commitOrder":4,"curCode":"  public void testExplicitSourceGlob()\n  {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n    \n    assertTrue(\"schema should contain explicit field 'sku1'\", schema.getFields().containsKey(\"sku1\"));\n    assertTrue(\"schema should contain explicit field 'sku2'\", schema.getFields().containsKey(\"sku2\"));\n    assertNull(\"'sku*' should not be (or match) a dynamic field\", schema.getDynamicPattern(\"sku*\"));\n    \n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    final String subsetPattern = \"*_dest_sub_s\";\n    final String dynamicPattern1 = schema.getDynamicPattern(subsetPattern);\n    assertTrue(\"'\" + subsetPattern + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern1 + \"'\",\n               dynamicPattern1.equals(\"*_s\"));\n    \n    final String dest_sub_no_ast_s = \"dest_sub_no_ast_s\";\n    assertFalse(schema.getFields().containsKey(dest_sub_no_ast_s)); \r\n    final String dynamicPattern2 = schema.getDynamicPattern(dest_sub_no_ast_s);\n    assertTrue(\"'\" + dest_sub_no_ast_s + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern2 + \"'\",\n               dynamicPattern2.equals(\"*_s\"));\n    \n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"sku2\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"1_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to dynamic dest *_s\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n        ,\"//result/doc[1]/arr[@name='sku1']/str[.='10-1839ACX-93']\"\n    );\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"1_dest_sub_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to *_dest_sub_s (*_s subset pattern)\", req\n        ,\"//*[@numFound='1']\");\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"dest_sub_no_ast_s:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to dest_sub_no_ast_s (*_s subset pattern no asterisk)\", req\n        ,\"//*[@numFound='1']\");\n  }\n","date":"2014-03-12 22:39:17","endLine":224,"groupId":"60493","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testExplicitSourceGlob","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3b/09d82df8784e10403e8872422c321ae6293709.src","preCode":"  public void testExplicitSourceGlob()\n  {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n    \n    assertTrue(\"schema should contain explicit field 'sku1'\", schema.getFields().containsKey(\"sku1\"));\n    assertTrue(\"schema should contain explicit field 'sku2'\", schema.getFields().containsKey(\"sku2\"));\n    assertNull(\"'sku*' should not be (or match) a dynamic field\", schema.getDynamicPattern(\"sku*\"));\n    \n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    final String subsetPattern = \"*_dest_sub_s\";\n    final String dynamicPattern1 = schema.getDynamicPattern(subsetPattern);\n    assertTrue(\"'\" + subsetPattern + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern1 + \"'\",\n               dynamicPattern1.equals(\"*_s\"));\n    \n    final String dest_sub_no_ast_s = \"dest_sub_no_ast_s\";\n    assertFalse(schema.getFields().containsKey(dest_sub_no_ast_s)); \r\n    final String dynamicPattern2 = schema.getDynamicPattern(dest_sub_no_ast_s);\n    assertTrue(\"'\" + dest_sub_no_ast_s + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern2 + \"'\",\n               dynamicPattern2.equals(\"*_s\"));\n    \n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"sku2\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"1_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to dynamic dest *_s\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n        ,\"//result/doc[1]/arr[@name='sku1']/str[.='10-1839ACX-93']\"\n    );\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"1_dest_sub_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to *_dest_sub_s (*_s subset pattern)\", req\n        ,\"//*[@numFound='1']\");\n\n    args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"dest_sub_no_ast_s:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to dest_sub_no_ast_s (*_s subset pattern no asterisk)\", req\n        ,\"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"},{"authorDate":"2014-03-12 22:39:17","commitOrder":4,"curCode":"  public void testSourceGlobMatchesNoDynamicOrExplicitField()\n  {\n    \r\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n\n    assertNull(\"'testing123_*' should not be (or match) a dynamic or explicit field\", schema.getFieldOrNull(\"testing123_*\"));\n\n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"testing123_s\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n  }\n","date":"2014-03-12 22:39:17","endLine":248,"groupId":"53567","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSourceGlobMatchesNoDynamicOrExplicitField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/3b/09d82df8784e10403e8872422c321ae6293709.src","preCode":"  public void testSourceGlobMatchesNoDynamicOrExplicitField()\n  {\n    \r\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n\n    assertNull(\"'testing123_*' should not be (or match) a dynamic or explicit field\", schema.getFieldOrNull(\"testing123_*\"));\n\n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"testing123_s\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"}],"commitId":"3b67b17493216f6b0c81a981073fd5f61eace6f4","commitMessage":"@@@LUCENE-5512: remove redundant typing (diamond operator) in trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1576755 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-12 22:39:17","modifiedFileCount":"1241","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-04-10 03:48:14","codes":[{"authorDate":"2014-04-10 03:48:14","commitOrder":5,"curCode":"  public void testExplicitSourceGlob()\n  {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n    \n    assertTrue(\"schema should contain explicit field 'sku1'\", schema.getFields().containsKey(\"sku1\"));\n    assertTrue(\"schema should contain explicit field 'sku2'\", schema.getFields().containsKey(\"sku2\"));\n    assertNull(\"'sku*' should not be (or match) a dynamic field\", schema.getDynamicPattern(\"sku*\"));\n    \n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    final String subsetPattern = \"*_dest_sub_s\";\n    final String dynamicPattern1 = schema.getDynamicPattern(subsetPattern);\n    assertTrue(\"'\" + subsetPattern + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern1 + \"'\",\n               dynamicPattern1.equals(\"*_s\"));\n    \n    final String dest_sub_no_ast_s = \"dest_sub_no_ast_s\";\n    assertFalse(schema.getFields().containsKey(dest_sub_no_ast_s)); \r\n    final String dynamicPattern2 = schema.getDynamicPattern(dest_sub_no_ast_s);\n    assertTrue(\"'\" + dest_sub_no_ast_s + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern2 + \"'\",\n               dynamicPattern2.equals(\"*_s\"));\n    \n    assertU(adoc(\"id\", \"5\", \"sku1\", \"10-1839ACX-93\", \"sku2\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/int[@name='id'][.='5']\"\n    );\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"1_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to dynamic dest *_s\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/int[@name='id'][.='5']\"\n        ,\"//result/doc[1]/arr[@name='sku1']/str[.='10-1839ACX-93']\"\n    );\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"1_dest_sub_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to *_dest_sub_s (*_s subset pattern)\", req\n        ,\"//*[@numFound='1']\");\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"dest_sub_no_ast_s:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to dest_sub_no_ast_s (*_s subset pattern no asterisk)\", req\n        ,\"//*[@numFound='1']\");\n  }\n","date":"2014-04-10 03:48:14","endLine":224,"groupId":"60493","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testExplicitSourceGlob","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/78/0cd64713493df060bbe7c51a7e86a9b74affb6.src","preCode":"  public void testExplicitSourceGlob()\n  {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n    \n    assertTrue(\"schema should contain explicit field 'sku1'\", schema.getFields().containsKey(\"sku1\"));\n    assertTrue(\"schema should contain explicit field 'sku2'\", schema.getFields().containsKey(\"sku2\"));\n    assertNull(\"'sku*' should not be (or match) a dynamic field\", schema.getDynamicPattern(\"sku*\"));\n    \n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    final String subsetPattern = \"*_dest_sub_s\";\n    final String dynamicPattern1 = schema.getDynamicPattern(subsetPattern);\n    assertTrue(\"'\" + subsetPattern + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern1 + \"'\",\n               dynamicPattern1.equals(\"*_s\"));\n    \n    final String dest_sub_no_ast_s = \"dest_sub_no_ast_s\";\n    assertFalse(schema.getFields().containsKey(dest_sub_no_ast_s)); \r\n    final String dynamicPattern2 = schema.getDynamicPattern(dest_sub_no_ast_s);\n    assertTrue(\"'\" + dest_sub_no_ast_s + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern2 + \"'\",\n               dynamicPattern2.equals(\"*_s\"));\n    \n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"sku2\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"1_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to dynamic dest *_s\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n        ,\"//result/doc[1]/arr[@name='sku1']/str[.='10-1839ACX-93']\"\n    );\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"1_dest_sub_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to *_dest_sub_s (*_s subset pattern)\", req\n        ,\"//*[@numFound='1']\");\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"dest_sub_no_ast_s:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to dest_sub_no_ast_s (*_s subset pattern no asterisk)\", req\n        ,\"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"},{"authorDate":"2014-04-10 03:48:14","commitOrder":5,"curCode":"  public void testSourceGlobMatchesNoDynamicOrExplicitField()\n  {\n    \r\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n\n    assertNull(\"'testing123_*' should not be (or match) a dynamic or explicit field\", schema.getFieldOrNull(\"testing123_*\"));\n\n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    assertU(adoc(\"id\", \"5\", \"sku1\", \"10-1839ACX-93\", \"testing123_s\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/int[@name='id'][.='5']\"\n    );\n  }\n","date":"2014-04-10 03:48:14","endLine":248,"groupId":"53567","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSourceGlobMatchesNoDynamicOrExplicitField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/78/0cd64713493df060bbe7c51a7e86a9b74affb6.src","preCode":"  public void testSourceGlobMatchesNoDynamicOrExplicitField()\n  {\n    \r\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n\n    assertNull(\"'testing123_*' should not be (or match) a dynamic or explicit field\", schema.getFieldOrNull(\"testing123_*\"));\n\n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    assertU(adoc(\"id\", \"A5\", \"sku1\", \"10-1839ACX-93\", \"testing123_s\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='A5']\"\n    );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"}],"commitId":"597912787c3f7171ffbca0f3d6ba9629432ca20e","commitMessage":"@@@SOLR-5936: Removed deprecated non-Trie-based numeric & date field types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1586106 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-10 03:48:14","modifiedFileCount":"45","status":"M","submitter":"Steven Rowe"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":6,"curCode":"  public void testExplicitSourceGlob()\n  {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n    \n    assertTrue(\"schema should contain explicit field 'sku1'\", schema.getFields().containsKey(\"sku1\"));\n    assertTrue(\"schema should contain explicit field 'sku2'\", schema.getFields().containsKey(\"sku2\"));\n    assertNull(\"'sku*' should not be (or match) a dynamic field\", schema.getDynamicPattern(\"sku*\"));\n    \n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    final String subsetPattern = \"*_dest_sub_s\";\n    final String dynamicPattern1 = schema.getDynamicPattern(subsetPattern);\n    assertTrue(\"'\" + subsetPattern + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern1 + \"'\",\n               dynamicPattern1.equals(\"*_s\"));\n    \n    final String dest_sub_no_ast_s = \"dest_sub_no_ast_s\";\n    assertFalse(schema.getFields().containsKey(dest_sub_no_ast_s)); \r\n    final String dynamicPattern2 = schema.getDynamicPattern(dest_sub_no_ast_s);\n    assertTrue(\"'\" + dest_sub_no_ast_s + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern2 + \"'\",\n               dynamicPattern2.equals(\"*_s\"));\n    \n    assertU(adoc(\"id\", \"5\", \"sku1\", \"10-1839ACX-93\", \"sku2\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='5']\"\n    );\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"1_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to dynamic dest *_s\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='5']\"\n        ,\"//result/doc[1]/arr[@name='sku1']/str[.='10-1839ACX-93']\"\n    );\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"1_dest_sub_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to *_dest_sub_s (*_s subset pattern)\", req\n        ,\"//*[@numFound='1']\");\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"dest_sub_no_ast_s:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to dest_sub_no_ast_s (*_s subset pattern no asterisk)\", req\n        ,\"//*[@numFound='1']\");\n  }\n","date":"2017-06-29 17:00:17","endLine":223,"groupId":"102703","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testExplicitSourceGlob","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/a8aca709bf4d2018c0c4950636c1a0f541758c.src","preCode":"  public void testExplicitSourceGlob()\n  {\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n    \n    assertTrue(\"schema should contain explicit field 'sku1'\", schema.getFields().containsKey(\"sku1\"));\n    assertTrue(\"schema should contain explicit field 'sku2'\", schema.getFields().containsKey(\"sku2\"));\n    assertNull(\"'sku*' should not be (or match) a dynamic field\", schema.getDynamicPattern(\"sku*\"));\n    \n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    final String subsetPattern = \"*_dest_sub_s\";\n    final String dynamicPattern1 = schema.getDynamicPattern(subsetPattern);\n    assertTrue(\"'\" + subsetPattern + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern1 + \"'\",\n               dynamicPattern1.equals(\"*_s\"));\n    \n    final String dest_sub_no_ast_s = \"dest_sub_no_ast_s\";\n    assertFalse(schema.getFields().containsKey(dest_sub_no_ast_s)); \r\n    final String dynamicPattern2 = schema.getDynamicPattern(dest_sub_no_ast_s);\n    assertTrue(\"'\" + dest_sub_no_ast_s + \"' should match dynamic field '*_s', but instead matches '\" + dynamicPattern2 + \"'\",\n               dynamicPattern2.equals(\"*_s\"));\n    \n    assertU(adoc(\"id\", \"5\", \"sku1\", \"10-1839ACX-93\", \"sku2\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/int[@name='id'][.='5']\"\n    );\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"1_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to dynamic dest *_s\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/int[@name='id'][.='5']\"\n        ,\"//result/doc[1]/arr[@name='sku1']/str[.='10-1839ACX-93']\"\n    );\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"1_dest_sub_s:10-1839ACX-93\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku1 copied to *_dest_sub_s (*_s subset pattern)\", req\n        ,\"//*[@numFound='1']\");\n\n    args = new HashMap<>();\n    args.put( CommonParams.Q, \"dest_sub_no_ast_s:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to dest_sub_no_ast_s (*_s subset pattern no asterisk)\", req\n        ,\"//*[@numFound='1']\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":6,"curCode":"  public void testSourceGlobMatchesNoDynamicOrExplicitField()\n  {\n    \r\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n\n    assertNull(\"'testing123_*' should not be (or match) a dynamic or explicit field\", schema.getFieldOrNull(\"testing123_*\"));\n\n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    assertU(adoc(\"id\", \"5\", \"sku1\", \"10-1839ACX-93\", \"testing123_s\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/str[@name='id'][.='5']\"\n    );\n  }\n","date":"2017-06-29 17:00:17","endLine":247,"groupId":"102703","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testSourceGlobMatchesNoDynamicOrExplicitField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/a8aca709bf4d2018c0c4950636c1a0f541758c.src","preCode":"  public void testSourceGlobMatchesNoDynamicOrExplicitField()\n  {\n    \r\n    SolrCore core = h.getCore();\n    IndexSchema schema = core.getLatestSchema();\n\n    assertNull(\"'testing123_*' should not be (or match) a dynamic or explicit field\", schema.getFieldOrNull(\"testing123_*\"));\n\n    assertTrue(\"schema should contain dynamic field '*_s'\", schema.getDynamicPattern(\"*_s\").equals(\"*_s\"));\n\n    assertU(adoc(\"id\", \"5\", \"sku1\", \"10-1839ACX-93\", \"testing123_s\", \"AAM46\"));\n    assertU(commit());\n\n    Map<String,String> args = new HashMap<>();\n    args.put( CommonParams.Q, \"text:AAM46\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n    assertQ(\"sku2 copied to text\", req\n        ,\"//*[@numFound='1']\"\n        ,\"//result/doc[1]/int[@name='id'][.='5']\"\n    );\n  }\n","realPath":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"M","submitter":"Karl Wright"}]
