[{"authorTime":"2016-10-03 03:18:22","codes":[{"authorDate":"2016-10-03 03:18:22","commitOrder":2,"curCode":"  private void assertEquals(int maxDoc, SortedDocValues expected, SortedDocValues actual) throws Exception {\n    \r\n    \r\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n\n    \r\n    while (true) {\n      int docID = expected.nextDoc();\n      if (docID == NO_MORE_DOCS) {\n        assertEquals(NO_MORE_DOCS, actual.nextDoc());\n        break;\n      }\n      assertEquals(docID, actual.nextDoc());\n      assertEquals(expected.ordValue(), actual.ordValue());\n      assertEquals(expected.binaryValue(), actual.binaryValue());\n    }\n    \n    \r\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd((int) i));\n      final BytesRef actualBytes = actual.lookupOrd((int) i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    \r\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n","date":"2016-10-03 03:18:22","endLine":520,"groupId":"20401","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertEquals","params":"(intmaxDoc@SortedDocValuesexpected@SortedDocValuesactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/8a870309db754750436e995ef906a2203cfb07.src","preCode":"  private void assertEquals(int maxDoc, SortedDocValues expected, SortedDocValues actual) throws Exception {\n    \r\n    \r\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n\n    \r\n    while (true) {\n      int docID = expected.nextDoc();\n      if (docID == NO_MORE_DOCS) {\n        assertEquals(NO_MORE_DOCS, actual.nextDoc());\n        break;\n      }\n      assertEquals(docID, actual.nextDoc());\n      assertEquals(expected.ordValue(), actual.ordValue());\n      assertEquals(expected.binaryValue(), actual.binaryValue());\n    }\n    \n    \r\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd((int) i));\n      final BytesRef actualBytes = actual.lookupOrd((int) i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    \r\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheVsDocValues.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":490,"status":"B"},{"authorDate":"2016-10-03 03:18:22","commitOrder":2,"curCode":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    \r\n    \r\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    while (true) {\n      int docID = expected.nextDoc();\n      assertEquals(docID, actual.nextDoc());\n      if (docID == NO_MORE_DOCS) {\n        break;\n      }\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    \r\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd(i));\n      final BytesRef actualBytes = actual.lookupOrd(i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    \r\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n","date":"2016-10-03 03:18:22","endLine":552,"groupId":"52617","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEquals","params":"(intmaxDoc@SortedSetDocValuesexpected@SortedSetDocValuesactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/8a870309db754750436e995ef906a2203cfb07.src","preCode":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    \r\n    \r\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    while (true) {\n      int docID = expected.nextDoc();\n      assertEquals(docID, actual.nextDoc());\n      if (docID == NO_MORE_DOCS) {\n        break;\n      }\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    \r\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd(i));\n      final BytesRef actualBytes = actual.lookupOrd(i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    \r\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheVsDocValues.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":522,"status":"MB"}],"commitId":"3182cd9872af3cb73a1f73e36de68b8d76646e59","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-10-03 03:18:22","modifiedFileCount":"570","status":"M","submitter":"Karl Wright"},{"authorTime":"2016-10-03 03:18:22","codes":[{"authorDate":"2021-03-15 22:15:56","commitOrder":3,"curCode":"  private void assertEquals(int maxDoc, SortedDocValues expected, SortedDocValues actual) throws Exception {\n    \r\n    \r\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n\n    \r\n    while (true) {\n      int docID = expected.nextDoc();\n      if (docID == NO_MORE_DOCS) {\n        assertEquals(NO_MORE_DOCS, actual.nextDoc());\n        break;\n      }\n      assertEquals(docID, actual.nextDoc());\n      assertEquals(expected.ordValue(), actual.ordValue());\n      assertEquals(expected.lookupOrd(expected.ordValue()), actual.lookupOrd(actual.ordValue()));\n    }\n    \n    \r\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd((int) i));\n      final BytesRef actualBytes = actual.lookupOrd((int) i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    \r\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n","date":"2021-03-16 00:55:00","endLine":419,"groupId":"113354","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"assertEquals","params":"(intmaxDoc@SortedDocValuesexpected@SortedDocValuesactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7b/ee741c46b99dbf21a46d5eb48f18ec8515f73b.src","preCode":"  private void assertEquals(int maxDoc, SortedDocValues expected, SortedDocValues actual) throws Exception {\n    \r\n    \r\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n\n    \r\n    while (true) {\n      int docID = expected.nextDoc();\n      if (docID == NO_MORE_DOCS) {\n        assertEquals(NO_MORE_DOCS, actual.nextDoc());\n        break;\n      }\n      assertEquals(docID, actual.nextDoc());\n      assertEquals(expected.ordValue(), actual.ordValue());\n      assertEquals(expected.binaryValue(), actual.binaryValue());\n    }\n    \n    \r\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd((int) i));\n      final BytesRef actualBytes = actual.lookupOrd((int) i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    \r\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheVsDocValues.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"M"},{"authorDate":"2016-10-03 03:18:22","commitOrder":3,"curCode":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    \r\n    \r\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    while (true) {\n      int docID = expected.nextDoc();\n      assertEquals(docID, actual.nextDoc());\n      if (docID == NO_MORE_DOCS) {\n        break;\n      }\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    \r\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd(i));\n      final BytesRef actualBytes = actual.lookupOrd(i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    \r\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n","date":"2016-10-03 03:18:22","endLine":552,"groupId":"113354","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEquals","params":"(intmaxDoc@SortedSetDocValuesexpected@SortedSetDocValuesactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/30/8a870309db754750436e995ef906a2203cfb07.src","preCode":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    \r\n    \r\n    if (actual == null) {\n      assertEquals(expected.getValueCount(), 0);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    while (true) {\n      int docID = expected.nextDoc();\n      assertEquals(docID, actual.nextDoc());\n      if (docID == NO_MORE_DOCS) {\n        break;\n      }\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    \r\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      final BytesRef expectedBytes = BytesRef.deepCopyOf(expected.lookupOrd(i));\n      final BytesRef actualBytes = actual.lookupOrd(i);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    \r\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheVsDocValues.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":522,"status":"N"}],"commitId":"5eefa79898f1ed65a7408745b32a85b4ec2efc89","commitMessage":"@@@SOLR-15261: SortedDocValues no longer extends BinaryDocValues.\n","date":"2021-03-16 00:55:00","modifiedFileCount":"15","status":"M","submitter":"Bruno Roustant"}]
