[{"authorTime":"2016-10-21 19:08:47","codes":[{"authorDate":"2016-11-09 02:28:25","commitOrder":2,"curCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(String collectionName)\n      throws SolrServerException, IOException {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(solrClient);\n\n    Preconditions.checkState(resp.getStatus() == 0);\n\n    NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","date":"2016-11-09 02:28:35","endLine":443,"groupId":"10168","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"listCollectionSnapshots","params":"(StringcollectionName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cb/1c52c1a7ab4ea2d82167ee1af35673e3ba3b34.src","preCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(String collectionName)\n      throws SolrServerException, IOException {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(solrClient);\n\n    Preconditions.checkState(resp.getStatus() == 0);\n\n    NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"B"},{"authorDate":"2016-10-21 19:08:47","commitOrder":2,"curCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(SolrClient adminClient, String collectionName) throws Exception {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(adminClient);\n\n    assertTrue( resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","date":"2016-10-21 21:47:02","endLine":267,"groupId":"10168","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"listCollectionSnapshots","params":"(SolrClientadminClient@StringcollectionName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/65/f74cad1929168935706e4220f82848ecc24e15.src","preCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(SolrClient adminClient, String collectionName) throws Exception {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(adminClient);\n\n    assertTrue( resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"NB"}],"commitId":"b02e7a902e80c82750f8e8c403b3a9c5e887c43b","commitMessage":"@@@SOLR-9038: add snapshotscli.sh and supporting code\n","date":"2016-11-09 02:28:35","modifiedFileCount":"0","status":"M","submitter":"yonik"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2016-11-09 02:28:25","commitOrder":3,"curCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(String collectionName)\n      throws SolrServerException, IOException {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(solrClient);\n\n    Preconditions.checkState(resp.getStatus() == 0);\n\n    NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","date":"2016-11-09 02:28:35","endLine":443,"groupId":"10168","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"listCollectionSnapshots","params":"(StringcollectionName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cb/1c52c1a7ab4ea2d82167ee1af35673e3ba3b34.src","preCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(String collectionName)\n      throws SolrServerException, IOException {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(solrClient);\n\n    Preconditions.checkState(resp.getStatus() == 0);\n\n    NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"N"},{"authorDate":"2020-06-18 05:51:41","commitOrder":3,"curCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(SolrClient adminClient, String collectionName) throws Exception {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(adminClient);\n\n    assertTrue( resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","date":"2020-06-18 05:51:41","endLine":308,"groupId":"10168","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"listCollectionSnapshots","params":"(SolrClientadminClient@StringcollectionName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/21/e7322c4252ee3eba3aef6342f077bcc7034a64.src","preCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(SolrClient adminClient, String collectionName) throws Exception {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(adminClient);\n\n    assertTrue( resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2021-06-09 02:08:25","commitOrder":4,"curCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(String collectionName)\n      throws SolrServerException, IOException {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(solrClient);\n\n    Preconditions.checkState(resp.getStatus() == 0);\n\n    NamedList<?> apiResult = (NamedList<?>) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<?>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","date":"2021-06-09 02:08:25","endLine":441,"groupId":"0","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"listCollectionSnapshots","params":"(StringcollectionName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ee/f0ffe2d49412a0262bd258572550cfe7338d1d.src","preCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(String collectionName)\n      throws SolrServerException, IOException {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(solrClient);\n\n    Preconditions.checkState(resp.getStatus() == 0);\n\n    NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":426,"status":"M"},{"authorDate":"2020-06-18 05:51:41","commitOrder":4,"curCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(SolrClient adminClient, String collectionName) throws Exception {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(adminClient);\n\n    assertTrue( resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","date":"2020-06-18 05:51:41","endLine":308,"groupId":"10168","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"listCollectionSnapshots","params":"(SolrClientadminClient@StringcollectionName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/21/e7322c4252ee3eba3aef6342f077bcc7034a64.src","preCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(SolrClient adminClient, String collectionName) throws Exception {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(adminClient);\n\n    assertTrue( resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"N"}],"commitId":"916b7a04f65490179a73e2c1620bab1df65e4bb8","commitMessage":"@@@SOLR-15385 RawTypes Part II.  Searching for NamedList (#165)\n\nMost updates relate to NamedListInitializationPlugin init method.  and RequestHandler.\n\nLink to JIRA issues for some extant bugs.\n\nCo-authored-by: David Smiley <dsmiley@apache.org>","date":"2021-06-09 02:08:25","modifiedFileCount":"221","status":"M","submitter":"Mike Drob"},{"authorTime":"2021-06-29 03:06:47","codes":[{"authorDate":"2021-06-09 02:08:25","commitOrder":5,"curCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(String collectionName)\n      throws SolrServerException, IOException {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(solrClient);\n\n    Preconditions.checkState(resp.getStatus() == 0);\n\n    NamedList<?> apiResult = (NamedList<?>) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<?>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","date":"2021-06-09 02:08:25","endLine":441,"groupId":"102600","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"listCollectionSnapshots","params":"(StringcollectionName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ee/f0ffe2d49412a0262bd258572550cfe7338d1d.src","preCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(String collectionName)\n      throws SolrServerException, IOException {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(solrClient);\n\n    Preconditions.checkState(resp.getStatus() == 0);\n\n    NamedList<?> apiResult = (NamedList<?>) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<?>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":426,"status":"N"},{"authorDate":"2021-06-29 03:06:47","commitOrder":5,"curCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(SolrClient adminClient, String collectionName) throws Exception {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(adminClient);\n\n    assertTrue( resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    NamedList<?> apiResult = (NamedList<?>) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","date":"2021-06-29 03:06:47","endLine":314,"groupId":"102600","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"listCollectionSnapshots","params":"(SolrClientadminClient@StringcollectionName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/94/19228a9f88e330b80ae376fba1907d7530c959.src","preCode":"  private Collection<CollectionSnapshotMetaData> listCollectionSnapshots(SolrClient adminClient, String collectionName) throws Exception {\n    CollectionAdminRequest.ListSnapshots listSnapshots = new CollectionAdminRequest.ListSnapshots(collectionName);\n    CollectionAdminResponse resp = listSnapshots.process(adminClient);\n\n    assertTrue( resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO) instanceof NamedList );\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList apiResult = (NamedList) resp.getResponse().get(SolrSnapshotManager.SNAPSHOTS_INFO);\n\n    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();\n    for (int i = 0; i < apiResult.size(); i++) {\n      result.add(new CollectionSnapshotMetaData((NamedList<Object>)apiResult.getVal(i)));\n    }\n\n    return result;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/core/snapshots/TestSolrCloudSnapshots.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"M"}],"commitId":"5e7310c344b4d31903acda93c7638bce125b63cf","commitMessage":"@@@SOLR-15385 RawTypes Part IV.  solr-core (#195)\n\n","date":"2021-06-29 03:06:47","modifiedFileCount":"93","status":"M","submitter":"Mike Drob"}]
