[{"authorTime":"2012-11-19 00:29:02","codes":[{"authorDate":"2016-10-03 03:18:22","commitOrder":3,"curCode":"  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        \r\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        \r\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n","date":"2016-10-03 03:18:22","endLine":341,"groupId":"1972","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeSolrDocument","params":"(Stringname@SolrDocumentdoc@ReturnFieldsreturnFields@intidx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/27/a30d170e060471dac3d3645200310ecc019ac9.src","preCode":"  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        \r\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        \r\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n","realPath":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXResponseWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"B"},{"authorDate":"2012-11-19 00:29:02","commitOrder":3,"curCode":"  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (CSVField csvField : csvFields.values()) {\n      Object val = doc.getFieldValue(csvField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(csvField.name);\n        continue;\n      }\n\n      if ((csvField.sf != null && csvField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        \r\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        mvWriter.reset();\n        csvField.mvPrinter.reset();\n        \r\n        CSVPrinter tmp = printer;\n        printer = csvField.mvPrinter;\n        for (Object fval : values) {\n          writeVal(csvField.name, fval);\n        }\n        printer = tmp;  \r\n\n        mvWriter.freeze();\n        printer.print(mvWriter.getFrozenBuf(), 0, mvWriter.getFrozenSize(), true);\n\n      } else {\n        \r\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        \r\n        if (csvField.sf != null && csvField.sf.isPolyField()) {\n          mvWriter.reset();\n          csvField.mvPrinter.reset();\n          CSVPrinter tmp = printer;\n          printer = csvField.mvPrinter;\n          writeVal(csvField.name, val);\n          printer = tmp;\n          mvWriter.freeze();\n          printer.print(mvWriter.getFrozenBuf(), 0, mvWriter.getFrozenSize(), true);\n        } else {\n          writeVal(csvField.name, val);\n        }\n      }\n    }\n\n    printer.println();\n  }\n","date":"2012-11-19 00:29:02","endLine":429,"groupId":"1972","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeSolrDocument","params":"(Stringname@SolrDocumentdoc@ReturnFieldsreturnFields@intidx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/fc58e52acfdd84befb8d6a165ac6901b51ca74.src","preCode":"  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (CSVField csvField : csvFields.values()) {\n      Object val = doc.getFieldValue(csvField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(csvField.name);\n        continue;\n      }\n\n      if ((csvField.sf != null && csvField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        \r\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        mvWriter.reset();\n        csvField.mvPrinter.reset();\n        \r\n        CSVPrinter tmp = printer;\n        printer = csvField.mvPrinter;\n        for (Object fval : values) {\n          writeVal(csvField.name, fval);\n        }\n        printer = tmp;  \r\n\n        mvWriter.freeze();\n        printer.print(mvWriter.getFrozenBuf(), 0, mvWriter.getFrozenSize(), true);\n\n      } else {\n        \r\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        \r\n        if (csvField.sf != null && csvField.sf.isPolyField()) {\n          mvWriter.reset();\n          csvField.mvPrinter.reset();\n          CSVPrinter tmp = printer;\n          printer = csvField.mvPrinter;\n          writeVal(csvField.name, val);\n          printer = tmp;\n          mvWriter.freeze();\n          printer.print(mvWriter.getFrozenBuf(), 0, mvWriter.getFrozenSize(), true);\n        } else {\n          writeVal(csvField.name, val);\n        }\n      }\n    }\n\n    printer.println();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/response/CSVResponseWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":369,"status":"NB"}],"commitId":"3182cd9872af3cb73a1f73e36de68b8d76646e59","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-10-03 03:18:22","modifiedFileCount":"570","status":"M","submitter":"Karl Wright"},{"authorTime":"2012-11-19 00:29:02","codes":[{"authorDate":"2021-06-22 00:19:37","commitOrder":4,"curCode":"  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList<>(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection<?> values;\n        \r\n        if (val instanceof Collection) {\n          values = (Collection<?>)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        \r\n        if (val instanceof Collection) {\n          Collection<?> values = (Collection<?>)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n","date":"2021-06-22 00:19:37","endLine":273,"groupId":"1972","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"writeSolrDocument","params":"(Stringname@SolrDocumentdoc@ReturnFieldsreturnFields@intidx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b2/25ceba7b93930f60ca613ebe9599f8febc23e8.src","preCode":"  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        \r\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        \r\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n","realPath":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXResponseWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2012-11-19 00:29:02","commitOrder":4,"curCode":"  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (CSVField csvField : csvFields.values()) {\n      Object val = doc.getFieldValue(csvField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(csvField.name);\n        continue;\n      }\n\n      if ((csvField.sf != null && csvField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        \r\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        mvWriter.reset();\n        csvField.mvPrinter.reset();\n        \r\n        CSVPrinter tmp = printer;\n        printer = csvField.mvPrinter;\n        for (Object fval : values) {\n          writeVal(csvField.name, fval);\n        }\n        printer = tmp;  \r\n\n        mvWriter.freeze();\n        printer.print(mvWriter.getFrozenBuf(), 0, mvWriter.getFrozenSize(), true);\n\n      } else {\n        \r\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        \r\n        if (csvField.sf != null && csvField.sf.isPolyField()) {\n          mvWriter.reset();\n          csvField.mvPrinter.reset();\n          CSVPrinter tmp = printer;\n          printer = csvField.mvPrinter;\n          writeVal(csvField.name, val);\n          printer = tmp;\n          mvWriter.freeze();\n          printer.print(mvWriter.getFrozenBuf(), 0, mvWriter.getFrozenSize(), true);\n        } else {\n          writeVal(csvField.name, val);\n        }\n      }\n    }\n\n    printer.println();\n  }\n","date":"2012-11-19 00:29:02","endLine":429,"groupId":"1972","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeSolrDocument","params":"(Stringname@SolrDocumentdoc@ReturnFieldsreturnFields@intidx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/fc58e52acfdd84befb8d6a165ac6901b51ca74.src","preCode":"  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (CSVField csvField : csvFields.values()) {\n      Object val = doc.getFieldValue(csvField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(csvField.name);\n        continue;\n      }\n\n      if ((csvField.sf != null && csvField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        \r\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        mvWriter.reset();\n        csvField.mvPrinter.reset();\n        \r\n        CSVPrinter tmp = printer;\n        printer = csvField.mvPrinter;\n        for (Object fval : values) {\n          writeVal(csvField.name, fval);\n        }\n        printer = tmp;  \r\n\n        mvWriter.freeze();\n        printer.print(mvWriter.getFrozenBuf(), 0, mvWriter.getFrozenSize(), true);\n\n      } else {\n        \r\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        \r\n        if (csvField.sf != null && csvField.sf.isPolyField()) {\n          mvWriter.reset();\n          csvField.mvPrinter.reset();\n          CSVPrinter tmp = printer;\n          printer = csvField.mvPrinter;\n          writeVal(csvField.name, val);\n          printer = tmp;\n          mvWriter.freeze();\n          printer.print(mvWriter.getFrozenBuf(), 0, mvWriter.getFrozenSize(), true);\n        } else {\n          writeVal(csvField.name, val);\n        }\n      }\n    }\n\n    printer.println();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/response/CSVResponseWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":369,"status":"N"}],"commitId":"1725e778ac86d88e2deff8f7339d45bb4e50a719","commitMessage":"@@@SOLR-15385 RawTypes Part III.  contrib and solrj (#169)\n\n* SOLR-15385 RawTypes Part III.  contrib and solrj\n\nCo-authored-by: Christine Poerschke <cpoerschke@apache.org>","date":"2021-06-22 00:19:37","modifiedFileCount":"216","status":"M","submitter":"Mike Drob"},{"authorTime":"2021-06-29 03:06:47","codes":[{"authorDate":"2021-06-22 00:19:37","commitOrder":5,"curCode":"  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList<>(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection<?> values;\n        \r\n        if (val instanceof Collection) {\n          values = (Collection<?>)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        \r\n        if (val instanceof Collection) {\n          Collection<?> values = (Collection<?>)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n","date":"2021-06-22 00:19:37","endLine":273,"groupId":"101198","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"writeSolrDocument","params":"(Stringname@SolrDocumentdoc@ReturnFieldsreturnFields@intidx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b2/25ceba7b93930f60ca613ebe9599f8febc23e8.src","preCode":"  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList<>(1);\n      tmpList.add(null);\n    }\n\n    for (XLField xlField : xlFields.values()) {\n      Object val = doc.getFieldValue(xlField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(xlField.name);\n        continue;\n      }\n\n      if ((xlField.sf != null && xlField.sf.multiValued()) || nVals > 1) {\n        Collection<?> values;\n        \r\n        if (val instanceof Collection) {\n          values = (Collection<?>)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        writeArray(xlField.name, values.iterator());\n\n      } else {\n        \r\n        if (val instanceof Collection) {\n          Collection<?> values = (Collection<?>)val;\n          val = values.iterator().next();\n        }\n        writeVal(xlField.name, val);\n      }\n    }\n    wb.addRow();\n  }\n","realPath":"solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/XLSXResponseWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"N"},{"authorDate":"2021-06-29 03:06:47","commitOrder":5,"curCode":"  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList<>(1);\n      tmpList.add(null);\n    }\n\n    for (CSVField csvField : csvFields.values()) {\n      Object val = doc.getFieldValue(csvField.name);\n      int nVals = val instanceof Collection ? ((Collection<?>)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(csvField.name);\n        continue;\n      }\n\n      if ((csvField.sf != null && csvField.sf.multiValued()) || nVals > 1) {\n        Collection<?> values;\n        \r\n        if (val instanceof Collection) {\n          values = (Collection<?>)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        mvWriter.reset();\n        csvField.mvPrinter.reset();\n        \r\n        CSVPrinter tmp = printer;\n        printer = csvField.mvPrinter;\n        for (Object fval : values) {\n          writeVal(csvField.name, fval);\n        }\n        printer = tmp;  \r\n\n        mvWriter.freeze();\n        printer.print(mvWriter.getFrozenBuf(), 0, mvWriter.getFrozenSize(), true);\n\n      } else {\n        \r\n        if (val instanceof Collection) {\n          Collection<?> values = (Collection<?>)val;\n          val = values.iterator().next();\n        }\n        \r\n        if (csvField.sf != null && csvField.sf.isPolyField()) {\n          mvWriter.reset();\n          csvField.mvPrinter.reset();\n          CSVPrinter tmp = printer;\n          printer = csvField.mvPrinter;\n          writeVal(csvField.name, val);\n          printer = tmp;\n          mvWriter.freeze();\n          printer.print(mvWriter.getFrozenBuf(), 0, mvWriter.getFrozenSize(), true);\n        } else {\n          writeVal(csvField.name, val);\n        }\n      }\n    }\n\n    printer.println();\n  }\n","date":"2021-06-29 03:06:47","endLine":383,"groupId":"101198","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"writeSolrDocument","params":"(Stringname@SolrDocumentdoc@ReturnFieldsreturnFields@intidx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f2/155814bfaea9e50bc5a7718bbbd4755d4c9c15.src","preCode":"  public void writeSolrDocument(String name, SolrDocument doc, ReturnFields returnFields, int idx ) throws IOException {\n    if (tmpList == null) {\n      tmpList = new ArrayList(1);\n      tmpList.add(null);\n    }\n\n    for (CSVField csvField : csvFields.values()) {\n      Object val = doc.getFieldValue(csvField.name);\n      int nVals = val instanceof Collection ? ((Collection)val).size() : (val==null ? 0 : 1);\n      if (nVals == 0) {\n        writeNull(csvField.name);\n        continue;\n      }\n\n      if ((csvField.sf != null && csvField.sf.multiValued()) || nVals > 1) {\n        Collection values;\n        \r\n        if (val instanceof Collection) {\n          values = (Collection)val;\n        } else {\n          tmpList.set(0, val);\n          values = tmpList;\n        }\n\n        mvWriter.reset();\n        csvField.mvPrinter.reset();\n        \r\n        CSVPrinter tmp = printer;\n        printer = csvField.mvPrinter;\n        for (Object fval : values) {\n          writeVal(csvField.name, fval);\n        }\n        printer = tmp;  \r\n\n        mvWriter.freeze();\n        printer.print(mvWriter.getFrozenBuf(), 0, mvWriter.getFrozenSize(), true);\n\n      } else {\n        \r\n        if (val instanceof Collection) {\n          Collection values = (Collection)val;\n          val = values.iterator().next();\n        }\n        \r\n        if (csvField.sf != null && csvField.sf.isPolyField()) {\n          mvWriter.reset();\n          csvField.mvPrinter.reset();\n          CSVPrinter tmp = printer;\n          printer = csvField.mvPrinter;\n          writeVal(csvField.name, val);\n          printer = tmp;\n          mvWriter.freeze();\n          printer.print(mvWriter.getFrozenBuf(), 0, mvWriter.getFrozenSize(), true);\n        } else {\n          writeVal(csvField.name, val);\n        }\n      }\n    }\n\n    printer.println();\n  }\n","realPath":"solr/core/src/java/org/apache/solr/response/CSVResponseWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":323,"status":"M"}],"commitId":"5e7310c344b4d31903acda93c7638bce125b63cf","commitMessage":"@@@SOLR-15385 RawTypes Part IV.  solr-core (#195)\n\n","date":"2021-06-29 03:06:47","modifiedFileCount":"93","status":"M","submitter":"Mike Drob"}]
