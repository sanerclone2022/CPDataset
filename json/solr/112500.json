[{"authorTime":"2015-08-05 00:32:12","codes":[{"authorDate":"2015-08-05 00:32:12","commitOrder":1,"curCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String getUrl = cli.getOptionValue(\"get\");\n      if (getUrl != null) {\n        Map<String,Object> json = getJson(getUrl);\n        \n        \r\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());        \n      }\n    }\n","date":"2015-08-05 00:32:12","endLine":883,"groupId":"33789","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"runImpl","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/fe5c7d1e41d63c16a511bab90f801c45b5fabb.src","preCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String getUrl = cli.getOptionValue(\"get\");\n      if (getUrl != null) {\n        Map<String,Object> json = getJson(getUrl);\n        \n        \r\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());        \n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":873,"status":"B"},{"authorDate":"2015-08-05 00:32:12","commitOrder":1,"curCode":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        \r\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        \r\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          \r\n          \r\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nSetup new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      Map<String,Object> json = null;\n      try {\n        json = getJson(createCoreUrl);\n      } catch (SolrServerException sse) {\n        \r\n        if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n          \r\n          throw new IllegalArgumentException(\"Core '\"+coreName+\"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n        } else {\n          throw sse;\n        }\n      }\n\n      CharArr arr = new CharArr();\n      new JSONWriter(arr, 2).write(json);\n      echo(arr.toString());\n      echo(\"\\n\");\n    }\n","date":"2015-08-05 00:32:12","endLine":1604,"groupId":"33789","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"runImpl","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/fe5c7d1e41d63c16a511bab90f801c45b5fabb.src","preCode":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        \r\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        \r\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          \r\n          \r\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nSetup new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      Map<String,Object> json = null;\n      try {\n        json = getJson(createCoreUrl);\n      } catch (SolrServerException sse) {\n        \r\n        if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n          \r\n          throw new IllegalArgumentException(\"Core '\"+coreName+\"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n        } else {\n          throw sse;\n        }\n      }\n\n      CharArr arr = new CharArr();\n      new JSONWriter(arr, 2).write(json);\n      echo(arr.toString());\n      echo(\"\\n\");\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1507,"status":"B"}],"commitId":"c1522a9c752e679291476a9b7a9c323a4c83c97a","commitMessage":"@@@SOLR-7847: Implement run example logic in Java instead of OS-specific scripts in bin/solr\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1694083 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-05 00:32:12","modifiedFileCount":"2","status":"B","submitter":"Timothy Potter"},{"authorTime":"2015-08-15 23:43:36","codes":[{"authorDate":"2015-08-05 00:32:12","commitOrder":2,"curCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String getUrl = cli.getOptionValue(\"get\");\n      if (getUrl != null) {\n        Map<String,Object> json = getJson(getUrl);\n        \n        \r\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());        \n      }\n    }\n","date":"2015-08-05 00:32:12","endLine":883,"groupId":"33789","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"runImpl","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/fe5c7d1e41d63c16a511bab90f801c45b5fabb.src","preCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String getUrl = cli.getOptionValue(\"get\");\n      if (getUrl != null) {\n        Map<String,Object> json = getJson(getUrl);\n        \n        \r\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());        \n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":873,"status":"N"},{"authorDate":"2015-08-15 23:43:36","commitOrder":2,"curCode":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        \r\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        \r\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          \r\n          \r\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nSetup new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      Map<String,Object> json = getJson(createCoreUrl);\n\n      CharArr arr = new CharArr();\n      new JSONWriter(arr, 2).write(json);\n      echo(arr.toString());\n      echo(\"\\n\");\n    }\n","date":"2015-08-15 23:43:36","endLine":1587,"groupId":"33789","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"runImpl","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ed/f2a8195bd2acf8f48338f7d821c87ab0f713fb.src","preCode":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        \r\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        \r\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          \r\n          \r\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nSetup new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      Map<String,Object> json = null;\n      try {\n        json = getJson(createCoreUrl);\n      } catch (SolrServerException sse) {\n        \r\n        if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n          \r\n          throw new IllegalArgumentException(\"Core '\"+coreName+\"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n        } else {\n          throw sse;\n        }\n      }\n\n      CharArr arr = new CharArr();\n      new JSONWriter(arr, 2).write(json);\n      echo(arr.toString());\n      echo(\"\\n\");\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1501,"status":"M"}],"commitId":"2443a7e6c1ec7ec24550880deb08189853276318","commitMessage":"@@@SOLR-7934: SolrCLI masks underlying cause of create collection failure.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1696056 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-15 23:43:36","modifiedFileCount":"1","status":"M","submitter":"Timothy Potter"},{"authorTime":"2015-11-17 19:56:52","codes":[{"authorDate":"2015-08-05 00:32:12","commitOrder":3,"curCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String getUrl = cli.getOptionValue(\"get\");\n      if (getUrl != null) {\n        Map<String,Object> json = getJson(getUrl);\n        \n        \r\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());        \n      }\n    }\n","date":"2015-08-05 00:32:12","endLine":883,"groupId":"33789","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"runImpl","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/fe5c7d1e41d63c16a511bab90f801c45b5fabb.src","preCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String getUrl = cli.getOptionValue(\"get\");\n      if (getUrl != null) {\n        Map<String,Object> json = getJson(getUrl);\n        \n        \r\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());        \n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":873,"status":"N"},{"authorDate":"2015-11-17 19:56:52","commitOrder":3,"curCode":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        \r\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        \r\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          \r\n          \r\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());\n        echo(\"\\n\");\n      } catch (Exception e) {\n        \n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n","date":"2015-11-17 19:56:52","endLine":1599,"groupId":"33789","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"runImpl","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/45/4ea5ee62ceffffb07196422e85cec832e2af19.src","preCode":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        \r\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        \r\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          \r\n          \r\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nSetup new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      Map<String,Object> json = getJson(createCoreUrl);\n\n      CharArr arr = new CharArr();\n      new JSONWriter(arr, 2).write(json);\n      echo(arr.toString());\n      echo(\"\\n\");\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1508,"status":"M"}],"commitId":"64783d17576ec0b0dffe94f697913ef83bff04c4","commitMessage":"@@@SOLR-8246: fix SolrCLI to delete config directory if creating a core failed\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1714764 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-11-17 19:56:52","modifiedFileCount":"1","status":"M","submitter":"Shai Erera"},{"authorTime":"2017-08-22 18:50:53","codes":[{"authorDate":"2015-08-05 00:32:12","commitOrder":4,"curCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String getUrl = cli.getOptionValue(\"get\");\n      if (getUrl != null) {\n        Map<String,Object> json = getJson(getUrl);\n        \n        \r\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());        \n      }\n    }\n","date":"2015-08-05 00:32:12","endLine":883,"groupId":"33789","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"runImpl","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/fe5c7d1e41d63c16a511bab90f801c45b5fabb.src","preCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String getUrl = cli.getOptionValue(\"get\");\n      if (getUrl != null) {\n        Map<String,Object> json = getJson(getUrl);\n        \n        \r\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());        \n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":873,"status":"N"},{"authorDate":"2017-08-22 18:50:53","commitOrder":4,"curCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        \r\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        \r\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          \r\n          \r\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        \n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n","date":"2017-08-22 18:50:53","endLine":1740,"groupId":"33789","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"runImpl","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/02/1f364dd400f1fe2fc310905828dc4e3a7ce3c0.src","preCode":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        \r\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        \r\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          \r\n          \r\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echo(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath());\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echo(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\");\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());\n        echo(\"\\n\");\n      } catch (Exception e) {\n        \n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1646,"status":"M"}],"commitId":"b67424ee5875f4b2028763a17fc0f446e460a9f9","commitMessage":"@@@SOLR-10628: Less verbose output from bin/solr commands\n","date":"2017-08-22 18:50:53","modifiedFileCount":"2","status":"M","submitter":"Jan H?ydahl"},{"authorTime":"2020-09-22 21:02:14","codes":[{"authorDate":"2015-08-05 00:32:12","commitOrder":5,"curCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String getUrl = cli.getOptionValue(\"get\");\n      if (getUrl != null) {\n        Map<String,Object> json = getJson(getUrl);\n        \n        \r\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());        \n      }\n    }\n","date":"2015-08-05 00:32:12","endLine":883,"groupId":"112500","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"runImpl","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8c/fe5c7d1e41d63c16a511bab90f801c45b5fabb.src","preCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String getUrl = cli.getOptionValue(\"get\");\n      if (getUrl != null) {\n        Map<String,Object> json = getJson(getUrl);\n        \n        \r\n        CharArr arr = new CharArr();\n        new JSONWriter(arr, 2).write(json);\n        echo(arr.toString());        \n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":873,"status":"N"},{"authorDate":"2020-09-22 21:02:14","commitOrder":5,"curCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        \r\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String coreRootDirectory = null; \r\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        \r\n        coreRootDirectory = (String)systemInfo.get(\"core_root\");\n\n        \r\n        if (coreRootDirectory == null)  coreRootDirectory = (String)systemInfo.get(\"solr_home\");\n        if (coreRootDirectory == null)  coreRootDirectory = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(coreRootDirectory, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          \r\n          \r\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        \n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n","date":"2020-09-22 21:02:14","endLine":1739,"groupId":"112500","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"runImpl","params":"(CommandLinecli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ef/7a7e8fc0fdd1e50f1a0472b4ba55cbf16040ff.src","preCode":"    protected void runImpl(CommandLine cli) throws Exception {\n      String solrUrl = cli.getOptionValue(\"solrUrl\", DEFAULT_SOLR_URL);\n      if (!solrUrl.endsWith(\"/\"))\n        solrUrl += \"/\";\n\n      File configsetsDir = new File(cli.getOptionValue(\"configsetsDir\"));\n      if (!configsetsDir.isDirectory())\n        throw new FileNotFoundException(configsetsDir.getAbsolutePath() + \" not found!\");\n\n      String configSet = cli.getOptionValue(\"confdir\", DEFAULT_CONFIG_SET);\n      File configSetDir = new File(configsetsDir, configSet);\n      if (!configSetDir.isDirectory()) {\n        \r\n        File possibleConfigDir = new File(configSet);\n        if (possibleConfigDir.isDirectory()) {\n          configSetDir = possibleConfigDir;\n        } else {\n          throw new FileNotFoundException(\"Specified config directory \" + configSet +\n              \" not found in \" + configsetsDir.getAbsolutePath());\n        }\n      }\n\n      String coreName = cli.getOptionValue(NAME);\n\n      String systemInfoUrl = solrUrl+\"admin/info/system\";\n      CloseableHttpClient httpClient = getHttpClient();\n      String solrHome = null;\n      try {\n        Map<String,Object> systemInfo = getJson(httpClient, systemInfoUrl, 2, true);\n        if (\"solrcloud\".equals(systemInfo.get(\"mode\"))) {\n          throw new IllegalStateException(\"Solr at \"+solrUrl+\n              \" is running in SolrCloud mode, please use create_collection command instead.\");\n        }\n\n        \r\n        solrHome = (String)systemInfo.get(\"solr_home\");\n        if (solrHome == null)\n          solrHome = configsetsDir.getParentFile().getAbsolutePath();\n\n      } finally {\n        closeHttpClient(httpClient);\n      }\n\n      String coreStatusUrl = solrUrl+\"admin/cores?action=STATUS&core=\"+coreName;\n      if (safeCheckCoreExists(coreStatusUrl, coreName)) {\n        throw new IllegalArgumentException(\"\\nCore '\"+coreName+\n            \"' already exists!\\nChecked core existence using Core API command:\\n\"+coreStatusUrl);\n      }\n\n      File coreInstanceDir = new File(solrHome, coreName);\n      File confDir = new File(configSetDir,\"conf\");\n      if (!coreInstanceDir.isDirectory()) {\n        coreInstanceDir.mkdirs();\n        if (!coreInstanceDir.isDirectory())\n          throw new IOException(\"Failed to create new core instance directory: \"+coreInstanceDir.getAbsolutePath());\n\n        if (confDir.isDirectory()) {\n          FileUtils.copyDirectoryToDirectory(confDir, coreInstanceDir);\n        } else {\n          \r\n          \r\n          if ((new File(configSetDir, \"solrconfig.xml\")).isFile()) {\n            FileUtils.copyDirectory(configSetDir, new File(coreInstanceDir, \"conf\"));\n          } else {\n            throw new IllegalArgumentException(\"\\n\"+configSetDir.getAbsolutePath()+\" doesn't contain a conf subdirectory or solrconfig.xml\\n\");\n          }\n        }\n        echoIfVerbose(\"\\nCopying configuration to new core instance directory:\\n\" + coreInstanceDir.getAbsolutePath(), cli);\n      }\n\n      String createCoreUrl =\n          String.format(Locale.ROOT,\n              \"%sadmin/cores?action=CREATE&name=%s&instanceDir=%s\",\n              solrUrl,\n              coreName,\n              coreName);\n\n      echoIfVerbose(\"\\nCreating new core '\" + coreName + \"' using command:\\n\" + createCoreUrl + \"\\n\", cli);\n\n      try {\n        Map<String,Object> json = getJson(createCoreUrl);\n        if (cli.hasOption(\"verbose\")) {\n          CharArr arr = new CharArr();\n          new JSONWriter(arr, 2).write(json);\n          echo(arr.toString());\n          echo(\"\\n\");\n        } else {\n          echo(String.format(Locale.ROOT, \"\\nCreated new core '%s'\", coreName));\n        }\n      } catch (Exception e) {\n        \n        FileUtils.deleteDirectory(coreInstanceDir);\n        throw e;\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/util/SolrCLI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1643,"status":"M"}],"commitId":"16115864177a73499b55367774ddb89adefda61f","commitMessage":"@@@SOLR-14880: Support coreRootDirectory setting when create new cores from command line.  in standalone mode\n\nUpdate to match latest code with shorter name","date":"2020-09-22 21:02:14","modifiedFileCount":"1","status":"M","submitter":"Alexandre Rafalovitch"}]
