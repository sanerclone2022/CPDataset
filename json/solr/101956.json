[{"authorTime":"2013-02-17 02:50:20","codes":[{"authorDate":"2013-02-17 02:50:20","commitOrder":1,"curCode":"  public void checkSortability() throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on multivalued field: \" \n                              + getName());\n    }\n  }\n","date":"2013-02-17 02:50:20","endLine":162,"groupId":"34919","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkSortability","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/3374c0dd7f673fea810f7d536d8436046f16dd.src","preCode":"  public void checkSortability() throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on multivalued field: \" \n                              + getName());\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"B"},{"authorDate":"2013-02-17 02:50:20","commitOrder":1,"curCode":"  public void checkFieldCacheSource(QParser parser) throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on multivalued field: \" \n                              + getName());\n    }\n    \n  }\n","date":"2013-02-17 02:50:20","endLine":184,"groupId":"34919","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkFieldCacheSource","params":"(QParserparser)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/3374c0dd7f673fea810f7d536d8436046f16dd.src","preCode":"  public void checkFieldCacheSource(QParser parser) throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on multivalued field: \" \n                              + getName());\n    }\n    \n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"B"}],"commitId":"e61398084d3f1ca0f28c5c35d3318645d7a401ec","commitMessage":"@@@SOLR-3855: Doc values support.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1446922 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-02-17 02:50:20","modifiedFileCount":"32","status":"B","submitter":"Adrien Grand"},{"authorTime":"2015-11-17 20:00:16","codes":[{"authorDate":"2013-02-17 02:50:20","commitOrder":2,"curCode":"  public void checkSortability() throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on multivalued field: \" \n                              + getName());\n    }\n  }\n","date":"2013-02-17 02:50:20","endLine":162,"groupId":"34919","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkSortability","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/79/3374c0dd7f673fea810f7d536d8436046f16dd.src","preCode":"  public void checkSortability() throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on multivalued field: \" \n                              + getName());\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"N"},{"authorDate":"2015-11-17 20:00:16","commitOrder":2,"curCode":"  public void checkFieldCacheSource() throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on multivalued field: \" \n                              + getName());\n    }\n    \n  }\n","date":"2015-11-17 20:00:16","endLine":191,"groupId":"34919","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkFieldCacheSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/27/a642c77589069bbb8dc948d98fc1597f72fa5c.src","preCode":"  public void checkFieldCacheSource(QParser parser) throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on multivalued field: \" \n                              + getName());\n    }\n    \n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"ea917093f815973d1b44138c5a8f7bd2a3d64cee","commitMessage":"@@@SOLR-8290: remove SchemaField.checkFieldCacheSource's unused QParser argument\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1714766 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-11-17 20:00:16","modifiedFileCount":"8","status":"M","submitter":"Christine Poerschke"},{"authorTime":"2017-01-19 09:27:21","codes":[{"authorDate":"2017-01-19 09:27:21","commitOrder":3,"curCode":"  public void checkSortability() throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on multivalued field: \" \n                              + getName());\n    }\n    if (this.type.isPointField() && !hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on a PointField without doc values: \" \n                              + getName());\n    }\n  }\n","date":"2017-01-19 09:27:21","endLine":178,"groupId":"34919","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"checkSortability","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/00/9e5fc0debb72bfb2cf92515e27e439408b370f.src","preCode":"  public void checkSortability() throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on multivalued field: \" \n                              + getName());\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"},{"authorDate":"2017-01-19 09:27:21","commitOrder":3,"curCode":"  public void checkFieldCacheSource() throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on multivalued field: \" \n                              + getName());\n    }\n    if (this.type.isPointField() && !hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"Point fields can't use FieldCache. Use docValues=true for field: \" \n                              + getName());\n    }\n    \n  }\n","date":"2017-01-19 09:27:21","endLine":205,"groupId":"34919","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"checkFieldCacheSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/00/9e5fc0debb72bfb2cf92515e27e439408b370f.src","preCode":"  public void checkFieldCacheSource() throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on multivalued field: \" \n                              + getName());\n    }\n    \n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"}],"commitId":"57934ba4480d71218c7f60d0417dbae9d26188d0","commitMessage":"@@@SOLR-8396: Add support for PointFields in Solr\n","date":"2017-01-19 09:27:21","modifiedFileCount":"33","status":"M","submitter":"Tomas Fernandez Lobbe"},{"authorTime":"2017-04-19 02:58:35","codes":[{"authorDate":"2017-04-19 02:58:35","commitOrder":4,"curCode":"  public void checkSortability() throws SolrException {\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on multivalued field: \" \n                              + getName());\n    }\n    if (! hasDocValues() ) {\n      if ( ! ( indexed() && null != this.type.getUninversionType(this) ) ) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                                \"can not sort on a field w/o docValues unless it is indexed and supports Uninversion: \" \n                                + getName());\n      }\n    }\n  }\n","date":"2017-04-19 02:58:35","endLine":176,"groupId":"17936","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"checkSortability","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/5d8427407a4c8ce8123f77eeec885b865f43d4.src","preCode":"  public void checkSortability() throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on multivalued field: \" \n                              + getName());\n    }\n    if (this.type.isPointField() && !hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on a PointField without doc values: \" \n                              + getName());\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2017-04-19 02:58:35","commitOrder":4,"curCode":"  public void checkFieldCacheSource() throws SolrException {\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on multivalued field: \" \n                              + getName());\n    }\n    if (! hasDocValues() ) {\n      if ( ! ( indexed() && null != this.type.getUninversionType(this) ) ) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                                \"can not use FieldCache on a field w/o docValues unless it is indexed and supports Uninversion: \" \n                                + getName());\n      }\n    }\n  }\n","date":"2017-04-19 02:58:35","endLine":199,"groupId":"17936","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"checkFieldCacheSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/5d8427407a4c8ce8123f77eeec885b865f43d4.src","preCode":"  public void checkFieldCacheSource() throws SolrException {\n    if (! (indexed() || hasDocValues()) ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on a field which is neither indexed nor has doc values: \" \n                              + getName());\n    }\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on multivalued field: \" \n                              + getName());\n    }\n    if (this.type.isPointField() && !hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"Point fields can't use FieldCache. Use docValues=true for field: \" \n                              + getName());\n    }\n    \n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"10772121eee97023aed415751e49a06d116b26ad","commitMessage":"@@@SOLR-10472: Fixed uninversion (aka: FieldCache) bugs with the numeric PointField classes.  and CurrencyField\n","date":"2017-04-19 02:58:35","modifiedFileCount":"12","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2017-04-19 02:58:35","codes":[{"authorDate":"2018-01-23 20:35:14","commitOrder":5,"curCode":"  public void checkSortability() throws SolrException {\n    if ( multiValued()\n         \r\n         && null == this.type.getDefaultMultiValueSelectorForSort(this,true)\n         && null == this.type.getDefaultMultiValueSelectorForSort(this,false) ) {\n      \n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on multivalued field: \" \n                              + getName() + \" of type: \" + this.type.getTypeName());\n    }\n    if (! hasDocValues() ) {\n      if ( ! ( indexed() && null != this.type.getUninversionType(this) ) ) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                                \"can not sort on a field w/o docValues unless it is indexed and supports Uninversion: \" \n                                + getName());\n      }\n    }\n  }\n","date":"2018-01-23 20:35:14","endLine":180,"groupId":"17936","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"checkSortability","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/25/6cbae230f45c4ef1b4205d64084951c202e492.src","preCode":"  public void checkSortability() throws SolrException {\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on multivalued field: \" \n                              + getName());\n    }\n    if (! hasDocValues() ) {\n      if ( ! ( indexed() && null != this.type.getUninversionType(this) ) ) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                                \"can not sort on a field w/o docValues unless it is indexed and supports Uninversion: \" \n                                + getName());\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2017-04-19 02:58:35","commitOrder":5,"curCode":"  public void checkFieldCacheSource() throws SolrException {\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on multivalued field: \" \n                              + getName());\n    }\n    if (! hasDocValues() ) {\n      if ( ! ( indexed() && null != this.type.getUninversionType(this) ) ) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                                \"can not use FieldCache on a field w/o docValues unless it is indexed and supports Uninversion: \" \n                                + getName());\n      }\n    }\n  }\n","date":"2017-04-19 02:58:35","endLine":199,"groupId":"17936","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"checkFieldCacheSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/5d8427407a4c8ce8123f77eeec885b865f43d4.src","preCode":"  public void checkFieldCacheSource() throws SolrException {\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on multivalued field: \" \n                              + getName());\n    }\n    if (! hasDocValues() ) {\n      if ( ! ( indexed() && null != this.type.getUninversionType(this) ) ) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                                \"can not use FieldCache on a field w/o docValues unless it is indexed and supports Uninversion: \" \n                                + getName());\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"N"}],"commitId":"653935bbdfd70fa9490f8c363ffcf9832d3141a5","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-01-23 20:35:14","modifiedFileCount":"279","status":"M","submitter":"Karl Wright"},{"authorTime":"2018-11-09 23:30:04","codes":[{"authorDate":"2018-11-09 23:30:04","commitOrder":6,"curCode":"  public void checkSortability() throws SolrException {\n    if ( multiValued()\n         \r\n         && null == this.type.getDefaultMultiValueSelectorForSort(this,true)\n         && null == this.type.getDefaultMultiValueSelectorForSort(this,false) ) {\n      \n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on multivalued field: \" \n                              + getName() + \" of type: \" + this.type.getTypeName());\n    }\n    if (! hasDocValues() ) {\n      if ( ! ( indexed() && isUninvertible() && null != this.type.getUninversionType(this) ) ) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                                \"can not sort on a field w/o docValues unless it is indexed=true uninvertible=true and the type supports Uninversion: \" \n                                + getName());\n      }\n    }\n  }\n","date":"2018-11-09 23:30:04","endLine":181,"groupId":"101956","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"checkSortability","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7d/9449e6d9aac79c4f2febf2e828ac6631053c96.src","preCode":"  public void checkSortability() throws SolrException {\n    if ( multiValued()\n         \r\n         && null == this.type.getDefaultMultiValueSelectorForSort(this,true)\n         && null == this.type.getDefaultMultiValueSelectorForSort(this,false) ) {\n      \n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not sort on multivalued field: \" \n                              + getName() + \" of type: \" + this.type.getTypeName());\n    }\n    if (! hasDocValues() ) {\n      if ( ! ( indexed() && null != this.type.getUninversionType(this) ) ) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                                \"can not sort on a field w/o docValues unless it is indexed and supports Uninversion: \" \n                                + getName());\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"},{"authorDate":"2018-11-09 23:30:04","commitOrder":6,"curCode":"  public void checkFieldCacheSource() throws SolrException {\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on multivalued field: \" \n                              + getName());\n    }\n    if (! hasDocValues() ) {\n      if ( ! ( indexed() && isUninvertible() && null != this.type.getUninversionType(this) ) ) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                                \"can not use FieldCache on a field w/o docValues unless it is indexed uninvertible=true and the type supports Uninversion: \" \n                                + getName());\n      }\n    }\n  }\n","date":"2018-11-09 23:30:04","endLine":204,"groupId":"101956","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"checkFieldCacheSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/7d/9449e6d9aac79c4f2febf2e828ac6631053c96.src","preCode":"  public void checkFieldCacheSource() throws SolrException {\n    if ( multiValued() ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                              \"can not use FieldCache on multivalued field: \" \n                              + getName());\n    }\n    if (! hasDocValues() ) {\n      if ( ! ( indexed() && null != this.type.getUninversionType(this) ) ) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n                                \"can not use FieldCache on a field w/o docValues unless it is indexed and supports Uninversion: \" \n                                + getName());\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/schema/SchemaField.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"}],"commitId":"77a4bfaa90637cd3d9a8a2ef4889e163dab143aa","commitMessage":"@@@SOLR-12962: Added a new 'uninvertible' option for fields and fieldtypes. This defaults to 'true' for backcompat allowing a FieldCache to be built for indexed fields as needed.  but users are encouraged to set this to false (using docValues as needed) to reduce the risk of large fluxuations in heap size due to unexpected attempts to sort/facet/function on non-docValue fields.\n","date":"2018-11-09 23:30:04","modifiedFileCount":"22","status":"M","submitter":"Chris Hostetter"}]
