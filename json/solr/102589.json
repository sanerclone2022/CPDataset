[{"authorTime":"2017-05-31 19:56:14","codes":[{"authorDate":"2015-05-06 13:18:47","commitOrder":4,"curCode":"    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n","date":"2015-05-06 13:18:47","endLine":174,"groupId":"61523","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"applyUpdatesToManagedData","params":"(Objectupdates)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/28/c2be9c8ab19d60298b9976127cb4331c59c59b.src","preCode":"    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"NB"},{"authorDate":"2017-05-31 19:56:14","commitOrder":4,"curCode":"    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n","date":"2017-05-31 19:56:14","endLine":175,"groupId":"61523","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"applyUpdatesToManagedData","params":"(Objectupdates)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1f/4a97071393f9382f506cc83333709a62bc49fd.src","preCode":"    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"B"}],"commitId":"97693234def7fb4fc92d8fbaab775705aaaaf565","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-05-31 19:56:14","modifiedFileCount":"119","status":"M","submitter":"Karl Wright"},{"authorTime":"2020-10-05 01:21:49","codes":[{"authorDate":"2020-10-05 01:21:49","commitOrder":5,"curCode":"    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n","date":"2020-10-05 01:21:49","endLine":185,"groupId":"102589","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"applyUpdatesToManagedData","params":"(Objectupdates)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/da/256977b165d7435fa3cbcaa2bb297fddcfc4d7.src","preCode":"    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"},{"authorDate":"2020-10-05 01:21:49","commitOrder":5,"curCode":"    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n","date":"2020-10-05 01:21:49","endLine":180,"groupId":"102589","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"applyUpdatesToManagedData","params":"(Objectupdates)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fa/11c84ee076e93e4107f443e2aabe745614b694.src","preCode":"    protected Object applyUpdatesToManagedData(Object updates) {\n      boolean ignoreCase = getIgnoreCase();\n      boolean madeChanges = false;\n      if (updates instanceof List) {\n        madeChanges = applyListUpdates((List<String>)updates, ignoreCase);\n      } else if (updates instanceof Map) {\n        madeChanges = applyMapUpdates((Map<String,Object>)updates, ignoreCase);\n      } else {\n        throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST,\n            \"Unsupported data format (\" + updates.getClass().getName() + \"); expected a JSON object (Map or List)!\");\n      }\n      return madeChanges ? getStoredView() : null;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymGraphFilterFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"}],"commitId":"e879a52291ef7dcd0514e7419d811b6ff800bcce","commitMessage":"@@@SOLR-14659: Remove restlet as dependency for the ManagedResource API (#1938)\n\nCo-authored-by: noblepaul <noble.paul@gmail.com>","date":"2020-10-05 01:21:49","modifiedFileCount":"24","status":"M","submitter":"Timothy Potter"}]
