[{"authorTime":"2020-09-23 01:36:59","codes":[{"authorDate":"2021-04-17 08:02:01","commitOrder":3,"curCode":"  private static NamedList getConfigSetProperties(ConfigSetService configSetService, String configName, String propertyPath) throws IOException {\n    byte[] oldPropsData = configSetService.downloadFileFromConfig(configName, propertyPath);\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), StandardCharsets.UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n","date":"2021-04-17 08:02:01","endLine":87,"groupId":"14251","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getConfigSetProperties","params":"(ConfigSetServiceconfigSetService@StringconfigName@StringpropertyPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/5983a5f0c661e999f8ed571b82f9545f0429e3.src","preCode":"  private static NamedList getConfigSetProperties(ConfigSetService configSetService, String configName, String propertyPath) throws IOException {\n    byte[] oldPropsData = configSetService.downloadFileFromConfig(configName, propertyPath);\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), StandardCharsets.UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/ConfigSetCmds.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"},{"authorDate":"2020-09-23 01:36:59","commitOrder":3,"curCode":"  private NamedList getConfigSetPropertiesFromZk(\n      SolrZkClient zkClient, String path) throws Exception {\n    byte [] oldPropsData = null;\n    try {\n      oldPropsData = zkClient.getData(path, null, null, true);\n    } catch (KeeperException.NoNodeException e) {\n      \r\n    }\n\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n","date":"2020-09-23 01:36:59","endLine":247,"groupId":"33639","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getConfigSetPropertiesFromZk","params":"(SolrZkClientzkClient@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6f/ea2cbae239cdc7ce290629088343f8d310ee07.src","preCode":"  private NamedList getConfigSetPropertiesFromZk(\n      SolrZkClient zkClient, String path) throws Exception {\n    byte [] oldPropsData = null;\n    try {\n      oldPropsData = zkClient.getData(path, null, null, true);\n    } catch (KeeperException.NoNodeException e) {\n      \r\n    }\n\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"NB"}],"commitId":"4a78b458047c8803aed583d0d17ec6017d72b766","commitMessage":"@@@SOLR-15146: Collection and Config Set API can run distributed on all nodes (#70)\n\nWhen config properties distributedClusterStateUpdates and distributedCollectionConfigSetExecution are set to true.  Collection API.  Config Set API and cluster state updates no longer run on Overseer but on the node handling the corresponding API request.","date":"2021-04-17 08:02:01","modifiedFileCount":"38","status":"M","submitter":"Ilan Ginzburg"},{"authorTime":"2020-09-23 01:36:59","codes":[{"authorDate":"2021-06-09 02:08:25","commitOrder":4,"curCode":"  private static NamedList<Object> getConfigSetProperties(ConfigSetService configSetService, String configName, String propertyPath) throws IOException {\n    byte[] oldPropsData = configSetService.downloadFileFromConfig(configName, propertyPath);\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), StandardCharsets.UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n","date":"2021-06-09 02:08:25","endLine":85,"groupId":"14251","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getConfigSetProperties","params":"(ConfigSetServiceconfigSetService@StringconfigName@StringpropertyPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/96/7463510fb73bf5e65f8f3ab4efd4df235a352a.src","preCode":"  private static NamedList getConfigSetProperties(ConfigSetService configSetService, String configName, String propertyPath) throws IOException {\n    byte[] oldPropsData = configSetService.downloadFileFromConfig(configName, propertyPath);\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), StandardCharsets.UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/ConfigSetCmds.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2020-09-23 01:36:59","commitOrder":4,"curCode":"  private NamedList getConfigSetPropertiesFromZk(\n      SolrZkClient zkClient, String path) throws Exception {\n    byte [] oldPropsData = null;\n    try {\n      oldPropsData = zkClient.getData(path, null, null, true);\n    } catch (KeeperException.NoNodeException e) {\n      \r\n    }\n\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n","date":"2020-09-23 01:36:59","endLine":247,"groupId":"33639","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getConfigSetPropertiesFromZk","params":"(SolrZkClientzkClient@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6f/ea2cbae239cdc7ce290629088343f8d310ee07.src","preCode":"  private NamedList getConfigSetPropertiesFromZk(\n      SolrZkClient zkClient, String path) throws Exception {\n    byte [] oldPropsData = null;\n    try {\n      oldPropsData = zkClient.getData(path, null, null, true);\n    } catch (KeeperException.NoNodeException e) {\n      \r\n    }\n\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"N"}],"commitId":"916b7a04f65490179a73e2c1620bab1df65e4bb8","commitMessage":"@@@SOLR-15385 RawTypes Part II.  Searching for NamedList (#165)\n\nMost updates relate to NamedListInitializationPlugin init method.  and RequestHandler.\n\nLink to JIRA issues for some extant bugs.\n\nCo-authored-by: David Smiley <dsmiley@apache.org>","date":"2021-06-09 02:08:25","modifiedFileCount":"221","status":"M","submitter":"Mike Drob"},{"authorTime":"2021-06-22 00:19:37","codes":[{"authorDate":"2021-06-09 02:08:25","commitOrder":5,"curCode":"  private static NamedList<Object> getConfigSetProperties(ConfigSetService configSetService, String configName, String propertyPath) throws IOException {\n    byte[] oldPropsData = configSetService.downloadFileFromConfig(configName, propertyPath);\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), StandardCharsets.UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n","date":"2021-06-09 02:08:25","endLine":85,"groupId":"102416","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getConfigSetProperties","params":"(ConfigSetServiceconfigSetService@StringconfigName@StringpropertyPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/96/7463510fb73bf5e65f8f3ab4efd4df235a352a.src","preCode":"  private static NamedList<Object> getConfigSetProperties(ConfigSetService configSetService, String configName, String propertyPath) throws IOException {\n    byte[] oldPropsData = configSetService.downloadFileFromConfig(configName, propertyPath);\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), StandardCharsets.UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/ConfigSetCmds.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"N"},{"authorDate":"2021-06-22 00:19:37","commitOrder":5,"curCode":"  private NamedList<Object> getConfigSetPropertiesFromZk(\n      SolrZkClient zkClient, String path) throws Exception {\n    byte [] oldPropsData = null;\n    try {\n      oldPropsData = zkClient.getData(path, null, null, true);\n    } catch (KeeperException.NoNodeException e) {\n      \r\n    }\n\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n","date":"2021-06-22 00:19:37","endLine":288,"groupId":"102416","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getConfigSetPropertiesFromZk","params":"(SolrZkClientzkClient@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/0c/5c3f4f56bb55ff6ca54a35380ff9e6c5da3ea7.src","preCode":"  private NamedList getConfigSetPropertiesFromZk(\n      SolrZkClient zkClient, String path) throws Exception {\n    byte [] oldPropsData = null;\n    try {\n      oldPropsData = zkClient.getData(path, null, null, true);\n    } catch (KeeperException.NoNodeException e) {\n      \r\n    }\n\n    if (oldPropsData != null) {\n      InputStreamReader reader = new InputStreamReader(new ByteArrayInputStream(oldPropsData), UTF_8);\n      try {\n        return ConfigSetProperties.readFromInputStream(reader);\n      } finally {\n        reader.close();\n      }\n    }\n    return null;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"}],"commitId":"1725e778ac86d88e2deff8f7339d45bb4e50a719","commitMessage":"@@@SOLR-15385 RawTypes Part III.  contrib and solrj (#169)\n\n* SOLR-15385 RawTypes Part III.  contrib and solrj\n\nCo-authored-by: Christine Poerschke <cpoerschke@apache.org>","date":"2021-06-22 00:19:37","modifiedFileCount":"216","status":"M","submitter":"Mike Drob"}]
