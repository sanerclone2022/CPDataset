[{"authorTime":"2015-08-09 11:38:08","codes":[{"authorDate":"2015-08-09 11:38:08","commitOrder":1,"curCode":"  private void addDoc(int id, long nextVal, long version) throws Exception {\n    ifVerbose(\"adding id\", id, \"val=\", nextVal, \"version\", version);\n\n    Long returnedVersion = addAndGetVersion(sdoc(\"id\", Integer.toString(id), field, Long.toString(nextVal),\n        \"_version_\", Long.toString(version)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n    if (returnedVersion != null) {\n      assertEquals(version, returnedVersion.longValue());\n    }\n\n    \r\n    synchronized (model) {\n      DocInfo currInfo = model.get(id);\n      if (version > currInfo.version) {\n        model.put(id, new DocInfo(version, nextVal));\n      }\n    }\n\n    ifVerbose(\"adding id\", id, \"val=\", nextVal, \"version\", version, \"DONE\");\n  }\n","date":"2015-08-09 11:38:08","endLine":215,"groupId":"9206","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addDoc","params":"(intid@longnextVal@longversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/02/e1deb7a35f146f2adb4ec6a33f0106b8a3e53e.src","preCode":"  private void addDoc(int id, long nextVal, long version) throws Exception {\n    ifVerbose(\"adding id\", id, \"val=\", nextVal, \"version\", version);\n\n    Long returnedVersion = addAndGetVersion(sdoc(\"id\", Integer.toString(id), field, Long.toString(nextVal),\n        \"_version_\", Long.toString(version)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n    if (returnedVersion != null) {\n      assertEquals(version, returnedVersion.longValue());\n    }\n\n    \r\n    synchronized (model) {\n      DocInfo currInfo = model.get(id);\n      if (version > currInfo.version) {\n        model.put(id, new DocInfo(version, nextVal));\n      }\n    }\n\n    ifVerbose(\"adding id\", id, \"val=\", nextVal, \"version\", version, \"DONE\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestReloadDeadlock.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"B"},{"authorDate":"2015-08-09 11:38:08","commitOrder":1,"curCode":"  private void deleteByQuery(int id, long nextVal, long version) throws Exception {\n    ifVerbose(\"deleteByQuery id\", id, \"val=\", nextVal, \"version\", version);\n\n    Long returnedVersion = deleteByQueryAndGetVersion(\"id:\" + Integer.toString(id),\n        params(\"_version_\", Long.toString(-version), DISTRIB_UPDATE_PARAM, FROM_LEADER));\n\n    \r\n    \r\n    if (returnedVersion != null) {\n      assertEquals(-version, returnedVersion.longValue());\n    }\n\n    \r\n    synchronized (model) {\n      DocInfo currInfo = model.get(id);\n      if (Math.abs(version) > Math.abs(currInfo.version)) {\n        model.put(id, new DocInfo(version, -nextVal));\n      }\n    }\n\n    ifVerbose(\"deleteByQuery id\", id, \"val=\", nextVal, \"version\", version, \"DONE\");\n  }\n","date":"2015-08-09 11:38:08","endLine":238,"groupId":"25454","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteByQuery","params":"(intid@longnextVal@longversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/02/e1deb7a35f146f2adb4ec6a33f0106b8a3e53e.src","preCode":"  private void deleteByQuery(int id, long nextVal, long version) throws Exception {\n    ifVerbose(\"deleteByQuery id\", id, \"val=\", nextVal, \"version\", version);\n\n    Long returnedVersion = deleteByQueryAndGetVersion(\"id:\" + Integer.toString(id),\n        params(\"_version_\", Long.toString(-version), DISTRIB_UPDATE_PARAM, FROM_LEADER));\n\n    \r\n    \r\n    if (returnedVersion != null) {\n      assertEquals(-version, returnedVersion.longValue());\n    }\n\n    \r\n    synchronized (model) {\n      DocInfo currInfo = model.get(id);\n      if (Math.abs(version) > Math.abs(currInfo.version)) {\n        model.put(id, new DocInfo(version, -nextVal));\n      }\n    }\n\n    ifVerbose(\"deleteByQuery id\", id, \"val=\", nextVal, \"version\", version, \"DONE\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestReloadDeadlock.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"B"}],"commitId":"2676aa61b98c11b9ba3dc5c3f9f19ab556d73495","commitMessage":"@@@SOLR-7836: Possible deadlock when closing refcounted index writers\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1694854 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-09 11:38:08","modifiedFileCount":"2","status":"B","submitter":"Erick Erickson"},{"authorTime":"2015-08-09 11:38:08","codes":[{"authorDate":"2017-03-31 22:22:45","commitOrder":2,"curCode":"  private void addDoc(int id, long nextVal, long version) throws Exception {\n    ifVerbose(\"adding id\", id, \"val=\", nextVal, \"version\", version);\n\n    Long returnedVersion = addAndGetVersion(sdoc(\"id\", Integer.toString(id), FIELD, Long.toString(nextVal),\n        \"_version_\", Long.toString(version)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n    if (returnedVersion != null) {\n      assertEquals(version, returnedVersion.longValue());\n    }\n\n    \r\n    synchronized (model) {\n      DocInfo currInfo = model.get(id);\n      if (version > currInfo.version) {\n        model.put(id, new DocInfo(version, nextVal));\n      }\n    }\n\n    ifVerbose(\"adding id\", id, \"val=\", nextVal, \"version\", version, \"DONE\");\n  }\n","date":"2017-03-31 23:28:21","endLine":215,"groupId":"103102","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addDoc","params":"(intid@longnextVal@longversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/32/c91db29bfce360c8a9adebd101efc539f4af18.src","preCode":"  private void addDoc(int id, long nextVal, long version) throws Exception {\n    ifVerbose(\"adding id\", id, \"val=\", nextVal, \"version\", version);\n\n    Long returnedVersion = addAndGetVersion(sdoc(\"id\", Integer.toString(id), field, Long.toString(nextVal),\n        \"_version_\", Long.toString(version)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n    if (returnedVersion != null) {\n      assertEquals(version, returnedVersion.longValue());\n    }\n\n    \r\n    synchronized (model) {\n      DocInfo currInfo = model.get(id);\n      if (version > currInfo.version) {\n        model.put(id, new DocInfo(version, nextVal));\n      }\n    }\n\n    ifVerbose(\"adding id\", id, \"val=\", nextVal, \"version\", version, \"DONE\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestReloadDeadlock.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"},{"authorDate":"2015-08-09 11:38:08","commitOrder":2,"curCode":"  private void deleteByQuery(int id, long nextVal, long version) throws Exception {\n    ifVerbose(\"deleteByQuery id\", id, \"val=\", nextVal, \"version\", version);\n\n    Long returnedVersion = deleteByQueryAndGetVersion(\"id:\" + Integer.toString(id),\n        params(\"_version_\", Long.toString(-version), DISTRIB_UPDATE_PARAM, FROM_LEADER));\n\n    \r\n    \r\n    if (returnedVersion != null) {\n      assertEquals(-version, returnedVersion.longValue());\n    }\n\n    \r\n    synchronized (model) {\n      DocInfo currInfo = model.get(id);\n      if (Math.abs(version) > Math.abs(currInfo.version)) {\n        model.put(id, new DocInfo(version, -nextVal));\n      }\n    }\n\n    ifVerbose(\"deleteByQuery id\", id, \"val=\", nextVal, \"version\", version, \"DONE\");\n  }\n","date":"2015-08-09 11:38:08","endLine":238,"groupId":"103102","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteByQuery","params":"(intid@longnextVal@longversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/02/e1deb7a35f146f2adb4ec6a33f0106b8a3e53e.src","preCode":"  private void deleteByQuery(int id, long nextVal, long version) throws Exception {\n    ifVerbose(\"deleteByQuery id\", id, \"val=\", nextVal, \"version\", version);\n\n    Long returnedVersion = deleteByQueryAndGetVersion(\"id:\" + Integer.toString(id),\n        params(\"_version_\", Long.toString(-version), DISTRIB_UPDATE_PARAM, FROM_LEADER));\n\n    \r\n    \r\n    if (returnedVersion != null) {\n      assertEquals(-version, returnedVersion.longValue());\n    }\n\n    \r\n    synchronized (model) {\n      DocInfo currInfo = model.get(id);\n      if (Math.abs(version) > Math.abs(currInfo.version)) {\n        model.put(id, new DocInfo(version, -nextVal));\n      }\n    }\n\n    ifVerbose(\"deleteByQuery id\", id, \"val=\", nextVal, \"version\", version, \"DONE\");\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/TestReloadDeadlock.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"N"}],"commitId":"e80643e5a77297ba7ee29c7297e37af6ffb73ac2","commitMessage":"@@@LUCENE-7753: Make fields static when possible.\n","date":"2017-03-31 23:28:21","modifiedFileCount":"40","status":"M","submitter":"Adrien Grand"}]
