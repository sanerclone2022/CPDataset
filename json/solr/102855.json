[{"authorTime":"2017-01-26 09:23:13","codes":[{"authorDate":"2017-01-26 09:23:13","commitOrder":1,"curCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicy(LogDocMergePolicy.class.getName());\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    \n    initCore(configString, schemaString);\n    \n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","date":"2017-01-26 09:23:13","endLine":95,"groupId":"32262","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/74/360e3cb9bf35f7ae7839391be5be682204bf62.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicy(LogDocMergePolicy.class.getName());\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    \n    initCore(configString, schemaString);\n    \n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"},{"authorDate":"2017-01-26 09:23:13","commitOrder":1,"curCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","date":"2017-01-26 09:23:13","endLine":73,"groupId":"32262","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9f/371d4d0a2a35f1828c855d96782c363eb13d6d.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestStressInPlaceUpdates.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"}],"commitId":"5375410807aecf3cc67f82ca1e9ee591f39d0ac7","commitMessage":"@@@SOLR-5944: In-place updates of Numeric DocValues\n","date":"2017-01-26 09:23:13","modifiedFileCount":"22","status":"B","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2017-01-26 09:23:13","codes":[{"authorDate":"2017-02-19 11:51:35","commitOrder":2,"curCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n    \n    initCore(configString, schemaString);\n    \n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","date":"2017-02-19 11:51:35","endLine":93,"groupId":"53022","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/91/36d73eabef04356b53dae0cbfb33f44bec0f4f.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicy(LogDocMergePolicy.class.getName());\n    systemSetPropertySolrTestsMergePolicyFactory(LogDocMergePolicyFactory.class.getName());\n    \n    initCore(configString, schemaString);\n    \n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2017-01-26 09:23:13","commitOrder":2,"curCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","date":"2017-01-26 09:23:13","endLine":73,"groupId":"32262","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9f/371d4d0a2a35f1828c855d96782c363eb13d6d.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestStressInPlaceUpdates.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"}],"commitId":"6358afbea66239436a6c0c52e088eeecebac1f65","commitMessage":"@@@SOLR-5944: Cleanup comments and logging.  use NoMergePolicy instead of LogDocMergePolicy\n","date":"2017-02-19 11:51:35","modifiedFileCount":"4","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2017-01-26 09:23:13","codes":[{"authorDate":"2017-03-07 21:32:26","commitOrder":3,"curCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n\n    \r\n    System.setProperty(SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICYFACTORY, \"true\");\n    System.setProperty(SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICY, \"false\");\n\n    initCore(configString, schemaString);\n    \n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n    \n    \r\n    RefCounted<IndexWriter> iw = h.getCore().getSolrCoreState().getIndexWriter(h.getCore());\n    try {\n      IndexWriter writer = iw.get();\n      assertTrue(\"Actual merge policy is: \" + writer.getConfig().getMergePolicy(),\n          writer.getConfig().getMergePolicy() instanceof NoMergePolicy); \n    } finally {\n      iw.decref();\n    }\n  }\n","date":"2017-03-07 21:32:26","endLine":110,"groupId":"9891","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4c/90bc65559bff31f6448f2e0068ab6148afbd1f.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n    \n    initCore(configString, schemaString);\n    \n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2017-01-26 09:23:13","commitOrder":3,"curCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","date":"2017-01-26 09:23:13","endLine":73,"groupId":"32262","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9f/371d4d0a2a35f1828c855d96782c363eb13d6d.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestStressInPlaceUpdates.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"}],"commitId":"190f4b6b935d39d5c08b9a23a07c9c891d197312","commitMessage":"@@@SOLR-10178.  SOLR-10079: Force tests to always use NoMergePolicy.  also assert that it was used\n","date":"2017-03-07 21:32:26","modifiedFileCount":"1","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2017-06-29 17:00:17","commitOrder":4,"curCode":"  public static void beforeSuperClass() throws Exception {\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n\n    initCore(configString, schemaString);\n    \n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n    \n    \r\n    RefCounted<IndexWriter> iw = h.getCore().getSolrCoreState().getIndexWriter(h.getCore());\n    try {\n      IndexWriter writer = iw.get();\n      assertTrue(\"Actual merge policy is: \" + writer.getConfig().getMergePolicy(),\n          writer.getConfig().getMergePolicy() instanceof NoMergePolicy); \n    } finally {\n      iw.decref();\n    }\n  }\n","date":"2017-06-29 17:00:17","endLine":101,"groupId":"9891","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9a/24c2a5653fcf0b7832b2bedc8bdde2ac09c5be.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n\n    \r\n    System.setProperty(SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICYFACTORY, \"true\");\n    System.setProperty(SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICY, \"false\");\n\n    initCore(configString, schemaString);\n    \n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n    \n    \r\n    RefCounted<IndexWriter> iw = h.getCore().getSolrCoreState().getIndexWriter(h.getCore());\n    try {\n      IndexWriter writer = iw.get();\n      assertTrue(\"Actual merge policy is: \" + writer.getConfig().getMergePolicy(),\n          writer.getConfig().getMergePolicy() instanceof NoMergePolicy); \n    } finally {\n      iw.decref();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":4,"curCode":"  public static void beforeSuperClass() throws Exception {\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","date":"2017-06-29 17:00:17","endLine":67,"groupId":"32262","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e1/6109541305ade5d7efab97334fc32229e211fa.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    System.setProperty(\"solr.tests.intClassName\", random().nextBoolean()? \"TrieIntField\": \"IntPointField\");\n    System.setProperty(\"solr.tests.longClassName\", random().nextBoolean()? \"TrieLongField\": \"LongPointField\");\n    System.setProperty(\"solr.tests.floatClassName\", random().nextBoolean()? \"TrieFloatField\": \"FloatPointField\");\n    System.setProperty(\"solr.tests.doubleClassName\", random().nextBoolean()? \"TrieDoubleField\": \"DoublePointField\");\n\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestStressInPlaceUpdates.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"M","submitter":"Karl Wright"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2018-03-15 03:58:30","commitOrder":5,"curCode":"  public static void beforeSuperClass() throws Exception {\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n\n    randomizeUpdateLogImpl();\n\n    initCore(configString, schemaString);\n    \n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n    \n    \r\n    RefCounted<IndexWriter> iw = h.getCore().getSolrCoreState().getIndexWriter(h.getCore());\n    try {\n      IndexWriter writer = iw.get();\n      assertTrue(\"Actual merge policy is: \" + writer.getConfig().getMergePolicy(),\n          writer.getConfig().getMergePolicy() instanceof NoMergePolicy); \n    } finally {\n      iw.decref();\n    }\n  }\n","date":"2018-03-15 03:58:30","endLine":103,"groupId":"9891","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/38/18c20e01710ce0f111989a9d54107fbd244559.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n\n    initCore(configString, schemaString);\n    \n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n    \n    \r\n    RefCounted<IndexWriter> iw = h.getCore().getSolrCoreState().getIndexWriter(h.getCore());\n    try {\n      IndexWriter writer = iw.get();\n      assertTrue(\"Actual merge policy is: \" + writer.getConfig().getMergePolicy(),\n          writer.getConfig().getMergePolicy() instanceof NoMergePolicy); \n    } finally {\n      iw.decref();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":5,"curCode":"  public static void beforeSuperClass() throws Exception {\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","date":"2017-06-29 17:00:17","endLine":67,"groupId":"32262","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e1/6109541305ade5d7efab97334fc32229e211fa.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestStressInPlaceUpdates.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"N"}],"commitId":"57524f1d4179f3ab57ffa53ba8f5e4dd1e198a11","commitMessage":"@@@SOLR-12083: Fix RealTime GET to work on a cluster running CDCR when using Solr's in-place updates\n","date":"2018-03-15 03:58:30","modifiedFileCount":"4","status":"M","submitter":"Varun Thacker"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2020-08-29 04:43:13","commitOrder":6,"curCode":"  public static void beforeSuperClass() throws Exception {\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n\n    initCore(configString, schemaString);\n    \n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n    \n    \r\n    RefCounted<IndexWriter> iw = h.getCore().getSolrCoreState().getIndexWriter(h.getCore());\n    try {\n      IndexWriter writer = iw.get();\n      assertTrue(\"Actual merge policy is: \" + writer.getConfig().getMergePolicy(),\n          writer.getConfig().getMergePolicy() instanceof NoMergePolicy); \n    } finally {\n      iw.decref();\n    }\n  }\n","date":"2020-08-29 04:43:13","endLine":105,"groupId":"102855","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/14f88db9eaeff625b5bcb1f0167561aff4859a.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    \r\n    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());\n\n    randomizeUpdateLogImpl();\n\n    initCore(configString, schemaString);\n    \n    \r\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n    \n    \r\n    RefCounted<IndexWriter> iw = h.getCore().getSolrCoreState().getIndexWriter(h.getCore());\n    try {\n      IndexWriter writer = iw.get();\n      assertTrue(\"Actual merge policy is: \" + writer.getConfig().getMergePolicy(),\n          writer.getConfig().getMergePolicy() instanceof NoMergePolicy); \n    } finally {\n      iw.decref();\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":6,"curCode":"  public static void beforeSuperClass() throws Exception {\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","date":"2017-06-29 17:00:17","endLine":67,"groupId":"102855","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"beforeSuperClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e1/6109541305ade5d7efab97334fc32229e211fa.src","preCode":"  public static void beforeSuperClass() throws Exception {\n    schemaString = \"schema-inplace-updates.xml\";\n    configString = \"solrconfig-tlog.xml\";\n\n    \r\n    initCore(configString, schemaString);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxTime);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoCommmitMaxDocs);\n    assertEquals(-1, h.getCore().getSolrConfig().getUpdateHandlerInfo().autoSoftCommmitMaxDocs);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestStressInPlaceUpdates.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"N"}],"commitId":"d84977eb5cde00f0e92f71837bdf9cee25e0b54a","commitMessage":"@@@SOLR-14616: Remove CDCR\n","date":"2020-08-29 04:43:13","modifiedFileCount":"12","status":"M","submitter":"Ishan Chattopadhyaya"}]
