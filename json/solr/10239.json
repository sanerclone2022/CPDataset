[{"authorTime":"2018-01-23 20:35:14","codes":[{"authorDate":"2018-01-23 20:35:14","commitOrder":1,"curCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    List<Number> listA = (List<Number>) value1;\n    List<Number> listB = (List<Number>) value2;\n\n    long[] sampleA = new long[listA.size()];\n    long[] sampleB = new long[listB.size()];\n\n    for(int i=0; i<sampleA.length; i++) {\n      sampleA[i] = listA.get(i).longValue();\n    }\n\n    for(int i=0; i<sampleB.length; i++) {\n      sampleB[i] = listB.get(i).longValue();\n    }\n\n    GTest gTest = new GTest();\n    double g = gTest.gDataSetsComparison(sampleA, sampleB);\n    double p = gTest.gTestDataSetsComparison(sampleA, sampleB);\n\n    Map<String,Number> m = new HashMap<>();\n    m.put(\"G-statistic\", g);\n    m.put(\"p-value\", p);\n    return new Tuple(m);\n  }\n","date":"2018-01-23 20:35:14","endLine":63,"groupId":"58394","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue1@Objectvalue2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d5/53197ebbcb9986ba528b0771c620f414b03076.src","preCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    List<Number> listA = (List<Number>) value1;\n    List<Number> listB = (List<Number>) value2;\n\n    long[] sampleA = new long[listA.size()];\n    long[] sampleB = new long[listB.size()];\n\n    for(int i=0; i<sampleA.length; i++) {\n      sampleA[i] = listA.get(i).longValue();\n    }\n\n    for(int i=0; i<sampleB.length; i++) {\n      sampleB[i] = listB.get(i).longValue();\n    }\n\n    GTest gTest = new GTest();\n    double g = gTest.gDataSetsComparison(sampleA, sampleB);\n    double p = gTest.gTestDataSetsComparison(sampleA, sampleB);\n\n    Map<String,Number> m = new HashMap<>();\n    m.put(\"G-statistic\", g);\n    m.put(\"p-value\", p);\n    return new Tuple(m);\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GTestDataSetEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"},{"authorDate":"2018-01-23 20:35:14","commitOrder":1,"curCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    List<Number> listA = (List<Number>) value1;\n    List<Number> listB = (List<Number>) value2;\n\n    long[] sampleA = new long[listA.size()];\n    long[] sampleB = new long[listB.size()];\n\n    for(int i=0; i<sampleA.length; i++) {\n      sampleA[i] = listA.get(i).longValue();\n    }\n\n    for(int i=0; i<sampleB.length; i++) {\n      sampleB[i] = listB.get(i).longValue();\n    }\n\n    ChiSquareTest chiSquareTest = new ChiSquareTest();\n    double chiSquare = chiSquareTest.chiSquareDataSetsComparison(sampleA, sampleB);\n    double p = chiSquareTest.chiSquareTestDataSetsComparison(sampleA, sampleB);\n\n    Map<String,Number> m = new HashMap<>();\n    m.put(\"chisquare-statistic\", chiSquare);\n    m.put(\"p-value\", p);\n    return new Tuple(m);\n\n  }\n","date":"2018-01-23 20:35:14","endLine":64,"groupId":"58394","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue1@Objectvalue2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9e/b963a7df665e631dae029edf314b9578f8b1e0.src","preCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    List<Number> listA = (List<Number>) value1;\n    List<Number> listB = (List<Number>) value2;\n\n    long[] sampleA = new long[listA.size()];\n    long[] sampleB = new long[listB.size()];\n\n    for(int i=0; i<sampleA.length; i++) {\n      sampleA[i] = listA.get(i).longValue();\n    }\n\n    for(int i=0; i<sampleB.length; i++) {\n      sampleB[i] = listB.get(i).longValue();\n    }\n\n    ChiSquareTest chiSquareTest = new ChiSquareTest();\n    double chiSquare = chiSquareTest.chiSquareDataSetsComparison(sampleA, sampleB);\n    double p = chiSquareTest.chiSquareTestDataSetsComparison(sampleA, sampleB);\n\n    Map<String,Number> m = new HashMap<>();\n    m.put(\"chisquare-statistic\", chiSquare);\n    m.put(\"p-value\", p);\n    return new Tuple(m);\n\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ChiSquareDataSetEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"}],"commitId":"653935bbdfd70fa9490f8c363ffcf9832d3141a5","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-01-23 20:35:14","modifiedFileCount":"279","status":"B","submitter":"Karl Wright"},{"authorTime":"2020-06-08 09:31:51","codes":[{"authorDate":"2020-06-08 09:31:51","commitOrder":2,"curCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> listA = (List<Number>) value1;\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> listB = (List<Number>) value2;\n\n    long[] sampleA = new long[listA.size()];\n    long[] sampleB = new long[listB.size()];\n\n    for(int i=0; i<sampleA.length; i++) {\n      sampleA[i] = listA.get(i).longValue();\n    }\n\n    for(int i=0; i<sampleB.length; i++) {\n      sampleB[i] = listB.get(i).longValue();\n    }\n\n    GTest gTest = new GTest();\n    double g = gTest.gDataSetsComparison(sampleA, sampleB);\n    double p = gTest.gTestDataSetsComparison(sampleA, sampleB);\n\n    Map<String,Number> m = new HashMap<>();\n    m.put(\"G-statistic\", g);\n    m.put(\"p-value\", p);\n    return new Tuple(m);\n  }\n","date":"2020-06-08 09:31:51","endLine":65,"groupId":"58394","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue1@Objectvalue2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6a/a5d8ac7033336332bcd4f453e62d15f7a07c6e.src","preCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    List<Number> listA = (List<Number>) value1;\n    List<Number> listB = (List<Number>) value2;\n\n    long[] sampleA = new long[listA.size()];\n    long[] sampleB = new long[listB.size()];\n\n    for(int i=0; i<sampleA.length; i++) {\n      sampleA[i] = listA.get(i).longValue();\n    }\n\n    for(int i=0; i<sampleB.length; i++) {\n      sampleB[i] = listB.get(i).longValue();\n    }\n\n    GTest gTest = new GTest();\n    double g = gTest.gDataSetsComparison(sampleA, sampleB);\n    double p = gTest.gTestDataSetsComparison(sampleA, sampleB);\n\n    Map<String,Number> m = new HashMap<>();\n    m.put(\"G-statistic\", g);\n    m.put(\"p-value\", p);\n    return new Tuple(m);\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GTestDataSetEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2020-06-08 09:31:51","commitOrder":2,"curCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> listA = (List<Number>) value1;\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> listB = (List<Number>) value2;\n\n    long[] sampleA = new long[listA.size()];\n    long[] sampleB = new long[listB.size()];\n\n    for(int i=0; i<sampleA.length; i++) {\n      sampleA[i] = listA.get(i).longValue();\n    }\n\n    for(int i=0; i<sampleB.length; i++) {\n      sampleB[i] = listB.get(i).longValue();\n    }\n\n    ChiSquareTest chiSquareTest = new ChiSquareTest();\n    double chiSquare = chiSquareTest.chiSquareDataSetsComparison(sampleA, sampleB);\n    double p = chiSquareTest.chiSquareTestDataSetsComparison(sampleA, sampleB);\n\n    Map<String,Number> m = new HashMap<>();\n    m.put(\"chisquare-statistic\", chiSquare);\n    m.put(\"p-value\", p);\n    return new Tuple(m);\n\n  }\n","date":"2020-06-08 09:31:51","endLine":66,"groupId":"58394","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doWork","params":"(Objectvalue1@Objectvalue2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/70/131d09a7fbb6f5bcb8dd21f3e0964f42dd0080.src","preCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    List<Number> listA = (List<Number>) value1;\n    List<Number> listB = (List<Number>) value2;\n\n    long[] sampleA = new long[listA.size()];\n    long[] sampleB = new long[listB.size()];\n\n    for(int i=0; i<sampleA.length; i++) {\n      sampleA[i] = listA.get(i).longValue();\n    }\n\n    for(int i=0; i<sampleB.length; i++) {\n      sampleB[i] = listB.get(i).longValue();\n    }\n\n    ChiSquareTest chiSquareTest = new ChiSquareTest();\n    double chiSquare = chiSquareTest.chiSquareDataSetsComparison(sampleA, sampleB);\n    double p = chiSquareTest.chiSquareTestDataSetsComparison(sampleA, sampleB);\n\n    Map<String,Number> m = new HashMap<>();\n    m.put(\"chisquare-statistic\", chiSquare);\n    m.put(\"p-value\", p);\n    return new Tuple(m);\n\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ChiSquareDataSetEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"7bf59a16bda85b19b68b639b395d143019a89fde","commitMessage":"@@@SOLR-14544: Fix or suppress warnings in solr/client/solrj/io/eval\n","date":"2020-06-08 09:31:51","modifiedFileCount":"110","status":"M","submitter":"Erick Erickson"},{"authorTime":"2020-06-08 22:03:07","codes":[{"authorDate":"2020-06-08 22:03:07","commitOrder":3,"curCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> listA = (List<Number>) value1;\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> listB = (List<Number>) value2;\n\n    long[] sampleA = new long[listA.size()];\n    long[] sampleB = new long[listB.size()];\n\n    for(int i=0; i<sampleA.length; i++) {\n      sampleA[i] = listA.get(i).longValue();\n    }\n\n    for(int i=0; i<sampleB.length; i++) {\n      sampleB[i] = listB.get(i).longValue();\n    }\n\n    GTest gTest = new GTest();\n    double g = gTest.gDataSetsComparison(sampleA, sampleB);\n    double p = gTest.gTestDataSetsComparison(sampleA, sampleB);\n\n   Tuple tuple = new Tuple();\n    tuple.put(\"G-statistic\", g);\n    tuple.put(StreamParams.P_VALUE, p);\n    return tuple;\n  }\n","date":"2020-06-08 22:03:07","endLine":64,"groupId":"10239","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"doWork","params":"(Objectvalue1@Objectvalue2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e8/3b4f907199e53a339416548329313ac9cdbe2b.src","preCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> listA = (List<Number>) value1;\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> listB = (List<Number>) value2;\n\n    long[] sampleA = new long[listA.size()];\n    long[] sampleB = new long[listB.size()];\n\n    for(int i=0; i<sampleA.length; i++) {\n      sampleA[i] = listA.get(i).longValue();\n    }\n\n    for(int i=0; i<sampleB.length; i++) {\n      sampleB[i] = listB.get(i).longValue();\n    }\n\n    GTest gTest = new GTest();\n    double g = gTest.gDataSetsComparison(sampleA, sampleB);\n    double p = gTest.gTestDataSetsComparison(sampleA, sampleB);\n\n    Map<String,Number> m = new HashMap<>();\n    m.put(\"G-statistic\", g);\n    m.put(\"p-value\", p);\n    return new Tuple(m);\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/GTestDataSetEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2020-06-08 22:03:07","commitOrder":3,"curCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> listA = (List<Number>) value1;\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> listB = (List<Number>) value2;\n\n    long[] sampleA = new long[listA.size()];\n    long[] sampleB = new long[listB.size()];\n\n    for(int i=0; i<sampleA.length; i++) {\n      sampleA[i] = listA.get(i).longValue();\n    }\n\n    for(int i=0; i<sampleB.length; i++) {\n      sampleB[i] = listB.get(i).longValue();\n    }\n\n    ChiSquareTest chiSquareTest = new ChiSquareTest();\n    double chiSquare = chiSquareTest.chiSquareDataSetsComparison(sampleA, sampleB);\n    double p = chiSquareTest.chiSquareTestDataSetsComparison(sampleA, sampleB);\n\n    Tuple tuple = new Tuple();\n    tuple.put(\"chisquare-statistic\", chiSquare);\n    tuple.put(StreamParams.P_VALUE, p);\n    return tuple;\n\n  }\n","date":"2020-06-08 22:03:07","endLine":65,"groupId":"10239","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"doWork","params":"(Objectvalue1@Objectvalue2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/26/ab319ce327b3bce9f55ff3739d60d6372adef5.src","preCode":"  public Object doWork(Object value1, Object value2) throws IOException {\n\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> listA = (List<Number>) value1;\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> listB = (List<Number>) value2;\n\n    long[] sampleA = new long[listA.size()];\n    long[] sampleB = new long[listB.size()];\n\n    for(int i=0; i<sampleA.length; i++) {\n      sampleA[i] = listA.get(i).longValue();\n    }\n\n    for(int i=0; i<sampleB.length; i++) {\n      sampleB[i] = listB.get(i).longValue();\n    }\n\n    ChiSquareTest chiSquareTest = new ChiSquareTest();\n    double chiSquare = chiSquareTest.chiSquareDataSetsComparison(sampleA, sampleB);\n    double p = chiSquareTest.chiSquareTestDataSetsComparison(sampleA, sampleB);\n\n    Map<String,Number> m = new HashMap<>();\n    m.put(\"chisquare-statistic\", chiSquare);\n    m.put(\"p-value\", p);\n    return new Tuple(m);\n\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/ChiSquareDataSetEvaluator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"30924f23d6834605b9bf2d24509755ff61c4e878","commitMessage":"@@@SOLR-14470: Add streaming expressions to /export handler.\n","date":"2020-06-08 22:03:07","modifiedFileCount":"75","status":"M","submitter":"Andrzej Bialecki"}]
