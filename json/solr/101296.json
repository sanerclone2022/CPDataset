[{"authorTime":"2017-08-03 23:26:51","codes":[{"authorDate":"2017-08-03 23:26:51","commitOrder":1,"curCode":"  public void testParamsToMap() {\n    final StandardNormalizer n1 = new StandardNormalizer();\n    n1.setAvg(2.0f);\n    n1.setStd(3.0f);\n\n    final Map<String, Object> params = n1.paramsToMap();\n    final StandardNormalizer n2 = (StandardNormalizer) Normalizer.getInstance(\n        new SolrResourceLoader(),\n        StandardNormalizer.class.getName(),\n        params);\n    assertEquals(n1.getAvg(), n2.getAvg(), 1e-6);\n    assertEquals(n1.getStd(), n2.getStd(), 1e-6);\n  }\n","date":"2017-08-03 23:26:51","endLine":147,"groupId":"6964","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParamsToMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c2/7dcadd865fcf2f677ecf68516b73fc79504281.src","preCode":"  public void testParamsToMap() {\n    final StandardNormalizer n1 = new StandardNormalizer();\n    n1.setAvg(2.0f);\n    n1.setStd(3.0f);\n\n    final Map<String, Object> params = n1.paramsToMap();\n    final StandardNormalizer n2 = (StandardNormalizer) Normalizer.getInstance(\n        new SolrResourceLoader(),\n        StandardNormalizer.class.getName(),\n        params);\n    assertEquals(n1.getAvg(), n2.getAvg(), 1e-6);\n    assertEquals(n1.getStd(), n2.getStd(), 1e-6);\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/norm/TestStandardNormalizer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"B"},{"authorDate":"2017-08-03 23:26:51","commitOrder":1,"curCode":"  public void testParamsToMap() {\n    final MinMaxNormalizer n1 = new MinMaxNormalizer();\n    n1.setMin(5.0f);\n    n1.setMax(10.0f);\n\n    final Map<String,Object> params = n1.paramsToMap();\n    final MinMaxNormalizer n2 = (MinMaxNormalizer) Normalizer.getInstance(\n        new SolrResourceLoader(),\n        MinMaxNormalizer.class.getName(),\n        params);\n    assertEquals(n1.getMin(), n2.getMin(), 1e-6);\n    assertEquals(n1.getMax(), n2.getMax(), 1e-6);\n  }\n","date":"2017-08-03 23:26:51","endLine":135,"groupId":"39918","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParamsToMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f5/e00264d50d0df5e347fe6daa1487473897ab7b.src","preCode":"  public void testParamsToMap() {\n    final MinMaxNormalizer n1 = new MinMaxNormalizer();\n    n1.setMin(5.0f);\n    n1.setMax(10.0f);\n\n    final Map<String,Object> params = n1.paramsToMap();\n    final MinMaxNormalizer n2 = (MinMaxNormalizer) Normalizer.getInstance(\n        new SolrResourceLoader(),\n        MinMaxNormalizer.class.getName(),\n        params);\n    assertEquals(n1.getMin(), n2.getMin(), 1e-6);\n    assertEquals(n1.getMax(), n2.getMax(), 1e-6);\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/norm/TestMinMaxNormalizer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"B"}],"commitId":"74a0aac1f556d430e257df14ff63c4588e2da224","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-08-03 23:26:51","modifiedFileCount":"5","status":"B","submitter":"Karl Wright"},{"authorTime":"2020-12-03 01:24:36","codes":[{"authorDate":"2020-12-03 01:24:36","commitOrder":2,"curCode":"  public void testParamsToMap() {\n    final StandardNormalizer n1 = new StandardNormalizer();\n    n1.setAvg(2.0f);\n    n1.setStd(3.0f);\n\n    final Map<String, Object> params = n1.paramsToMap();\n    final StandardNormalizer n2 = (StandardNormalizer) Normalizer.getInstance(\n        new SolrResourceLoader(Paths.get(\"\").toAbsolutePath()),\n        StandardNormalizer.class.getName(),\n        params);\n    assertEquals(n1.getAvg(), n2.getAvg(), 1e-6);\n    assertEquals(n1.getStd(), n2.getStd(), 1e-6);\n  }\n","date":"2020-12-03 01:24:36","endLine":138,"groupId":"101296","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testParamsToMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bc/9433741c85a161ff68c96905f5f9b2f72aacbe.src","preCode":"  public void testParamsToMap() {\n    final StandardNormalizer n1 = new StandardNormalizer();\n    n1.setAvg(2.0f);\n    n1.setStd(3.0f);\n\n    final Map<String, Object> params = n1.paramsToMap();\n    final StandardNormalizer n2 = (StandardNormalizer) Normalizer.getInstance(\n        new SolrResourceLoader(),\n        StandardNormalizer.class.getName(),\n        params);\n    assertEquals(n1.getAvg(), n2.getAvg(), 1e-6);\n    assertEquals(n1.getStd(), n2.getStd(), 1e-6);\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/norm/TestStandardNormalizer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2020-12-03 01:24:36","commitOrder":2,"curCode":"  public void testParamsToMap() {\n    final MinMaxNormalizer n1 = new MinMaxNormalizer();\n    n1.setMin(5.0f);\n    n1.setMax(10.0f);\n\n    final Map<String,Object> params = n1.paramsToMap();\n    final MinMaxNormalizer n2 = (MinMaxNormalizer) Normalizer.getInstance(\n        new SolrResourceLoader(Paths.get(\"\").toAbsolutePath()),\n        MinMaxNormalizer.class.getName(),\n        params);\n    assertEquals(n1.getMin(), n2.getMin(), 1e-6);\n    assertEquals(n1.getMax(), n2.getMax(), 1e-6);\n  }\n","date":"2020-12-03 01:24:36","endLine":132,"groupId":"101296","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testParamsToMap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/52/e39b538e69c99b263788dadf7ed6edbc0fa6b0.src","preCode":"  public void testParamsToMap() {\n    final MinMaxNormalizer n1 = new MinMaxNormalizer();\n    n1.setMin(5.0f);\n    n1.setMax(10.0f);\n\n    final Map<String,Object> params = n1.paramsToMap();\n    final MinMaxNormalizer n2 = (MinMaxNormalizer) Normalizer.getInstance(\n        new SolrResourceLoader(),\n        MinMaxNormalizer.class.getName(),\n        params);\n    assertEquals(n1.getMin(), n2.getMin(), 1e-6);\n    assertEquals(n1.getMax(), n2.getMax(), 1e-6);\n  }\n","realPath":"solr/contrib/ltr/src/test/org/apache/solr/ltr/norm/TestMinMaxNormalizer.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"2e6a02394ec4eea6ba72d5bc2bf02c0139a54f39","commitMessage":"@@@SOLR-14934: Refactored duplicate \"Solr Home\" logic into a single place to eliminate risk of tests using divergent values for a single solr node.\n","date":"2020-12-03 01:24:36","modifiedFileCount":"25","status":"M","submitter":"Chris Hostetter"}]
