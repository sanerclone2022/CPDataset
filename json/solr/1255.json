[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void write(String str, int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      str.getChars(off, off+len, buf, pos);\n      pos += len;\n    } else if (len<BUFSIZE) {\n      \r\n      str.getChars(off, off+space, buf, pos);\n      sink.write(buf, 0, buf.length);\n      str.getChars(off+space, off+len, buf, 0);\n      pos = len-space;\n    } else {\n      sink.write(buf,0,pos);  \r\n      pos=0;\n      \r\n      sink.write(str, off, len);\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":109,"groupId":"8530","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"write","params":"(Stringstr@intoff@intlen)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/a49dfd2d8d91dd270532357baf4958dbcad9e6.src","preCode":"  public void write(String str, int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      str.getChars(off, off+len, buf, pos);\n      pos += len;\n    } else if (len<BUFSIZE) {\n      \r\n      str.getChars(off, off+space, buf, pos);\n      sink.write(buf, 0, buf.length);\n      str.getChars(off+space, off+len, buf, 0);\n      pos = len-space;\n    } else {\n      sink.write(buf,0,pos);  \r\n      pos=0;\n      \r\n      sink.write(str, off, len);\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/FastWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":1,"curCode":"  public void write(byte arr[], int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      System.arraycopy(arr, off, buf, pos, len);\n      pos += len;\n    } else if (len<buf.length) {\n      \r\n      System.arraycopy(arr, off, buf, pos, space);\n      out.write(buf);\n      written += buf.length;\n      pos = len-space;\n      System.arraycopy(arr, off+space, buf, 0, pos);\n    } else {\n      if (pos>0) {\n        out.write(buf,0,pos);  \r\n        written += pos;\n        pos=0;\n      }\n      \r\n      out.write(arr, off, len);\n      written += len;            \n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":90,"groupId":"45288","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(bytearr[]@intoff@intlen)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f7/efef9ef843e10d50b47d6011c922523b9f453e.src","preCode":"  public void write(byte arr[], int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      System.arraycopy(arr, off, buf, pos, len);\n      pos += len;\n    } else if (len<buf.length) {\n      \r\n      System.arraycopy(arr, off, buf, pos, space);\n      out.write(buf);\n      written += buf.length;\n      pos = len-space;\n      System.arraycopy(arr, off+space, buf, 0, pos);\n    } else {\n      if (pos>0) {\n        out.write(buf,0,pos);  \r\n        written += pos;\n        pos=0;\n      }\n      \r\n      out.write(arr, off, len);\n      written += len;            \n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"429093b236e30940d69edc8869346819c337cd10","commitMessage":"@@@SOLR-2452: Rewrote Solr build system (tighter integration with the Lucene build system) and restructured Solr internal and contrib modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1144761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-07-10 07:01:53","modifiedFileCount":"0","status":"B","submitter":"Steven Rowe"},{"authorTime":"2012-08-10 02:53:19","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":2,"curCode":"  public void write(String str, int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      str.getChars(off, off+len, buf, pos);\n      pos += len;\n    } else if (len<BUFSIZE) {\n      \r\n      str.getChars(off, off+space, buf, pos);\n      sink.write(buf, 0, buf.length);\n      str.getChars(off+space, off+len, buf, 0);\n      pos = len-space;\n    } else {\n      sink.write(buf,0,pos);  \r\n      pos=0;\n      \r\n      sink.write(str, off, len);\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":109,"groupId":"8530","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"write","params":"(Stringstr@intoff@intlen)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/a49dfd2d8d91dd270532357baf4958dbcad9e6.src","preCode":"  public void write(String str, int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      str.getChars(off, off+len, buf, pos);\n      pos += len;\n    } else if (len<BUFSIZE) {\n      \r\n      str.getChars(off, off+space, buf, pos);\n      sink.write(buf, 0, buf.length);\n      str.getChars(off+space, off+len, buf, 0);\n      pos = len-space;\n    } else {\n      sink.write(buf,0,pos);  \r\n      pos=0;\n      \r\n      sink.write(str, off, len);\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/FastWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"N"},{"authorDate":"2012-08-10 02:53:19","commitOrder":2,"curCode":"  public void write(byte arr[], int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      System.arraycopy(arr, off, buf, pos, len);\n      pos += len;\n    } else if (len<buf.length) {\n      \r\n      System.arraycopy(arr, off, buf, pos, space);\n      flush(buf, 0, buf.length);\n      written += buf.length;\n      pos = len-space;\n      System.arraycopy(arr, off+space, buf, 0, pos);\n    } else {\n      if (pos>0) {\n        flush(buf,0,pos);  \r\n        written += pos;\n        pos=0;\n      }\n      \r\n      flush(arr, off, len);\n      written += len;            \n    }\n  }\n","date":"2012-08-10 02:53:19","endLine":90,"groupId":"45288","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(bytearr[]@intoff@intlen)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2d/d565d963885b50d7abdf228f8415da6ead3b10.src","preCode":"  public void write(byte arr[], int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      System.arraycopy(arr, off, buf, pos, len);\n      pos += len;\n    } else if (len<buf.length) {\n      \r\n      System.arraycopy(arr, off, buf, pos, space);\n      out.write(buf);\n      written += buf.length;\n      pos = len-space;\n      System.arraycopy(arr, off+space, buf, 0, pos);\n    } else {\n      if (pos>0) {\n        out.write(buf,0,pos);  \r\n        written += pos;\n        pos=0;\n      }\n      \r\n      out.write(arr, off, len);\n      written += len;            \n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"932901bb010c5a185a94db9e1ce920f355dac0f6","commitMessage":"@@@SOLR-3715: remove sync around tlog serialization\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1371379 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-10 02:53:19","modifiedFileCount":"4","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2012-08-18 08:15:04","codes":[{"authorDate":"2011-07-10 07:01:53","commitOrder":3,"curCode":"  public void write(String str, int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      str.getChars(off, off+len, buf, pos);\n      pos += len;\n    } else if (len<BUFSIZE) {\n      \r\n      str.getChars(off, off+space, buf, pos);\n      sink.write(buf, 0, buf.length);\n      str.getChars(off+space, off+len, buf, 0);\n      pos = len-space;\n    } else {\n      sink.write(buf,0,pos);  \r\n      pos=0;\n      \r\n      sink.write(str, off, len);\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":109,"groupId":"8530","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"write","params":"(Stringstr@intoff@intlen)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4e/a49dfd2d8d91dd270532357baf4958dbcad9e6.src","preCode":"  public void write(String str, int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      str.getChars(off, off+len, buf, pos);\n      pos += len;\n    } else if (len<BUFSIZE) {\n      \r\n      str.getChars(off, off+space, buf, pos);\n      sink.write(buf, 0, buf.length);\n      str.getChars(off+space, off+len, buf, 0);\n      pos = len-space;\n    } else {\n      sink.write(buf,0,pos);  \r\n      pos=0;\n      \r\n      sink.write(str, off, len);\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/FastWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"N"},{"authorDate":"2012-08-18 08:15:04","commitOrder":3,"curCode":"  public void write(byte arr[], int off, int len) throws IOException {\n\n    for(;;) {\n      int space = buf.length - pos;\n\n      if (len <= space) {\n        System.arraycopy(arr, off, buf, pos, len);\n        pos += len;\n        return;\n      } else if (len > buf.length) {\n        if (pos>0) {\n          flush(buf,0,pos);  \r\n          written += pos;\n          pos=0;\n        }\n        \r\n        flush(arr, off, len);\n        written += len;\n        return;\n      }\n\n      \r\n      \r\n      \r\n\n      System.arraycopy(arr, off, buf, pos, space);\n      written += buf.length;  \r\n      flush(buf, 0, buf.length);\n      pos = 0;\n      off += space;\n      len -= space;\n    }\n  }\n","date":"2012-08-18 08:15:04","endLine":100,"groupId":"29632","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(bytearr[]@intoff@intlen)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/89/c3fa6e4a8d0c946313e9388ad3762bc8821cd8.src","preCode":"  public void write(byte arr[], int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      System.arraycopy(arr, off, buf, pos, len);\n      pos += len;\n    } else if (len<buf.length) {\n      \r\n      System.arraycopy(arr, off, buf, pos, space);\n      flush(buf, 0, buf.length);\n      written += buf.length;\n      pos = len-space;\n      System.arraycopy(arr, off+space, buf, 0, pos);\n    } else {\n      if (pos>0) {\n        flush(buf,0,pos);  \r\n        written += pos;\n        pos=0;\n      }\n      \r\n      flush(arr, off, len);\n      written += len;            \n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"84a8768b5d036ae99e5f383fd1bd4906e0dca038","commitMessage":"@@@SOLR-3715: fix FastOutputStream.  FastWriter when buffer sizes can change\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1374480 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-18 08:15:04","modifiedFileCount":"3","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2012-08-18 08:15:04","codes":[{"authorDate":"2018-06-09 21:40:55","commitOrder":4,"curCode":"  public void write(String str, int off, int len) throws IOException {\n    for(;;) {\n      int space = buf.length - pos;\n\n      if (len <= space) {\n        str.getChars(off, off+len, buf, pos);\n        pos += len;\n        return;\n      } else if (len > buf.length) {\n        if (pos>0) {\n          flush(buf,0,pos);  \r\n          pos=0;\n        }\n        \r\n        flush(str, off, len);\n        return;\n      }\n\n      \r\n      \r\n      \r\n\n      str.getChars(off, off+space, buf, pos);\n      flush(buf, 0, buf.length);\n      pos = 0;\n      off += space;\n      len -= space;\n    }\n  }\n","date":"2018-06-09 21:40:55","endLine":130,"groupId":"1255","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"write","params":"(Stringstr@intoff@intlen)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/25/7562420b611493d7e2084fceae217810f82671.src","preCode":"  public void write(String str, int off, int len) throws IOException {\n    int space = buf.length - pos;\n    if (len < space) {\n      str.getChars(off, off+len, buf, pos);\n      pos += len;\n    } else if (len<BUFSIZE) {\n      \r\n      str.getChars(off, off+space, buf, pos);\n      sink.write(buf, 0, buf.length);\n      str.getChars(off+space, off+len, buf, 0);\n      pos = len-space;\n    } else {\n      sink.write(buf,0,pos);  \r\n      pos=0;\n      \r\n      sink.write(str, off, len);\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/FastWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2012-08-18 08:15:04","commitOrder":4,"curCode":"  public void write(byte arr[], int off, int len) throws IOException {\n\n    for(;;) {\n      int space = buf.length - pos;\n\n      if (len <= space) {\n        System.arraycopy(arr, off, buf, pos, len);\n        pos += len;\n        return;\n      } else if (len > buf.length) {\n        if (pos>0) {\n          flush(buf,0,pos);  \r\n          written += pos;\n          pos=0;\n        }\n        \r\n        flush(arr, off, len);\n        written += len;\n        return;\n      }\n\n      \r\n      \r\n      \r\n\n      System.arraycopy(arr, off, buf, pos, space);\n      written += buf.length;  \r\n      flush(buf, 0, buf.length);\n      pos = 0;\n      off += space;\n      len -= space;\n    }\n  }\n","date":"2012-08-18 08:15:04","endLine":100,"groupId":"1255","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(bytearr[]@intoff@intlen)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/89/c3fa6e4a8d0c946313e9388ad3762bc8821cd8.src","preCode":"  public void write(byte arr[], int off, int len) throws IOException {\n\n    for(;;) {\n      int space = buf.length - pos;\n\n      if (len <= space) {\n        System.arraycopy(arr, off, buf, pos, len);\n        pos += len;\n        return;\n      } else if (len > buf.length) {\n        if (pos>0) {\n          flush(buf,0,pos);  \r\n          written += pos;\n          pos=0;\n        }\n        \r\n        flush(arr, off, len);\n        written += len;\n        return;\n      }\n\n      \r\n      \r\n      \r\n\n      System.arraycopy(arr, off, buf, pos, space);\n      written += buf.length;  \r\n      flush(buf, 0, buf.length);\n      pos = 0;\n      off += space;\n      len -= space;\n    }\n  }\n","realPath":"solr/solrj/src/java/org/apache/solr/common/util/FastOutputStream.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"N"}],"commitId":"944b24fab8a4f53f2a60c7754a878c86267eaceb","commitMessage":"@@@SOLR-12455: Refactor JSON serialization code into SolrJ package\n","date":"2018-06-09 21:40:55","modifiedFileCount":"13","status":"M","submitter":"Noble Paul"}]
