[{"authorTime":"2015-02-02 01:36:25","codes":[{"authorDate":"2015-02-02 01:36:25","commitOrder":2,"curCode":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntOpenHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new int[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","date":"2015-02-02 01:36:25","endLine":1867,"groupId":"21760","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"IntIntStrategy","params":"(intmaxDoc@intsize@StringcollapseField@Stringfield@intnullValue@intnullPolicy@booleanmax@booleanneedsScores@IntIntOpenHashMapboostDocs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/47/bc80f534c0820645c7054aec9787ecdfb70ce4.src","preCode":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntOpenHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new int[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1838,"status":"MB"},{"authorDate":"2015-02-02 01:36:25","commitOrder":2,"curCode":"    public IntFloatStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntOpenHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new float[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxFloatComp();\n        this.nullCompVal = -Float.MAX_VALUE;\n      } else {\n        comp = new MinFloatComp();\n        this.nullCompVal = Float.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","date":"2015-02-02 01:36:25","endLine":1967,"groupId":"21760","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"IntFloatStrategy","params":"(intmaxDoc@intsize@StringcollapseField@Stringfield@intnullValue@intnullPolicy@booleanmax@booleanneedsScores@IntIntOpenHashMapboostDocs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/47/bc80f534c0820645c7054aec9787ecdfb70ce4.src","preCode":"    public IntFloatStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntOpenHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new float[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxFloatComp();\n        this.nullCompVal = -Float.MAX_VALUE;\n      } else {\n        comp = new MinFloatComp();\n        this.nullCompVal = Float.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1938,"status":"B"}],"commitId":"e4ac9ae2273c199b961a7af03df10c487d22e869","commitMessage":"@@@SOLR-7068: Collapse on numeric field breaks when min/max values are negative.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1656335 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-02-02 01:36:25","modifiedFileCount":"3","status":"M","submitter":"Joel Bernstein"},{"authorTime":"2015-08-24 17:53:04","codes":[{"authorDate":"2015-08-24 17:53:04","commitOrder":3,"curCode":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new int[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","date":"2015-08-24 17:53:04","endLine":1867,"groupId":"21760","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"IntIntStrategy","params":"(intmaxDoc@intsize@StringcollapseField@Stringfield@intnullValue@intnullPolicy@booleanmax@booleanneedsScores@IntIntHashMapboostDocs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cb/1097ee243a286164be969a62e5166607cd4828.src","preCode":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntOpenHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new int[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1838,"status":"M"},{"authorDate":"2015-08-24 17:53:04","commitOrder":3,"curCode":"    public IntFloatStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new float[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxFloatComp();\n        this.nullCompVal = -Float.MAX_VALUE;\n      } else {\n        comp = new MinFloatComp();\n        this.nullCompVal = Float.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","date":"2015-08-24 17:53:04","endLine":1968,"groupId":"21760","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"IntFloatStrategy","params":"(intmaxDoc@intsize@StringcollapseField@Stringfield@intnullValue@intnullPolicy@booleanmax@booleanneedsScores@IntIntHashMapboostDocs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cb/1097ee243a286164be969a62e5166607cd4828.src","preCode":"    public IntFloatStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntOpenHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new float[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxFloatComp();\n        this.nullCompVal = -Float.MAX_VALUE;\n      } else {\n        comp = new MinFloatComp();\n        this.nullCompVal = Float.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1939,"status":"M"}],"commitId":"c1dc2fb6a6969fc61460fa0bd7459fb45a3e173a","commitMessage":"@@@SOLR-7790.  SOLR-7792.  SOLR-7791: Update Carrot2 clustering component to version 3.10.3. Upgrade HPPC library to version 0.7.1.  morfologik-stemming to version 1.10.0. (Dawid Weiss)\n\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1697345 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-08-24 17:53:04","modifiedFileCount":"10","status":"M","submitter":"Dawid Weiss"},{"authorTime":"2015-11-13 06:52:06","codes":[{"authorDate":"2015-11-13 06:52:06","commitOrder":4,"curCode":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          int nullValue,\n                          int nullPolicy,\n                          GroupHeadSelector groupHeadSelector,\n                          boolean needsScores,\n                          IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostDocs);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new int[size];\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n      \n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","date":"2015-11-13 06:52:06","endLine":2056,"groupId":"12697","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"IntIntStrategy","params":"(intmaxDoc@intsize@StringcollapseField@intnullValue@intnullPolicy@GroupHeadSelectorgroupHeadSelector@booleanneedsScores@IntIntHashMapboostDocs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/52/2de9ccf2cd80f51acdcd2eda1677caa0e26c1e.src","preCode":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new int[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2027,"status":"M"},{"authorDate":"2015-11-13 06:52:06","commitOrder":4,"curCode":"    public IntFloatStrategy(int maxDoc,\n                            int size,\n                            String collapseField,\n                            int nullValue,\n                            int nullPolicy,\n                            GroupHeadSelector groupHeadSelector,\n                            boolean needsScores,\n                            IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostDocs);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new float[size];\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n      \n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxFloatComp();\n        this.nullCompVal = -Float.MAX_VALUE;\n      } else {\n        comp = new MinFloatComp();\n        this.nullCompVal = Float.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","date":"2015-11-13 06:52:06","endLine":2158,"groupId":"39608","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"IntFloatStrategy","params":"(intmaxDoc@intsize@StringcollapseField@intnullValue@intnullPolicy@GroupHeadSelectorgroupHeadSelector@booleanneedsScores@IntIntHashMapboostDocs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/52/2de9ccf2cd80f51acdcd2eda1677caa0e26c1e.src","preCode":"    public IntFloatStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          String field,\n                          int nullValue,\n                          int nullPolicy,\n                          boolean max,\n                          boolean needsScores,\n                          IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, field, nullValue, nullPolicy, max, needsScores, boostDocs);\n\n      this.testValues = new float[size];\n      this.docs = new int[size];\n\n      if(max) {\n        comp = new MaxFloatComp();\n        this.nullCompVal = -Float.MAX_VALUE;\n      } else {\n        comp = new MinFloatComp();\n        this.nullCompVal = Float.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2129,"status":"M"}],"commitId":"918476e0ac207fc2a0454e9047857cd78f68fa4a","commitMessage":"@@@SOLR-6168: Add a 'sort' local param to the collapse QParser to support using complex sort options to select the representitive doc for each collapsed group\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1714133 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-11-13 06:52:06","modifiedFileCount":"4","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2020-04-10 16:24:10","codes":[{"authorDate":"2020-04-10 16:24:10","commitOrder":5,"curCode":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          int nullValue,\n                          int nullPolicy,\n                          GroupHeadSelector groupHeadSelector,\n                          boolean needsScores,\n                          IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostDocs);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new IntIntDynamicMap(size, 0);\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n\n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n    }\n","date":"2020-04-10 16:24:10","endLine":2192,"groupId":"43285","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"IntIntStrategy","params":"(intmaxDoc@intsize@StringcollapseField@intnullValue@intnullPolicy@GroupHeadSelectorgroupHeadSelector@booleanneedsScores@IntIntHashMapboostDocs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/61/e4bed5c1c6853f002e8ee7eef39a1eae46964e.src","preCode":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          int nullValue,\n                          int nullPolicy,\n                          GroupHeadSelector groupHeadSelector,\n                          boolean needsScores,\n                          IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostDocs);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new int[size];\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n      \n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2170,"status":"M"},{"authorDate":"2020-04-10 16:24:10","commitOrder":5,"curCode":"    public IntFloatStrategy(int maxDoc,\n                            int size,\n                            String collapseField,\n                            int nullValue,\n                            int nullPolicy,\n                            GroupHeadSelector groupHeadSelector,\n                            boolean needsScores,\n                            IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostDocs);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new IntFloatDynamicMap(size, 0.0f);\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n\n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxFloatComp();\n        this.nullCompVal = -Float.MAX_VALUE;\n      } else {\n        comp = new MinFloatComp();\n        this.nullCompVal = Float.MAX_VALUE;\n      }\n    }\n","date":"2020-04-10 16:24:10","endLine":2283,"groupId":"43285","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"IntFloatStrategy","params":"(intmaxDoc@intsize@StringcollapseField@intnullValue@intnullPolicy@GroupHeadSelectorgroupHeadSelector@booleanneedsScores@IntIntHashMapboostDocs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/61/e4bed5c1c6853f002e8ee7eef39a1eae46964e.src","preCode":"    public IntFloatStrategy(int maxDoc,\n                            int size,\n                            String collapseField,\n                            int nullValue,\n                            int nullPolicy,\n                            GroupHeadSelector groupHeadSelector,\n                            boolean needsScores,\n                            IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostDocs);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new float[size];\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n      \n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxFloatComp();\n        this.nullCompVal = -Float.MAX_VALUE;\n      } else {\n        comp = new MinFloatComp();\n        this.nullCompVal = Float.MAX_VALUE;\n      }\n\n      if(needsScores) {\n        this.scores = new float[size];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2261,"status":"M"}],"commitId":"adbd714b37d794e9aa7615e61c431e42162c1d3c","commitMessage":"@@@SOLR-14365: CollapsingQParser - Avoiding always allocate int[] and float[] with size equals to number of unique values (WIP) (#1395)\n\n","date":"2020-04-10 16:24:10","modifiedFileCount":"1","status":"M","submitter":"Cao Manh Dat"},{"authorTime":"2021-01-06 01:00:56","codes":[{"authorDate":"2021-01-06 01:00:56","commitOrder":6,"curCode":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          int nullValue,\n                          int nullPolicy,\n                          GroupHeadSelector groupHeadSelector,\n                          boolean needsScores,\n                          BoostedDocsCollector boostedDocsCollector) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostedDocsCollector);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new IntIntDynamicMap(size, 0);\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n\n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n    }\n","date":"2021-01-06 01:00:56","endLine":2131,"groupId":"43285","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"IntIntStrategy","params":"(intmaxDoc@intsize@StringcollapseField@intnullValue@intnullPolicy@GroupHeadSelectorgroupHeadSelector@booleanneedsScores@BoostedDocsCollectorboostedDocsCollector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/25/6ec45dfccf4b7d94c5215e8e7a648432ac563d.src","preCode":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          int nullValue,\n                          int nullPolicy,\n                          GroupHeadSelector groupHeadSelector,\n                          boolean needsScores,\n                          IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostDocs);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new IntIntDynamicMap(size, 0);\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n\n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2109,"status":"M"},{"authorDate":"2021-01-06 01:00:56","commitOrder":6,"curCode":"    public IntFloatStrategy(int maxDoc,\n                            int size,\n                            String collapseField,\n                            int nullValue,\n                            int nullPolicy,\n                            GroupHeadSelector groupHeadSelector,\n                            boolean needsScores,\n                            BoostedDocsCollector boostedDocsCollector) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostedDocsCollector);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new IntFloatDynamicMap(size, 0.0f);\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n\n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxFloatComp();\n        this.nullCompVal = -Float.MAX_VALUE;\n      } else {\n        comp = new MinFloatComp();\n        this.nullCompVal = Float.MAX_VALUE;\n      }\n    }\n","date":"2021-01-06 01:00:56","endLine":2215,"groupId":"43285","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"IntFloatStrategy","params":"(intmaxDoc@intsize@StringcollapseField@intnullValue@intnullPolicy@GroupHeadSelectorgroupHeadSelector@booleanneedsScores@BoostedDocsCollectorboostedDocsCollector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/25/6ec45dfccf4b7d94c5215e8e7a648432ac563d.src","preCode":"    public IntFloatStrategy(int maxDoc,\n                            int size,\n                            String collapseField,\n                            int nullValue,\n                            int nullPolicy,\n                            GroupHeadSelector groupHeadSelector,\n                            boolean needsScores,\n                            IntIntHashMap boostDocs) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostDocs);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new IntFloatDynamicMap(size, 0.0f);\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n\n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxFloatComp();\n        this.nullCompVal = -Float.MAX_VALUE;\n      } else {\n        comp = new MinFloatComp();\n        this.nullCompVal = Float.MAX_VALUE;\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2193,"status":"M"}],"commitId":"a48e937f599bc1487df3321c490589b0d8820616","commitMessage":"@@@SOLR-15048: Fixed collapse parser behavior when dealing with docs boosted by QueryElevationComponent that are in the null group to treat them consistently regardless of collapse field type or group head selector\n","date":"2021-01-06 01:00:56","modifiedFileCount":"2","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2021-01-07 01:07:32","codes":[{"authorDate":"2021-01-07 01:07:32","commitOrder":7,"curCode":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          int nullPolicy,\n                          GroupHeadSelector groupHeadSelector,\n                          boolean needsScores,\n                          BoostedDocsCollector boostedDocsCollector) throws IOException {\n\n      super(maxDoc, size, collapseField, nullPolicy, needsScores, boostedDocsCollector);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new IntIntDynamicMap(size, 0);\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n\n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n    }\n","date":"2021-01-07 01:07:32","endLine":2084,"groupId":"102134","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"IntIntStrategy","params":"(intmaxDoc@intsize@StringcollapseField@intnullPolicy@GroupHeadSelectorgroupHeadSelector@booleanneedsScores@BoostedDocsCollectorboostedDocsCollector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/ccaed8782b67bd1d6857cfc7865fef39b5701e.src","preCode":"    public IntIntStrategy(int maxDoc,\n                          int size,\n                          String collapseField,\n                          int nullValue,\n                          int nullPolicy,\n                          GroupHeadSelector groupHeadSelector,\n                          boolean needsScores,\n                          BoostedDocsCollector boostedDocsCollector) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostedDocsCollector);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new IntIntDynamicMap(size, 0);\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n\n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxIntComp();\n        this.nullCompVal = Integer.MIN_VALUE;\n      } else {\n        comp = new MinIntComp();\n        this.nullCompVal = Integer.MAX_VALUE;\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2063,"status":"M"},{"authorDate":"2021-01-07 01:07:32","commitOrder":7,"curCode":"    public IntFloatStrategy(int maxDoc,\n                            int size,\n                            String collapseField,\n                            int nullPolicy,\n                            GroupHeadSelector groupHeadSelector,\n                            boolean needsScores,\n                            BoostedDocsCollector boostedDocsCollector) throws IOException {\n\n      super(maxDoc, size, collapseField, nullPolicy, needsScores, boostedDocsCollector);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new IntFloatDynamicMap(size, 0.0f);\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n\n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxFloatComp();\n        this.nullCompVal = -Float.MAX_VALUE;\n      } else {\n        comp = new MinFloatComp();\n        this.nullCompVal = Float.MAX_VALUE;\n      }\n    }\n","date":"2021-01-07 01:07:32","endLine":2170,"groupId":"102134","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"IntFloatStrategy","params":"(intmaxDoc@intsize@StringcollapseField@intnullPolicy@GroupHeadSelectorgroupHeadSelector@booleanneedsScores@BoostedDocsCollectorboostedDocsCollector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a9/ccaed8782b67bd1d6857cfc7865fef39b5701e.src","preCode":"    public IntFloatStrategy(int maxDoc,\n                            int size,\n                            String collapseField,\n                            int nullValue,\n                            int nullPolicy,\n                            GroupHeadSelector groupHeadSelector,\n                            boolean needsScores,\n                            BoostedDocsCollector boostedDocsCollector) throws IOException {\n\n      super(maxDoc, size, collapseField, nullValue, nullPolicy, needsScores, boostedDocsCollector);\n      this.field = groupHeadSelector.selectorText;\n      this.testValues = new IntFloatDynamicMap(size, 0.0f);\n\n      assert GroupHeadSelectorType.MIN_MAX.contains(groupHeadSelector.type);\n\n      if (GroupHeadSelectorType.MAX.equals(groupHeadSelector.type)) {\n        comp = new MaxFloatComp();\n        this.nullCompVal = -Float.MAX_VALUE;\n      } else {\n        comp = new MinFloatComp();\n        this.nullCompVal = Float.MAX_VALUE;\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2149,"status":"M"}],"commitId":"07071ca8e107d184f9dfc2a2271b5dcaaceda650","commitMessage":"@@@SOLR-15047: Fix collapse parser behavior when collapsing on numeric fields to differentiate '0' group from null group\n","date":"2021-01-07 01:07:32","modifiedFileCount":"2","status":"M","submitter":"Chris Hostetter"}]
