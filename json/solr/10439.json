[{"authorTime":"2013-03-14 12:56:45","codes":[{"authorDate":"2012-12-23 18:01:08","commitOrder":2,"curCode":"  public void testSetNullUpdates() throws Exception {\n    SolrServer solrServer = getSolrServer();\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"testSetNullUpdates\");\n    doc.addField(\"single_s\", \"test-value\");\n    doc.addField(\"multi_ss\", Arrays.asList(\"first\", \"second\"));\n    solrServer.add(doc);\n    solrServer.commit(true, true);\n    doc.removeField(\"single_s\");\n    doc.removeField(\"multi_ss\");\n    Map<String, Object> map = Maps.newHashMap();\n    map.put(\"set\", null);\n    doc.addField(\"multi_ss\", map);\n    solrServer.add(doc);\n    solrServer.commit(true, true);\n    QueryResponse response = solrServer.query(new SolrQuery(\"id:testSetNullUpdates\"));\n    assertNotNull(\"Entire doc was replaced because null update was not written\", response.getResults().get(0).getFieldValue(\"single_s\"));\n    assertNull(\"Null update failed. Value still exists in document\", response.getResults().get(0).getFieldValue(\"multi_ss\"));\n  }\n","date":"2012-12-23 18:01:08","endLine":1436,"groupId":"27732","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSetNullUpdates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d4/53a986b7f24332adafacb11e1c7d173254f564.src","preCode":"  public void testSetNullUpdates() throws Exception {\n    SolrServer solrServer = getSolrServer();\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"testSetNullUpdates\");\n    doc.addField(\"single_s\", \"test-value\");\n    doc.addField(\"multi_ss\", Arrays.asList(\"first\", \"second\"));\n    solrServer.add(doc);\n    solrServer.commit(true, true);\n    doc.removeField(\"single_s\");\n    doc.removeField(\"multi_ss\");\n    Map<String, Object> map = Maps.newHashMap();\n    map.put(\"set\", null);\n    doc.addField(\"multi_ss\", map);\n    solrServer.add(doc);\n    solrServer.commit(true, true);\n    QueryResponse response = solrServer.query(new SolrQuery(\"id:testSetNullUpdates\"));\n    assertNotNull(\"Entire doc was replaced because null update was not written\", response.getResults().get(0).getFieldValue(\"single_s\"));\n    assertNull(\"Null update failed. Value still exists in document\", response.getResults().get(0).getFieldValue(\"multi_ss\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1418,"status":"NB"},{"authorDate":"2013-03-14 12:56:45","commitOrder":2,"curCode":"  public void testSetNullUpdateOrder() throws Exception {\n    SolrServer solrServer = getSolrServer();\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"testSetNullUpdateOrder\");\n    doc.addField(\"single_s\", \"test-value\");\n    doc.addField(\"multi_ss\", Arrays.asList(\"first\", \"second\"));\n    solrServer.add(doc);\n    solrServer.commit(true, true);\n\n    Map<String, Object> map = Maps.newHashMap();\n    map.put(\"set\", null);\n    doc = new SolrInputDocument();\n    doc.addField(\"multi_ss\", map);\n    doc.addField(\"id\", \"testSetNullUpdateOrder\");\n    doc.addField(\"single_s\", \"test-value2\");\n    solrServer.add(doc);\n    solrServer.commit();\n\n    QueryResponse response = solrServer.query(new SolrQuery(\"id:testSetNullUpdateOrder\"));\n    assertEquals(\"Field included after set null=true not updated via atomic update\", \"test-value2\",\n        response.getResults().get(0).getFieldValue(\"single_s\"));\n  }\n","date":"2013-03-14 12:56:45","endLine":1463,"groupId":"551","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetNullUpdateOrder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d7/3038f793ff6b9baf45f5d73da724eeb02b5e1b.src","preCode":"  public void testSetNullUpdateOrder() throws Exception {\n    SolrServer solrServer = getSolrServer();\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"testSetNullUpdateOrder\");\n    doc.addField(\"single_s\", \"test-value\");\n    doc.addField(\"multi_ss\", Arrays.asList(\"first\", \"second\"));\n    solrServer.add(doc);\n    solrServer.commit(true, true);\n\n    Map<String, Object> map = Maps.newHashMap();\n    map.put(\"set\", null);\n    doc = new SolrInputDocument();\n    doc.addField(\"multi_ss\", map);\n    doc.addField(\"id\", \"testSetNullUpdateOrder\");\n    doc.addField(\"single_s\", \"test-value2\");\n    solrServer.add(doc);\n    solrServer.commit();\n\n    QueryResponse response = solrServer.query(new SolrQuery(\"id:testSetNullUpdateOrder\"));\n    assertEquals(\"Field included after set null=true not updated via atomic update\", \"test-value2\",\n        response.getResults().get(0).getFieldValue(\"single_s\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1442,"status":"B"}],"commitId":"8f928033537ef70f07a1096b5ca45a3734c12cb3","commitMessage":"@@@SOLR-4297: Atomic update request containing null=true sets all subsequent fields to null\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1456322 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-03-14 12:56:45","modifiedFileCount":"2","status":"M","submitter":"Shalin Shekhar Mangar"},{"authorTime":"2014-12-31 22:05:48","codes":[{"authorDate":"2014-12-31 22:05:48","commitOrder":3,"curCode":"  public void testSetNullUpdates() throws Exception {\n    SolrClient solrClient = getSolrClient();\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"testSetNullUpdates\");\n    doc.addField(\"single_s\", \"test-value\");\n    doc.addField(\"multi_ss\", Arrays.asList(\"first\", \"second\"));\n    solrClient.add(doc);\n    solrClient.commit(true, true);\n    doc.removeField(\"single_s\");\n    doc.removeField(\"multi_ss\");\n    Map<String, Object> map = Maps.newHashMap();\n    map.put(\"set\", null);\n    doc.addField(\"multi_ss\", map);\n    solrClient.add(doc);\n    solrClient.commit(true, true);\n    QueryResponse response = solrClient.query(new SolrQuery(\"id:testSetNullUpdates\"));\n    assertNotNull(\"Entire doc was replaced because null update was not written\", response.getResults().get(0).getFieldValue(\"single_s\"));\n    assertNull(\"Null update failed. Value still exists in document\", response.getResults().get(0).getFieldValue(\"multi_ss\"));\n  }\n","date":"2014-12-31 22:05:48","endLine":1418,"groupId":"10439","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSetNullUpdates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d2/8b1030d256b253e247e5f5e9cbb77d78138b5d.src","preCode":"  public void testSetNullUpdates() throws Exception {\n    SolrServer solrServer = getSolrServer();\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"testSetNullUpdates\");\n    doc.addField(\"single_s\", \"test-value\");\n    doc.addField(\"multi_ss\", Arrays.asList(\"first\", \"second\"));\n    solrServer.add(doc);\n    solrServer.commit(true, true);\n    doc.removeField(\"single_s\");\n    doc.removeField(\"multi_ss\");\n    Map<String, Object> map = Maps.newHashMap();\n    map.put(\"set\", null);\n    doc.addField(\"multi_ss\", map);\n    solrServer.add(doc);\n    solrServer.commit(true, true);\n    QueryResponse response = solrServer.query(new SolrQuery(\"id:testSetNullUpdates\"));\n    assertNotNull(\"Entire doc was replaced because null update was not written\", response.getResults().get(0).getFieldValue(\"single_s\"));\n    assertNull(\"Null update failed. Value still exists in document\", response.getResults().get(0).getFieldValue(\"multi_ss\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1400,"status":"M"},{"authorDate":"2014-12-31 22:05:48","commitOrder":3,"curCode":"  public void testSetNullUpdateOrder() throws Exception {\n    SolrClient solrClient = getSolrClient();\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"testSetNullUpdateOrder\");\n    doc.addField(\"single_s\", \"test-value\");\n    doc.addField(\"multi_ss\", Arrays.asList(\"first\", \"second\"));\n    solrClient.add(doc);\n    solrClient.commit(true, true);\n\n    Map<String, Object> map = Maps.newHashMap();\n    map.put(\"set\", null);\n    doc = new SolrInputDocument();\n    doc.addField(\"multi_ss\", map);\n    doc.addField(\"id\", \"testSetNullUpdateOrder\");\n    doc.addField(\"single_s\", \"test-value2\");\n    solrClient.add(doc);\n    solrClient.commit();\n\n    QueryResponse response = solrClient.query(new SolrQuery(\"id:testSetNullUpdateOrder\"));\n    assertEquals(\"Field included after set null=true not updated via atomic update\", \"test-value2\",\n        response.getResults().get(0).getFieldValue(\"single_s\"));\n  }\n","date":"2014-12-31 22:05:48","endLine":1441,"groupId":"10439","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetNullUpdateOrder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d2/8b1030d256b253e247e5f5e9cbb77d78138b5d.src","preCode":"  public void testSetNullUpdateOrder() throws Exception {\n    SolrServer solrServer = getSolrServer();\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"testSetNullUpdateOrder\");\n    doc.addField(\"single_s\", \"test-value\");\n    doc.addField(\"multi_ss\", Arrays.asList(\"first\", \"second\"));\n    solrServer.add(doc);\n    solrServer.commit(true, true);\n\n    Map<String, Object> map = Maps.newHashMap();\n    map.put(\"set\", null);\n    doc = new SolrInputDocument();\n    doc.addField(\"multi_ss\", map);\n    doc.addField(\"id\", \"testSetNullUpdateOrder\");\n    doc.addField(\"single_s\", \"test-value2\");\n    solrServer.add(doc);\n    solrServer.commit();\n\n    QueryResponse response = solrServer.query(new SolrQuery(\"id:testSetNullUpdateOrder\"));\n    assertEquals(\"Field included after set null=true not updated via atomic update\", \"test-value2\",\n        response.getResults().get(0).getFieldValue(\"single_s\"));\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1420,"status":"M"}],"commitId":"ef809a0f10e78aec3f97c878f90ff74673f98745","commitMessage":"@@@SOLR-6895: Deprecate SolrServer classes and replace with SolrClient\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1648697 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-12-31 22:05:48","modifiedFileCount":"152","status":"M","submitter":"Alan Woodward"}]
