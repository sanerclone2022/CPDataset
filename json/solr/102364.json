[{"authorTime":"2020-09-28 17:27:06","codes":[{"authorDate":"2020-09-24 08:58:40","commitOrder":4,"curCode":"    public void setObjProperty(PayloadObj<ClusterPropInfo> obj) {\n      \r\n      Map m = obj.getDataMap();\n      ClusterProperties clusterProperties = new ClusterProperties(getCoreContainer().getZkController().getZkClient());\n      try {\n        clusterProperties.setClusterProperties(m);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in API\", e);\n      }\n    }\n","date":"2020-09-24 08:58:40","endLine":200,"groupId":"44428","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setObjProperty","params":"(PayloadObj<ClusterPropInfo>obj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/de/608b3640dfd6e4d09d0f917a739beaa13d0dc2.src","preCode":"    public void setObjProperty(PayloadObj<ClusterPropInfo> obj) {\n      \r\n      Map m = obj.getDataMap();\n      ClusterProperties clusterProperties = new ClusterProperties(getCoreContainer().getZkController().getZkClient());\n      try {\n        clusterProperties.setClusterProperties(m);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in API\", e);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/ClusterAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"NB"},{"authorDate":"2020-09-28 17:27:06","commitOrder":4,"curCode":"    public void setRateLimiters(PayloadObj<RateLimiterMeta> payLoad) {\n      RateLimiterMeta rateLimiterConfig = payLoad.get();\n      ClusterProperties clusterProperties = new ClusterProperties(getCoreContainer().getZkController().getZkClient());\n\n      try {\n        clusterProperties.update(rateLimiterConfig == null?\n                null:\n                rateLimiterConfig,\n                RL_CONFIG_KEY);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in API\", e);\n      }\n    }\n","date":"2020-09-28 17:27:06","endLine":247,"groupId":"33603","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setRateLimiters","params":"(PayloadObj<RateLimiterMeta>payLoad)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/ab2b72c79d3c4fa9fc2b9261bec123bcb6cf23.src","preCode":"    public void setRateLimiters(PayloadObj<RateLimiterMeta> payLoad) {\n      RateLimiterMeta rateLimiterConfig = payLoad.get();\n      ClusterProperties clusterProperties = new ClusterProperties(getCoreContainer().getZkController().getZkClient());\n\n      try {\n        clusterProperties.update(rateLimiterConfig == null?\n                null:\n                rateLimiterConfig,\n                RL_CONFIG_KEY);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in API\", e);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/ClusterAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"B"}],"commitId":"4105414c90c94a3f426ce28893a744d3a800dbf4","commitMessage":"@@@SOLR-13528: Implement API Based Config For Rate Limiters (#1906)\n\nThis commit moves Rate Limiter configurations from web.xml to a new command based approach using clusterprops.json","date":"2020-09-28 17:27:06","modifiedFileCount":"6","status":"M","submitter":"Atri Sharma"},{"authorTime":"2021-02-08 23:11:58","codes":[{"authorDate":"2021-02-08 23:11:58","commitOrder":5,"curCode":"    public void setObjProperty(PayloadObj<ClusterPropPayload> obj) {\n      \r\n      Map m = obj.getDataMap();\n      ClusterProperties clusterProperties = new ClusterProperties(getCoreContainer().getZkController().getZkClient());\n      try {\n        clusterProperties.setClusterProperties(m);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in API\", e);\n      }\n    }\n","date":"2021-02-08 23:11:58","endLine":235,"groupId":"44428","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setObjProperty","params":"(PayloadObj<ClusterPropPayload>obj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ae/e25717871b9e473fe9b0ae9964c03cb39fe795.src","preCode":"    public void setObjProperty(PayloadObj<ClusterPropInfo> obj) {\n      \r\n      Map m = obj.getDataMap();\n      ClusterProperties clusterProperties = new ClusterProperties(getCoreContainer().getZkController().getZkClient());\n      try {\n        clusterProperties.setClusterProperties(m);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in API\", e);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/ClusterAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"},{"authorDate":"2021-02-08 23:11:58","commitOrder":5,"curCode":"    public void setRateLimiters(PayloadObj<RateLimiterPayload> payLoad) {\n      RateLimiterPayload rateLimiterConfig = payLoad.get();\n      ClusterProperties clusterProperties = new ClusterProperties(getCoreContainer().getZkController().getZkClient());\n\n      try {\n        clusterProperties.update(rateLimiterConfig == null?\n                null:\n                rateLimiterConfig,\n                RL_CONFIG_KEY);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in API\", e);\n      }\n    }\n","date":"2021-02-08 23:11:58","endLine":257,"groupId":"33603","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setRateLimiters","params":"(PayloadObj<RateLimiterPayload>payLoad)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ae/e25717871b9e473fe9b0ae9964c03cb39fe795.src","preCode":"    public void setRateLimiters(PayloadObj<RateLimiterMeta> payLoad) {\n      RateLimiterMeta rateLimiterConfig = payLoad.get();\n      ClusterProperties clusterProperties = new ClusterProperties(getCoreContainer().getZkController().getZkClient());\n\n      try {\n        clusterProperties.update(rateLimiterConfig == null?\n                null:\n                rateLimiterConfig,\n                RL_CONFIG_KEY);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in API\", e);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/ClusterAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"}],"commitId":"e89fba6fe7739cb213560b94b6a4a76e40c2e4a5","commitMessage":"@@@SOLR-15118: Convert /v2/collections APIs to annotations (#2281)\n\nSolr supports two different ways to write v2 APIs: a JSON spec based\napproach.  and one based on annotated POJOs.  The POJO method is now\npreferred.\n\nThis commit switches the /v2/collections APIs over to the\nannotation-based approach.  Since V2RequestSupport only works with\njsonspec-based APIs.  this commit also changes CollectionAdminRequest\nto no longer implement that interface.","date":"2021-02-08 23:11:58","modifiedFileCount":"11","status":"M","submitter":"Jason Gerlowski"},{"authorTime":"2021-07-13 23:49:56","codes":[{"authorDate":"2021-07-13 23:49:56","commitOrder":6,"curCode":"    public void setObjProperty(PayloadObj<ClusterPropPayload> obj) {\n      \r\n      Map<String,Object> m = obj.getDataMap();\n      ClusterProperties clusterProperties = new ClusterProperties(getCoreContainer().getZkController().getZkClient());\n      try {\n        clusterProperties.setClusterProperties(m);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in API\", e);\n      }\n    }\n","date":"2021-07-13 23:49:56","endLine":244,"groupId":"102364","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"setObjProperty","params":"(PayloadObj<ClusterPropPayload>obj)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/aa/50f69e2e66e4a2d709277008f06caf62e090c4.src","preCode":"    public void setObjProperty(PayloadObj<ClusterPropPayload> obj) {\n      \r\n      Map m = obj.getDataMap();\n      ClusterProperties clusterProperties = new ClusterProperties(getCoreContainer().getZkController().getZkClient());\n      try {\n        clusterProperties.setClusterProperties(m);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in API\", e);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/ClusterAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"M"},{"authorDate":"2021-07-13 23:49:56","commitOrder":6,"curCode":"    public void setRateLimiters(PayloadObj<RateLimiterPayload> payLoad) {\n      RateLimiterPayload rateLimiterConfig = payLoad.get();\n      ClusterProperties clusterProperties = new ClusterProperties(getCoreContainer().getZkController().getZkClient());\n\n      try {\n        clusterProperties.update(rateLimiterConfig, RL_CONFIG_KEY);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in API\", e);\n      }\n    }\n","date":"2021-07-13 23:49:56","endLine":263,"groupId":"102364","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"setRateLimiters","params":"(PayloadObj<RateLimiterPayload>payLoad)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/aa/50f69e2e66e4a2d709277008f06caf62e090c4.src","preCode":"    public void setRateLimiters(PayloadObj<RateLimiterPayload> payLoad) {\n      RateLimiterPayload rateLimiterConfig = payLoad.get();\n      ClusterProperties clusterProperties = new ClusterProperties(getCoreContainer().getZkController().getZkClient());\n\n      try {\n        clusterProperties.update(rateLimiterConfig == null?\n                null:\n                rateLimiterConfig,\n                RL_CONFIG_KEY);\n      } catch (Exception e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in API\", e);\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/handler/ClusterAPI.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"M"}],"commitId":"09986130545fabfb2cc76ced85a0da6ba536acf0","commitMessage":"@@@SOLR-15385 RawTypes Part VI (#207)\n\nCo-authored-by: Christine Poerschke <cpoerschke@apache.org>","date":"2021-07-13 23:49:56","modifiedFileCount":"185","status":"M","submitter":"Mike Drob"}]
