[{"authorTime":"2013-06-27 08:44:27","codes":[{"authorDate":"2013-06-27 08:44:27","commitOrder":1,"curCode":"  public void testParseFloatNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float_f\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    float value = 10898.83491f;\n    String floatString1 = \"10898,83491\";\n    String floatString2 = \"10������898,83491\"; \r\n    SolrInputDocument d = processAdd(\"parse-float-french-no-run-processor\",\n        doc(f(\"id\", \"140\"), f(\"float_f\", floatString1),\n            f(\"not_in_schema\", floatString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"float_f\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float_f\"), EPSILON);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"not_in_schema\"), EPSILON);\n  }\n","date":"2013-06-27 08:44:27","endLine":483,"groupId":"11394","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseFloatNonRootLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/e6c21580d6797fda7663ad96ea802d93e27d17.src","preCode":"  public void testParseFloatNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float_f\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    float value = 10898.83491f;\n    String floatString1 = \"10898,83491\";\n    String floatString2 = \"10������898,83491\"; \r\n    SolrInputDocument d = processAdd(\"parse-float-french-no-run-processor\",\n        doc(f(\"id\", \"140\"), f(\"float_f\", floatString1),\n            f(\"not_in_schema\", floatString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"float_f\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float_f\"), EPSILON);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"not_in_schema\"), EPSILON);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":468,"status":"B"},{"authorDate":"2013-06-27 08:44:27","commitOrder":1,"curCode":"  public void testParseDoubleNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"double_d\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    double value = 10898.83491;\n    String doubleString1 = \"10898,83491\";\n    String doubleString2 = \"10������898,83491\"; \r\n    SolrInputDocument d = processAdd(\"parse-double-french-no-run-processor\",\n                                     doc(f(\"id\", \"140\"), f(\"double_d\", doubleString1), \n                                         f(\"not_in_schema\", doubleString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"double_d\") instanceof Double);\n    assertEquals(value, (Double)d.getFieldValue(\"double_d\"), EPSILON);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Double);\n    assertEquals(value, (Double)d.getFieldValue(\"not_in_schema\"), EPSILON);\n  }\n","date":"2013-06-27 08:44:27","endLine":585,"groupId":"19482","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseDoubleNonRootLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/e6c21580d6797fda7663ad96ea802d93e27d17.src","preCode":"  public void testParseDoubleNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"double_d\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    double value = 10898.83491;\n    String doubleString1 = \"10898,83491\";\n    String doubleString2 = \"10������898,83491\"; \r\n    SolrInputDocument d = processAdd(\"parse-double-french-no-run-processor\",\n                                     doc(f(\"id\", \"140\"), f(\"double_d\", doubleString1), \n                                         f(\"not_in_schema\", doubleString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"double_d\") instanceof Double);\n    assertEquals(value, (Double)d.getFieldValue(\"double_d\"), EPSILON);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Double);\n    assertEquals(value, (Double)d.getFieldValue(\"not_in_schema\"), EPSILON);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":570,"status":"B"}],"commitId":"d6d65851cf4a7d1f9e5f0b58544374785e7c2594","commitMessage":"@@@SOLR-4892: Add field update processors to parse/convert String-typed fields to Date.  Number.  and Boolean\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497165 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 08:44:27","modifiedFileCount":"15","status":"B","submitter":"Steven Rowe"},{"authorTime":"2019-06-26 07:26:03","codes":[{"authorDate":"2019-06-26 07:26:03","commitOrder":2,"curCode":"  public void testParseFloatNonRootLocale() throws Exception {\n    {\n      final NumberFormat sanityCheck = NumberFormat.getInstance(new Locale(\"fr\",\"FR\"));\n      sanityCheck.setParseIntegerOnly(false);\n      sanityCheck.setRoundingMode(RoundingMode.CEILING);\n      assumeThat(\"Your JVM appears to have NumberFormat parse bugs using U+00A0 in the fr_FR Locale\",\n                 sanityCheck.parse(\"10������898\"), new IsNot(new IsEqual(10L)));\n    }\n\n    float value = 10898.83491f;\n    String floatString1 = \"10898,83491\";\n    String floatString2 = \"10������898,83491\"; \r\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float_f\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    SolrInputDocument d = processAdd(\"parse-float-french-no-run-processor\",\n        doc(f(\"id\", \"140\"), f(\"float_f\", floatString1),\n            f(\"not_in_schema\", floatString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"float_f\"), IS_FLOAT);\n    assertEquals(value, (Float)d.getFieldValue(\"float_f\"), EPSILON);\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_FLOAT);\n    assertEquals(value, (Float)d.getFieldValue(\"not_in_schema\"), EPSILON);\n  }\n","date":"2019-06-26 07:26:03","endLine":505,"groupId":"40846","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseFloatNonRootLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/978c83e26b147be8a7b06765e593d9eddf99e9.src","preCode":"  public void testParseFloatNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float_f\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    float value = 10898.83491f;\n    String floatString1 = \"10898,83491\";\n    String floatString2 = \"10������898,83491\"; \r\n    SolrInputDocument d = processAdd(\"parse-float-french-no-run-processor\",\n        doc(f(\"id\", \"140\"), f(\"float_f\", floatString1),\n            f(\"not_in_schema\", floatString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"float_f\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"float_f\"), EPSILON);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Float);\n    assertEquals(value, (Float)d.getFieldValue(\"not_in_schema\"), EPSILON);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":482,"status":"M"},{"authorDate":"2019-06-26 07:26:03","commitOrder":2,"curCode":"  public void testParseDoubleNonRootLocale() throws Exception {\n    {\n      final NumberFormat sanityCheck = NumberFormat.getInstance(new Locale(\"fr\",\"FR\"));\n      sanityCheck.setParseIntegerOnly(false);\n      sanityCheck.setRoundingMode(RoundingMode.CEILING);\n      assumeThat(\"Your JVM appears to have NumberFormat parse bugs using U+00A0 in the fr_FR Locale\",\n                 sanityCheck.parse(\"10������898\"), new IsNot(new IsEqual(10L)));\n    }\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"double_d\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    double value = 10898.83491;\n    String doubleString1 = \"10898,83491\";\n    String doubleString2 = \"10������898,83491\"; \r\n    SolrInputDocument d = processAdd(\"parse-double-french-no-run-processor\",\n                                     doc(f(\"id\", \"140\"), f(\"double_d\", doubleString1), \n                                         f(\"not_in_schema\", doubleString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"double_d\"), IS_DOUBLE);\n    assertEquals(value, (Double)d.getFieldValue(\"double_d\"), EPSILON);\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_DOUBLE);\n    assertEquals(value, (Double)d.getFieldValue(\"not_in_schema\"), EPSILON);\n  }\n","date":"2019-06-26 07:26:03","endLine":614,"groupId":"19482","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseDoubleNonRootLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/978c83e26b147be8a7b06765e593d9eddf99e9.src","preCode":"  public void testParseDoubleNonRootLocale() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"double_d\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    double value = 10898.83491;\n    String doubleString1 = \"10898,83491\";\n    String doubleString2 = \"10������898,83491\"; \r\n    SolrInputDocument d = processAdd(\"parse-double-french-no-run-processor\",\n                                     doc(f(\"id\", \"140\"), f(\"double_d\", doubleString1), \n                                         f(\"not_in_schema\", doubleString2)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"double_d\") instanceof Double);\n    assertEquals(value, (Double)d.getFieldValue(\"double_d\"), EPSILON);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Double);\n    assertEquals(value, (Double)d.getFieldValue(\"not_in_schema\"), EPSILON);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":592,"status":"M"}],"commitId":"583c219183b2bca85936a095727d287c5c28526b","commitMessage":"@@@SOLR-13580: add assumeThat calls to ParsingFieldUpdateProcessorsTest to skip test methods impacted by java 13-ea bug in NumberFormat.parse()\n","date":"2019-06-26 07:26:03","modifiedFileCount":"1","status":"M","submitter":"Chris Hostetter"},{"authorTime":"2019-06-29 03:10:33","codes":[{"authorDate":"2019-06-29 03:10:33","commitOrder":3,"curCode":"  public void testParseFloatNonRootLocale() throws Exception {\n    final DecimalFormatSymbols fr_FR = DecimalFormatSymbols.getInstance(new Locale(\"fr\",\"FR\"));\n    final char groupChar = fr_FR.getGroupingSeparator();\n    final char decimalChar = fr_FR.getDecimalSeparator();\n\n    float value = 10898.83491F;\n    String floatString1 = \"10898\"+decimalChar+\"83491\";\n    String floatString2 = \"10\"+groupChar+\"898\"+decimalChar+\"83491\";\n    \n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float_f\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    SolrInputDocument d = processAdd(\"parse-float-french-no-run-processor\",\n        doc(f(\"id\", \"140\"), f(\"float_f\", floatString1),\n            f(\"not_in_schema\", floatString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"float_f\"), IS_FLOAT);\n    assertEquals(value, (Float)d.getFieldValue(\"float_f\"), EPSILON);\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_FLOAT);\n    assertEquals(value, (Float)d.getFieldValue(\"not_in_schema\"), EPSILON);\n  }\n","date":"2019-06-29 03:10:54","endLine":497,"groupId":"102915","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseFloatNonRootLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/16/8db8de938938975a735324b11b9e8763ea79f0.src","preCode":"  public void testParseFloatNonRootLocale() throws Exception {\n    {\n      final NumberFormat sanityCheck = NumberFormat.getInstance(new Locale(\"fr\",\"FR\"));\n      sanityCheck.setParseIntegerOnly(false);\n      sanityCheck.setRoundingMode(RoundingMode.CEILING);\n      assumeThat(\"Your JVM appears to have NumberFormat parse bugs using U+00A0 in the fr_FR Locale\",\n                 sanityCheck.parse(\"10������898\"), new IsNot(new IsEqual(10L)));\n    }\n\n    float value = 10898.83491f;\n    String floatString1 = \"10898,83491\";\n    String floatString2 = \"10������898,83491\"; \r\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"float_f\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    SolrInputDocument d = processAdd(\"parse-float-french-no-run-processor\",\n        doc(f(\"id\", \"140\"), f(\"float_f\", floatString1),\n            f(\"not_in_schema\", floatString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"float_f\"), IS_FLOAT);\n    assertEquals(value, (Float)d.getFieldValue(\"float_f\"), EPSILON);\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_FLOAT);\n    assertEquals(value, (Float)d.getFieldValue(\"not_in_schema\"), EPSILON);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":477,"status":"M"},{"authorDate":"2019-06-29 03:10:33","commitOrder":3,"curCode":"  public void testParseDoubleNonRootLocale() throws Exception {\n    final DecimalFormatSymbols fr_FR = DecimalFormatSymbols.getInstance(new Locale(\"fr\",\"FR\"));\n    final char groupChar = fr_FR.getGroupingSeparator();\n    final char decimalChar = fr_FR.getDecimalSeparator();\n\n    double value = 10898.83491D;\n    String doubleString1 = \"10898\"+decimalChar+\"83491\";\n    String doubleString2 = \"10\"+groupChar+\"898\"+decimalChar+\"83491\";\n    \n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"double_d\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    SolrInputDocument d = processAdd(\"parse-double-french-no-run-processor\",\n                                     doc(f(\"id\", \"140\"), f(\"double_d\", doubleString1), \n                                         f(\"not_in_schema\", doubleString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"double_d\"), IS_DOUBLE);\n    assertEquals(value, (Double)d.getFieldValue(\"double_d\"), EPSILON);\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_DOUBLE);\n    assertEquals(value, (Double)d.getFieldValue(\"not_in_schema\"), EPSILON);\n  }\n","date":"2019-06-29 03:10:54","endLine":604,"groupId":"102915","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseDoubleNonRootLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/16/8db8de938938975a735324b11b9e8763ea79f0.src","preCode":"  public void testParseDoubleNonRootLocale() throws Exception {\n    {\n      final NumberFormat sanityCheck = NumberFormat.getInstance(new Locale(\"fr\",\"FR\"));\n      sanityCheck.setParseIntegerOnly(false);\n      sanityCheck.setRoundingMode(RoundingMode.CEILING);\n      assumeThat(\"Your JVM appears to have NumberFormat parse bugs using U+00A0 in the fr_FR Locale\",\n                 sanityCheck.parse(\"10������898\"), new IsNot(new IsEqual(10L)));\n    }\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNotNull(schema.getFieldOrNull(\"double_d\")); \r\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    double value = 10898.83491;\n    String doubleString1 = \"10898,83491\";\n    String doubleString2 = \"10������898,83491\"; \r\n    SolrInputDocument d = processAdd(\"parse-double-french-no-run-processor\",\n                                     doc(f(\"id\", \"140\"), f(\"double_d\", doubleString1), \n                                         f(\"not_in_schema\", doubleString2)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"double_d\"), IS_DOUBLE);\n    assertEquals(value, (Double)d.getFieldValue(\"double_d\"), EPSILON);\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_DOUBLE);\n    assertEquals(value, (Double)d.getFieldValue(\"not_in_schema\"), EPSILON);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":584,"status":"M"}],"commitId":"8b72e91df7b8ea545b6344d665bbb80e27a80aa4","commitMessage":"@@@SOLR-13580: update test to account for different versions of java using different locale specific numeric formatting characters\n","date":"2019-06-29 03:10:54","modifiedFileCount":"1","status":"M","submitter":"Chris Hostetter"}]
