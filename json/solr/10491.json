[{"authorTime":"2019-03-04 17:41:45","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":3,"curCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n","date":"2018-11-30 01:58:51","endLine":895,"groupId":"19207","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"preferReplicaTypesTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/23/b67d4b055ccc07147bf9c107c04228ac86f01e.src","preCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":860,"status":"NB"},{"authorDate":"2019-03-04 17:41:45","commitOrder":3,"curCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n","date":"2019-03-04 17:41:45","endLine":906,"groupId":"19207","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"preferReplicaTypesTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/de/8c311c361e11acc2dea2be8a49e95e17467bdd.src","preCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":871,"status":"B"}],"commitId":"e99934b240cbb197331edc5e1889203e60b3d5d9","commitMessage":"@@@SOLR-13276: Adding Http2 equivalent classes of CloudSolrClient and HttpClusterStateProvider\n","date":"2019-03-04 17:41:45","modifiedFileCount":"7","status":"M","submitter":"Cao Manh Dat"},{"authorTime":"2019-04-23 17:07:20","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":4,"curCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n","date":"2018-11-30 01:58:51","endLine":895,"groupId":"19207","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"preferReplicaTypesTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/23/b67d4b055ccc07147bf9c107c04228ac86f01e.src","preCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":860,"status":"N"},{"authorDate":"2019-04-23 17:07:20","commitOrder":4,"curCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n","date":"2019-04-23 17:07:20","endLine":908,"groupId":"19207","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"preferReplicaTypesTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/27/fd172c385753248cc8e2bd28a9869d8a68cf98.src","preCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":871,"status":"M"}],"commitId":"bc8985d031b6e756f4ba6b5cb6cd12c71140a09e","commitMessage":"@@@SOLR-13276: Improving CloudHttp2SolrClientTest\n","date":"2019-04-23 17:07:20","modifiedFileCount":"1","status":"M","submitter":"Cao Manh Dat"},{"authorTime":"2019-04-23 17:07:20","codes":[{"authorDate":"2019-05-29 23:55:58","commitOrder":5,"curCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n","date":"2019-05-29 23:55:58","endLine":897,"groupId":"19207","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"preferReplicaTypesTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/24/f4a4b4f431ecd6a62d350e3aef7e6c7ed02b81.src","preCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":860,"status":"M"},{"authorDate":"2019-04-23 17:07:20","commitOrder":5,"curCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n","date":"2019-04-23 17:07:20","endLine":908,"groupId":"19207","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"preferReplicaTypesTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/27/fd172c385753248cc8e2bd28a9869d8a68cf98.src","preCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":871,"status":"N"}],"commitId":"43397ff0a2c0f3682b997380f84630114ef9336c","commitMessage":"@@@SOLR-13450: Backport the fix from CloudHttp2SolrClientTest\n","date":"2019-05-29 23:55:58","modifiedFileCount":"1","status":"M","submitter":"Cao Manh Dat"},{"authorTime":"2020-07-08 23:57:24","codes":[{"authorDate":"2020-07-08 23:57:24","commitOrder":6,"curCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n","date":"2020-07-08 23:57:24","endLine":970,"groupId":"19207","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"preferReplicaTypesTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/cd/f606a739ea126023992cadef5a438c3299bdf3.src","preCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":934,"status":"M"},{"authorDate":"2020-07-08 23:57:24","commitOrder":6,"curCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n","date":"2020-07-08 23:57:24","endLine":1002,"groupId":"19207","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"preferReplicaTypesTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/83/073d9caacb5c84836db42f389f230cff1bc7f5.src","preCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .setMaxShardsPerNode(liveNodes)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":966,"status":"M"}],"commitId":"cf742f45963f4747e7041e8131248bc3a2b44864","commitMessage":"@@@SOLR-12847: Remove support for maxShardsPerNode.\n","date":"2020-07-08 23:57:24","modifiedFileCount":"144","status":"M","submitter":"Andrzej Bialecki"},{"authorTime":"2020-11-20 01:57:47","codes":[{"authorDate":"2020-11-20 01:57:47","commitOrder":7,"curCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n","date":"2020-11-20 01:57:47","endLine":956,"groupId":"10491","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"preferReplicaTypesTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/80358e3865d292d6acbecea7380da445f2b636.src","preCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":927,"status":"M"},{"authorDate":"2020-11-20 01:57:47","commitOrder":7,"curCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n","date":"2020-11-20 01:57:47","endLine":988,"groupId":"10491","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"preferReplicaTypesTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/81/85e46c99b3801265c876c72fcfb178e31d889b.src","preCode":"  public void preferReplicaTypesTest() throws Exception {\n\n    String collectionName = \"replicaTypesTestColl\";\n\n    int liveNodes = cluster.getJettySolrRunners().size();\n\n    \r\n    \r\n    int pullReplicas = Math.max(1, liveNodes - 2);\n    CollectionAdminRequest.createCollection(collectionName, \"conf\", liveNodes, 1, 1, pullReplicas)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n    cluster.waitForActiveCollection(collectionName, liveNodes, liveNodes * (2 + pullReplicas));\n    \n    \r\n    new UpdateRequest()\n        .add(id, \"0\", \"a_t\", \"hello1\")\n        .add(id, \"2\", \"a_t\", \"hello2\")\n        .add(id, \"3\", \"a_t\", \"hello2\")\n        .commit(getRandomClient(), collectionName);\n\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", false, collectionName);\n    \r\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"PULL|TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"TLOG|PULL\", true, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT\", false, collectionName);\n    queryWithPreferReplicaTypes(getRandomClient(), \"NRT|PULL\", true, collectionName);\n    CollectionAdminRequest.deleteCollection(collectionName)\n        .processAndWait(cluster.getSolrClient(), TIMEOUT);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":959,"status":"M"}],"commitId":"c4d4767bca196ad358b72156889effd27fdfcc9b","commitMessage":"@@@SOLR-14035: Remove deprecated preferLocalShards=true support in favour of the shards.preference=replica.location:local alternative.\n(Alex Bulygin via Christine Poerschke)\n","date":"2020-11-20 01:57:47","modifiedFileCount":"5","status":"M","submitter":"Christine Poerschke"}]
