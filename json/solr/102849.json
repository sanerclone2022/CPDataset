[{"authorTime":"2016-10-03 03:18:22","codes":[{"authorDate":"2016-12-19 23:15:04","commitOrder":3,"curCode":"  static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; \r\n    if (!Constants.WINDOWS) { \r\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        \r\n      }\n    }\n    return group;\n  }\n","date":"2016-12-19 23:15:04","endLine":51,"groupId":"54581","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getUsersFirstGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/00/c2b714c493e136ce198c0330ee0a7650b572aa.src","preCode":"  static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; \r\n    if (!Constants.WINDOWS) { \r\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        \r\n      }\n    }\n    return group;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/hadoop/ImpersonationUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"},{"authorDate":"2016-10-03 03:18:22","commitOrder":3,"curCode":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; \r\n    if (!Constants.WINDOWS) { \r\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        \r\n      }\n    }\n    return group;\n  }\n","date":"2016-10-03 03:18:22","endLine":75,"groupId":"54581","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getUsersFirstGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ef/41e4d315a14e1c67cd23b664acc2b1f847677d.src","preCode":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; \r\n    if (!Constants.WINDOWS) { \r\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        \r\n      }\n    }\n    return group;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"NB"}],"commitId":"a1a8b2864e621c18aa86b21d4a244233e991a47d","commitMessage":"@@@SOLR-9513: Generic Hadoop authentication plugins.  GenericHadoopAuthPlugin and ConfigurableInternodeAuthHadoopPlugin\n","date":"2016-12-19 23:15:04","modifiedFileCount":"7","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2019-12-12 10:38:25","codes":[{"authorDate":"2016-12-19 23:15:04","commitOrder":4,"curCode":"  static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; \r\n    if (!Constants.WINDOWS) { \r\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        \r\n      }\n    }\n    return group;\n  }\n","date":"2016-12-19 23:15:04","endLine":51,"groupId":"102849","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getUsersFirstGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/00/c2b714c493e136ce198c0330ee0a7650b572aa.src","preCode":"  static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; \r\n    if (!Constants.WINDOWS) { \r\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        \r\n      }\n    }\n    return group;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/security/hadoop/ImpersonationUtil.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"N"},{"authorDate":"2019-12-12 10:38:25","commitOrder":4,"curCode":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; \r\n    org.apache.hadoop.security.Groups hGroups =\n        new org.apache.hadoop.security.Groups(new Configuration());\n    try {\n      List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n      if (g != null && g.size() > 0) {\n        group = g.get(0);\n      }\n    } catch (NullPointerException npe) {\n      \r\n    }\n    return group;\n  }\n","date":"2019-12-12 11:02:07","endLine":72,"groupId":"102849","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getUsersFirstGroup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a6/2de3566b87f236de1b53cbdae8a8ff49b97ca0.src","preCode":"  private static String getUsersFirstGroup() throws Exception {\n    String group = \"*\"; \r\n    if (!Constants.WINDOWS) { \r\n      org.apache.hadoop.security.Groups hGroups =\n          new org.apache.hadoop.security.Groups(new Configuration());\n      try {\n        List<String> g = hGroups.getGroups(System.getProperty(\"user.name\"));\n        if (g != null && g.size() > 0) {\n          group = g.get(0);\n        }\n      } catch (NullPointerException npe) {\n        \r\n      }\n    }\n    return group;\n  }\n","realPath":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithSecureImpersonation.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"861c77cb175a78cc898d6cd5b6db387ebdbd89b9","commitMessage":"@@@SOLR-14053: Fix HDFS tests to be ignored if Native I/O isn't available (remove tests.disableHdfs)\n\nSigned-off-by: Kevin Risden <krisden@apache.org>\n","date":"2019-12-12 11:02:07","modifiedFileCount":"6","status":"M","submitter":"Kevin Risden"}]
