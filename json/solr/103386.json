[{"authorTime":"2015-01-21 08:11:00","codes":[{"authorDate":"2015-01-21 08:11:00","commitOrder":1,"curCode":"  public void testDefaultBuildOnStartupNotStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup_no_store\";\n    \n    \r\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='name']\", false));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='storeDir']\", false));\n    \n    \r\n    assertEquals(\"false\", \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='buildOnCommit']\", true));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='buildOnStartup']\", false));\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"2\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"3\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","date":"2015-01-21 08:11:00","endLine":239,"groupId":"23985","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultBuildOnStartupNotStoredDict","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ea/c01e3327467993ac96b6da841207f1d5aac11b.src","preCode":"  public void testDefaultBuildOnStartupNotStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup_no_store\";\n    \n    \r\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='name']\", false));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='storeDir']\", false));\n    \n    \r\n    assertEquals(\"false\", \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='buildOnCommit']\", true));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='buildOnStartup']\", false));\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"2\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"3\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"B"},{"authorDate":"2015-01-21 08:11:00","commitOrder":1,"curCode":"  public void testDefaultBuildOnStartupStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup\";\n    \n    \r\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='name']\", false));\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='storeDir']\", false));\n    \n    \r\n    assertEquals(\"false\", \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnCommit']\", true));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnStartup']\", false));\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"2\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='0']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"2\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"2\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"3\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"3\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","date":"2015-01-21 08:11:00","endLine":315,"groupId":"23988","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultBuildOnStartupStoredDict","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ea/c01e3327467993ac96b6da841207f1d5aac11b.src","preCode":"  public void testDefaultBuildOnStartupStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup\";\n    \n    \r\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='name']\", false));\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='storeDir']\", false));\n    \n    \r\n    assertEquals(\"false\", \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnCommit']\", true));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnStartup']\", false));\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"2\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='0']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"2\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"2\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"3\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"3\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"B"}],"commitId":"6ce841759adffedaa888ad8f68fab7a916e8b26a","commitMessage":"@@@SOLR-6845: Add a ''buildOnStartup'' option for suggesters. (Tom?s Fern?ndez L?bbe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1653410 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-21 08:11:00","modifiedFileCount":"3","status":"B","submitter":"Tomas Eduardo Fernandez Lobbe"},{"authorTime":"2015-01-26 06:40:44","codes":[{"authorDate":"2015-01-26 06:40:44","commitOrder":2,"curCode":"  public void testDefaultBuildOnStartupNotStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup_no_store\";\n    \n    \r\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='name']\", false));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='storeDir']\", false));\n    \n    \r\n    assertEquals(\"false\", \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='buildOnCommit']\", true));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='buildOnStartup']\", false));\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    waitForWarming();\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","date":"2015-01-26 06:40:44","endLine":250,"groupId":"40179","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultBuildOnStartupNotStoredDict","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f6/c0db7ad578d1b027d5c91635bc89354b1d5d29.src","preCode":"  public void testDefaultBuildOnStartupNotStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup_no_store\";\n    \n    \r\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='name']\", false));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='storeDir']\", false));\n    \n    \r\n    assertEquals(\"false\", \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='buildOnCommit']\", true));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='buildOnStartup']\", false));\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"2\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"3\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"},{"authorDate":"2015-01-26 06:40:44","commitOrder":2,"curCode":"  public void testDefaultBuildOnStartupStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup\";\n    \n    \r\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='name']\", false));\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='storeDir']\", false));\n    \n    \r\n    assertEquals(\"false\", \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnCommit']\", true));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnStartup']\", false));\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='0']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    waitForWarming();\n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","date":"2015-01-26 06:40:44","endLine":335,"groupId":"40179","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultBuildOnStartupStoredDict","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f6/c0db7ad578d1b027d5c91635bc89354b1d5d29.src","preCode":"  public void testDefaultBuildOnStartupStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup\";\n    \n    \r\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='name']\", false));\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='storeDir']\", false));\n    \n    \r\n    assertEquals(\"false\", \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnCommit']\", true));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnStartup']\", false));\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"2\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='0']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"2\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"2\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"3\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"3\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"M"}],"commitId":"5c809f285c6e300e78eb7acea67214b3ca4038ea","commitMessage":"@@@SOLR-6845: Fixed Suggester's buildOnStartup in core reload and improved tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1654710 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-01-26 06:40:44","modifiedFileCount":"3","status":"M","submitter":"Tomas Eduardo Fernandez Lobbe"},{"authorTime":"2021-04-29 21:34:26","codes":[{"authorDate":"2021-04-29 21:34:26","commitOrder":3,"curCode":"  public void testDefaultBuildOnStartupNotStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup_no_store\";\n    \n    \r\n    assertEquals(suggester,\n        h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n            .get(\"lst\",7).\n            get(\"str\", n -> \"name\".equals(n.attr(\"name\"))).txt());\n\n    assertNull( h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n        .get(\"lst\",7).\n            get(\"str\", n -> \"storeDir\".equals(n.attr(\"name\"))).txt());\n    \n    \r\n\n    assertEquals(\"false\",\n        h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n            .get(\"lst\",7).\n            get(\"str\", n -> \"buildOnCommit\".equals(n.attr(\"name\"))).txt());\n\n    assertNull(h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n        .get(\"lst\",7).\n            get(\"str\", n -> \"buildOnStartup\".equals(n.attr(\"name\"))).txt());\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    waitForWarming();\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","date":"2021-04-29 21:34:26","endLine":260,"groupId":"40179","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultBuildOnStartupNotStoredDict","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a3/6319029ab5d32093db7705c70285c99f867f3f.src","preCode":"  public void testDefaultBuildOnStartupNotStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup_no_store\";\n    \n    \r\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='name']\", false));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='storeDir']\", false));\n    \n    \r\n    assertEquals(\"false\", \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='buildOnCommit']\", true));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='buildOnStartup']\", false));\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    waitForWarming();\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"},{"authorDate":"2021-04-29 21:34:26","commitOrder":3,"curCode":"  public void testDefaultBuildOnStartupStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup\";\n    \n    \r\n\n    assertEquals(suggester,\n        h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n            .get(\"lst\",6)\n            .get(\"str\", n -> \"name\".equals(n.attr(\"name\"))).txt());\n\n    assertEquals(suggester,\n        h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n            .get(\"lst\",6)\n            .get(\"str\", n -> \"storeDir\".equals(n.attr(\"name\"))).txt());\n    \n    \r\n\n    assertEquals(\"false\",\n        h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n            .get(\"lst\",6)\n            .get(\"str\", n -> \"buildOnCommit\".equals(n.attr(\"name\"))).txt());\n\n    assertNull( h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n        .get(\"lst\",6)\n        .get(\"str\", n -> \"buildOnStartup\".equals(n.attr(\"name\"))).txt());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='0']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    waitForWarming();\n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","date":"2021-04-29 21:34:26","endLine":357,"groupId":"40179","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultBuildOnStartupStoredDict","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a3/6319029ab5d32093db7705c70285c99f867f3f.src","preCode":"  public void testDefaultBuildOnStartupStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup\";\n    \n    \r\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='name']\", false));\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='storeDir']\", false));\n    \n    \r\n    assertEquals(\"false\", \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnCommit']\", true));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnStartup']\", false));\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='0']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    waitForWarming();\n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"M"}],"commitId":"ca031d23b55b3624df859bc5ce19ba5753358eec","commitMessage":"@@@SOLR-15337: Avoid XPath in solrconfig.xml parsing (#104)\n\n","date":"2021-04-29 21:34:26","modifiedFileCount":"26","status":"M","submitter":"Noble Paul"},{"authorTime":"2021-04-30 22:46:03","codes":[{"authorDate":"2021-04-30 22:46:03","commitOrder":4,"curCode":"  public void testDefaultBuildOnStartupNotStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup_no_store\";\n    \n    \r\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='name']\", false));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='storeDir']\", false));\n    \n    \r\n    assertEquals(\"false\", \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='buildOnCommit']\", true));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[8]/str[@name='buildOnStartup']\", false));\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    waitForWarming();\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","date":"2021-04-30 22:46:33","endLine":249,"groupId":"103386","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testDefaultBuildOnStartupNotStoredDict","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b1/5e167aa0583a281f3349911c019ed4401ec07d.src","preCode":"  public void testDefaultBuildOnStartupNotStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup_no_store\";\n    \n    \r\n    assertEquals(suggester,\n        h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n            .get(\"lst\",7).\n            get(\"str\", n -> \"name\".equals(n.attr(\"name\"))).txt());\n\n    assertNull( h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n        .get(\"lst\",7).\n            get(\"str\", n -> \"storeDir\".equals(n.attr(\"name\"))).txt());\n    \n    \r\n\n    assertEquals(\"false\",\n        h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n            .get(\"lst\",7).\n            get(\"str\", n -> \"buildOnCommit\".equals(n.attr(\"name\"))).txt());\n\n    assertNull(h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n        .get(\"lst\",7).\n            get(\"str\", n -> \"buildOnStartup\".equals(n.attr(\"name\"))).txt());\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    waitForWarming();\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"},{"authorDate":"2021-04-30 22:46:03","commitOrder":4,"curCode":"  public void testDefaultBuildOnStartupStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup\";\n    \n    \r\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='name']\", false));\n    assertEquals(suggester, \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='storeDir']\", false));\n    \n    \r\n    assertEquals(\"false\", \n        h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnCommit']\", true));\n    assertNull(h.getCore().getSolrConfig().getVal(\"//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnStartup']\", false));\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='0']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    waitForWarming();\n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","date":"2021-04-30 22:46:33","endLine":334,"groupId":"103386","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testDefaultBuildOnStartupStoredDict","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b1/5e167aa0583a281f3349911c019ed4401ec07d.src","preCode":"  public void testDefaultBuildOnStartupStoredDict() throws Exception {\n    \n    final String suggester = \"suggest_doc_default_startup\";\n    \n    \r\n\n    assertEquals(suggester,\n        h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n            .get(\"lst\",6)\n            .get(\"str\", n -> \"name\".equals(n.attr(\"name\"))).txt());\n\n    assertEquals(suggester,\n        h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n            .get(\"lst\",6)\n            .get(\"str\", n -> \"storeDir\".equals(n.attr(\"name\"))).txt());\n    \n    \r\n\n    assertEquals(\"false\",\n        h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n            .get(\"lst\",6)\n            .get(\"str\", n -> \"buildOnCommit\".equals(n.attr(\"name\"))).txt());\n\n    assertNull( h.getCore().getSolrConfig().get(\"searchComponent\", n -> \"suggest\".equals(n.attr(\"name\")))\n        .get(\"lst\",6)\n        .get(\"str\", n -> \"buildOnStartup\".equals(n.attr(\"name\"))).txt());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='0']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertU(adoc(\"id\", \"10\", \"cat\", \"example data extra \", \"price\", \"40\", \"weight\", \"35\"));\n    assertU((commit()));\n    \n    waitForWarming();\n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    reloadCore(random().nextBoolean());\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='2']\"\n        );\n    \n    \r\n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_BUILD, \"true\"),\n        \"//str[@name='command'][.='build']\"\n        );\n    \n    assertQ(req(\"qt\", rh, \n        SuggesterParams.SUGGEST_DICT, suggester,\n        SuggesterParams.SUGGEST_Q, \"example\",\n        SuggesterParams.SUGGEST_COUNT, \"5\"),\n        \"//lst[@name='suggest']/lst[@name='\" + suggester + \"']/lst[@name='example']/int[@name='numFound'][.='3']\"\n        );\n    \n  }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"}],"commitId":"cf7278cf57ebeaa07c79d4933269750e6f6ce883","commitMessage":"@@@Revert \"SOLR-15337: Avoid XPath in solrconfig.xml parsing (#104)\"\n\nThis reverts commit ca031d23b55b3624df859bc5ce19ba5753358eec.\n","date":"2021-04-30 22:46:33","modifiedFileCount":"26","status":"M","submitter":"Mike Drob"}]
