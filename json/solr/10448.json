[{"authorTime":"2019-10-29 06:49:21","codes":[{"authorDate":"2019-10-29 06:49:21","commitOrder":1,"curCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host1:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node1\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            )\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node2\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            )\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2_2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node3\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            )\n        )\n    );\n    return replicas;\n  }\n","date":"2019-10-29 06:49:21","endLine":151,"groupId":"15569","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getBasicReplicaList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f8/f2e681640bde718e8134a3f772e99527feae37.src","preCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host1:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node1\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            )\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node2\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            )\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2_2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node3\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            )\n        )\n    );\n    return replicas;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/RequestReplicaListTransformerGeneratorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"B"},{"authorDate":"2019-10-29 06:49:21","commitOrder":1,"curCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host1:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node1\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            )\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node2\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            )\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2_2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node3\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            )\n        )\n    );\n    return replicas;\n  }\n","date":"2019-10-29 06:49:21","endLine":154,"groupId":"15569","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getBasicReplicaList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/24/5947a1788e5a47624d83fb0ce43a6cb82f46d4.src","preCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host1:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node1\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            )\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node2\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            )\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2_2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node3\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            )\n        )\n    );\n    return replicas;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/NodePreferenceRulesComparatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"}],"commitId":"fa27e476f74bc4ba83e3fcdc39b421bc53a45d16","commitMessage":"@@@SOLR-13865: Migrate replica routing code to SolrJ (#974)\n\n* [SOLR-13865] Migrate replica routing code to  solrJ\n\n* Added a CommonTestInjection class.\n\n* Fixing imports.\n\n* Reverted extraneous streaming changes.\n\n* Fix precommit errors.\n\n* Changing name of the RLTManager.\n\n* Splitting up existing tests.\n\n* Updated documentation.\n\n* Added solr/CHANGES.txt entry\n","date":"2019-10-29 06:49:21","modifiedFileCount":"7","status":"B","submitter":"Houston Putman"},{"authorTime":"2019-12-03 10:10:19","codes":[{"authorDate":"2019-12-03 10:10:19","commitOrder":2,"curCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host1:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node1\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node2\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2_2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node3\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    return replicas;\n  }\n","date":"2019-12-03 10:10:19","endLine":151,"groupId":"15569","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getBasicReplicaList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5b/64fde54ba44ac9977196fb5e4e1df8cf85042e.src","preCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host1:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node1\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            )\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node2\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            )\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2_2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node3\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            )\n        )\n    );\n    return replicas;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/RequestReplicaListTransformerGeneratorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2019-12-03 10:10:19","commitOrder":2,"curCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host1:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node1\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node2\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2_2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node3\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    return replicas;\n  }\n","date":"2019-12-03 10:10:19","endLine":154,"groupId":"15569","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getBasicReplicaList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/98dd08507babbaa4eabf455fa3ea07cbf35628.src","preCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host1:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node1\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            )\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node2\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            )\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2_2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node3\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            )\n        )\n    );\n    return replicas;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/NodePreferenceRulesComparatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"d8f9f47ca0ecf762e91602d984a1882f1f5e3da9","commitMessage":"@@@SOLR-13992: Refactor code to have collection.  shard name in Replica. Slice (#1051)\n\n* SOLR-13992: Refactor code to have collection name shard name in Replica. Slice","date":"2019-12-03 10:10:19","modifiedFileCount":"25","status":"M","submitter":"Noble Paul"},{"authorTime":"2020-12-01 03:05:48","codes":[{"authorDate":"2020-12-01 03:05:48","commitOrder":3,"curCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.NODE_NAME_PROP, \"node1:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.NODE_NAME_PROP, \"node2:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.NODE_NAME_PROP, \"node3:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    return replicas;\n  }\n","date":"2020-12-01 03:05:48","endLine":166,"groupId":"15569","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getBasicReplicaList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c0/9366decf89768d3776daec38b667fd989ca84d.src","preCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host1:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node1\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node2\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2_2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node3\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    return replicas;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/RequestReplicaListTransformerGeneratorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"},{"authorDate":"2020-12-01 03:05:48","commitOrder":3,"curCode":"  private static List<Replica> getBasicReplicaList() {\n    UrlScheme.INSTANCE.setUrlScheme(UrlScheme.HTTP);\n\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.NODE_NAME_PROP, \"node1:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.NODE_NAME_PROP, \"node2:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.NODE_NAME_PROP, \"node3:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    return replicas;\n  }\n","date":"2020-12-01 03:05:48","endLine":154,"groupId":"15569","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getBasicReplicaList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/63/c44db8b3c165ee2c87f1430188197ba886bd99.src","preCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host1:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node1\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node2\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.BASE_URL_PROP, \"http://host2_2:8983/solr\",\n                ZkStateReader.NODE_NAME_PROP, \"node3\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    return replicas;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/NodePreferenceRulesComparatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"a0492840ee8690ddf48369665c744d16c7dd30cb","commitMessage":"@@@SOLR-12182: Don't persist base_url in ZK as the scheme is variable.  compute from node_name instead (#2010)\n\n","date":"2020-12-01 03:05:48","modifiedFileCount":"53","status":"M","submitter":"Timothy Potter"},{"authorTime":"2021-06-03 06:17:26","codes":[{"authorDate":"2021-06-03 06:17:26","commitOrder":4,"curCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node1:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node2:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node3:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    return replicas;\n  }\n","date":"2021-06-03 06:17:26","endLine":165,"groupId":"6469","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getBasicReplicaList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/49/9565a282232723f8e18e8017d30360e80033c9.src","preCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.NODE_NAME_PROP, \"node1:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.NODE_NAME_PROP, \"node2:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.NODE_NAME_PROP, \"node3:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    return replicas;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/RequestReplicaListTransformerGeneratorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2021-06-03 06:17:26","commitOrder":4,"curCode":"  private static List<Replica> getBasicReplicaList() {\n    UrlScheme.INSTANCE.setUrlScheme(UrlScheme.HTTP);\n\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node1:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node2:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node3:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    return replicas;\n  }\n","date":"2021-06-03 06:17:26","endLine":153,"groupId":"6469","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getBasicReplicaList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/41/31400bf8a2173da2ae50feecb579ee30782cb7.src","preCode":"  private static List<Replica> getBasicReplicaList() {\n    UrlScheme.INSTANCE.setUrlScheme(UrlScheme.HTTP);\n\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            map(\n                ZkStateReader.NODE_NAME_PROP, \"node1:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            map(\n                ZkStateReader.NODE_NAME_PROP, \"node2:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            map(\n                ZkStateReader.NODE_NAME_PROP, \"node3:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    return replicas;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/NodePreferenceRulesComparatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"c8e06a7298a2745c2b83102169073e2f8e8eceb5","commitMessage":"@@@SOLR-15385 Address many rawtypes warnings (#107)\n\nAddressed significant usage of raw types with Class.  Map.  and SolrRequest; removed over 400 SuppressWarning annotations.\n\nMap construction was replaced with Map.of when immutability was possible.  and Utils.makeMap when a mutable map was required.\n\nDiscovered a potential bug in the PackageStore tests where not all assertions were being verified - these tests will be fixed separately.\n\nCo-authored-by: David Smiley <dsmiley@salesforce.com>","date":"2021-06-03 06:17:26","modifiedFileCount":"244","status":"M","submitter":"Mike Drob"},{"authorTime":"2021-06-24 02:21:51","codes":[{"authorDate":"2021-06-03 06:17:26","commitOrder":5,"curCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node1:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node2:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node3:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    return replicas;\n  }\n","date":"2021-06-03 06:17:26","endLine":165,"groupId":"10448","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getBasicReplicaList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/49/9565a282232723f8e18e8017d30360e80033c9.src","preCode":"  private static List<Replica> getBasicReplicaList() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node1:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node2:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node3:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"c1\",\"s1\"\n        )\n    );\n    return replicas;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/RequestReplicaListTransformerGeneratorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"N"},{"authorDate":"2021-06-24 02:21:51","commitOrder":5,"curCode":"  private static List<Replica> getBasicReplicaList() {\n    UrlScheme.INSTANCE.setUrlScheme(UrlScheme.HTTP);\n\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node1:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\",\n                ZkStateReader.LEADER_PROP, \"true\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node2:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node3:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    return replicas;\n  }\n","date":"2021-06-24 02:21:51","endLine":215,"groupId":"10448","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"getBasicReplicaList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1e/06d4b9ed1449eaa8ff53fa9abf2e5f8be10351.src","preCode":"  private static List<Replica> getBasicReplicaList() {\n    UrlScheme.INSTANCE.setUrlScheme(UrlScheme.HTTP);\n\n    List<Replica> replicas = new ArrayList<Replica>();\n    replicas.add(\n        new Replica(\n            \"node1\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node1:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"NRT\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node2\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node2:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"TLOG\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    replicas.add(\n        new Replica(\n            \"node3\",\n            Map.of(\n                ZkStateReader.NODE_NAME_PROP, \"node3:8983_solr\",\n                ZkStateReader.CORE_NAME_PROP, \"collection1\",\n                ZkStateReader.REPLICA_TYPE, \"PULL\"\n            ),\"collection1\",\"shard1\"\n        )\n    );\n    return replicas;\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/routing/NodePreferenceRulesComparatorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"a6d92b10aed60d6bdf43684d3c5359b4f49ccd85","commitMessage":"@@@SOLR-15472: New shards.preference option for preferring replicas based on their leader status (#188)\n\n","date":"2021-06-24 02:21:51","modifiedFileCount":"4","status":"M","submitter":"Timothy Potter"}]
