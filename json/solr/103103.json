[{"authorTime":"2017-02-21 10:27:39","codes":[{"authorDate":"2017-02-21 10:27:39","commitOrder":1,"curCode":"    public void merge(ResponseBuilder rb, ShardRequest shardRequest) {\n      int count = 0;\n      NamedList merged = new NamedList();\n\n      for(ShardResponse shardResponse : shardRequest.responses) {\n        NamedList response = shardResponse.getSolrResponse().getResponse();\n        NamedList analytics = (NamedList)response.get(\"analytics\");\n        Integer c = (Integer)analytics.get(\"mycount\");\n        count += c.intValue();\n      }\n\n      merged.add(\"mycount\", count);\n      rb.rsp.add(\"analytics\", merged);\n    }\n","date":"2017-02-21 10:40:00","endLine":130,"groupId":"52127","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"merge","params":"(ResponseBuilderrb@ShardRequestshardRequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/2fb82546baf2c5711e0876dacd64ea1c591102.src","preCode":"    public void merge(ResponseBuilder rb, ShardRequest shardRequest) {\n      int count = 0;\n      NamedList merged = new NamedList();\n\n      for(ShardResponse shardResponse : shardRequest.responses) {\n        NamedList response = shardResponse.getSolrResponse().getResponse();\n        NamedList analytics = (NamedList)response.get(\"analytics\");\n        Integer c = (Integer)analytics.get(\"mycount\");\n        count += c.intValue();\n      }\n\n      merged.add(\"mycount\", count);\n      rb.rsp.add(\"analytics\", merged);\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/AnalyticsTestQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"},{"authorDate":"2017-02-21 10:27:39","commitOrder":1,"curCode":"    public void process(ResponseBuilder rb, ShardRequest sreq) throws Exception {\n      int count = 0;\n      for(ShardResponse shardResponse : sreq.responses) {\n        NamedList response = shardResponse.getSolrResponse().getResponse();\n        NamedList analytics = (NamedList)response.get(\"analytics\");\n        Integer c = (Integer)analytics.get(\"mycount\");\n        count += c.intValue();\n      }\n\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(\"distrib\", \"false\");\n      params.add(\"fq\",\"{!count base=\"+count+\"}\");\n      params.add(\"q\",\"*:*\");\n\n\n      \r\n\r\n\n\n      QueryRequest request = new QueryRequest(params);\n      List<Future<CallBack>> futures = callBack(sreq.responses, request);\n\n      int nextCount = 0;\n\n      for(Future<CallBack> future : futures) {\n        QueryResponse response = future.get().getResponse();\n        NamedList analytics = (NamedList)response.getResponse().get(\"analytics\");\n        Integer c = (Integer)analytics.get(\"mycount\");\n        nextCount += c.intValue();\n      }\n\n      NamedList merged = new NamedList();\n      merged.add(\"mycount\", nextCount);\n      rb.rsp.add(\"analytics\", merged);\n    }\n","date":"2017-02-21 10:40:00","endLine":169,"groupId":"11647","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"(ResponseBuilderrb@ShardRequestsreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/39/2fb82546baf2c5711e0876dacd64ea1c591102.src","preCode":"    public void process(ResponseBuilder rb, ShardRequest sreq) throws Exception {\n      int count = 0;\n      for(ShardResponse shardResponse : sreq.responses) {\n        NamedList response = shardResponse.getSolrResponse().getResponse();\n        NamedList analytics = (NamedList)response.get(\"analytics\");\n        Integer c = (Integer)analytics.get(\"mycount\");\n        count += c.intValue();\n      }\n\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(\"distrib\", \"false\");\n      params.add(\"fq\",\"{!count base=\"+count+\"}\");\n      params.add(\"q\",\"*:*\");\n\n\n      \r\n\r\n\n\n      QueryRequest request = new QueryRequest(params);\n      List<Future<CallBack>> futures = callBack(sreq.responses, request);\n\n      int nextCount = 0;\n\n      for(Future<CallBack> future : futures) {\n        QueryResponse response = future.get().getResponse();\n        NamedList analytics = (NamedList)response.getResponse().get(\"analytics\");\n        Integer c = (Integer)analytics.get(\"mycount\");\n        nextCount += c.intValue();\n      }\n\n      NamedList merged = new NamedList();\n      merged.add(\"mycount\", nextCount);\n      rb.rsp.add(\"analytics\", merged);\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/AnalyticsTestQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"B"}],"commitId":"fa5851095f6fee1f1119c5d76b36778ab1af3627","commitMessage":"@@@SOLR-10175: Rename test so it doesn't match test glob pattern.\n","date":"2017-02-21 10:40:00","modifiedFileCount":"1","status":"B","submitter":"markrmiller"},{"authorTime":"2020-06-18 05:51:41","codes":[{"authorDate":"2020-06-18 05:51:41","commitOrder":2,"curCode":"    public void merge(ResponseBuilder rb, ShardRequest shardRequest) {\n      int count = 0;\n      @SuppressWarnings({\"rawtypes\"})\n      NamedList merged = new NamedList();\n\n      for(ShardResponse shardResponse : shardRequest.responses) {\n        @SuppressWarnings({\"rawtypes\"})\n        NamedList response = shardResponse.getSolrResponse().getResponse();\n        @SuppressWarnings({\"rawtypes\"})\n        NamedList analytics = (NamedList)response.get(\"analytics\");\n        Integer c = (Integer)analytics.get(\"mycount\");\n        count += c.intValue();\n      }\n\n      merged.add(\"mycount\", count);\n      rb.rsp.add(\"analytics\", merged);\n    }\n","date":"2020-06-18 05:51:41","endLine":136,"groupId":"103103","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"merge","params":"(ResponseBuilderrb@ShardRequestshardRequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b2/a733f8f2a90cb9a54af343bdd1641b7071a405.src","preCode":"    public void merge(ResponseBuilder rb, ShardRequest shardRequest) {\n      int count = 0;\n      NamedList merged = new NamedList();\n\n      for(ShardResponse shardResponse : shardRequest.responses) {\n        NamedList response = shardResponse.getSolrResponse().getResponse();\n        NamedList analytics = (NamedList)response.get(\"analytics\");\n        Integer c = (Integer)analytics.get(\"mycount\");\n        count += c.intValue();\n      }\n\n      merged.add(\"mycount\", count);\n      rb.rsp.add(\"analytics\", merged);\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/AnalyticsTestQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"},{"authorDate":"2020-06-18 05:51:41","commitOrder":2,"curCode":"    public void process(ResponseBuilder rb, ShardRequest sreq) throws Exception {\n      int count = 0;\n      for(ShardResponse shardResponse : sreq.responses) {\n        @SuppressWarnings({\"rawtypes\"})\n        NamedList response = shardResponse.getSolrResponse().getResponse();\n        @SuppressWarnings({\"rawtypes\"})\n        NamedList analytics = (NamedList)response.get(\"analytics\");\n        Integer c = (Integer)analytics.get(\"mycount\");\n        count += c.intValue();\n      }\n\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(\"distrib\", \"false\");\n      params.add(\"fq\",\"{!count base=\"+count+\"}\");\n      params.add(\"q\",\"*:*\");\n\n\n      \r\n\r\n\n\n      QueryRequest request = new QueryRequest(params);\n      List<Future<CallBack>> futures = callBack(sreq.responses, request);\n\n      int nextCount = 0;\n\n      for(Future<CallBack> future : futures) {\n        QueryResponse response = future.get().getResponse();\n        @SuppressWarnings({\"rawtypes\"})\n        NamedList analytics = (NamedList)response.getResponse().get(\"analytics\");\n        Integer c = (Integer)analytics.get(\"mycount\");\n        nextCount += c.intValue();\n      }\n\n      @SuppressWarnings({\"rawtypes\"})\n      NamedList merged = new NamedList();\n      merged.add(\"mycount\", nextCount);\n      rb.rsp.add(\"analytics\", merged);\n    }\n","date":"2020-06-18 05:51:41","endLine":180,"groupId":"103103","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"process","params":"(ResponseBuilderrb@ShardRequestsreq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b2/a733f8f2a90cb9a54af343bdd1641b7071a405.src","preCode":"    public void process(ResponseBuilder rb, ShardRequest sreq) throws Exception {\n      int count = 0;\n      for(ShardResponse shardResponse : sreq.responses) {\n        NamedList response = shardResponse.getSolrResponse().getResponse();\n        NamedList analytics = (NamedList)response.get(\"analytics\");\n        Integer c = (Integer)analytics.get(\"mycount\");\n        count += c.intValue();\n      }\n\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(\"distrib\", \"false\");\n      params.add(\"fq\",\"{!count base=\"+count+\"}\");\n      params.add(\"q\",\"*:*\");\n\n\n      \r\n\r\n\n\n      QueryRequest request = new QueryRequest(params);\n      List<Future<CallBack>> futures = callBack(sreq.responses, request);\n\n      int nextCount = 0;\n\n      for(Future<CallBack> future : futures) {\n        QueryResponse response = future.get().getResponse();\n        NamedList analytics = (NamedList)response.getResponse().get(\"analytics\");\n        Integer c = (Integer)analytics.get(\"mycount\");\n        nextCount += c.intValue();\n      }\n\n      NamedList merged = new NamedList();\n      merged.add(\"mycount\", nextCount);\n      rb.rsp.add(\"analytics\", merged);\n    }\n","realPath":"solr/core/src/test/org/apache/solr/search/AnalyticsTestQParserPlugin.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"b01e249c9ec724b6df120a5d731020cfe4de3fce","commitMessage":"@@@SOLR-14574: Fix or suppress warnings in solr/core/src/test (part 1)\n","date":"2020-06-18 05:51:41","modifiedFileCount":"213","status":"M","submitter":"Erick Erickson"}]
