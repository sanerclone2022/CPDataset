[{"authorTime":"2016-07-06 00:14:47","codes":[{"authorDate":"2016-07-06 00:14:47","commitOrder":1,"curCode":"  public static CloudSolrClient getCloudSolrClient(String zkHost, boolean shardLeadersOnly) {\n    if (random().nextBoolean()) {\n      return new CloudSolrClient(zkHost, shardLeadersOnly);\n    }\n    \n    if (shardLeadersOnly) {\n      return new CloudSolrClientBuilder()\n          .withZkHost(zkHost)\n          .sendUpdatesOnlyToShardLeaders()\n          .build();\n    }\n    return new CloudSolrClientBuilder()\n        .withZkHost(zkHost)\n        .sendUpdatesToAllReplicasInShard()\n        .build();\n  }\n","date":"2016-07-07 17:03:21","endLine":2122,"groupId":"845","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getCloudSolrClient","params":"(StringzkHost@booleanshardLeadersOnly)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ea/70805ab2ac279f3ea7d5f5106f39eb9f5363fc.src","preCode":"  public static CloudSolrClient getCloudSolrClient(String zkHost, boolean shardLeadersOnly) {\n    if (random().nextBoolean()) {\n      return new CloudSolrClient(zkHost, shardLeadersOnly);\n    }\n    \n    if (shardLeadersOnly) {\n      return new CloudSolrClientBuilder()\n          .withZkHost(zkHost)\n          .sendUpdatesOnlyToShardLeaders()\n          .build();\n    }\n    return new CloudSolrClientBuilder()\n        .withZkHost(zkHost)\n        .sendUpdatesToAllReplicasInShard()\n        .build();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2107,"status":"B"},{"authorDate":"2016-07-06 00:14:47","commitOrder":1,"curCode":"  public static CloudSolrClient getCloudSolrClient(String zkHost, boolean shardLeadersOnly, HttpClient httpClient) {\n    if (random().nextBoolean()) {\n      return new CloudSolrClient(zkHost, shardLeadersOnly, httpClient);\n    }\n    \n    if (shardLeadersOnly) {\n      return new CloudSolrClientBuilder()\n          .withZkHost(zkHost)\n          .withHttpClient(httpClient)\n          .sendUpdatesOnlyToShardLeaders()\n          .build();\n    }\n    return new CloudSolrClientBuilder()\n        .withZkHost(zkHost)\n        .withHttpClient(httpClient)\n        .sendUpdatesToAllReplicasInShard()\n        .build();\n  }\n","date":"2016-07-07 17:03:21","endLine":2141,"groupId":"847","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getCloudSolrClient","params":"(StringzkHost@booleanshardLeadersOnly@HttpClienthttpClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ea/70805ab2ac279f3ea7d5f5106f39eb9f5363fc.src","preCode":"  public static CloudSolrClient getCloudSolrClient(String zkHost, boolean shardLeadersOnly, HttpClient httpClient) {\n    if (random().nextBoolean()) {\n      return new CloudSolrClient(zkHost, shardLeadersOnly, httpClient);\n    }\n    \n    if (shardLeadersOnly) {\n      return new CloudSolrClientBuilder()\n          .withZkHost(zkHost)\n          .withHttpClient(httpClient)\n          .sendUpdatesOnlyToShardLeaders()\n          .build();\n    }\n    return new CloudSolrClientBuilder()\n        .withZkHost(zkHost)\n        .withHttpClient(httpClient)\n        .sendUpdatesToAllReplicasInShard()\n        .build();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2124,"status":"B"}],"commitId":"976079a8ee8a2cff1c8df01ae9f2856b3ddcdac3","commitMessage":"@@@SOLR-9090: Add directUpdatesToLeadersOnly flag to solrj CloudSolrClient. (Marvin Justice.  Christine Poerschke)\n","date":"2016-07-07 17:03:21","modifiedFileCount":"5","status":"B","submitter":"Christine Poerschke"},{"authorTime":"2017-05-31 19:56:14","codes":[{"authorDate":"2016-07-06 00:14:47","commitOrder":2,"curCode":"  public static CloudSolrClient getCloudSolrClient(String zkHost, boolean shardLeadersOnly) {\n    if (random().nextBoolean()) {\n      return new CloudSolrClient(zkHost, shardLeadersOnly);\n    }\n    \n    if (shardLeadersOnly) {\n      return new CloudSolrClientBuilder()\n          .withZkHost(zkHost)\n          .sendUpdatesOnlyToShardLeaders()\n          .build();\n    }\n    return new CloudSolrClientBuilder()\n        .withZkHost(zkHost)\n        .sendUpdatesToAllReplicasInShard()\n        .build();\n  }\n","date":"2016-07-07 17:03:21","endLine":2122,"groupId":"845","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getCloudSolrClient","params":"(StringzkHost@booleanshardLeadersOnly)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ea/70805ab2ac279f3ea7d5f5106f39eb9f5363fc.src","preCode":"  public static CloudSolrClient getCloudSolrClient(String zkHost, boolean shardLeadersOnly) {\n    if (random().nextBoolean()) {\n      return new CloudSolrClient(zkHost, shardLeadersOnly);\n    }\n    \n    if (shardLeadersOnly) {\n      return new CloudSolrClientBuilder()\n          .withZkHost(zkHost)\n          .sendUpdatesOnlyToShardLeaders()\n          .build();\n    }\n    return new CloudSolrClientBuilder()\n        .withZkHost(zkHost)\n        .sendUpdatesToAllReplicasInShard()\n        .build();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2107,"status":"N"},{"authorDate":"2017-05-31 19:56:14","commitOrder":2,"curCode":"  public static CloudSolrClient getCloudSolrClient(String zkHost, boolean shardLeadersOnly, HttpClient httpClient) {\n    if (shardLeadersOnly) {\n      return new CloudSolrClientBuilder()\n          .withZkHost(zkHost)\n          .withHttpClient(httpClient)\n          .sendUpdatesOnlyToShardLeaders()\n          .build();\n    }\n    return new CloudSolrClientBuilder()\n        .withZkHost(zkHost)\n        .withHttpClient(httpClient)\n        .sendUpdatesToAllReplicasInShard()\n        .build();\n  }\n","date":"2017-05-31 19:56:14","endLine":2336,"groupId":"847","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getCloudSolrClient","params":"(StringzkHost@booleanshardLeadersOnly@HttpClienthttpClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/41/9f94f0cf3a9f7a2e356ebc16e578ef9f12bc95.src","preCode":"  public static CloudSolrClient getCloudSolrClient(String zkHost, boolean shardLeadersOnly, HttpClient httpClient) {\n    if (random().nextBoolean()) {\n      return new CloudSolrClient(zkHost, shardLeadersOnly, httpClient);\n    }\n    \n    if (shardLeadersOnly) {\n      return new CloudSolrClientBuilder()\n          .withZkHost(zkHost)\n          .withHttpClient(httpClient)\n          .sendUpdatesOnlyToShardLeaders()\n          .build();\n    }\n    return new CloudSolrClientBuilder()\n        .withZkHost(zkHost)\n        .withHttpClient(httpClient)\n        .sendUpdatesToAllReplicasInShard()\n        .build();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2323,"status":"M"}],"commitId":"97693234def7fb4fc92d8fbaab775705aaaaf565","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-05-31 19:56:14","modifiedFileCount":"119","status":"M","submitter":"Karl Wright"},{"authorTime":"2018-03-10 22:30:57","codes":[{"authorDate":"2018-03-10 22:30:57","commitOrder":3,"curCode":"  public static CloudSolrClient getCloudSolrClient(String zkHost, boolean shardLeadersOnly) {\n    if (shardLeadersOnly) {\n      return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())\n          .sendUpdatesOnlyToShardLeaders()\n          .build();\n    }\n    return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())\n        .sendUpdatesToAllReplicasInShard()\n        .build();\n  }\n","date":"2018-03-10 23:45:43","endLine":2323,"groupId":"111869","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getCloudSolrClient","params":"(StringzkHost@booleanshardLeadersOnly)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e0/90246d5f21a3eb8d4b7a040a70eb27c80b5060.src","preCode":"  public static CloudSolrClient getCloudSolrClient(String zkHost, boolean shardLeadersOnly) {\n    if (random().nextBoolean()) {\n      return new CloudSolrClient(zkHost, shardLeadersOnly);\n    }\n    \n    if (shardLeadersOnly) {\n      return new CloudSolrClientBuilder()\n          .withZkHost(zkHost)\n          .sendUpdatesOnlyToShardLeaders()\n          .build();\n    }\n    return new CloudSolrClientBuilder()\n        .withZkHost(zkHost)\n        .sendUpdatesToAllReplicasInShard()\n        .build();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2314,"status":"M"},{"authorDate":"2018-03-10 22:30:57","commitOrder":3,"curCode":"  public static CloudSolrClient getCloudSolrClient(String zkHost, boolean shardLeadersOnly, HttpClient httpClient) {\n    if (shardLeadersOnly) {\n      return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())\n          .withHttpClient(httpClient)\n          .sendUpdatesOnlyToShardLeaders()\n          .build();\n    }\n    return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())\n        .withHttpClient(httpClient)\n        .sendUpdatesToAllReplicasInShard()\n        .build();\n  }\n","date":"2018-03-10 23:45:43","endLine":2385,"groupId":"111869","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getCloudSolrClient","params":"(StringzkHost@booleanshardLeadersOnly@HttpClienthttpClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e0/90246d5f21a3eb8d4b7a040a70eb27c80b5060.src","preCode":"  public static CloudSolrClient getCloudSolrClient(String zkHost, boolean shardLeadersOnly, HttpClient httpClient) {\n    if (shardLeadersOnly) {\n      return new CloudSolrClientBuilder()\n          .withZkHost(zkHost)\n          .withHttpClient(httpClient)\n          .sendUpdatesOnlyToShardLeaders()\n          .build();\n    }\n    return new CloudSolrClientBuilder()\n        .withZkHost(zkHost)\n        .withHttpClient(httpClient)\n        .sendUpdatesToAllReplicasInShard()\n        .build();\n  }\n","realPath":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":2374,"status":"M"}],"commitId":"971bd26df6ecfa9c266910a8008a2dad52d4443a","commitMessage":"@@@SOLR-11629: Add new CloudSolrClient.Builder ctors\n\nCloudSolrClient.Builder can be pointed at a Solr cluster in two ways: a\nZK connection string.  or one or more Solr base URLs.  One of these two\nvalues must be provided to create a working CloudSolrClient.\n\nSince these values are required.  this commit introduces two new ctors. \none for each means of CloudSolrClient setup.  It deprecates the existing\nno-arg CloudSolrClient ctor.\n\nTogether.  these changes make it clearer to our users that these options\nare required (and mutually exclusive).\n","date":"2018-03-10 23:45:43","modifiedFileCount":"24","status":"M","submitter":"Jason Gerlowski"}]
