[{"authorTime":"2016-07-29 10:45:43","codes":[{"authorDate":"2015-05-18 04:57:23","commitOrder":4,"curCode":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    \r\n    \r\n  }\n","date":"2015-05-18 04:57:23","endLine":963,"groupId":"5118","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/83/7ccdcd2b16115990c71bc426bcfb918e622f40.src","preCode":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    \r\n    \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":948,"status":"NB"},{"authorDate":"2016-07-29 10:45:43","commitOrder":4,"curCode":"  public void testCompares() throws Exception {\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i, 2)\");\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i,2)\");\n    assertFuncEquals(\"lt(foo_i,2)\", \"lt(foo_i,2)\");\n    assertFuncEquals(\"lte(foo_i,2)\", \"lte(foo_i,2)\");\n    assertFuncEquals(\"gte(foo_i,2)\", \"gte(foo_i,2)\");\n    assertFuncEquals(\"eq(foo_i,2)\", \"eq(foo_i,2)\");\n\n    boolean equals = false;\n    try {\n      assertFuncEquals(\"eq(foo_i,2)\", \"lt(foo_i,2)\");\n      equals = true;\n    } catch (AssertionError e) {\n      \r\n    }\n    assertFalse(equals);\n  }\n","date":"2016-07-29 10:45:43","endLine":1095,"groupId":"61029","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompares","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9c/51844ecb01a6dcc274444f964d4964509d4b32.src","preCode":"  public void testCompares() throws Exception {\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i, 2)\");\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i,2)\");\n    assertFuncEquals(\"lt(foo_i,2)\", \"lt(foo_i,2)\");\n    assertFuncEquals(\"lte(foo_i,2)\", \"lte(foo_i,2)\");\n    assertFuncEquals(\"gte(foo_i,2)\", \"gte(foo_i,2)\");\n    assertFuncEquals(\"eq(foo_i,2)\", \"eq(foo_i,2)\");\n\n    boolean equals = false;\n    try {\n      assertFuncEquals(\"eq(foo_i,2)\", \"lt(foo_i,2)\");\n      equals = true;\n    } catch (AssertionError e) {\n      \r\n    }\n    assertFalse(equals);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1079,"status":"B"}],"commitId":"d12b93e2729036b0c04621114429c25739499243","commitMessage":"@@@SOLR-9279: new function queries: gt.  gte.  lt.  lte.  eq\nLucene Queries module: new ComparisonBoolFunction base class\n","date":"2016-07-29 10:45:43","modifiedFileCount":"3","status":"M","submitter":"David Smiley"},{"authorTime":"2016-07-29 10:45:43","codes":[{"authorDate":"2017-04-18 10:30:29","commitOrder":5,"curCode":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    \r\n  }\n","date":"2017-04-18 10:30:29","endLine":1105,"groupId":"5118","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/d758614e314e39d27358eb86dd2c7195e82f7f.src","preCode":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    \r\n    \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1089,"status":"M"},{"authorDate":"2016-07-29 10:45:43","commitOrder":5,"curCode":"  public void testCompares() throws Exception {\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i, 2)\");\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i,2)\");\n    assertFuncEquals(\"lt(foo_i,2)\", \"lt(foo_i,2)\");\n    assertFuncEquals(\"lte(foo_i,2)\", \"lte(foo_i,2)\");\n    assertFuncEquals(\"gte(foo_i,2)\", \"gte(foo_i,2)\");\n    assertFuncEquals(\"eq(foo_i,2)\", \"eq(foo_i,2)\");\n\n    boolean equals = false;\n    try {\n      assertFuncEquals(\"eq(foo_i,2)\", \"lt(foo_i,2)\");\n      equals = true;\n    } catch (AssertionError e) {\n      \r\n    }\n    assertFalse(equals);\n  }\n","date":"2016-07-29 10:45:43","endLine":1095,"groupId":"61029","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompares","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9c/51844ecb01a6dcc274444f964d4964509d4b32.src","preCode":"  public void testCompares() throws Exception {\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i, 2)\");\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i,2)\");\n    assertFuncEquals(\"lt(foo_i,2)\", \"lt(foo_i,2)\");\n    assertFuncEquals(\"lte(foo_i,2)\", \"lte(foo_i,2)\");\n    assertFuncEquals(\"gte(foo_i,2)\", \"gte(foo_i,2)\");\n    assertFuncEquals(\"eq(foo_i,2)\", \"eq(foo_i,2)\");\n\n    boolean equals = false;\n    try {\n      assertFuncEquals(\"eq(foo_i,2)\", \"lt(foo_i,2)\");\n      equals = true;\n    } catch (AssertionError e) {\n      \r\n    }\n    assertFalse(equals);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1079,"status":"N"}],"commitId":"3145f781b3b55ebbd6374f40db7fe7b676b8d1af","commitMessage":"@@@SOLR-10082: JSON Facet API.  add stddev and variance functions\n","date":"2017-04-18 10:30:29","modifiedFileCount":"4","status":"M","submitter":"yonik"},{"authorTime":"2016-07-29 10:45:43","codes":[{"authorDate":"2018-05-02 01:19:15","commitOrder":6,"curCode":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_uniqueBlock(foo_i)\", \"agg_uniqueBlock(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    \r\n  }\n","date":"2018-05-02 01:19:15","endLine":1172,"groupId":"5118","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d5/6207679464d3d5e173ebd23e25e13dac5dccbf.src","preCode":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1155,"status":"M"},{"authorDate":"2016-07-29 10:45:43","commitOrder":6,"curCode":"  public void testCompares() throws Exception {\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i, 2)\");\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i,2)\");\n    assertFuncEquals(\"lt(foo_i,2)\", \"lt(foo_i,2)\");\n    assertFuncEquals(\"lte(foo_i,2)\", \"lte(foo_i,2)\");\n    assertFuncEquals(\"gte(foo_i,2)\", \"gte(foo_i,2)\");\n    assertFuncEquals(\"eq(foo_i,2)\", \"eq(foo_i,2)\");\n\n    boolean equals = false;\n    try {\n      assertFuncEquals(\"eq(foo_i,2)\", \"lt(foo_i,2)\");\n      equals = true;\n    } catch (AssertionError e) {\n      \r\n    }\n    assertFalse(equals);\n  }\n","date":"2016-07-29 10:45:43","endLine":1095,"groupId":"61029","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompares","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9c/51844ecb01a6dcc274444f964d4964509d4b32.src","preCode":"  public void testCompares() throws Exception {\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i, 2)\");\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i,2)\");\n    assertFuncEquals(\"lt(foo_i,2)\", \"lt(foo_i,2)\");\n    assertFuncEquals(\"lte(foo_i,2)\", \"lte(foo_i,2)\");\n    assertFuncEquals(\"gte(foo_i,2)\", \"gte(foo_i,2)\");\n    assertFuncEquals(\"eq(foo_i,2)\", \"eq(foo_i,2)\");\n\n    boolean equals = false;\n    try {\n      assertFuncEquals(\"eq(foo_i,2)\", \"lt(foo_i,2)\");\n      equals = true;\n    } catch (AssertionError e) {\n      \r\n    }\n    assertFalse(equals);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1079,"status":"N"}],"commitId":"ee7b52f4c6fe55f0d07ce8228c246b61d1f2b5fb","commitMessage":"@@@SOLR-8998: uniqueBlock() aggreagation for singlevalue string fields in json.facet\n","date":"2018-05-02 01:19:15","modifiedFileCount":"5","status":"M","submitter":"Mikhail Khludnev"},{"authorTime":"2018-11-03 05:12:41","codes":[{"authorDate":"2018-05-02 01:19:15","commitOrder":7,"curCode":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_uniqueBlock(foo_i)\", \"agg_uniqueBlock(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    \r\n  }\n","date":"2018-05-02 01:19:15","endLine":1172,"groupId":"5118","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d5/6207679464d3d5e173ebd23e25e13dac5dccbf.src","preCode":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_uniqueBlock(foo_i)\", \"agg_uniqueBlock(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1155,"status":"N"},{"authorDate":"2018-11-03 05:12:41","commitOrder":7,"curCode":"  public void testCompares() throws Exception {\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i, 2)\");\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i,2)\");\n    assertFuncEquals(\"lt(foo_i,2)\", \"lt(foo_i,2)\");\n    assertFuncEquals(\"lte(foo_i,2)\", \"lte(foo_i,2)\");\n    assertFuncEquals(\"gte(foo_i,2)\", \"gte(foo_i,2)\");\n    assertFuncEquals(\"eq(foo_i,2)\", \"eq(foo_i,2)\");\n\n    expectThrows(AssertionError.class, \"expected error, functions are not equal\",\n        () -> assertFuncEquals(\"eq(foo_i,2)\", \"lt(foo_i,2)\"));\n  }\n","date":"2018-11-03 22:48:16","endLine":1207,"groupId":"5118","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompares","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a2/7ad2da0ba6467292b7ba722224e6022befc119.src","preCode":"  public void testCompares() throws Exception {\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i, 2)\");\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i,2)\");\n    assertFuncEquals(\"lt(foo_i,2)\", \"lt(foo_i,2)\");\n    assertFuncEquals(\"lte(foo_i,2)\", \"lte(foo_i,2)\");\n    assertFuncEquals(\"gte(foo_i,2)\", \"gte(foo_i,2)\");\n    assertFuncEquals(\"eq(foo_i,2)\", \"eq(foo_i,2)\");\n\n    boolean equals = false;\n    try {\n      assertFuncEquals(\"eq(foo_i,2)\", \"lt(foo_i,2)\");\n      equals = true;\n    } catch (AssertionError e) {\n      \r\n    }\n    assertFalse(equals);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1197,"status":"M"}],"commitId":"f669a1fb0e1ff974df93229c41cd397956cb1e9a","commitMessage":"@@@SOLR-12555: Use `expectThrows` for expected exceptions\n\nThis commit replaces the `try { doX(); fail(); }` pattern with the\n`expectThrows` test helper.  which was created for this purpose.\n\nThis commit makes these changes in the core package: `o.a.solr.search`.\n\nCloses #464\n","date":"2018-11-03 22:48:16","modifiedFileCount":"10","status":"M","submitter":"Jason Gerlowski"},{"authorTime":"2018-11-03 05:12:41","codes":[{"authorDate":"2019-11-16 14:26:47","commitOrder":8,"curCode":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_uniqueBlock(foo_i)\", \"agg_uniqueBlock(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    assertFuncEquals(\"agg_missing(foo_i)\", \"agg_missing(foo_i)\");\n    assertFuncEquals(\"agg(missing(foo_i))\", \"agg(missing(foo_i))\");\n    assertFuncEquals(\"agg_missing(field(foo_i))\", \"agg_missing(field(foo_i))\");\n    \r\n  }\n","date":"2019-11-16 14:42:11","endLine":1198,"groupId":"5118","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/db/d4f1a6675edaffa3dca779f1f6ff23be3cd4d0.src","preCode":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_uniqueBlock(foo_i)\", \"agg_uniqueBlock(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1178,"status":"M"},{"authorDate":"2018-11-03 05:12:41","commitOrder":8,"curCode":"  public void testCompares() throws Exception {\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i, 2)\");\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i,2)\");\n    assertFuncEquals(\"lt(foo_i,2)\", \"lt(foo_i,2)\");\n    assertFuncEquals(\"lte(foo_i,2)\", \"lte(foo_i,2)\");\n    assertFuncEquals(\"gte(foo_i,2)\", \"gte(foo_i,2)\");\n    assertFuncEquals(\"eq(foo_i,2)\", \"eq(foo_i,2)\");\n\n    expectThrows(AssertionError.class, \"expected error, functions are not equal\",\n        () -> assertFuncEquals(\"eq(foo_i,2)\", \"lt(foo_i,2)\"));\n  }\n","date":"2018-11-03 22:48:16","endLine":1207,"groupId":"5118","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompares","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a2/7ad2da0ba6467292b7ba722224e6022befc119.src","preCode":"  public void testCompares() throws Exception {\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i, 2)\");\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i,2)\");\n    assertFuncEquals(\"lt(foo_i,2)\", \"lt(foo_i,2)\");\n    assertFuncEquals(\"lte(foo_i,2)\", \"lte(foo_i,2)\");\n    assertFuncEquals(\"gte(foo_i,2)\", \"gte(foo_i,2)\");\n    assertFuncEquals(\"eq(foo_i,2)\", \"eq(foo_i,2)\");\n\n    expectThrows(AssertionError.class, \"expected error, functions are not equal\",\n        () -> assertFuncEquals(\"eq(foo_i,2)\", \"lt(foo_i,2)\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1197,"status":"N"}],"commitId":"0602956a446269f0f32fc2951a2b885d7ec28744","commitMessage":"@@@SOLR-13911: add support for missing aggregation in JSON facet module\n\n* This missing aggregation is equivalent to StatsComponent's missing\n","date":"2019-11-16 14:42:11","modifiedFileCount":"4","status":"M","submitter":"Munendra S N"},{"authorTime":"2018-11-03 05:12:41","codes":[{"authorDate":"2019-11-22 20:46:20","commitOrder":9,"curCode":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_uniqueBlock(foo_i)\", \"agg_uniqueBlock(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    assertFuncEquals(\"agg_missing(foo_i)\", \"agg_missing(foo_i)\");\n    assertFuncEquals(\"agg(missing(foo_i))\", \"agg(missing(foo_i))\");\n    assertFuncEquals(\"agg_missing(field(foo_i))\", \"agg_missing(field(foo_i))\");\n    assertFuncEquals(\"agg_countvals(foo_i)\", \"agg_countvals(foo_i)\");\n    assertFuncEquals(\"agg(countvals(foo_i))\", \"agg(countvals(foo_i))\");\n    assertFuncEquals(\"agg_countvals(field(foo_i))\", \"agg_countvals(field(foo_i))\");\n    \r\n  }\n","date":"2019-11-22 20:46:20","endLine":1201,"groupId":"103150","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/95/6275db665aad678daceed8df80025b9ce196cb.src","preCode":"  public void testAggs() throws Exception {\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg(avg(foo_i))\");\n    assertFuncEquals(\"agg(avg(foo_i))\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_min(foo_i)\", \"agg(min(foo_i))\");\n    assertFuncEquals(\"agg_max(foo_i)\", \"agg(max(foo_i))\");\n\n    assertFuncEquals(\"agg_avg(foo_i)\", \"agg_avg(foo_i)\");\n    assertFuncEquals(\"agg_sum(foo_i)\", \"agg_sum(foo_i)\");\n    assertFuncEquals(\"agg_count()\", \"agg_count()\");\n    assertFuncEquals(\"agg_unique(foo_i)\", \"agg_unique(foo_i)\");\n    assertFuncEquals(\"agg_uniqueBlock(foo_i)\", \"agg_uniqueBlock(foo_i)\");\n    assertFuncEquals(\"agg_hll(foo_i)\", \"agg_hll(foo_i)\");\n    assertFuncEquals(\"agg_sumsq(foo_i)\", \"agg_sumsq(foo_i)\");\n    assertFuncEquals(\"agg_percentile(foo_i,50)\", \"agg_percentile(foo_i,50)\");\n    assertFuncEquals(\"agg_variance(foo_i)\", \"agg_variance(foo_i)\");\n    assertFuncEquals(\"agg_stddev(foo_i)\", \"agg_stddev(foo_i)\");\n    assertFuncEquals(\"agg_missing(foo_i)\", \"agg_missing(foo_i)\");\n    assertFuncEquals(\"agg(missing(foo_i))\", \"agg(missing(foo_i))\");\n    assertFuncEquals(\"agg_missing(field(foo_i))\", \"agg_missing(field(foo_i))\");\n    \r\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1178,"status":"M"},{"authorDate":"2018-11-03 05:12:41","commitOrder":9,"curCode":"  public void testCompares() throws Exception {\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i, 2)\");\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i,2)\");\n    assertFuncEquals(\"lt(foo_i,2)\", \"lt(foo_i,2)\");\n    assertFuncEquals(\"lte(foo_i,2)\", \"lte(foo_i,2)\");\n    assertFuncEquals(\"gte(foo_i,2)\", \"gte(foo_i,2)\");\n    assertFuncEquals(\"eq(foo_i,2)\", \"eq(foo_i,2)\");\n\n    expectThrows(AssertionError.class, \"expected error, functions are not equal\",\n        () -> assertFuncEquals(\"eq(foo_i,2)\", \"lt(foo_i,2)\"));\n  }\n","date":"2018-11-03 22:48:16","endLine":1207,"groupId":"103150","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompares","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a2/7ad2da0ba6467292b7ba722224e6022befc119.src","preCode":"  public void testCompares() throws Exception {\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i, 2)\");\n    assertFuncEquals(\"gt(foo_i,2)\", \"gt(foo_i,2)\");\n    assertFuncEquals(\"lt(foo_i,2)\", \"lt(foo_i,2)\");\n    assertFuncEquals(\"lte(foo_i,2)\", \"lte(foo_i,2)\");\n    assertFuncEquals(\"gte(foo_i,2)\", \"gte(foo_i,2)\");\n    assertFuncEquals(\"eq(foo_i,2)\", \"eq(foo_i,2)\");\n\n    expectThrows(AssertionError.class, \"expected error, functions are not equal\",\n        () -> assertFuncEquals(\"eq(foo_i,2)\", \"lt(foo_i,2)\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1197,"status":"N"}],"commitId":"2740d90dee8aef81d98afd63a53ac06320b7e73e","commitMessage":"@@@SOLR-13912: add support for countvals aggregation in JSON facet module\n\n* This aggregation is equivalent to StatsComponent's count\n","date":"2019-11-22 20:46:20","modifiedFileCount":"6","status":"M","submitter":"Munendra S N"}]
