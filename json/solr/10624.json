[{"authorTime":"2018-04-05 23:21:49","codes":[{"authorDate":"2018-04-05 23:21:49","commitOrder":1,"curCode":"  public void testBinomialCoefficient() throws Exception {\n    String cexpr = \"binomialCoefficient(8,3)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long binomialCoefficient = (long) tuple.get(\"return-value\");\n    assertEquals(binomialCoefficient, 56);\n  }\n","date":"2018-04-06 02:00:07","endLine":769,"groupId":"12026","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBinomialCoefficient","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/41/116e2472f896490c08d0d10885a3045e839b67.src","preCode":"  public void testBinomialCoefficient() throws Exception {\n    String cexpr = \"binomialCoefficient(8,3)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long binomialCoefficient = (long) tuple.get(\"return-value\");\n    assertEquals(binomialCoefficient, 56);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":755,"status":"B"},{"authorDate":"2018-04-05 23:21:49","commitOrder":1,"curCode":"  public void testFinddelay() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n\n    \r\n    updateRequest.add(id, \"10\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"11\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"12\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"1\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"1\");\n    updateRequest.add(id, \"2\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"2\");\n    updateRequest.add(id, \"3\", \"price_f\", \"300.0\", \"col_s\", \"a\", \"order_i\", \"3\");\n    updateRequest.add(id, \"4\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"4\");\n    updateRequest.add(id, \"5\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"5\");\n    updateRequest.add(id, \"6\", \"price_f\", \"400.0\", \"col_s\", \"a\", \"order_i\", \"6\");\n    updateRequest.add(id, \"7\", \"price_f\", \"600.0\", \"col_s\", \"a\", \"order_i\", \"7\");\n\n    updateRequest.add(id, \"100\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"1\");\n    updateRequest.add(id, \"101\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"2\");\n    updateRequest.add(id, \"102\", \"price_f\", \"600.0\", \"col_s\", \"b\", \"order_i\", \"3\");\n    updateRequest.add(id, \"103\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"4\");\n    updateRequest.add(id, \"104\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"5\");\n    updateRequest.add(id, \"105\", \"price_f\", \"800.0\", \"col_s\", \"b\", \"order_i\", \"6\");\n    updateRequest.add(id, \"106\", \"price_f\", \"1200.0\", \"col_s\", \"b\", \"order_i\", \"7\");\n\n\n    updateRequest.add(id, \"200\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"1\");\n    updateRequest.add(id, \"301\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"2\");\n    updateRequest.add(id, \"402\", \"price_f\", \"-600.0\", \"col_s\", \"c\", \"order_i\", \"3\");\n    updateRequest.add(id, \"503\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"4\");\n    updateRequest.add(id, \"604\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"5\");\n    updateRequest.add(id, \"705\", \"price_f\", \"-800.0\", \"col_s\", \"c\", \"order_i\", \"6\");\n    updateRequest.add(id, \"806\", \"price_f\", \"-1200.0\", \"col_s\", \"c\", \"order_i\", \"7\");\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    String expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    String cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long delay = tuple.getLong(\"delay\");\n    assert(delay == 3);\n\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7)\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 0);\n\n    \r\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7 11 12)\\\",fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:c\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 2);\n  }\n","date":"2018-04-06 02:00:07","endLine":3922,"groupId":"12026","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinddelay","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/41/116e2472f896490c08d0d10885a3045e839b67.src","preCode":"  public void testFinddelay() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n\n    \r\n    updateRequest.add(id, \"10\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"11\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"12\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"1\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"1\");\n    updateRequest.add(id, \"2\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"2\");\n    updateRequest.add(id, \"3\", \"price_f\", \"300.0\", \"col_s\", \"a\", \"order_i\", \"3\");\n    updateRequest.add(id, \"4\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"4\");\n    updateRequest.add(id, \"5\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"5\");\n    updateRequest.add(id, \"6\", \"price_f\", \"400.0\", \"col_s\", \"a\", \"order_i\", \"6\");\n    updateRequest.add(id, \"7\", \"price_f\", \"600.0\", \"col_s\", \"a\", \"order_i\", \"7\");\n\n    updateRequest.add(id, \"100\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"1\");\n    updateRequest.add(id, \"101\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"2\");\n    updateRequest.add(id, \"102\", \"price_f\", \"600.0\", \"col_s\", \"b\", \"order_i\", \"3\");\n    updateRequest.add(id, \"103\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"4\");\n    updateRequest.add(id, \"104\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"5\");\n    updateRequest.add(id, \"105\", \"price_f\", \"800.0\", \"col_s\", \"b\", \"order_i\", \"6\");\n    updateRequest.add(id, \"106\", \"price_f\", \"1200.0\", \"col_s\", \"b\", \"order_i\", \"7\");\n\n\n    updateRequest.add(id, \"200\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"1\");\n    updateRequest.add(id, \"301\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"2\");\n    updateRequest.add(id, \"402\", \"price_f\", \"-600.0\", \"col_s\", \"c\", \"order_i\", \"3\");\n    updateRequest.add(id, \"503\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"4\");\n    updateRequest.add(id, \"604\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"5\");\n    updateRequest.add(id, \"705\", \"price_f\", \"-800.0\", \"col_s\", \"c\", \"order_i\", \"6\");\n    updateRequest.add(id, \"806\", \"price_f\", \"-1200.0\", \"col_s\", \"c\", \"order_i\", \"7\");\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    String expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    String cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long delay = tuple.getLong(\"delay\");\n    assert(delay == 3);\n\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7)\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 0);\n\n    \r\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7 11 12)\\\",fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:c\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 2);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":3833,"status":"B"}],"commitId":"80375acb7f696df7fb3cf0424d5e82777e3f5c87","commitMessage":"@@@SOLR-12183: Refactor Streaming Expression test cases\n","date":"2018-04-06 02:00:07","modifiedFileCount":"1","status":"B","submitter":"Joel Bernstein"},{"authorTime":"2018-04-05 23:21:49","codes":[{"authorDate":"2019-10-11 09:18:45","commitOrder":2,"curCode":"  public void testBinomialCoefficient() throws Exception {\n    String cexpr = \"binomialCoefficient(8,3)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long binomialCoefficient = tuple.getLong(\"return-value\");\n    assertEquals(binomialCoefficient, 56);\n  }\n","date":"2019-10-11 09:19:25","endLine":1208,"groupId":"10624","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBinomialCoefficient","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/bc/76c4ef5b2991c69762f5d3ca41c07dfd0b25a4.src","preCode":"  public void testBinomialCoefficient() throws Exception {\n    String cexpr = \"binomialCoefficient(8,3)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long binomialCoefficient = (long) tuple.get(\"return-value\");\n    assertEquals(binomialCoefficient, 56);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":1194,"status":"M"},{"authorDate":"2018-04-05 23:21:49","commitOrder":2,"curCode":"  public void testFinddelay() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n\n    \r\n    updateRequest.add(id, \"10\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"11\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"12\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"1\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"1\");\n    updateRequest.add(id, \"2\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"2\");\n    updateRequest.add(id, \"3\", \"price_f\", \"300.0\", \"col_s\", \"a\", \"order_i\", \"3\");\n    updateRequest.add(id, \"4\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"4\");\n    updateRequest.add(id, \"5\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"5\");\n    updateRequest.add(id, \"6\", \"price_f\", \"400.0\", \"col_s\", \"a\", \"order_i\", \"6\");\n    updateRequest.add(id, \"7\", \"price_f\", \"600.0\", \"col_s\", \"a\", \"order_i\", \"7\");\n\n    updateRequest.add(id, \"100\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"1\");\n    updateRequest.add(id, \"101\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"2\");\n    updateRequest.add(id, \"102\", \"price_f\", \"600.0\", \"col_s\", \"b\", \"order_i\", \"3\");\n    updateRequest.add(id, \"103\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"4\");\n    updateRequest.add(id, \"104\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"5\");\n    updateRequest.add(id, \"105\", \"price_f\", \"800.0\", \"col_s\", \"b\", \"order_i\", \"6\");\n    updateRequest.add(id, \"106\", \"price_f\", \"1200.0\", \"col_s\", \"b\", \"order_i\", \"7\");\n\n\n    updateRequest.add(id, \"200\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"1\");\n    updateRequest.add(id, \"301\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"2\");\n    updateRequest.add(id, \"402\", \"price_f\", \"-600.0\", \"col_s\", \"c\", \"order_i\", \"3\");\n    updateRequest.add(id, \"503\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"4\");\n    updateRequest.add(id, \"604\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"5\");\n    updateRequest.add(id, \"705\", \"price_f\", \"-800.0\", \"col_s\", \"c\", \"order_i\", \"6\");\n    updateRequest.add(id, \"806\", \"price_f\", \"-1200.0\", \"col_s\", \"c\", \"order_i\", \"7\");\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    String expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    String cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long delay = tuple.getLong(\"delay\");\n    assert(delay == 3);\n\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7)\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 0);\n\n    \r\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7 11 12)\\\",fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:c\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 2);\n  }\n","date":"2018-04-06 02:00:07","endLine":3922,"groupId":"10624","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinddelay","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/41/116e2472f896490c08d0d10885a3045e839b67.src","preCode":"  public void testFinddelay() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n\n    \r\n    updateRequest.add(id, \"10\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"11\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"12\", \"price_f\", \"0.0\", \"col_s\", \"a\", \"order_i\", \"0\");\n    updateRequest.add(id, \"1\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"1\");\n    updateRequest.add(id, \"2\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"2\");\n    updateRequest.add(id, \"3\", \"price_f\", \"300.0\", \"col_s\", \"a\", \"order_i\", \"3\");\n    updateRequest.add(id, \"4\", \"price_f\", \"100.0\", \"col_s\", \"a\", \"order_i\", \"4\");\n    updateRequest.add(id, \"5\", \"price_f\", \"200.0\", \"col_s\", \"a\", \"order_i\", \"5\");\n    updateRequest.add(id, \"6\", \"price_f\", \"400.0\", \"col_s\", \"a\", \"order_i\", \"6\");\n    updateRequest.add(id, \"7\", \"price_f\", \"600.0\", \"col_s\", \"a\", \"order_i\", \"7\");\n\n    updateRequest.add(id, \"100\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"1\");\n    updateRequest.add(id, \"101\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"2\");\n    updateRequest.add(id, \"102\", \"price_f\", \"600.0\", \"col_s\", \"b\", \"order_i\", \"3\");\n    updateRequest.add(id, \"103\", \"price_f\", \"200.0\", \"col_s\", \"b\", \"order_i\", \"4\");\n    updateRequest.add(id, \"104\", \"price_f\", \"400.0\", \"col_s\", \"b\", \"order_i\", \"5\");\n    updateRequest.add(id, \"105\", \"price_f\", \"800.0\", \"col_s\", \"b\", \"order_i\", \"6\");\n    updateRequest.add(id, \"106\", \"price_f\", \"1200.0\", \"col_s\", \"b\", \"order_i\", \"7\");\n\n\n    updateRequest.add(id, \"200\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"1\");\n    updateRequest.add(id, \"301\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"2\");\n    updateRequest.add(id, \"402\", \"price_f\", \"-600.0\", \"col_s\", \"c\", \"order_i\", \"3\");\n    updateRequest.add(id, \"503\", \"price_f\", \"-200.0\", \"col_s\", \"c\", \"order_i\", \"4\");\n    updateRequest.add(id, \"604\", \"price_f\", \"-400.0\", \"col_s\", \"c\", \"order_i\", \"5\");\n    updateRequest.add(id, \"705\", \"price_f\", \"-800.0\", \"col_s\", \"c\", \"order_i\", \"6\");\n    updateRequest.add(id, \"806\", \"price_f\", \"-1200.0\", \"col_s\", \"c\", \"order_i\", \"7\");\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    String expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    String cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    long delay = tuple.getLong(\"delay\");\n    assert(delay == 3);\n\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7)\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:b\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 0);\n\n    \r\n    expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:a\\\", fq=\\\"id:(1 2 3 4 5 6 7 11 12)\\\",fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n    expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"col_s:c\\\", fl=\\\"price_f, order_i\\\", sort=\\\"order_i asc\\\")\";\n\n    cexpr = \"let(a=\"+expr1+\", b=\"+expr2+\", c=col(a, price_f), d=col(b, price_f), tuple(delay=finddelay(c, d)))\";\n\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    delay = tuple.getLong(\"delay\");\n    assert(delay == 2);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":3833,"status":"N"}],"commitId":"ad1c24e1903a74c611ec610aaf350d50d709519e","commitMessage":"@@@SOLR-13829: RecursiveEvaluator casts Continuous numbers to Discrete Numbers.  causing mismatch\n","date":"2019-10-11 09:19:25","modifiedFileCount":"17","status":"M","submitter":"Joel Bernstein"}]
