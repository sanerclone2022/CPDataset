[{"authorTime":"2016-05-26 01:42:11","codes":[{"authorDate":"2016-05-26 01:42:11","commitOrder":1,"curCode":"    public void put(LeafReader reader, CacheKey key, Accountable value) {\n      final Object readerKey = reader.getCoreCacheKey();\n      synchronized (readerCache) {\n        Map<CacheKey,Accountable> innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          \r\n          innerCache = new HashMap<>();\n          readerCache.put(readerKey, innerCache);\n          wrapper.initReader(reader);\n        }\n        if (innerCache.get(key) == null) {\n          innerCache.put(key, value);\n        } else {\n          \r\n          \r\n        }\n      }\n    }\n","date":"2016-05-26 01:42:11","endLine":166,"groupId":"13421","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"put","params":"(LeafReaderreader@CacheKeykey@Accountablevalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e6/a066d8767df5686ea65fd512d9d78a3089e77b.src","preCode":"    public void put(LeafReader reader, CacheKey key, Accountable value) {\n      final Object readerKey = reader.getCoreCacheKey();\n      synchronized (readerCache) {\n        Map<CacheKey,Accountable> innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          \r\n          innerCache = new HashMap<>();\n          readerCache.put(readerKey, innerCache);\n          wrapper.initReader(reader);\n        }\n        if (innerCache.get(key) == null) {\n          innerCache.put(key, value);\n        } else {\n          \r\n          \r\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"B"},{"authorDate":"2016-05-26 01:42:11","commitOrder":1,"curCode":"    public Object get(LeafReader reader, CacheKey key, boolean setDocsWithField) throws IOException {\n      Map<CacheKey,Accountable> innerCache;\n      Accountable value;\n      final Object readerKey = reader.getCoreCacheKey();\n      synchronized (readerCache) {\n        innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          \r\n          innerCache = new HashMap<>();\n          readerCache.put(readerKey, innerCache);\n          wrapper.initReader(reader);\n          value = null;\n        } else {\n          value = innerCache.get(key);\n        }\n        if (value == null) {\n          value = new CreationPlaceholder();\n          innerCache.put(key, value);\n        }\n      }\n      if (value instanceof CreationPlaceholder) {\n        synchronized (value) {\n          CreationPlaceholder progress = (CreationPlaceholder) value;\n          if (progress.value == null) {\n            progress.value = createValue(reader, key, setDocsWithField);\n            synchronized (readerCache) {\n              innerCache.put(key, progress.value);\n            }\n\n            \r\n            \r\n            \r\n            if (key.custom != null && wrapper != null) {\n              final PrintStream infoStream = wrapper.getInfoStream();\n              if (infoStream != null) {\n                printNewInsanity(infoStream, progress.value);\n              }\n            }\n          }\n          return progress.value;\n        }\n      }\n      return value;\n    }\n","date":"2016-05-26 01:42:11","endLine":211,"groupId":"26438","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"get","params":"(LeafReaderreader@CacheKeykey@booleansetDocsWithField)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e6/a066d8767df5686ea65fd512d9d78a3089e77b.src","preCode":"    public Object get(LeafReader reader, CacheKey key, boolean setDocsWithField) throws IOException {\n      Map<CacheKey,Accountable> innerCache;\n      Accountable value;\n      final Object readerKey = reader.getCoreCacheKey();\n      synchronized (readerCache) {\n        innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          \r\n          innerCache = new HashMap<>();\n          readerCache.put(readerKey, innerCache);\n          wrapper.initReader(reader);\n          value = null;\n        } else {\n          value = innerCache.get(key);\n        }\n        if (value == null) {\n          value = new CreationPlaceholder();\n          innerCache.put(key, value);\n        }\n      }\n      if (value instanceof CreationPlaceholder) {\n        synchronized (value) {\n          CreationPlaceholder progress = (CreationPlaceholder) value;\n          if (progress.value == null) {\n            progress.value = createValue(reader, key, setDocsWithField);\n            synchronized (readerCache) {\n              innerCache.put(key, progress.value);\n            }\n\n            \r\n            \r\n            \r\n            if (key.custom != null && wrapper != null) {\n              final PrintStream infoStream = wrapper.getInfoStream();\n              if (infoStream != null) {\n                printNewInsanity(infoStream, progress.value);\n              }\n            }\n          }\n          return progress.value;\n        }\n      }\n      return value;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"B"}],"commitId":"366f8d18fe3ac9c9fb93493fe60d2bf4157de032","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n","date":"2016-05-26 01:42:11","modifiedFileCount":"50","status":"B","submitter":"Noble Paul"},{"authorTime":"2016-10-03 03:18:22","codes":[{"authorDate":"2016-05-26 01:42:11","commitOrder":2,"curCode":"    public void put(LeafReader reader, CacheKey key, Accountable value) {\n      final Object readerKey = reader.getCoreCacheKey();\n      synchronized (readerCache) {\n        Map<CacheKey,Accountable> innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          \r\n          innerCache = new HashMap<>();\n          readerCache.put(readerKey, innerCache);\n          wrapper.initReader(reader);\n        }\n        if (innerCache.get(key) == null) {\n          innerCache.put(key, value);\n        } else {\n          \r\n          \r\n        }\n      }\n    }\n","date":"2016-05-26 01:42:11","endLine":166,"groupId":"13421","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"put","params":"(LeafReaderreader@CacheKeykey@Accountablevalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e6/a066d8767df5686ea65fd512d9d78a3089e77b.src","preCode":"    public void put(LeafReader reader, CacheKey key, Accountable value) {\n      final Object readerKey = reader.getCoreCacheKey();\n      synchronized (readerCache) {\n        Map<CacheKey,Accountable> innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          \r\n          innerCache = new HashMap<>();\n          readerCache.put(readerKey, innerCache);\n          wrapper.initReader(reader);\n        }\n        if (innerCache.get(key) == null) {\n          innerCache.put(key, value);\n        } else {\n          \r\n          \r\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"N"},{"authorDate":"2016-10-03 03:18:22","commitOrder":2,"curCode":"    public Object get(LeafReader reader, CacheKey key) throws IOException {\n      Map<CacheKey,Accountable> innerCache;\n      Accountable value;\n      final Object readerKey = reader.getCoreCacheKey();\n      synchronized (readerCache) {\n        innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          \r\n          innerCache = new HashMap<>();\n          readerCache.put(readerKey, innerCache);\n          wrapper.initReader(reader);\n          value = null;\n        } else {\n          value = innerCache.get(key);\n        }\n        if (value == null) {\n          value = new CreationPlaceholder();\n          innerCache.put(key, value);\n        }\n      }\n      if (value instanceof CreationPlaceholder) {\n        synchronized (value) {\n          CreationPlaceholder progress = (CreationPlaceholder) value;\n          if (progress.value == null) {\n            progress.value = createValue(reader, key);\n            synchronized (readerCache) {\n              innerCache.put(key, progress.value);\n            }\n\n            \r\n            \r\n            \r\n            if (key.custom != null && wrapper != null) {\n              final PrintStream infoStream = wrapper.getInfoStream();\n              if (infoStream != null) {\n                printNewInsanity(infoStream, progress.value);\n              }\n            }\n          }\n          return progress.value;\n        }\n      }\n      return value;\n    }\n","date":"2016-10-03 03:18:22","endLine":206,"groupId":"32137","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"get","params":"(LeafReaderreader@CacheKeykey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f0/6f7e3fb03aa2b34ac475c90a0178b58e94ed21.src","preCode":"    public Object get(LeafReader reader, CacheKey key, boolean setDocsWithField) throws IOException {\n      Map<CacheKey,Accountable> innerCache;\n      Accountable value;\n      final Object readerKey = reader.getCoreCacheKey();\n      synchronized (readerCache) {\n        innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          \r\n          innerCache = new HashMap<>();\n          readerCache.put(readerKey, innerCache);\n          wrapper.initReader(reader);\n          value = null;\n        } else {\n          value = innerCache.get(key);\n        }\n        if (value == null) {\n          value = new CreationPlaceholder();\n          innerCache.put(key, value);\n        }\n      }\n      if (value instanceof CreationPlaceholder) {\n        synchronized (value) {\n          CreationPlaceholder progress = (CreationPlaceholder) value;\n          if (progress.value == null) {\n            progress.value = createValue(reader, key, setDocsWithField);\n            synchronized (readerCache) {\n              innerCache.put(key, progress.value);\n            }\n\n            \r\n            \r\n            \r\n            if (key.custom != null && wrapper != null) {\n              final PrintStream infoStream = wrapper.getInfoStream();\n              if (infoStream != null) {\n                printNewInsanity(infoStream, progress.value);\n              }\n            }\n          }\n          return progress.value;\n        }\n      }\n      return value;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"3182cd9872af3cb73a1f73e36de68b8d76646e59","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-10-03 03:18:22","modifiedFileCount":"570","status":"M","submitter":"Karl Wright"},{"authorTime":"2017-02-28 21:21:30","codes":[{"authorDate":"2017-02-28 21:21:30","commitOrder":3,"curCode":"    public void put(LeafReader reader, CacheKey key, Accountable value) {\n      IndexReader.CacheHelper cacheHelper = reader.getCoreCacheHelper();\n      if (cacheHelper == null) {\n        throw new IllegalStateException(\"Cannot cache on \" + reader);\n      }\n      final IndexReader.CacheKey readerKey = cacheHelper.getKey();\n      synchronized (readerCache) {\n        Map<CacheKey,Accountable> innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          \r\n          innerCache = new HashMap<>();\n          readerCache.put(readerKey, innerCache);\n          wrapper.initReader(reader);\n        }\n        if (innerCache.get(key) == null) {\n          innerCache.put(key, value);\n        } else {\n          \r\n          \r\n        }\n      }\n    }\n","date":"2017-02-28 21:46:45","endLine":168,"groupId":"102302","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"put","params":"(LeafReaderreader@CacheKeykey@Accountablevalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e6/e8fdac5fc78bb28c82b9c8c05a90124a522095.src","preCode":"    public void put(LeafReader reader, CacheKey key, Accountable value) {\n      final Object readerKey = reader.getCoreCacheKey();\n      synchronized (readerCache) {\n        Map<CacheKey,Accountable> innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          \r\n          innerCache = new HashMap<>();\n          readerCache.put(readerKey, innerCache);\n          wrapper.initReader(reader);\n        }\n        if (innerCache.get(key) == null) {\n          innerCache.put(key, value);\n        } else {\n          \r\n          \r\n        }\n      }\n    }\n","realPath":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2017-02-28 21:21:30","commitOrder":3,"curCode":"    public Object get(LeafReader reader, CacheKey key) throws IOException {\n      Map<CacheKey,Accountable> innerCache;\n      Accountable value;\n      IndexReader.CacheHelper cacheHelper = reader.getCoreCacheHelper();\n      if (cacheHelper == null) {\n        reader.getCoreCacheHelper();\n        throw new IllegalStateException(\"Cannot cache on \" + reader);\n      }\n      final IndexReader.CacheKey readerKey = cacheHelper.getKey();\n      synchronized (readerCache) {\n        innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          \r\n          innerCache = new HashMap<>();\n          readerCache.put(readerKey, innerCache);\n          wrapper.initReader(reader);\n          value = null;\n        } else {\n          value = innerCache.get(key);\n        }\n        if (value == null) {\n          value = new CreationPlaceholder();\n          innerCache.put(key, value);\n        }\n      }\n      if (value instanceof CreationPlaceholder) {\n        synchronized (value) {\n          CreationPlaceholder progress = (CreationPlaceholder) value;\n          if (progress.value == null) {\n            progress.value = createValue(reader, key);\n            synchronized (readerCache) {\n              innerCache.put(key, progress.value);\n            }\n          }\n          return progress.value;\n        }\n      }\n      return value;\n    }\n","date":"2017-02-28 21:46:45","endLine":208,"groupId":"102302","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"get","params":"(LeafReaderreader@CacheKeykey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e6/e8fdac5fc78bb28c82b9c8c05a90124a522095.src","preCode":"    public Object get(LeafReader reader, CacheKey key) throws IOException {\n      Map<CacheKey,Accountable> innerCache;\n      Accountable value;\n      final Object readerKey = reader.getCoreCacheKey();\n      synchronized (readerCache) {\n        innerCache = readerCache.get(readerKey);\n        if (innerCache == null) {\n          \r\n          innerCache = new HashMap<>();\n          readerCache.put(readerKey, innerCache);\n          wrapper.initReader(reader);\n          value = null;\n        } else {\n          value = innerCache.get(key);\n        }\n        if (value == null) {\n          value = new CreationPlaceholder();\n          innerCache.put(key, value);\n        }\n      }\n      if (value instanceof CreationPlaceholder) {\n        synchronized (value) {\n          CreationPlaceholder progress = (CreationPlaceholder) value;\n          if (progress.value == null) {\n            progress.value = createValue(reader, key);\n            synchronized (readerCache) {\n              innerCache.put(key, progress.value);\n            }\n\n            \r\n            \r\n            \r\n            if (key.custom != null && wrapper != null) {\n              final PrintStream infoStream = wrapper.getInfoStream();\n              if (infoStream != null) {\n                printNewInsanity(infoStream, progress.value);\n              }\n            }\n          }\n          return progress.value;\n        }\n      }\n      return value;\n    }\n","realPath":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"df6f83072303b4891a296b700a50c743284d3c30","commitMessage":"@@@LUCENE-7410: Make cache keys and close listeners less trappy.\n","date":"2017-02-28 21:46:45","modifiedFileCount":"75","status":"M","submitter":"Adrien Grand"}]
