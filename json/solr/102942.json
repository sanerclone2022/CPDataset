[{"authorTime":"2019-03-13 12:54:32","codes":[{"authorDate":"2019-03-13 12:54:32","commitOrder":1,"curCode":"  public void test() throws Exception {\n    String configName = getSaferTestName();\n    createConfigSet(configName);\n\n    \r\n    \r\n    final String colVogon = getAlias() + \"__CRA__\" + SHIPS[0];\n\n    \r\n    final String colHoG = getAlias() + \"__CRA__\" + noSpaces(SHIPS[1]);\n    final String colStunt = getAlias() + \"__CRA__\" + noSpaces(SHIPS[2]);\n    final String colArk = getAlias() + \"__CRA__\" + noDashes(SHIPS[3]);\n    final String colBistro = getAlias() + \"__CRA__\" + noDollar(SHIPS[4]);\n\n    List<String> retrievedConfigSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets();\n    List<String> expectedConfigSetNames = Arrays.asList(\"_default\", configName);\n\n    \r\n    assertTrue(\"We expect at least 2 configSets\",\n        retrievedConfigSetNames.size() >= expectedConfigSetNames.size());\n    assertTrue(\"ConfigNames should include :\" + expectedConfigSetNames, retrievedConfigSetNames.containsAll(expectedConfigSetNames));\n\n    CollectionAdminRequest.createCategoryRoutedAlias(getAlias(), categoryField, 20,\n        CollectionAdminRequest.createCollection(\"_unused_\", configName, 1, 1)\n            .setMaxShardsPerNode(2))\n        .process(solrClient);\n\n    \r\n    addDocsAndCommit(true, newDoc(SHIPS[0]));\n    \r\n\n    String uninitialized = getAlias() + \"__CRA__\" + CategoryRoutedAlias.UNINITIALIZED;\n    assertInvariants(colVogon, uninitialized);\n\n    addDocsAndCommit(true,\n        newDoc(SHIPS[1]),\n        newDoc(SHIPS[2]),\n        newDoc(SHIPS[3]),\n        newDoc(SHIPS[4]));\n\n    assertInvariants(colVogon, colHoG, colStunt, colArk, colBistro);\n\n    \r\n    testFailedDocument(newDoc(null), \"Route value is null\");\n    testFailedDocument(newDoc(\"foo__CRA__bar\"), \"7 character sequence __CRA__\");\n    testFailedDocument(newDoc(\"f������������CRA������������bar\"), \"7 character sequence __CRA__\");\n\n  }\n","date":"2019-03-13 13:32:23","endLine":209,"groupId":"48833","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/77/ecb22da940d9bd11671696597a3976aa0deec6.src","preCode":"  public void test() throws Exception {\n    String configName = getSaferTestName();\n    createConfigSet(configName);\n\n    \r\n    \r\n    final String colVogon = getAlias() + \"__CRA__\" + SHIPS[0];\n\n    \r\n    final String colHoG = getAlias() + \"__CRA__\" + noSpaces(SHIPS[1]);\n    final String colStunt = getAlias() + \"__CRA__\" + noSpaces(SHIPS[2]);\n    final String colArk = getAlias() + \"__CRA__\" + noDashes(SHIPS[3]);\n    final String colBistro = getAlias() + \"__CRA__\" + noDollar(SHIPS[4]);\n\n    List<String> retrievedConfigSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets();\n    List<String> expectedConfigSetNames = Arrays.asList(\"_default\", configName);\n\n    \r\n    assertTrue(\"We expect at least 2 configSets\",\n        retrievedConfigSetNames.size() >= expectedConfigSetNames.size());\n    assertTrue(\"ConfigNames should include :\" + expectedConfigSetNames, retrievedConfigSetNames.containsAll(expectedConfigSetNames));\n\n    CollectionAdminRequest.createCategoryRoutedAlias(getAlias(), categoryField, 20,\n        CollectionAdminRequest.createCollection(\"_unused_\", configName, 1, 1)\n            .setMaxShardsPerNode(2))\n        .process(solrClient);\n\n    \r\n    addDocsAndCommit(true, newDoc(SHIPS[0]));\n    \r\n\n    String uninitialized = getAlias() + \"__CRA__\" + CategoryRoutedAlias.UNINITIALIZED;\n    assertInvariants(colVogon, uninitialized);\n\n    addDocsAndCommit(true,\n        newDoc(SHIPS[1]),\n        newDoc(SHIPS[2]),\n        newDoc(SHIPS[3]),\n        newDoc(SHIPS[4]));\n\n    assertInvariants(colVogon, colHoG, colStunt, colArk, colBistro);\n\n    \r\n    testFailedDocument(newDoc(null), \"Route value is null\");\n    testFailedDocument(newDoc(\"foo__CRA__bar\"), \"7 character sequence __CRA__\");\n    testFailedDocument(newDoc(\"f������������CRA������������bar\"), \"7 character sequence __CRA__\");\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/CategoryRoutedAliasUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"B"},{"authorDate":"2019-03-13 12:54:32","commitOrder":1,"curCode":"  public void testMaxCardinality() throws Exception {\n    String configName = getSaferTestName();\n    createConfigSet(configName);\n\n    final int maxCardinality = 2; \r\n\n    \r\n    \r\n    final String colVogon = getAlias() + \"__CRA__\" + SHIPS[0];\n\n    \r\n    final String colHoG = getAlias() + \"__CRA__\" + SHIPS[1].replaceAll(\"\\\\s\", \"_\");\n\n    List<String> retrievedConfigSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets();\n    List<String> expectedConfigSetNames = Arrays.asList(\"_default\", configName);\n\n    \r\n    assertTrue(\"We expect at least 2 configSets\",\n        retrievedConfigSetNames.size() >= expectedConfigSetNames.size());\n    assertTrue(\"ConfigNames should include :\" + expectedConfigSetNames, retrievedConfigSetNames.containsAll(expectedConfigSetNames));\n\n    CollectionAdminRequest.createCategoryRoutedAlias(getAlias(), categoryField, maxCardinality,\n        CollectionAdminRequest.createCollection(\"_unused_\", configName, 1, 1)\n            .setMaxShardsPerNode(2))\n        .process(solrClient);\n\n    \r\n    addDocsAndCommit(true, newDoc(SHIPS[0]));\n    \r\n\n    String uninitialized = getAlias() + \"__CRA__\" + CategoryRoutedAlias.UNINITIALIZED;\n    assertInvariants(colVogon, uninitialized);\n\n    addDocsAndCommit(true, newDoc(SHIPS[1]));\n\n    assertInvariants(colVogon, colHoG);\n\n    \r\n    testFailedDocument(newDoc(SHIPS[2]), \"Max cardinality\");\n    assertInvariants(colVogon, colHoG);\n  }\n","date":"2019-03-13 13:32:23","endLine":338,"groupId":"62823","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMaxCardinality","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/77/ecb22da940d9bd11671696597a3976aa0deec6.src","preCode":"  public void testMaxCardinality() throws Exception {\n    String configName = getSaferTestName();\n    createConfigSet(configName);\n\n    final int maxCardinality = 2; \r\n\n    \r\n    \r\n    final String colVogon = getAlias() + \"__CRA__\" + SHIPS[0];\n\n    \r\n    final String colHoG = getAlias() + \"__CRA__\" + SHIPS[1].replaceAll(\"\\\\s\", \"_\");\n\n    List<String> retrievedConfigSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets();\n    List<String> expectedConfigSetNames = Arrays.asList(\"_default\", configName);\n\n    \r\n    assertTrue(\"We expect at least 2 configSets\",\n        retrievedConfigSetNames.size() >= expectedConfigSetNames.size());\n    assertTrue(\"ConfigNames should include :\" + expectedConfigSetNames, retrievedConfigSetNames.containsAll(expectedConfigSetNames));\n\n    CollectionAdminRequest.createCategoryRoutedAlias(getAlias(), categoryField, maxCardinality,\n        CollectionAdminRequest.createCollection(\"_unused_\", configName, 1, 1)\n            .setMaxShardsPerNode(2))\n        .process(solrClient);\n\n    \r\n    addDocsAndCommit(true, newDoc(SHIPS[0]));\n    \r\n\n    String uninitialized = getAlias() + \"__CRA__\" + CategoryRoutedAlias.UNINITIALIZED;\n    assertInvariants(colVogon, uninitialized);\n\n    addDocsAndCommit(true, newDoc(SHIPS[1]));\n\n    assertInvariants(colVogon, colHoG);\n\n    \r\n    testFailedDocument(newDoc(SHIPS[2]), \"Max cardinality\");\n    assertInvariants(colVogon, colHoG);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/CategoryRoutedAliasUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"B"}],"commitId":"d8f2a02fdb11a484425f9fddfa7061711d2f0034","commitMessage":"@@@SOLR-13131 Category Routed Aliases\n","date":"2019-03-13 13:32:23","modifiedFileCount":"10","status":"B","submitter":"Gus Heck"},{"authorTime":"2020-07-08 23:57:24","codes":[{"authorDate":"2020-07-08 23:57:24","commitOrder":2,"curCode":"  public void test() throws Exception {\n    String configName = getSaferTestName();\n    createConfigSet(configName);\n\n    \r\n    \r\n    final String colVogon = getAlias() + \"__CRA__\" + SHIPS[0];\n\n    \r\n    final String colHoG = getAlias() + \"__CRA__\" + noSpaces(SHIPS[1]);\n    final String colStunt = getAlias() + \"__CRA__\" + noSpaces(SHIPS[2]);\n    final String colArk = getAlias() + \"__CRA__\" + noDashes(SHIPS[3]);\n    final String colBistro = getAlias() + \"__CRA__\" + noDollar(SHIPS[4]);\n\n    List<String> retrievedConfigSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets();\n    List<String> expectedConfigSetNames = Arrays.asList(\"_default\", configName);\n\n    \r\n    assertTrue(\"We expect at least 2 configSets\",\n        retrievedConfigSetNames.size() >= expectedConfigSetNames.size());\n    assertTrue(\"ConfigNames should include :\" + expectedConfigSetNames, retrievedConfigSetNames.containsAll(expectedConfigSetNames));\n\n    CollectionAdminRequest.createCategoryRoutedAlias(getAlias(), categoryField, 20,\n        CollectionAdminRequest.createCollection(\"_unused_\", configName, 1, 1))\n        .process(solrClient);\n\n    \r\n    addDocsAndCommit(true, newDoc(SHIPS[0]));\n\n    String uninitialized = getAlias() + \"__CRA__\" + CategoryRoutedAlias.UNINITIALIZED;\n\n    \r\n    \r\n    \r\n    \r\n    assertInvariants(colVogon, uninitialized);\n\n    addDocsAndCommit(true,\n        newDoc(SHIPS[1]),\n        newDoc(SHIPS[2]),\n        newDoc(SHIPS[3]),\n        newDoc(SHIPS[4]));\n\n    \r\n    assertInvariants(colVogon, colHoG, colStunt, colArk, colBistro);\n\n    \r\n    testFailedDocument(newDoc(null), \"Route value is null\");\n    testFailedDocument(newDoc(\"foo__CRA__bar\"), \"7 character sequence __CRA__\");\n    testFailedDocument(newDoc(\"f������������CRA������������bar\"), \"7 character sequence __CRA__\");\n\n  }\n","date":"2020-07-08 23:57:24","endLine":222,"groupId":"102942","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/61/8013ec7ccb212fdd9f7d10285093b46844e357.src","preCode":"  public void test() throws Exception {\n    String configName = getSaferTestName();\n    createConfigSet(configName);\n\n    \r\n    \r\n    final String colVogon = getAlias() + \"__CRA__\" + SHIPS[0];\n\n    \r\n    final String colHoG = getAlias() + \"__CRA__\" + noSpaces(SHIPS[1]);\n    final String colStunt = getAlias() + \"__CRA__\" + noSpaces(SHIPS[2]);\n    final String colArk = getAlias() + \"__CRA__\" + noDashes(SHIPS[3]);\n    final String colBistro = getAlias() + \"__CRA__\" + noDollar(SHIPS[4]);\n\n    List<String> retrievedConfigSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets();\n    List<String> expectedConfigSetNames = Arrays.asList(\"_default\", configName);\n\n    \r\n    assertTrue(\"We expect at least 2 configSets\",\n        retrievedConfigSetNames.size() >= expectedConfigSetNames.size());\n    assertTrue(\"ConfigNames should include :\" + expectedConfigSetNames, retrievedConfigSetNames.containsAll(expectedConfigSetNames));\n\n    CollectionAdminRequest.createCategoryRoutedAlias(getAlias(), categoryField, 20,\n        CollectionAdminRequest.createCollection(\"_unused_\", configName, 1, 1)\n            .setMaxShardsPerNode(2))\n        .process(solrClient);\n\n    \r\n    addDocsAndCommit(true, newDoc(SHIPS[0]));\n\n    String uninitialized = getAlias() + \"__CRA__\" + CategoryRoutedAlias.UNINITIALIZED;\n\n    \r\n    \r\n    \r\n    \r\n    assertInvariants(colVogon, uninitialized);\n\n    addDocsAndCommit(true,\n        newDoc(SHIPS[1]),\n        newDoc(SHIPS[2]),\n        newDoc(SHIPS[3]),\n        newDoc(SHIPS[4]));\n\n    \r\n    assertInvariants(colVogon, colHoG, colStunt, colArk, colBistro);\n\n    \r\n    testFailedDocument(newDoc(null), \"Route value is null\");\n    testFailedDocument(newDoc(\"foo__CRA__bar\"), \"7 character sequence __CRA__\");\n    testFailedDocument(newDoc(\"f������������CRA������������bar\"), \"7 character sequence __CRA__\");\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/CategoryRoutedAliasUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2020-07-08 23:57:24","commitOrder":2,"curCode":"  public void testMaxCardinality() throws Exception {\n    String configName = getSaferTestName();\n    createConfigSet(configName);\n\n    final int maxCardinality = 2; \r\n\n    \r\n    \r\n    final String colVogon = getAlias() + \"__CRA__\" + SHIPS[0];\n\n    \r\n    final String colHoG = getAlias() + \"__CRA__\" + SHIPS[1].replaceAll(\"\\\\s\", \"_\");\n\n    List<String> retrievedConfigSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets();\n    List<String> expectedConfigSetNames = Arrays.asList(\"_default\", configName);\n\n    \r\n    assertTrue(\"We expect at least 2 configSets\",\n        retrievedConfigSetNames.size() >= expectedConfigSetNames.size());\n    assertTrue(\"ConfigNames should include :\" + expectedConfigSetNames, retrievedConfigSetNames.containsAll(expectedConfigSetNames));\n\n    CollectionAdminRequest.createCategoryRoutedAlias(getAlias(), categoryField, maxCardinality,\n        CollectionAdminRequest.createCollection(\"_unused_\", configName, 1, 1))\n        .process(solrClient);\n\n    \r\n    addDocsAndCommit(true, newDoc(SHIPS[0]));\n    \r\n\n    String uninitialized = getAlias() + \"__CRA__\" + CategoryRoutedAlias.UNINITIALIZED;\n    assertInvariants(colVogon, uninitialized);\n\n    addDocsAndCommit(true, newDoc(SHIPS[1]));\n\n    assertInvariants(colVogon, colHoG);\n\n    \r\n    testFailedDocument(newDoc(SHIPS[2]), \"Max cardinality\");\n    assertInvariants(colVogon, colHoG);\n  }\n","date":"2020-07-08 23:57:24","endLine":348,"groupId":"102942","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMaxCardinality","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/61/8013ec7ccb212fdd9f7d10285093b46844e357.src","preCode":"  public void testMaxCardinality() throws Exception {\n    String configName = getSaferTestName();\n    createConfigSet(configName);\n\n    final int maxCardinality = 2; \r\n\n    \r\n    \r\n    final String colVogon = getAlias() + \"__CRA__\" + SHIPS[0];\n\n    \r\n    final String colHoG = getAlias() + \"__CRA__\" + SHIPS[1].replaceAll(\"\\\\s\", \"_\");\n\n    List<String> retrievedConfigSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets();\n    List<String> expectedConfigSetNames = Arrays.asList(\"_default\", configName);\n\n    \r\n    assertTrue(\"We expect at least 2 configSets\",\n        retrievedConfigSetNames.size() >= expectedConfigSetNames.size());\n    assertTrue(\"ConfigNames should include :\" + expectedConfigSetNames, retrievedConfigSetNames.containsAll(expectedConfigSetNames));\n\n    CollectionAdminRequest.createCategoryRoutedAlias(getAlias(), categoryField, maxCardinality,\n        CollectionAdminRequest.createCollection(\"_unused_\", configName, 1, 1)\n            .setMaxShardsPerNode(2))\n        .process(solrClient);\n\n    \r\n    addDocsAndCommit(true, newDoc(SHIPS[0]));\n    \r\n\n    String uninitialized = getAlias() + \"__CRA__\" + CategoryRoutedAlias.UNINITIALIZED;\n    assertInvariants(colVogon, uninitialized);\n\n    addDocsAndCommit(true, newDoc(SHIPS[1]));\n\n    assertInvariants(colVogon, colHoG);\n\n    \r\n    testFailedDocument(newDoc(SHIPS[2]), \"Max cardinality\");\n    assertInvariants(colVogon, colHoG);\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/CategoryRoutedAliasUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"M"}],"commitId":"cf742f45963f4747e7041e8131248bc3a2b44864","commitMessage":"@@@SOLR-12847: Remove support for maxShardsPerNode.\n","date":"2020-07-08 23:57:24","modifiedFileCount":"144","status":"M","submitter":"Andrzej Bialecki"}]
