[{"authorTime":"2016-02-20 03:33:50","codes":[{"authorDate":"2017-09-20 14:13:45","commitOrder":4,"curCode":"  public ZkDistributedQueue(SolrZkClient zookeeper, String dir, Overseer.Stats stats) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n    this.stats = stats;\n  }\n","date":"2017-09-20 14:13:45","endLine":115,"groupId":"15487","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ZkDistributedQueue","params":"(SolrZkClientzookeeper@Stringdir@Overseer.Statsstats)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5b/4472aaf94b3ac6b898aa38480dd62277d0bb35.src","preCode":"  public ZkDistributedQueue(SolrZkClient zookeeper, String dir, Overseer.Stats stats) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n    this.stats = stats;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/ZkDistributedQueue.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"},{"authorDate":"2016-02-20 03:33:50","commitOrder":4,"curCode":"  public DistributedMap(SolrZkClient zookeeper, String dir) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n  }\n","date":"2016-02-20 03:33:50","endLine":56,"groupId":"15487","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"DistributedMap","params":"(SolrZkClientzookeeper@Stringdir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c3/b5690fd26c2c1b4391c88701568e4d98e7cea3.src","preCode":"  public DistributedMap(SolrZkClient zookeeper, String dir) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/DistributedMap.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"NB"}],"commitId":"6ba04e3c1fcfda20b54a8295f4e44217729cbfbc","commitMessage":"@@@SOLR-11368: Abstract out DistibutedQueue as an interface\n","date":"2017-09-20 14:13:45","modifiedFileCount":"14","status":"M","submitter":"Noble Paul"},{"authorTime":"2016-02-20 03:33:50","codes":[{"authorDate":"2017-10-03 04:50:57","commitOrder":5,"curCode":"  public ZkDistributedQueue(SolrZkClient zookeeper, String dir, Overseer.Stats stats, int maxQueueSize) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n    this.stats = stats;\n    this.maxQueueSize = maxQueueSize;\n  }\n","date":"2017-10-06 02:52:43","endLine":129,"groupId":"15487","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ZkDistributedQueue","params":"(SolrZkClientzookeeper@Stringdir@Overseer.Statsstats@intmaxQueueSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/6a/1b8a055c30bc354c7e5445e66e8443f77099ef.src","preCode":"  public ZkDistributedQueue(SolrZkClient zookeeper, String dir, Overseer.Stats stats) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n    this.stats = stats;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/ZkDistributedQueue.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2016-02-20 03:33:50","commitOrder":5,"curCode":"  public DistributedMap(SolrZkClient zookeeper, String dir) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n  }\n","date":"2016-02-20 03:33:50","endLine":56,"groupId":"15487","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"DistributedMap","params":"(SolrZkClientzookeeper@Stringdir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c3/b5690fd26c2c1b4391c88701568e4d98e7cea3.src","preCode":"  public DistributedMap(SolrZkClient zookeeper, String dir) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/DistributedMap.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"}],"commitId":"9419366a8e68a599efa2d8a230a0158d1763d10d","commitMessage":"@@@SOLR-11423: Overseer queue needs a hard cap (maximum size) that clients respect\n","date":"2017-10-06 02:52:43","modifiedFileCount":"3","status":"M","submitter":"Scott Blum"},{"authorTime":"2016-02-20 03:33:50","codes":[{"authorDate":"2017-10-15 00:15:40","commitOrder":6,"curCode":"  public ZkDistributedQueue(SolrZkClient zookeeper, String dir, Stats stats, int maxQueueSize) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n    this.stats = stats;\n    this.maxQueueSize = maxQueueSize;\n  }\n","date":"2017-10-15 00:15:40","endLine":133,"groupId":"15487","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"ZkDistributedQueue","params":"(SolrZkClientzookeeper@Stringdir@Statsstats@intmaxQueueSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/fe/e74750cadef4e8c0dd89706ad9717074aae7ff.src","preCode":"  public ZkDistributedQueue(SolrZkClient zookeeper, String dir, Overseer.Stats stats, int maxQueueSize) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n    this.stats = stats;\n    this.maxQueueSize = maxQueueSize;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/ZkDistributedQueue.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2016-02-20 03:33:50","commitOrder":6,"curCode":"  public DistributedMap(SolrZkClient zookeeper, String dir) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n  }\n","date":"2016-02-20 03:33:50","endLine":56,"groupId":"15487","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"DistributedMap","params":"(SolrZkClientzookeeper@Stringdir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c3/b5690fd26c2c1b4391c88701568e4d98e7cea3.src","preCode":"  public DistributedMap(SolrZkClient zookeeper, String dir) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/DistributedMap.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"}],"commitId":"8dd489edcee009e40f44f98c79e69434bd6333ea","commitMessage":"@@@SOLR-11285: Support simulations at scale in the autoscaling framework. \npart 1 (refactoring).\n","date":"2017-10-15 00:15:40","modifiedFileCount":"78","status":"M","submitter":"Andrzej Bialecki"},{"authorTime":"2016-02-20 03:33:50","codes":[{"authorDate":"2018-11-30 01:58:18","commitOrder":7,"curCode":"  public ZkDistributedQueue(SolrZkClient zookeeper, String dir, Stats stats, int maxQueueSize, IsClosed higherLevelIsClosed) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout(), higherLevelIsClosed);\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n    this.stats = stats;\n    this.maxQueueSize = maxQueueSize;\n  }\n","date":"2018-11-30 01:58:51","endLine":138,"groupId":"102417","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"ZkDistributedQueue","params":"(SolrZkClientzookeeper@Stringdir@Statsstats@intmaxQueueSize@IsClosedhigherLevelIsClosed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d3/ce990575f47953b6fad7d159e572f30af4a5fa.src","preCode":"  public ZkDistributedQueue(SolrZkClient zookeeper, String dir, Stats stats, int maxQueueSize) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n    this.stats = stats;\n    this.maxQueueSize = maxQueueSize;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/ZkDistributedQueue.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"},{"authorDate":"2016-02-20 03:33:50","commitOrder":7,"curCode":"  public DistributedMap(SolrZkClient zookeeper, String dir) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n  }\n","date":"2016-02-20 03:33:50","endLine":56,"groupId":"102417","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"DistributedMap","params":"(SolrZkClientzookeeper@Stringdir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c3/b5690fd26c2c1b4391c88701568e4d98e7cea3.src","preCode":"  public DistributedMap(SolrZkClient zookeeper, String dir) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n  }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/DistributedMap.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"}]
