[{"authorTime":"2017-08-01 23:01:17","codes":[{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public void objectCastingTest() {\n    TestIntValue val = new TestIntValue();\n    \n    assertTrue(val instanceof AnalyticsValue);\n    AnalyticsValue casted = (AnalyticsValue)val;\n\n    val.setValue(20).setExists(true);\n    assertEquals(new Integer(20), casted.getObject());\n    assertTrue(casted.exists());\n\n    val.setValue(1234).setExists(true);\n    assertEquals(new Integer(1234), casted.getObject());\n    assertTrue(casted.exists());\n  }\n","date":"2017-10-18 01:52:02","endLine":108,"groupId":"36828","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"objectCastingTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/65/a3a7e17abff3c315280e7b9dde05dac5b77849.src","preCode":"  public void objectCastingTest() {\n    TestIntValue val = new TestIntValue();\n    \n    assertTrue(val instanceof AnalyticsValue);\n    AnalyticsValue casted = (AnalyticsValue)val;\n\n    val.setValue(20).setExists(true);\n    assertEquals(new Integer(20), casted.getObject());\n    assertTrue(casted.exists());\n\n    val.setValue(1234).setExists(true);\n    assertEquals(new Integer(1234), casted.getObject());\n    assertTrue(casted.exists());\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/value/CastingIntValueTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"},{"authorDate":"2017-08-01 23:01:17","commitOrder":1,"curCode":"  public void objectCastingTest() {\n    TestLongValue val = new TestLongValue();\n    \n    assertTrue(val instanceof AnalyticsValue);\n    AnalyticsValue casted = (AnalyticsValue)val;\n\n    val.setValue(20L).setExists(true);\n    assertEquals(new Long(20), casted.getObject());\n    assertTrue(casted.exists());\n\n    val.setValue(1234L).setExists(true);\n    assertEquals(new Long(1234), casted.getObject());\n    assertTrue(casted.exists());\n  }\n","date":"2017-10-18 01:52:02","endLine":76,"groupId":"36828","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"objectCastingTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b3/df7ed574db6980a2fd0b4ac58746189454a209.src","preCode":"  public void objectCastingTest() {\n    TestLongValue val = new TestLongValue();\n    \n    assertTrue(val instanceof AnalyticsValue);\n    AnalyticsValue casted = (AnalyticsValue)val;\n\n    val.setValue(20L).setExists(true);\n    assertEquals(new Long(20), casted.getObject());\n    assertTrue(casted.exists());\n\n    val.setValue(1234L).setExists(true);\n    assertEquals(new Long(1234), casted.getObject());\n    assertTrue(casted.exists());\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/value/CastingLongValueTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"}],"commitId":"86d84bff82ff8c7a1f6cadfe307685a4dce2f8d9","commitMessage":"@@@SOLR-11145.  SOLR-11146: Added comprehensive unit tests for Analytics Component 2.0 as well as analytics bug fixes.\n","date":"2017-10-18 01:52:02","modifiedFileCount":"41","status":"B","submitter":"Houston Putman"},{"authorTime":"2018-07-16 18:24:45","codes":[{"authorDate":"2018-07-16 18:24:45","commitOrder":2,"curCode":"  public void objectCastingTest() {\n    TestIntValue val = new TestIntValue();\n    \n    assertTrue(val instanceof AnalyticsValue);\n    AnalyticsValue casted = (AnalyticsValue)val;\n\n    val.setValue(20).setExists(true);\n    assertEquals(20, casted.getObject());\n    assertTrue(casted.exists());\n\n    val.setValue(1234).setExists(true);\n    assertEquals(1234, casted.getObject());\n    assertTrue(casted.exists());\n  }\n","date":"2018-07-16 18:24:45","endLine":108,"groupId":"101765","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"objectCastingTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/dc/6b69aec19aae4a8488a5d656e2a006968a8316.src","preCode":"  public void objectCastingTest() {\n    TestIntValue val = new TestIntValue();\n    \n    assertTrue(val instanceof AnalyticsValue);\n    AnalyticsValue casted = (AnalyticsValue)val;\n\n    val.setValue(20).setExists(true);\n    assertEquals(new Integer(20), casted.getObject());\n    assertTrue(casted.exists());\n\n    val.setValue(1234).setExists(true);\n    assertEquals(new Integer(1234), casted.getObject());\n    assertTrue(casted.exists());\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/value/CastingIntValueTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2018-07-16 18:24:45","commitOrder":2,"curCode":"  public void objectCastingTest() {\n    TestLongValue val = new TestLongValue();\n    \n    assertTrue(val instanceof AnalyticsValue);\n    AnalyticsValue casted = (AnalyticsValue)val;\n\n    val.setValue(20L).setExists(true);\n    assertEquals(20L, casted.getObject());\n    assertTrue(casted.exists());\n\n    val.setValue(1234L).setExists(true);\n    assertEquals(1234L, casted.getObject());\n    assertTrue(casted.exists());\n  }\n","date":"2018-07-16 18:24:45","endLine":76,"groupId":"101765","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"objectCastingTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5d/0f5cdb1bb51971b2adf64f6eccac68876be6a4.src","preCode":"  public void objectCastingTest() {\n    TestLongValue val = new TestLongValue();\n    \n    assertTrue(val instanceof AnalyticsValue);\n    AnalyticsValue casted = (AnalyticsValue)val;\n\n    val.setValue(20L).setExists(true);\n    assertEquals(new Long(20), casted.getObject());\n    assertTrue(casted.exists());\n\n    val.setValue(1234L).setExists(true);\n    assertEquals(new Long(1234), casted.getObject());\n    assertTrue(casted.exists());\n  }\n","realPath":"solr/contrib/analytics/src/test/org/apache/solr/analytics/value/CastingLongValueTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"c97f27b06c1d7c250e9596a9bc7bf5ca11ef6ad3","commitMessage":"@@@Merge branch 'remove-constructor-wrapper-classes' of https://github.com/michaelbraun/lucene-solr:\nLUCENE-8345.  GitHub PR #392: Remove instantiation of redundant wrapper classes for primitives; add wrapper class constructors to forbiddenapis.\nThis closes #392\n","date":"2018-07-16 18:24:45","modifiedFileCount":"96","status":"M","submitter":"Uwe Schindler"}]
