[{"authorTime":"2011-07-10 07:01:53","codes":[{"authorDate":"2013-03-25 12:29:33","commitOrder":2,"curCode":"  void startTag(String tag, String name, boolean closeTag) throws IOException {\n    if (doIndent) indent();\n\n    writer.write('<');\n    writer.write(tag);\n    if (name!=null) {\n      writeAttr(\"name\", name);\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write(\">\");\n      }\n    } else {\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write('>');\n      }\n    }\n  }\n","date":"2013-03-25 12:29:33","endLine":340,"groupId":"30826","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"startTag","params":"(Stringtag@Stringname@booleancloseTag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/62/e7ff5a629722f04608ae27f7d7fc06dc817dc7.src","preCode":"  void startTag(String tag, String name, boolean closeTag) throws IOException {\n    if (doIndent) indent();\n\n    writer.write('<');\n    writer.write(tag);\n    if (name!=null) {\n      writeAttr(\"name\", name);\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write(\">\");\n      }\n    } else {\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write('>');\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/response/SchemaXmlWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"B"},{"authorDate":"2011-07-10 07:01:53","commitOrder":2,"curCode":"  void startTag(String tag, String name, boolean closeTag) throws IOException {\n    if (doIndent) indent();\n\n    writer.write('<');\n    writer.write(tag);\n    if (name!=null) {\n      writeAttr(\"name\", name);\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write(\">\");\n      }\n    } else {\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write('>');\n      }\n    }\n  }\n","date":"2011-07-10 07:01:53","endLine":159,"groupId":"30826","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"startTag","params":"(Stringtag@Stringname@booleancloseTag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/8b/c74a947c7030139b6162d8b9c2425f5f669269.src","preCode":"  void startTag(String tag, String name, boolean closeTag) throws IOException {\n    if (doIndent) indent();\n\n    writer.write('<');\n    writer.write(tag);\n    if (name!=null) {\n      writeAttr(\"name\", name);\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write(\">\");\n      }\n    } else {\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write('>');\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/response/XMLWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"NB"}],"commitId":"5c7ca6aa4841a92cb6220d445edacd46c8ec1713","commitMessage":"@@@SOLR-4623: Provide REST API read access to all elements of the live schema.  Add a REST API request to return the entire live schema.  in JSON.  XML.  and schema.xml formats.  Move REST API methods from package org.apache.solr.rest to org.apache.solr.rest.schema.  and rename base functionality REST API classes to remove the current schema focus.  to prepare for other non-schema REST APIs.  Change output path for copyFields and dynamicFields from \"copyfields\" and \"dynamicfields\" (all lowercase) to \"copyFields\" and \"dynamicFields\".  respectively.  to align with all other schema REST API outputs.  which use camelCase.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1460519 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-03-25 12:29:33","modifiedFileCount":"5","status":"M","submitter":"Steven Rowe"},{"authorTime":"2015-04-02 12:08:05","codes":[{"authorDate":"2015-04-02 12:08:05","commitOrder":3,"curCode":"  void startTag(String tag, String name, boolean closeTag) throws IOException {\n    if (doIndent) indent();\n\n    writer.write('<');\n    writer.write(tag);\n    if (name!=null) {\n      writeAttr(NAME, name);\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write(\">\");\n      }\n    } else {\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write('>');\n      }\n    }\n  }\n","date":"2015-04-02 12:08:05","endLine":345,"groupId":"102402","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"startTag","params":"(Stringtag@Stringname@booleancloseTag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/bf31c867ca9b722e17df479055804e686fa773.src","preCode":"  void startTag(String tag, String name, boolean closeTag) throws IOException {\n    if (doIndent) indent();\n\n    writer.write('<');\n    writer.write(tag);\n    if (name!=null) {\n      writeAttr(\"name\", name);\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write(\">\");\n      }\n    } else {\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write('>');\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/response/SchemaXmlWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"M"},{"authorDate":"2015-04-02 12:08:05","commitOrder":3,"curCode":"  void startTag(String tag, String name, boolean closeTag) throws IOException {\n    if (doIndent) indent();\n\n    writer.write('<');\n    writer.write(tag);\n    if (name!=null) {\n      writeAttr(NAME, name);\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write(\">\");\n      }\n    } else {\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write('>');\n      }\n    }\n  }\n","date":"2015-04-02 12:08:05","endLine":162,"groupId":"102402","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"startTag","params":"(Stringtag@Stringname@booleancloseTag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5b/43c1e83fba1881792d1d5a434a9adc62de4430.src","preCode":"  void startTag(String tag, String name, boolean closeTag) throws IOException {\n    if (doIndent) indent();\n\n    writer.write('<');\n    writer.write(tag);\n    if (name!=null) {\n      writeAttr(\"name\", name);\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write(\">\");\n      }\n    } else {\n      if (closeTag) {\n        writer.write(\"/>\");\n      } else {\n        writer.write('>');\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/response/XMLWriter.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"}],"commitId":"9baabd177c8a63873ac4f3dbead4edae87a8bd25","commitMessage":"@@@SOLR-6615: Refactor code to use String constants\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1670813 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-04-02 12:08:05","modifiedFileCount":"53","status":"M","submitter":"Noble Paul"}]
