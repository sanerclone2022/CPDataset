[{"authorTime":"2014-09-04 08:19:56","codes":[{"authorDate":"2014-09-04 08:19:56","commitOrder":1,"curCode":"  public void testFieldStatisticsDocValuesAndMultiValuedInteger() throws Exception {\n      SolrCore core = h.getCore();\n      String fieldName = \"cat_intDocValues\";\n      \r\n      SchemaField catDocValues = core.getLatestSchema().getField(fieldName);\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer multivalued\", catDocValues.multiValued());\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued\", !catDocValues.getType().isMultiValued());\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer has docValues\", catDocValues.hasDocValues());\n\n      List<FldType> types = new ArrayList<>();\n      types.add(new FldType(\"id\", ONE_ONE, new SVal('A', 'Z', 4, 4)));\n      types.add(new FldType(fieldName, ONE_ONE, new IRange(0, 0)));\n\n      Doc d1 = createDocValuesDocument(types, fieldName, \"1\", -1, 3, 5);\n      updateJ(toJSON(d1), null);\n\n      Doc d2 = createDocValuesDocument(types, fieldName, \"2\", 3, -2, 6);\n      updateJ(toJSON(d2), null);\n\n      Doc d3 = createDocValuesDocument(types, fieldName, \"3\", 16, -3, 11);\n      updateJ(toJSON(d3), null);\n\n      assertU(commit());\n\n      Map<String, String> args = new HashMap<>();\n      args.put(CommonParams.Q, \"*:*\");\n      args.put(StatsParams.STATS, \"true\");\n      args.put(StatsParams.STATS_FIELD, fieldName);\n      args.put(\"indent\", \"true\");\n      args.put(StatsParams.STATS_CALC_DISTINCT, \"true\");\n\n      SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n      assertQ(\"test min/max on docValues and multiValued\", req\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='min'][.='-3.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='max'][.='16.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='12']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='countDistinct'][.='9']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='sum'][.='38.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='mean'][.='3.1666666666666665']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='stddev'][.='5.638074031784151']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='sumOfSquares'][.='470.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='0']\");\n\n    }\n","date":"2014-09-04 08:19:56","endLine":531,"groupId":"26613","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFieldStatisticsDocValuesAndMultiValuedInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/03/ee6d8520ec25f5f373d2f78d569923ad717c2c.src","preCode":"  public void testFieldStatisticsDocValuesAndMultiValuedInteger() throws Exception {\n      SolrCore core = h.getCore();\n      String fieldName = \"cat_intDocValues\";\n      \r\n      SchemaField catDocValues = core.getLatestSchema().getField(fieldName);\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer multivalued\", catDocValues.multiValued());\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued\", !catDocValues.getType().isMultiValued());\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer has docValues\", catDocValues.hasDocValues());\n\n      List<FldType> types = new ArrayList<>();\n      types.add(new FldType(\"id\", ONE_ONE, new SVal('A', 'Z', 4, 4)));\n      types.add(new FldType(fieldName, ONE_ONE, new IRange(0, 0)));\n\n      Doc d1 = createDocValuesDocument(types, fieldName, \"1\", -1, 3, 5);\n      updateJ(toJSON(d1), null);\n\n      Doc d2 = createDocValuesDocument(types, fieldName, \"2\", 3, -2, 6);\n      updateJ(toJSON(d2), null);\n\n      Doc d3 = createDocValuesDocument(types, fieldName, \"3\", 16, -3, 11);\n      updateJ(toJSON(d3), null);\n\n      assertU(commit());\n\n      Map<String, String> args = new HashMap<>();\n      args.put(CommonParams.Q, \"*:*\");\n      args.put(StatsParams.STATS, \"true\");\n      args.put(StatsParams.STATS_FIELD, fieldName);\n      args.put(\"indent\", \"true\");\n      args.put(StatsParams.STATS_CALC_DISTINCT, \"true\");\n\n      SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n      assertQ(\"test min/max on docValues and multiValued\", req\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='min'][.='-3.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='max'][.='16.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='12']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='countDistinct'][.='9']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='sum'][.='38.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='mean'][.='3.1666666666666665']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='stddev'][.='5.638074031784151']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='sumOfSquares'][.='470.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='0']\");\n\n    }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":487,"status":"B"},{"authorDate":"2014-09-04 08:19:56","commitOrder":1,"curCode":"  public void testFieldStatisticsDocValuesAndMultiValuedIntegerFacetStats() throws Exception {\n       SolrCore core = h.getCore();\n       String fieldName = \"cat_intDocValues\";\n       \r\n       SchemaField catDocValues = core.getLatestSchema().getField(fieldName);\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer multivalued\", catDocValues.multiValued());\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued\", !catDocValues.getType().isMultiValued());\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer has docValues\", catDocValues.hasDocValues());\n\n       List<FldType> types = new ArrayList<>();\n       types.add(new FldType(\"id\", ONE_ONE, new SVal('A', 'Z', 4, 4)));\n       types.add(new FldType(fieldName, ONE_ONE, new IRange(0, 0)));\n\n       Doc d1 = createDocValuesDocument(types, fieldName, \"1\", -1, 3, 5);\n       updateJ(toJSON(d1), null);\n\n       Doc d2 = createDocValuesDocument(types, fieldName, \"2\", 3, -2, 6);\n       updateJ(toJSON(d2), null);\n\n       Doc d3 = createDocValuesDocument(types, fieldName, \"3\", 16, -3, 11);\n       updateJ(toJSON(d3), null);\n\n       assertU(commit());\n\n       Map<String, String> args = new HashMap<>();\n       args.put(CommonParams.Q, \"*:*\");\n       args.put(StatsParams.STATS, \"true\");\n       args.put(StatsParams.STATS_FIELD, fieldName);\n       args.put(StatsParams.STATS_FACET, fieldName);\n       args.put(\"indent\", \"true\");\n       args.put(StatsParams.STATS_CALC_DISTINCT, \"true\");\n\n       SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n       assertQEx(\"can not use FieldCache on multivalued field: cat_intDocValues\", req, 400);\n\n     }\n","date":"2014-09-04 08:19:56","endLine":569,"groupId":"26613","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFieldStatisticsDocValuesAndMultiValuedIntegerFacetStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/03/ee6d8520ec25f5f373d2f78d569923ad717c2c.src","preCode":"  public void testFieldStatisticsDocValuesAndMultiValuedIntegerFacetStats() throws Exception {\n       SolrCore core = h.getCore();\n       String fieldName = \"cat_intDocValues\";\n       \r\n       SchemaField catDocValues = core.getLatestSchema().getField(fieldName);\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer multivalued\", catDocValues.multiValued());\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued\", !catDocValues.getType().isMultiValued());\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer has docValues\", catDocValues.hasDocValues());\n\n       List<FldType> types = new ArrayList<>();\n       types.add(new FldType(\"id\", ONE_ONE, new SVal('A', 'Z', 4, 4)));\n       types.add(new FldType(fieldName, ONE_ONE, new IRange(0, 0)));\n\n       Doc d1 = createDocValuesDocument(types, fieldName, \"1\", -1, 3, 5);\n       updateJ(toJSON(d1), null);\n\n       Doc d2 = createDocValuesDocument(types, fieldName, \"2\", 3, -2, 6);\n       updateJ(toJSON(d2), null);\n\n       Doc d3 = createDocValuesDocument(types, fieldName, \"3\", 16, -3, 11);\n       updateJ(toJSON(d3), null);\n\n       assertU(commit());\n\n       Map<String, String> args = new HashMap<>();\n       args.put(CommonParams.Q, \"*:*\");\n       args.put(StatsParams.STATS, \"true\");\n       args.put(StatsParams.STATS_FIELD, fieldName);\n       args.put(StatsParams.STATS_FACET, fieldName);\n       args.put(\"indent\", \"true\");\n       args.put(StatsParams.STATS_CALC_DISTINCT, \"true\");\n\n       SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n       assertQEx(\"can not use FieldCache on multivalued field: cat_intDocValues\", req, 400);\n\n     }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":533,"status":"B"}],"commitId":"320f2d1884f344e1bb75e7c61494fc5538aff23c","commitMessage":"@@@SOLR-6024: Fix StatsComponent when using docValues=true multiValued=true (bug only on 4x trunk commit is just test changes demonstrating correct behavior)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1622386 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-04 08:19:56","modifiedFileCount":"1","status":"B","submitter":"Chris M. Hostetter"},{"authorTime":"2015-03-10 23:34:06","codes":[{"authorDate":"2015-03-10 23:34:06","commitOrder":2,"curCode":"  public void testFieldStatisticsDocValuesAndMultiValuedInteger() throws Exception {\n      SolrCore core = h.getCore();\n      String fieldName = \"cat_intDocValues\";\n      \r\n      SchemaField catDocValues = core.getLatestSchema().getField(fieldName);\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer multivalued\", catDocValues.multiValued());\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued\", !catDocValues.getType().isMultiValued());\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer has docValues\", catDocValues.hasDocValues());\n\n      List<FldType> types = new ArrayList<>();\n      types.add(new FldType(\"id\", ONE_ONE, new SVal('A', 'Z', 4, 4)));\n      types.add(new FldType(fieldName, ONE_ONE, new IRange(0, 0)));\n\n      Doc d1 = createDocValuesDocument(types, fieldName, \"1\", -1, 3, 5);\n      updateJ(toJSON(d1), null);\n\n      Doc d2 = createDocValuesDocument(types, fieldName, \"2\", 3, -2, 6);\n      updateJ(toJSON(d2), null);\n\n      Doc d3 = createDocValuesDocument(types, fieldName, \"3\", 16, -3, 11);\n      updateJ(toJSON(d3), null);\n\n      assertU(commit());\n\n      Map<String, String> args = new HashMap<>();\n      args.put(CommonParams.Q, \"*:*\");\n      args.put(StatsParams.STATS, \"true\");\n      args.put(StatsParams.STATS_FIELD, fieldName);\n      args.put(StatsParams.STATS_CALC_DISTINCT, \"true\");\n      args.put(\"indent\", \"true\");\n\n      SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n      assertQ(\"test min/max on docValues and multiValued\", req\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='min'][.='-3.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='max'][.='16.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='12']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='countDistinct'][.='9']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='sum'][.='38.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='mean'][.='3.1666666666666665']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='stddev'][.='5.638074031784151']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='sumOfSquares'][.='470.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='0']\");\n\n    }\n","date":"2015-03-10 23:34:06","endLine":867,"groupId":"26613","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFieldStatisticsDocValuesAndMultiValuedInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f4/cf3841592c9ead38332136fd16155c85ed1c8c.src","preCode":"  public void testFieldStatisticsDocValuesAndMultiValuedInteger() throws Exception {\n      SolrCore core = h.getCore();\n      String fieldName = \"cat_intDocValues\";\n      \r\n      SchemaField catDocValues = core.getLatestSchema().getField(fieldName);\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer multivalued\", catDocValues.multiValued());\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued\", !catDocValues.getType().isMultiValued());\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer has docValues\", catDocValues.hasDocValues());\n\n      List<FldType> types = new ArrayList<>();\n      types.add(new FldType(\"id\", ONE_ONE, new SVal('A', 'Z', 4, 4)));\n      types.add(new FldType(fieldName, ONE_ONE, new IRange(0, 0)));\n\n      Doc d1 = createDocValuesDocument(types, fieldName, \"1\", -1, 3, 5);\n      updateJ(toJSON(d1), null);\n\n      Doc d2 = createDocValuesDocument(types, fieldName, \"2\", 3, -2, 6);\n      updateJ(toJSON(d2), null);\n\n      Doc d3 = createDocValuesDocument(types, fieldName, \"3\", 16, -3, 11);\n      updateJ(toJSON(d3), null);\n\n      assertU(commit());\n\n      Map<String, String> args = new HashMap<>();\n      args.put(CommonParams.Q, \"*:*\");\n      args.put(StatsParams.STATS, \"true\");\n      args.put(StatsParams.STATS_FIELD, fieldName);\n      args.put(\"indent\", \"true\");\n      args.put(StatsParams.STATS_CALC_DISTINCT, \"true\");\n\n      SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n      assertQ(\"test min/max on docValues and multiValued\", req\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='min'][.='-3.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='max'][.='16.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='12']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='countDistinct'][.='9']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='sum'][.='38.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='mean'][.='3.1666666666666665']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='stddev'][.='5.638074031784151']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='sumOfSquares'][.='470.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='0']\");\n\n    }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":823,"status":"M"},{"authorDate":"2015-03-10 23:34:06","commitOrder":2,"curCode":"  public void testFieldStatisticsDocValuesAndMultiValuedIntegerFacetStats() throws Exception {\n       SolrCore core = h.getCore();\n       String fieldName = \"cat_intDocValues\";\n       \r\n       SchemaField catDocValues = core.getLatestSchema().getField(fieldName);\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer multivalued\", catDocValues.multiValued());\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued\", !catDocValues.getType().isMultiValued());\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer has docValues\", catDocValues.hasDocValues());\n\n       List<FldType> types = new ArrayList<>();\n       types.add(new FldType(\"id\", ONE_ONE, new SVal('A', 'Z', 4, 4)));\n       types.add(new FldType(fieldName, ONE_ONE, new IRange(0, 0)));\n\n       Doc d1 = createDocValuesDocument(types, fieldName, \"1\", -1, 3, 5);\n       updateJ(toJSON(d1), null);\n\n       Doc d2 = createDocValuesDocument(types, fieldName, \"2\", 3, -2, 6);\n       updateJ(toJSON(d2), null);\n\n       Doc d3 = createDocValuesDocument(types, fieldName, \"3\", 16, -3, 11);\n       updateJ(toJSON(d3), null);\n\n       assertU(commit());\n\n       Map<String, String> args = new HashMap<>();\n       args.put(CommonParams.Q, \"*:*\");\n       args.put(StatsParams.STATS, \"true\");\n       args.put(StatsParams.STATS_FIELD, fieldName);\n       args.put(StatsParams.STATS_FACET, fieldName);\n       args.put(StatsParams.STATS_CALC_DISTINCT, \"true\");\n       args.put(\"indent\", \"true\");\n\n       SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n       assertQEx(\"can not use FieldCache on multivalued field: cat_intDocValues\", req, 400);\n\n     }\n","date":"2015-03-10 23:34:06","endLine":905,"groupId":"26613","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFieldStatisticsDocValuesAndMultiValuedIntegerFacetStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f4/cf3841592c9ead38332136fd16155c85ed1c8c.src","preCode":"  public void testFieldStatisticsDocValuesAndMultiValuedIntegerFacetStats() throws Exception {\n       SolrCore core = h.getCore();\n       String fieldName = \"cat_intDocValues\";\n       \r\n       SchemaField catDocValues = core.getLatestSchema().getField(fieldName);\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer multivalued\", catDocValues.multiValued());\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued\", !catDocValues.getType().isMultiValued());\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer has docValues\", catDocValues.hasDocValues());\n\n       List<FldType> types = new ArrayList<>();\n       types.add(new FldType(\"id\", ONE_ONE, new SVal('A', 'Z', 4, 4)));\n       types.add(new FldType(fieldName, ONE_ONE, new IRange(0, 0)));\n\n       Doc d1 = createDocValuesDocument(types, fieldName, \"1\", -1, 3, 5);\n       updateJ(toJSON(d1), null);\n\n       Doc d2 = createDocValuesDocument(types, fieldName, \"2\", 3, -2, 6);\n       updateJ(toJSON(d2), null);\n\n       Doc d3 = createDocValuesDocument(types, fieldName, \"3\", 16, -3, 11);\n       updateJ(toJSON(d3), null);\n\n       assertU(commit());\n\n       Map<String, String> args = new HashMap<>();\n       args.put(CommonParams.Q, \"*:*\");\n       args.put(StatsParams.STATS, \"true\");\n       args.put(StatsParams.STATS_FIELD, fieldName);\n       args.put(StatsParams.STATS_FACET, fieldName);\n       args.put(\"indent\", \"true\");\n       args.put(StatsParams.STATS_CALC_DISTINCT, \"true\");\n\n       SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n       assertQEx(\"can not use FieldCache on multivalued field: cat_intDocValues\", req, 400);\n\n     }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":869,"status":"M"}],"commitId":"10dd59701ccc0828e2282ab882506528df301e57","commitMessage":"@@@SOLR-6349 + SOLR-6682: Added support for stats.field localparams to enable/disable individual stats; Fix response when using EnumField with StatsComponent\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1665579 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-03-10 23:34:06","modifiedFileCount":"15","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2015-03-10 23:34:06","codes":[{"authorDate":"2015-05-08 01:58:58","commitOrder":3,"curCode":"  public void testFieldStatisticsDocValuesAndMultiValuedInteger() throws Exception {\n      SolrCore core = h.getCore();\n      String fieldName = \"cat_intDocValues\";\n      \r\n      SchemaField catDocValues = core.getLatestSchema().getField(fieldName);\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer multivalued\", catDocValues.multiValued());\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued\", !catDocValues.getType().isMultiValued());\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer has docValues\", catDocValues.hasDocValues());\n\n      List<FldType> types = new ArrayList<>();\n      types.add(new FldType(\"id\", ONE_ONE, new SVal('A', 'Z', 4, 4)));\n      types.add(new FldType(fieldName, ONE_ONE, new IRange(0, 0)));\n\n      Doc d1 = createDocValuesDocument(types, fieldName, \"1\", -1, 3, 5);\n      updateJ(toJSON(d1), null);\n\n      Doc d2 = createDocValuesDocument(types, fieldName, \"2\", 3, -2, 6);\n      updateJ(toJSON(d2), null);\n\n      Doc d3 = createDocValuesDocument(types, fieldName, \"3\", 16, -3, 11);\n      updateJ(toJSON(d3), null);\n\n      assertU(commit());\n\n      Map<String, String> args = new HashMap<>();\n      args.put(CommonParams.Q, \"*:*\");\n      args.put(StatsParams.STATS, \"true\");\n      args.put(StatsParams.STATS_FIELD, fieldName);\n      args.put(StatsParams.STATS_CALC_DISTINCT, \"true\");\n      args.put(\"indent\", \"true\");\n\n      SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n      assertQ(\"test min/max on docValues and multiValued\", req\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='min'][.='-3.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='max'][.='16.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='12']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='countDistinct'][.='9']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='sum'][.='38.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='mean'][.='3.1666666666666665']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='stddev'][.='5.638074031784151']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='sumOfSquares'][.='470.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='0']\");\n\n    assertQ(\"cardinality\", \n            req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\" + fieldName)\n            , \"//lst[@name='\"+fieldName+\"']/long[@name='cardinality'][.='9']\");\n\n  }\n","date":"2015-05-08 01:58:58","endLine":950,"groupId":"103438","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFieldStatisticsDocValuesAndMultiValuedInteger","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/94/25c02766b847bc006384b6fb47431b6151bf8c.src","preCode":"  public void testFieldStatisticsDocValuesAndMultiValuedInteger() throws Exception {\n      SolrCore core = h.getCore();\n      String fieldName = \"cat_intDocValues\";\n      \r\n      SchemaField catDocValues = core.getLatestSchema().getField(fieldName);\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer multivalued\", catDocValues.multiValued());\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued\", !catDocValues.getType().isMultiValued());\n      assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer has docValues\", catDocValues.hasDocValues());\n\n      List<FldType> types = new ArrayList<>();\n      types.add(new FldType(\"id\", ONE_ONE, new SVal('A', 'Z', 4, 4)));\n      types.add(new FldType(fieldName, ONE_ONE, new IRange(0, 0)));\n\n      Doc d1 = createDocValuesDocument(types, fieldName, \"1\", -1, 3, 5);\n      updateJ(toJSON(d1), null);\n\n      Doc d2 = createDocValuesDocument(types, fieldName, \"2\", 3, -2, 6);\n      updateJ(toJSON(d2), null);\n\n      Doc d3 = createDocValuesDocument(types, fieldName, \"3\", 16, -3, 11);\n      updateJ(toJSON(d3), null);\n\n      assertU(commit());\n\n      Map<String, String> args = new HashMap<>();\n      args.put(CommonParams.Q, \"*:*\");\n      args.put(StatsParams.STATS, \"true\");\n      args.put(StatsParams.STATS_FIELD, fieldName);\n      args.put(StatsParams.STATS_CALC_DISTINCT, \"true\");\n      args.put(\"indent\", \"true\");\n\n      SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n      assertQ(\"test min/max on docValues and multiValued\", req\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='min'][.='-3.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='max'][.='16.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='12']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='countDistinct'][.='9']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='sum'][.='38.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='mean'][.='3.1666666666666665']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='stddev'][.='5.638074031784151']\"\n          , \"//lst[@name='\" + fieldName + \"']/double[@name='sumOfSquares'][.='470.0']\"\n          , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='0']\");\n\n    }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":902,"status":"M"},{"authorDate":"2015-03-10 23:34:06","commitOrder":3,"curCode":"  public void testFieldStatisticsDocValuesAndMultiValuedIntegerFacetStats() throws Exception {\n       SolrCore core = h.getCore();\n       String fieldName = \"cat_intDocValues\";\n       \r\n       SchemaField catDocValues = core.getLatestSchema().getField(fieldName);\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer multivalued\", catDocValues.multiValued());\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued\", !catDocValues.getType().isMultiValued());\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer has docValues\", catDocValues.hasDocValues());\n\n       List<FldType> types = new ArrayList<>();\n       types.add(new FldType(\"id\", ONE_ONE, new SVal('A', 'Z', 4, 4)));\n       types.add(new FldType(fieldName, ONE_ONE, new IRange(0, 0)));\n\n       Doc d1 = createDocValuesDocument(types, fieldName, \"1\", -1, 3, 5);\n       updateJ(toJSON(d1), null);\n\n       Doc d2 = createDocValuesDocument(types, fieldName, \"2\", 3, -2, 6);\n       updateJ(toJSON(d2), null);\n\n       Doc d3 = createDocValuesDocument(types, fieldName, \"3\", 16, -3, 11);\n       updateJ(toJSON(d3), null);\n\n       assertU(commit());\n\n       Map<String, String> args = new HashMap<>();\n       args.put(CommonParams.Q, \"*:*\");\n       args.put(StatsParams.STATS, \"true\");\n       args.put(StatsParams.STATS_FIELD, fieldName);\n       args.put(StatsParams.STATS_FACET, fieldName);\n       args.put(StatsParams.STATS_CALC_DISTINCT, \"true\");\n       args.put(\"indent\", \"true\");\n\n       SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n       assertQEx(\"can not use FieldCache on multivalued field: cat_intDocValues\", req, 400);\n\n     }\n","date":"2015-03-10 23:34:06","endLine":905,"groupId":"103438","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFieldStatisticsDocValuesAndMultiValuedIntegerFacetStats","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f4/cf3841592c9ead38332136fd16155c85ed1c8c.src","preCode":"  public void testFieldStatisticsDocValuesAndMultiValuedIntegerFacetStats() throws Exception {\n       SolrCore core = h.getCore();\n       String fieldName = \"cat_intDocValues\";\n       \r\n       SchemaField catDocValues = core.getLatestSchema().getField(fieldName);\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer multivalued\", catDocValues.multiValued());\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues fieldtype no longer single valued\", !catDocValues.getType().isMultiValued());\n       assertTrue(\"schema no longer satisfies test requirements: cat_docValues no longer has docValues\", catDocValues.hasDocValues());\n\n       List<FldType> types = new ArrayList<>();\n       types.add(new FldType(\"id\", ONE_ONE, new SVal('A', 'Z', 4, 4)));\n       types.add(new FldType(fieldName, ONE_ONE, new IRange(0, 0)));\n\n       Doc d1 = createDocValuesDocument(types, fieldName, \"1\", -1, 3, 5);\n       updateJ(toJSON(d1), null);\n\n       Doc d2 = createDocValuesDocument(types, fieldName, \"2\", 3, -2, 6);\n       updateJ(toJSON(d2), null);\n\n       Doc d3 = createDocValuesDocument(types, fieldName, \"3\", 16, -3, 11);\n       updateJ(toJSON(d3), null);\n\n       assertU(commit());\n\n       Map<String, String> args = new HashMap<>();\n       args.put(CommonParams.Q, \"*:*\");\n       args.put(StatsParams.STATS, \"true\");\n       args.put(StatsParams.STATS_FIELD, fieldName);\n       args.put(StatsParams.STATS_FACET, fieldName);\n       args.put(StatsParams.STATS_CALC_DISTINCT, \"true\");\n       args.put(\"indent\", \"true\");\n\n       SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n       assertQEx(\"can not use FieldCache on multivalued field: cat_intDocValues\", req, 400);\n\n     }\n","realPath":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":869,"status":"N"}],"commitId":"06ac78ae55c8c1e5f39205493887cda9ec6347ec","commitMessage":"@@@SOLR-6968: New 'cardinality' option for stats.field.  uses HyperLogLog to efficiently estimate the cardinality of a field w/bounded RAM\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1678245 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-05-08 01:58:58","modifiedFileCount":"5","status":"M","submitter":"Chris M. Hostetter"}]
