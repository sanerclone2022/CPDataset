[{"authorTime":"2012-02-10 04:41:21","codes":[{"authorDate":"2012-02-10 04:41:21","commitOrder":1,"curCode":"  public void testTrimClasses() throws Exception {\n    SolrInputDocument d = null;\n    d = processAdd(\"trim-classes\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_pdt\", \" string4 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\" string1 \", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\"string4\", d.getFieldValue(\"bar_pdt\"));\n\n  }\n","date":"2012-02-10 04:41:21","endLine":211,"groupId":"15217","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTrimClasses","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d1/ecb1d405452da8ed9f58d3fe8383d92f769076.src","preCode":"  public void testTrimClasses() throws Exception {\n    SolrInputDocument d = null;\n    d = processAdd(\"trim-classes\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_pdt\", \" string4 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\" string1 \", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\"string4\", d.getFieldValue(\"bar_pdt\"));\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"B"},{"authorDate":"2012-02-10 04:41:21","commitOrder":1,"curCode":"  public void testTrimExclusions() throws Exception {\n    SolrInputDocument d = null;\n    d = processAdd(\"trim-most\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"foo_pdt\", \" string4 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\" string1 \", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\"string4\", d.getFieldValue(\"foo_pdt\"));\n\n    d = processAdd(\"trim-many\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_HOSS_s\", \" string4 \"),\n                       f(\"foo_pdt\", \" string5 \"),\n                       f(\"foo_HOSS_pdt\", \" string6 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\"string1\", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\" string4 \", d.getFieldValue(\"bar_HOSS_s\"));\n    assertEquals(\"string5\", d.getFieldValue(\"foo_pdt\"));\n    assertEquals(\" string6 \", d.getFieldValue(\"foo_HOSS_pdt\"));\n\n    d = processAdd(\"trim-few\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_HOSS_s\", \" string4 \"),\n                       f(\"foo_pdt\", \" string5 \"),\n                       f(\"foo_HOSS_pdt\", \" string6 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\"string1\", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\" string3 \", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\" string4 \", d.getFieldValue(\"bar_HOSS_s\"));\n    assertEquals(\" string5 \", d.getFieldValue(\"foo_pdt\"));\n    assertEquals(\" string6 \", d.getFieldValue(\"foo_HOSS_pdt\"));\n\n    d = processAdd(\"trim-some\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_HOSS_s\", \" string4 \"),\n                       f(\"foo_pdt\", \" string5 \"),\n                       f(\"foo_HOSS_pdt\", \" string6 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\"string1\", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\"string4\", d.getFieldValue(\"bar_HOSS_s\"));\n    assertEquals(\"string5\", d.getFieldValue(\"foo_pdt\"));\n    assertEquals(\" string6 \", d.getFieldValue(\"foo_HOSS_pdt\"));\n  }\n","date":"2012-02-10 04:41:21","endLine":300,"groupId":"15217","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTrimExclusions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d1/ecb1d405452da8ed9f58d3fe8383d92f769076.src","preCode":"  public void testTrimExclusions() throws Exception {\n    SolrInputDocument d = null;\n    d = processAdd(\"trim-most\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"foo_pdt\", \" string4 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\" string1 \", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\"string4\", d.getFieldValue(\"foo_pdt\"));\n\n    d = processAdd(\"trim-many\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_HOSS_s\", \" string4 \"),\n                       f(\"foo_pdt\", \" string5 \"),\n                       f(\"foo_HOSS_pdt\", \" string6 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\"string1\", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\" string4 \", d.getFieldValue(\"bar_HOSS_s\"));\n    assertEquals(\"string5\", d.getFieldValue(\"foo_pdt\"));\n    assertEquals(\" string6 \", d.getFieldValue(\"foo_HOSS_pdt\"));\n\n    d = processAdd(\"trim-few\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_HOSS_s\", \" string4 \"),\n                       f(\"foo_pdt\", \" string5 \"),\n                       f(\"foo_HOSS_pdt\", \" string6 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\"string1\", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\" string3 \", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\" string4 \", d.getFieldValue(\"bar_HOSS_s\"));\n    assertEquals(\" string5 \", d.getFieldValue(\"foo_pdt\"));\n    assertEquals(\" string6 \", d.getFieldValue(\"foo_HOSS_pdt\"));\n\n    d = processAdd(\"trim-some\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_HOSS_s\", \" string4 \"),\n                       f(\"foo_pdt\", \" string5 \"),\n                       f(\"foo_HOSS_pdt\", \" string6 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\"string1\", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\"string4\", d.getFieldValue(\"bar_HOSS_s\"));\n    assertEquals(\"string5\", d.getFieldValue(\"foo_pdt\"));\n    assertEquals(\" string6 \", d.getFieldValue(\"foo_HOSS_pdt\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"B"}],"commitId":"4906b8a61468dc3f538be2e7a4060191fca89663","commitMessage":"@@@SOLR-2802: several new UpdateProcessorFactories for modifing fields of documents.  along with base classes to make writing these types of classes easier for users\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1242514 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-02-10 04:41:21","modifiedFileCount":"0","status":"B","submitter":"Chris M. Hostetter"},{"authorTime":"2014-04-10 03:48:14","codes":[{"authorDate":"2014-04-10 03:48:14","commitOrder":2,"curCode":"  public void testTrimClasses() throws Exception {\n    SolrInputDocument d = null;\n    d = processAdd(\"trim-classes\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\" string1 \", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n  }\n","date":"2014-04-10 03:48:14","endLine":206,"groupId":"102937","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTrimClasses","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5a/c91e4120c02fcfe6aa736b738898d074e09a96.src","preCode":"  public void testTrimClasses() throws Exception {\n    SolrInputDocument d = null;\n    d = processAdd(\"trim-classes\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_pdt\", \" string4 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\" string1 \", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\"string4\", d.getFieldValue(\"bar_pdt\"));\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"},{"authorDate":"2014-04-10 03:48:14","commitOrder":2,"curCode":"  public void testTrimExclusions() throws Exception {\n    SolrInputDocument d = null;\n    d = processAdd(\"trim-most\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\" string1 \", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n\n    d = processAdd(\"trim-many\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_HOSS_s\", \" string4 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\"string1\", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\" string4 \", d.getFieldValue(\"bar_HOSS_s\"));\n\n    d = processAdd(\"trim-few\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_HOSS_s\", \" string4 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\"string1\", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\" string3 \", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\" string4 \", d.getFieldValue(\"bar_HOSS_s\"));\n\n    d = processAdd(\"trim-some\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_HOSS_s\", \" string4 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\"string1\", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\"string4\", d.getFieldValue(\"bar_HOSS_s\"));\n  }\n","date":"2014-04-10 03:48:14","endLine":278,"groupId":"102937","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTrimExclusions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5a/c91e4120c02fcfe6aa736b738898d074e09a96.src","preCode":"  public void testTrimExclusions() throws Exception {\n    SolrInputDocument d = null;\n    d = processAdd(\"trim-most\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"foo_pdt\", \" string4 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\" string1 \", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\"string4\", d.getFieldValue(\"foo_pdt\"));\n\n    d = processAdd(\"trim-many\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_HOSS_s\", \" string4 \"),\n                       f(\"foo_pdt\", \" string5 \"),\n                       f(\"foo_HOSS_pdt\", \" string6 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\"string1\", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\" string4 \", d.getFieldValue(\"bar_HOSS_s\"));\n    assertEquals(\"string5\", d.getFieldValue(\"foo_pdt\"));\n    assertEquals(\" string6 \", d.getFieldValue(\"foo_HOSS_pdt\"));\n\n    d = processAdd(\"trim-few\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_HOSS_s\", \" string4 \"),\n                       f(\"foo_pdt\", \" string5 \"),\n                       f(\"foo_HOSS_pdt\", \" string6 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\"string1\", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\" string3 \", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\" string4 \", d.getFieldValue(\"bar_HOSS_s\"));\n    assertEquals(\" string5 \", d.getFieldValue(\"foo_pdt\"));\n    assertEquals(\" string6 \", d.getFieldValue(\"foo_HOSS_pdt\"));\n\n    d = processAdd(\"trim-some\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_t\", \" string1 \"),\n                       f(\"foo_s\", \" string2 \"),\n                       f(\"bar_dt\", \" string3 \"),\n                       f(\"bar_HOSS_s\", \" string4 \"),\n                       f(\"foo_pdt\", \" string5 \"),\n                       f(\"foo_HOSS_pdt\", \" string6 \")));\n\n    assertNotNull(d);\n\n    assertEquals(\"string1\", d.getFieldValue(\"foo_t\"));\n    assertEquals(\"string2\", d.getFieldValue(\"foo_s\"));\n    assertEquals(\"string3\", d.getFieldValue(\"bar_dt\"));\n    assertEquals(\"string4\", d.getFieldValue(\"bar_HOSS_s\"));\n    assertEquals(\"string5\", d.getFieldValue(\"foo_pdt\"));\n    assertEquals(\" string6 \", d.getFieldValue(\"foo_HOSS_pdt\"));\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"}],"commitId":"597912787c3f7171ffbca0f3d6ba9629432ca20e","commitMessage":"@@@SOLR-5936: Removed deprecated non-Trie-based numeric & date field types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1586106 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-10 03:48:14","modifiedFileCount":"45","status":"M","submitter":"Steven Rowe"}]
