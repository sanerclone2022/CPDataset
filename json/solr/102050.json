[{"authorTime":"2017-01-11 10:48:33","codes":[{"authorDate":"2013-11-01 03:13:35","commitOrder":2,"curCode":"  public void init( NamedList args )  {\n\n    Object tmp = args.remove(\"versionField\");\n    if (null == tmp) {\n      throw new SolrException(SERVER_ERROR, \n                              \"'versionField' must be configured\");\n    }\n    if (! (tmp instanceof String) ) {\n      throw new SolrException(SERVER_ERROR, \n                              \"'versionField' must be configured as a <str>\");\n    }\n    versionField = tmp.toString();\n\n    \r\n    tmp = args.remove(\"deleteVersionParam\");\n    if (null != tmp) {\n      if (! (tmp instanceof String) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'deleteVersionParam' must be configured as a <str>\");\n      }\n      deleteVersionParamName = tmp.toString();\n    }\n\n    \r\n    tmp = args.remove(\"ignoreOldUpdates\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'ignoreOldUpdates' must be configured as a <bool>\");\n      }\n      ignoreOldUpdates = ((Boolean)tmp).booleanValue();\n    }\n    super.init(args);\n  }\n","date":"2013-11-01 03:13:35","endLine":134,"groupId":"20419","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"(NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1e/e3a4383130cd4fa20fd856aa923793b44a540d.src","preCode":"  public void init( NamedList args )  {\n\n    Object tmp = args.remove(\"versionField\");\n    if (null == tmp) {\n      throw new SolrException(SERVER_ERROR, \n                              \"'versionField' must be configured\");\n    }\n    if (! (tmp instanceof String) ) {\n      throw new SolrException(SERVER_ERROR, \n                              \"'versionField' must be configured as a <str>\");\n    }\n    versionField = tmp.toString();\n\n    \r\n    tmp = args.remove(\"deleteVersionParam\");\n    if (null != tmp) {\n      if (! (tmp instanceof String) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'deleteVersionParam' must be configured as a <str>\");\n      }\n      deleteVersionParamName = tmp.toString();\n    }\n\n    \r\n    tmp = args.remove(\"ignoreOldUpdates\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'ignoreOldUpdates' must be configured as a <bool>\");\n      }\n      ignoreOldUpdates = ((Boolean)tmp).booleanValue();\n    }\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"NB"},{"authorDate":"2017-01-11 10:48:33","commitOrder":2,"curCode":"  public void init(NamedList args)  {\n    Object tmp = args.remove(PARAM_SKIP_INSERT_IF_EXISTS);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_INSERT_IF_EXISTS + \"' must be configured as a <bool>\");\n      }\n      skipInsertIfExists = (Boolean)tmp;\n    }\n    tmp = args.remove(PARAM_SKIP_UPDATE_IF_MISSING);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_UPDATE_IF_MISSING + \"' must be configured as a <bool>\");\n      }\n      skipUpdateIfMissing = (Boolean)tmp;\n    }\n\n    super.init(args);\n  }\n","date":"2017-01-11 10:48:33","endLine":115,"groupId":"38037","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"(NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/637a4fce090b72f3e0239ac72d453871a5be11.src","preCode":"  public void init(NamedList args)  {\n    Object tmp = args.remove(PARAM_SKIP_INSERT_IF_EXISTS);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_INSERT_IF_EXISTS + \"' must be configured as a <bool>\");\n      }\n      skipInsertIfExists = (Boolean)tmp;\n    }\n    tmp = args.remove(PARAM_SKIP_UPDATE_IF_MISSING);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_UPDATE_IF_MISSING + \"' must be configured as a <bool>\");\n      }\n      skipUpdateIfMissing = (Boolean)tmp;\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"}],"commitId":"d66bfba5dc1bd9154bd48898865f51d9715e8d0c","commitMessage":"@@@SOLR-9918: Add SkipExistingDocumentsProcessor that skips duplicate inserts and ignores updates to missing docs\n","date":"2017-01-11 10:48:33","modifiedFileCount":"0","status":"M","submitter":"koji"},{"authorTime":"2017-01-11 10:48:33","codes":[{"authorDate":"2018-04-13 02:04:28","commitOrder":3,"curCode":"  public void init( NamedList args )  {\n\n    Object tmp = args.remove(\"versionField\");\n    if (null == tmp) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured\");\n    }\n    if (! (tmp instanceof String) ) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured as a <str>\");\n    }\n    versionFields = StrUtils.splitSmart((String)tmp, ',');\n\n    \r\n    tmp = args.remove(\"deleteVersionParam\");\n    if (null != tmp) {\n      if (! (tmp instanceof String) ) {\n        throw new SolrException(SERVER_ERROR,\n            \"'deleteVersionParam' must be configured as a <str>\");\n      }\n      deleteVersionParamNames = StrUtils.splitSmart((String)tmp, ',');\n    }\n\n    if (deleteVersionParamNames.size() > 0 && deleteVersionParamNames.size() != versionFields.size()) {\n      throw new SolrException(SERVER_ERROR, \"The number of 'deleteVersionParam' params \" +\n          \"must either be 0 or equal to the number of 'versionField' fields\");\n    }\n\n    \r\n    tmp = args.remove(\"ignoreOldUpdates\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'ignoreOldUpdates' must be configured as a <bool>\");\n      }\n      ignoreOldUpdates = (Boolean) tmp;\n    }\n    super.init(args);\n  }\n","date":"2018-04-13 02:04:28","endLine":133,"groupId":"20419","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"(NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ff/4d78a81e418cb68bb58e471a9ebdf3442aecc5.src","preCode":"  public void init( NamedList args )  {\n\n    Object tmp = args.remove(\"versionField\");\n    if (null == tmp) {\n      throw new SolrException(SERVER_ERROR, \n                              \"'versionField' must be configured\");\n    }\n    if (! (tmp instanceof String) ) {\n      throw new SolrException(SERVER_ERROR, \n                              \"'versionField' must be configured as a <str>\");\n    }\n    versionField = tmp.toString();\n\n    \r\n    tmp = args.remove(\"deleteVersionParam\");\n    if (null != tmp) {\n      if (! (tmp instanceof String) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'deleteVersionParam' must be configured as a <str>\");\n      }\n      deleteVersionParamName = tmp.toString();\n    }\n\n    \r\n    tmp = args.remove(\"ignoreOldUpdates\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'ignoreOldUpdates' must be configured as a <bool>\");\n      }\n      ignoreOldUpdates = ((Boolean)tmp).booleanValue();\n    }\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2017-01-11 10:48:33","commitOrder":3,"curCode":"  public void init(NamedList args)  {\n    Object tmp = args.remove(PARAM_SKIP_INSERT_IF_EXISTS);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_INSERT_IF_EXISTS + \"' must be configured as a <bool>\");\n      }\n      skipInsertIfExists = (Boolean)tmp;\n    }\n    tmp = args.remove(PARAM_SKIP_UPDATE_IF_MISSING);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_UPDATE_IF_MISSING + \"' must be configured as a <bool>\");\n      }\n      skipUpdateIfMissing = (Boolean)tmp;\n    }\n\n    super.init(args);\n  }\n","date":"2017-01-11 10:48:33","endLine":115,"groupId":"38037","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"(NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/637a4fce090b72f3e0239ac72d453871a5be11.src","preCode":"  public void init(NamedList args)  {\n    Object tmp = args.remove(PARAM_SKIP_INSERT_IF_EXISTS);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_INSERT_IF_EXISTS + \"' must be configured as a <bool>\");\n      }\n      skipInsertIfExists = (Boolean)tmp;\n    }\n    tmp = args.remove(PARAM_SKIP_UPDATE_IF_MISSING);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_UPDATE_IF_MISSING + \"' must be configured as a <bool>\");\n      }\n      skipUpdateIfMissing = (Boolean)tmp;\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"N"}],"commitId":"3d5f2f24c346913eca3b932682950f82d2e4c3f9","commitMessage":"@@@SOLR-11336: DocBasedVersionConstraints URP is now more extensible; versionField is a list\n","date":"2018-04-13 02:04:28","modifiedFileCount":"2","status":"M","submitter":"David Smiley"},{"authorTime":"2017-01-11 10:48:33","codes":[{"authorDate":"2018-05-23 22:53:45","commitOrder":4,"curCode":"  public void init( NamedList args )  {\n\n    Object tmp = args.remove(\"versionField\");\n    if (null == tmp) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured\");\n    }\n    if (! (tmp instanceof String) ) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured as a <str>\");\n    }\n    versionFields = StrUtils.splitSmart((String)tmp, ',');\n\n    \r\n    tmp = args.remove(\"deleteVersionParam\");\n    if (null != tmp) {\n      if (! (tmp instanceof String) ) {\n        throw new SolrException(SERVER_ERROR,\n            \"'deleteVersionParam' must be configured as a <str>\");\n      }\n      deleteVersionParamNames = StrUtils.splitSmart((String)tmp, ',');\n    }\n\n    if (deleteVersionParamNames.size() > 0 && deleteVersionParamNames.size() != versionFields.size()) {\n      throw new SolrException(SERVER_ERROR, \"The number of 'deleteVersionParam' params \" +\n          \"must either be 0 or equal to the number of 'versionField' fields\");\n    }\n\n    \r\n    tmp = args.remove(\"ignoreOldUpdates\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'ignoreOldUpdates' must be configured as a <bool>\");\n      }\n      ignoreOldUpdates = (Boolean) tmp;\n    }\n\n    \r\n    tmp = args.remove(\"supportMissingVersionOnOldDocs\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR,\n                \"'supportMissingVersionOnOldDocs' must be configured as a <bool>\");\n      }\n      supportMissingVersionOnOldDocs = ((Boolean)tmp).booleanValue();\n    }\n\n    super.init(args);\n  }\n","date":"2018-05-24 04:44:37","endLine":150,"groupId":"20419","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"(NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/a8/ee9b5848216694beef6c093128c70aa8e69395.src","preCode":"  public void init( NamedList args )  {\n\n    Object tmp = args.remove(\"versionField\");\n    if (null == tmp) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured\");\n    }\n    if (! (tmp instanceof String) ) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured as a <str>\");\n    }\n    versionFields = StrUtils.splitSmart((String)tmp, ',');\n\n    \r\n    tmp = args.remove(\"deleteVersionParam\");\n    if (null != tmp) {\n      if (! (tmp instanceof String) ) {\n        throw new SolrException(SERVER_ERROR,\n            \"'deleteVersionParam' must be configured as a <str>\");\n      }\n      deleteVersionParamNames = StrUtils.splitSmart((String)tmp, ',');\n    }\n\n    if (deleteVersionParamNames.size() > 0 && deleteVersionParamNames.size() != versionFields.size()) {\n      throw new SolrException(SERVER_ERROR, \"The number of 'deleteVersionParam' params \" +\n          \"must either be 0 or equal to the number of 'versionField' fields\");\n    }\n\n    \r\n    tmp = args.remove(\"ignoreOldUpdates\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'ignoreOldUpdates' must be configured as a <bool>\");\n      }\n      ignoreOldUpdates = (Boolean) tmp;\n    }\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2017-01-11 10:48:33","commitOrder":4,"curCode":"  public void init(NamedList args)  {\n    Object tmp = args.remove(PARAM_SKIP_INSERT_IF_EXISTS);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_INSERT_IF_EXISTS + \"' must be configured as a <bool>\");\n      }\n      skipInsertIfExists = (Boolean)tmp;\n    }\n    tmp = args.remove(PARAM_SKIP_UPDATE_IF_MISSING);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_UPDATE_IF_MISSING + \"' must be configured as a <bool>\");\n      }\n      skipUpdateIfMissing = (Boolean)tmp;\n    }\n\n    super.init(args);\n  }\n","date":"2017-01-11 10:48:33","endLine":115,"groupId":"38037","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"(NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/637a4fce090b72f3e0239ac72d453871a5be11.src","preCode":"  public void init(NamedList args)  {\n    Object tmp = args.remove(PARAM_SKIP_INSERT_IF_EXISTS);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_INSERT_IF_EXISTS + \"' must be configured as a <bool>\");\n      }\n      skipInsertIfExists = (Boolean)tmp;\n    }\n    tmp = args.remove(PARAM_SKIP_UPDATE_IF_MISSING);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_UPDATE_IF_MISSING + \"' must be configured as a <bool>\");\n      }\n      skipUpdateIfMissing = (Boolean)tmp;\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"N"}],"commitId":"48bd259516b8d78c991239fe7cf3340c90f582e5","commitMessage":"@@@SOLR-12378: Support missing versionField on indexed docs in DocBasedVersionConstraintsURP.\n","date":"2018-05-24 04:44:37","modifiedFileCount":"3","status":"M","submitter":"markrmiller"},{"authorTime":"2017-01-11 10:48:33","codes":[{"authorDate":"2019-01-26 05:38:18","commitOrder":5,"curCode":"  public void init( NamedList args )  {\n\n    Object tmp = args.remove(\"versionField\");\n    if (null == tmp) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured\");\n    }\n    if (! (tmp instanceof String) ) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured as a <str>\");\n    }\n    versionFields = StrUtils.splitSmart((String)tmp, ',');\n\n    \r\n    tmp = args.remove(\"deleteVersionParam\");\n    if (null != tmp) {\n      if (! (tmp instanceof String) ) {\n        throw new SolrException(SERVER_ERROR,\n            \"'deleteVersionParam' must be configured as a <str>\");\n      }\n      deleteVersionParamNames = StrUtils.splitSmart((String)tmp, ',');\n    }\n\n    if (deleteVersionParamNames.size() > 0 && deleteVersionParamNames.size() != versionFields.size()) {\n      throw new SolrException(SERVER_ERROR, \"The number of 'deleteVersionParam' params \" +\n          \"must either be 0 or equal to the number of 'versionField' fields\");\n    }\n\n    \r\n    tmp = args.remove(\"ignoreOldUpdates\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'ignoreOldUpdates' must be configured as a <bool>\");\n      }\n      ignoreOldUpdates = (Boolean) tmp;\n    }\n\n    \r\n    tmp = args.remove(\"supportMissingVersionOnOldDocs\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR,\n                \"'supportMissingVersionOnOldDocs' must be configured as a <bool>\");\n      }\n      supportMissingVersionOnOldDocs = ((Boolean)tmp).booleanValue();\n    }\n    \n    tmp = args.remove(\"tombstoneConfig\");\n    if (null != tmp) {\n      if (! (tmp instanceof NamedList) ) {\n        throw new SolrException(SERVER_ERROR,\n                \"'tombstoneConfig' must be configured as a <lst>.\");\n      }\n      tombstoneConfig = (NamedList<Object>)tmp;\n    }\n\n    super.init(args);\n  }\n","date":"2019-01-26 05:38:18","endLine":166,"groupId":"20419","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"(NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/b2/200d3031b1f16d7d2717fe32802a6336b25e8e.src","preCode":"  public void init( NamedList args )  {\n\n    Object tmp = args.remove(\"versionField\");\n    if (null == tmp) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured\");\n    }\n    if (! (tmp instanceof String) ) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured as a <str>\");\n    }\n    versionFields = StrUtils.splitSmart((String)tmp, ',');\n\n    \r\n    tmp = args.remove(\"deleteVersionParam\");\n    if (null != tmp) {\n      if (! (tmp instanceof String) ) {\n        throw new SolrException(SERVER_ERROR,\n            \"'deleteVersionParam' must be configured as a <str>\");\n      }\n      deleteVersionParamNames = StrUtils.splitSmart((String)tmp, ',');\n    }\n\n    if (deleteVersionParamNames.size() > 0 && deleteVersionParamNames.size() != versionFields.size()) {\n      throw new SolrException(SERVER_ERROR, \"The number of 'deleteVersionParam' params \" +\n          \"must either be 0 or equal to the number of 'versionField' fields\");\n    }\n\n    \r\n    tmp = args.remove(\"ignoreOldUpdates\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'ignoreOldUpdates' must be configured as a <bool>\");\n      }\n      ignoreOldUpdates = (Boolean) tmp;\n    }\n\n    \r\n    tmp = args.remove(\"supportMissingVersionOnOldDocs\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR,\n                \"'supportMissingVersionOnOldDocs' must be configured as a <bool>\");\n      }\n      supportMissingVersionOnOldDocs = ((Boolean)tmp).booleanValue();\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"},{"authorDate":"2017-01-11 10:48:33","commitOrder":5,"curCode":"  public void init(NamedList args)  {\n    Object tmp = args.remove(PARAM_SKIP_INSERT_IF_EXISTS);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_INSERT_IF_EXISTS + \"' must be configured as a <bool>\");\n      }\n      skipInsertIfExists = (Boolean)tmp;\n    }\n    tmp = args.remove(PARAM_SKIP_UPDATE_IF_MISSING);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_UPDATE_IF_MISSING + \"' must be configured as a <bool>\");\n      }\n      skipUpdateIfMissing = (Boolean)tmp;\n    }\n\n    super.init(args);\n  }\n","date":"2017-01-11 10:48:33","endLine":115,"groupId":"38037","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"(NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/637a4fce090b72f3e0239ac72d453871a5be11.src","preCode":"  public void init(NamedList args)  {\n    Object tmp = args.remove(PARAM_SKIP_INSERT_IF_EXISTS);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_INSERT_IF_EXISTS + \"' must be configured as a <bool>\");\n      }\n      skipInsertIfExists = (Boolean)tmp;\n    }\n    tmp = args.remove(PARAM_SKIP_UPDATE_IF_MISSING);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_UPDATE_IF_MISSING + \"' must be configured as a <bool>\");\n      }\n      skipUpdateIfMissing = (Boolean)tmp;\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"N"}],"commitId":"0bd1911db6de9f38f74fc61398bd1fc3f42037a2","commitMessage":"@@@SOLR-12373: Let DocBasedVersionConstraintsProcessor define fields to use in tombstones\n\nA new config option.  \"tombstoneConfig\" allows the DocBasedVersionConstraintsProcessor\nto add extra fields to the tombstone generated when a document is deleted. This can\nbe useful when the schema has required fields.\n","date":"2019-01-26 05:38:18","modifiedFileCount":"2","status":"M","submitter":"Tomas Fernandez Lobbe"},{"authorTime":"2020-06-09 07:03:34","codes":[{"authorDate":"2020-06-09 07:03:34","commitOrder":6,"curCode":"  public void init( @SuppressWarnings({\"rawtypes\"})NamedList args )  {\n\n    Object tmp = args.remove(\"versionField\");\n    if (null == tmp) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured\");\n    }\n    if (! (tmp instanceof String) ) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured as a <str>\");\n    }\n    versionFields = StrUtils.splitSmart((String)tmp, ',');\n\n    \r\n    tmp = args.remove(\"deleteVersionParam\");\n    if (null != tmp) {\n      if (! (tmp instanceof String) ) {\n        throw new SolrException(SERVER_ERROR,\n            \"'deleteVersionParam' must be configured as a <str>\");\n      }\n      deleteVersionParamNames = StrUtils.splitSmart((String)tmp, ',');\n    }\n\n    if (deleteVersionParamNames.size() > 0 && deleteVersionParamNames.size() != versionFields.size()) {\n      throw new SolrException(SERVER_ERROR, \"The number of 'deleteVersionParam' params \" +\n          \"must either be 0 or equal to the number of 'versionField' fields\");\n    }\n\n    \r\n    tmp = args.remove(\"ignoreOldUpdates\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'ignoreOldUpdates' must be configured as a <bool>\");\n      }\n      ignoreOldUpdates = (Boolean) tmp;\n    }\n\n    \r\n    tmp = args.remove(\"supportMissingVersionOnOldDocs\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR,\n                \"'supportMissingVersionOnOldDocs' must be configured as a <bool>\");\n      }\n      supportMissingVersionOnOldDocs = ((Boolean)tmp).booleanValue();\n    }\n    \n    tmp = args.remove(\"tombstoneConfig\");\n    if (null != tmp) {\n      if (! (tmp instanceof NamedList) ) {\n        throw new SolrException(SERVER_ERROR,\n                \"'tombstoneConfig' must be configured as a <lst>.\");\n      }\n      tombstoneConfig = (NamedList<Object>)tmp;\n    }\n\n    super.init(args);\n  }\n","date":"2020-06-09 07:03:34","endLine":166,"groupId":"20419","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"(@SuppressWarnings({\"rawtypes\"})NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/12/92d2f18de9e9b50a29a0cc9b99796182c3b73d.src","preCode":"  public void init( NamedList args )  {\n\n    Object tmp = args.remove(\"versionField\");\n    if (null == tmp) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured\");\n    }\n    if (! (tmp instanceof String) ) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured as a <str>\");\n    }\n    versionFields = StrUtils.splitSmart((String)tmp, ',');\n\n    \r\n    tmp = args.remove(\"deleteVersionParam\");\n    if (null != tmp) {\n      if (! (tmp instanceof String) ) {\n        throw new SolrException(SERVER_ERROR,\n            \"'deleteVersionParam' must be configured as a <str>\");\n      }\n      deleteVersionParamNames = StrUtils.splitSmart((String)tmp, ',');\n    }\n\n    if (deleteVersionParamNames.size() > 0 && deleteVersionParamNames.size() != versionFields.size()) {\n      throw new SolrException(SERVER_ERROR, \"The number of 'deleteVersionParam' params \" +\n          \"must either be 0 or equal to the number of 'versionField' fields\");\n    }\n\n    \r\n    tmp = args.remove(\"ignoreOldUpdates\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'ignoreOldUpdates' must be configured as a <bool>\");\n      }\n      ignoreOldUpdates = (Boolean) tmp;\n    }\n\n    \r\n    tmp = args.remove(\"supportMissingVersionOnOldDocs\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR,\n                \"'supportMissingVersionOnOldDocs' must be configured as a <bool>\");\n      }\n      supportMissingVersionOnOldDocs = ((Boolean)tmp).booleanValue();\n    }\n    \n    tmp = args.remove(\"tombstoneConfig\");\n    if (null != tmp) {\n      if (! (tmp instanceof NamedList) ) {\n        throw new SolrException(SERVER_ERROR,\n                \"'tombstoneConfig' must be configured as a <lst>.\");\n      }\n      tombstoneConfig = (NamedList<Object>)tmp;\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"},{"authorDate":"2020-06-09 07:03:34","commitOrder":6,"curCode":"  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args)  {\n    Object tmp = args.remove(PARAM_SKIP_INSERT_IF_EXISTS);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_INSERT_IF_EXISTS + \"' must be configured as a <bool>\");\n      }\n      skipInsertIfExists = (Boolean)tmp;\n    }\n    tmp = args.remove(PARAM_SKIP_UPDATE_IF_MISSING);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_UPDATE_IF_MISSING + \"' must be configured as a <bool>\");\n      }\n      skipUpdateIfMissing = (Boolean)tmp;\n    }\n\n    super.init(args);\n  }\n","date":"2020-06-09 07:03:34","endLine":117,"groupId":"38037","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"(@SuppressWarnings({\"rawtypes\"})NamedListargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/f2/f119b8794d1634b7c77071d2b7e1dea0796200.src","preCode":"  public void init(NamedList args)  {\n    Object tmp = args.remove(PARAM_SKIP_INSERT_IF_EXISTS);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_INSERT_IF_EXISTS + \"' must be configured as a <bool>\");\n      }\n      skipInsertIfExists = (Boolean)tmp;\n    }\n    tmp = args.remove(PARAM_SKIP_UPDATE_IF_MISSING);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_UPDATE_IF_MISSING + \"' must be configured as a <bool>\");\n      }\n      skipUpdateIfMissing = (Boolean)tmp;\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"4dcdd750f2dc892c88a98cc350941e7b8869d67f","commitMessage":"@@@SOLR-14545: Fix or suppress warnings in apache/solr/update\n","date":"2020-06-09 07:03:34","modifiedFileCount":"56","status":"M","submitter":"Erick Erickson"},{"authorTime":"2021-06-09 02:08:25","codes":[{"authorDate":"2021-06-09 02:08:25","commitOrder":7,"curCode":"  public void init(NamedList<?> args )  {\n\n    Object tmp = args.remove(\"versionField\");\n    if (null == tmp) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured\");\n    }\n    if (! (tmp instanceof String) ) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured as a <str>\");\n    }\n    versionFields = StrUtils.splitSmart((String)tmp, ',');\n\n    \r\n    tmp = args.remove(\"deleteVersionParam\");\n    if (null != tmp) {\n      if (! (tmp instanceof String) ) {\n        throw new SolrException(SERVER_ERROR,\n            \"'deleteVersionParam' must be configured as a <str>\");\n      }\n      deleteVersionParamNames = StrUtils.splitSmart((String)tmp, ',');\n    }\n\n    if (deleteVersionParamNames.size() > 0 && deleteVersionParamNames.size() != versionFields.size()) {\n      throw new SolrException(SERVER_ERROR, \"The number of 'deleteVersionParam' params \" +\n          \"must either be 0 or equal to the number of 'versionField' fields\");\n    }\n\n    \r\n    tmp = args.remove(\"ignoreOldUpdates\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'ignoreOldUpdates' must be configured as a <bool>\");\n      }\n      ignoreOldUpdates = (Boolean) tmp;\n    }\n\n    \r\n    tmp = args.remove(\"supportMissingVersionOnOldDocs\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR,\n                \"'supportMissingVersionOnOldDocs' must be configured as a <bool>\");\n      }\n      supportMissingVersionOnOldDocs = (Boolean) tmp;\n    }\n    \n    tmp = args.remove(\"tombstoneConfig\");\n    if (null != tmp) {\n      if (! (tmp instanceof NamedList) ) {\n        throw new SolrException(SERVER_ERROR,\n                \"'tombstoneConfig' must be configured as a <lst>.\");\n      }\n      tombstoneConfig = (NamedList<Object>)tmp;\n    }\n\n    super.init(args);\n  }\n","date":"2021-06-09 02:08:25","endLine":166,"groupId":"102050","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"init","params":"(NamedList<?>args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/59f5199e8474bf20024a3f56acae294f5d2f72.src","preCode":"  public void init( @SuppressWarnings({\"rawtypes\"})NamedList args )  {\n\n    Object tmp = args.remove(\"versionField\");\n    if (null == tmp) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured\");\n    }\n    if (! (tmp instanceof String) ) {\n      throw new SolrException(SERVER_ERROR,\n          \"'versionField' must be configured as a <str>\");\n    }\n    versionFields = StrUtils.splitSmart((String)tmp, ',');\n\n    \r\n    tmp = args.remove(\"deleteVersionParam\");\n    if (null != tmp) {\n      if (! (tmp instanceof String) ) {\n        throw new SolrException(SERVER_ERROR,\n            \"'deleteVersionParam' must be configured as a <str>\");\n      }\n      deleteVersionParamNames = StrUtils.splitSmart((String)tmp, ',');\n    }\n\n    if (deleteVersionParamNames.size() > 0 && deleteVersionParamNames.size() != versionFields.size()) {\n      throw new SolrException(SERVER_ERROR, \"The number of 'deleteVersionParam' params \" +\n          \"must either be 0 or equal to the number of 'versionField' fields\");\n    }\n\n    \r\n    tmp = args.remove(\"ignoreOldUpdates\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \n                                \"'ignoreOldUpdates' must be configured as a <bool>\");\n      }\n      ignoreOldUpdates = (Boolean) tmp;\n    }\n\n    \r\n    tmp = args.remove(\"supportMissingVersionOnOldDocs\");\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR,\n                \"'supportMissingVersionOnOldDocs' must be configured as a <bool>\");\n      }\n      supportMissingVersionOnOldDocs = ((Boolean)tmp).booleanValue();\n    }\n    \n    tmp = args.remove(\"tombstoneConfig\");\n    if (null != tmp) {\n      if (! (tmp instanceof NamedList) ) {\n        throw new SolrException(SERVER_ERROR,\n                \"'tombstoneConfig' must be configured as a <lst>.\");\n      }\n      tombstoneConfig = (NamedList<Object>)tmp;\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"},{"authorDate":"2021-06-09 02:08:25","commitOrder":7,"curCode":"  public void init(NamedList<?> args)  {\n    Object tmp = args.remove(PARAM_SKIP_INSERT_IF_EXISTS);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_INSERT_IF_EXISTS + \"' must be configured as a <bool>\");\n      }\n      skipInsertIfExists = (Boolean)tmp;\n    }\n    tmp = args.remove(PARAM_SKIP_UPDATE_IF_MISSING);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_UPDATE_IF_MISSING + \"' must be configured as a <bool>\");\n      }\n      skipUpdateIfMissing = (Boolean)tmp;\n    }\n\n    super.init(args);\n  }\n","date":"2021-06-09 02:08:25","endLine":117,"groupId":"102050","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"init","params":"(NamedList<?>args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/9d/2ecc440939d64fb1cf9875cd0bde279a684065.src","preCode":"  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args)  {\n    Object tmp = args.remove(PARAM_SKIP_INSERT_IF_EXISTS);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_INSERT_IF_EXISTS + \"' must be configured as a <bool>\");\n      }\n      skipInsertIfExists = (Boolean)tmp;\n    }\n    tmp = args.remove(PARAM_SKIP_UPDATE_IF_MISSING);\n    if (null != tmp) {\n      if (! (tmp instanceof Boolean) ) {\n        throw new SolrException(SERVER_ERROR, \"'\" + PARAM_SKIP_UPDATE_IF_MISSING + \"' must be configured as a <bool>\");\n      }\n      skipUpdateIfMissing = (Boolean)tmp;\n    }\n\n    super.init(args);\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactory.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"916b7a04f65490179a73e2c1620bab1df65e4bb8","commitMessage":"@@@SOLR-15385 RawTypes Part II.  Searching for NamedList (#165)\n\nMost updates relate to NamedListInitializationPlugin init method.  and RequestHandler.\n\nLink to JIRA issues for some extant bugs.\n\nCo-authored-by: David Smiley <dsmiley@apache.org>","date":"2021-06-09 02:08:25","modifiedFileCount":"221","status":"M","submitter":"Mike Drob"}]
