[{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2014-09-16 23:29:54","commitOrder":2,"curCode":"  private static <T extends Comparable<T>> void select(List<T> list, double place, int begin, int end) {\n    T split;\n    if (end - begin < 10) {\n      split = list.get((int) (Math.random() * (end - begin + 1)) + begin);\n    } else {\n      split = split(list, begin, end);\n    }\n\n    Point result = partition(list, begin, end, split);\n\n    if (place < result.low) {\n      select(list, place, begin, result.low);\n    } else if (place > result.high) {\n      select(list, place, result.high, end);\n    } else {\n      if (result.low == (int) (Math.floor(place)) && result.low > begin) {\n        select(list, result.low, begin, result.low);\n      }\n      if (result.high == (int) (Math.ceil(place)) && result.high < end) {\n        select(list, result.high, result.high, end);\n      }\n    }\n  }\n","date":"2014-09-16 23:29:54","endLine":67,"groupId":"16957","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"select","params":"(List<T>list@doubleplace@intbegin@intend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/48/57597793998faafd8b8c866a3793b0f53e4701.src","preCode":"  private static <T extends Comparable<T>> void select(List<T> list, double place, int begin, int end) {\n    T split;\n    if (end - begin < 10) {\n      split = list.get((int) (Math.random() * (end - begin + 1)) + begin);\n    } else {\n      split = split(list, begin, end);\n    }\n\n    Point result = partition(list, begin, end, split);\n\n    if (place < result.low) {\n      select(list, place, begin, result.low);\n    } else if (place > result.high) {\n      select(list, place, result.high, end);\n    } else {\n      if (result.low == (int) (Math.floor(place)) && result.low > begin) {\n        select(list, result.low, begin, result.low);\n      }\n      if (result.high == (int) (Math.ceil(place)) && result.high < end) {\n        select(list, result.high, result.high, end);\n      }\n    }\n  }\n","realPath":"solr/contrib/analytics/src/java/org/apache/solr/analytics/util/MedianCalculator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"NB"},{"authorDate":"2017-06-29 17:00:17","commitOrder":2,"curCode":"  private static <T extends Comparable<T>> void select(List<T> list, int place, int begin, int end) {\n    T split;\n    if (end - begin < 10) {\n      split = list.get((int) (Math.random() * (end - begin + 1)) + begin);\n    } else {\n      split = split(list, begin, end);\n    }\n\n    Point result = partition(list, begin, end, split);\n\n    if (place <= result.low) {\n      select(list, place, begin, result.low);\n    } else if (place >= result.high) {\n      select(list, place, result.high, end);\n    }\n  }\n","date":"2017-06-29 17:00:17","endLine":102,"groupId":"655","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"select","params":"(List<T>list@intplace@intbegin@intend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e4/84e7caccaf9adee11b8936085f81630e3faaf9.src","preCode":"  private static <T extends Comparable<T>> void select(List<T> list, int place, int begin, int end) {\n    T split;\n    if (end - begin < 10) {\n      split = list.get((int) (Math.random() * (end - begin + 1)) + begin);\n    } else {\n      split = split(list, begin, end);\n    }\n\n    Point result = partition(list, begin, end, split);\n\n    if (place <= result.low) {\n      select(list, place, begin, result.low);\n    } else if (place >= result.high) {\n      select(list, place, result.high, end);\n    }\n  }\n","realPath":"solr/contrib/analytics/src/java/org/apache/solr/analytics/util/OrdinalCalculator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"}],"commitId":"b4fa0e785b70e39a3a1420bc020ad1183308b7af","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2017-06-29 17:00:17","modifiedFileCount":"697","status":"M","submitter":"Karl Wright"},{"authorTime":"2017-06-29 17:00:17","codes":[{"authorDate":"2020-05-07 23:04:06","commitOrder":3,"curCode":"  private static <T extends Comparable<T>> void select(List<T> list, double place, int begin, int end) {\n    T split;\n    if (end - begin < 10) {\n      split = list.get((int) (Math.random() * (end - begin + 1)) + begin);\n    } else {\n      split = split(list, begin, end);\n    }\n\n    OrdinalCalculator.Point result = partition(list, begin, end, split);\n\n    if (place < result.low) {\n      select(list, place, begin, result.low);\n    } else if (place > result.high) {\n      select(list, place, result.high, end);\n    } else {\n      if (result.low == (int) (Math.floor(place)) && result.low > begin) {\n        select(list, result.low, begin, result.low);\n      }\n      if (result.high == (int) (Math.ceil(place)) && result.high < end) {\n        select(list, result.high, result.high, end);\n      }\n    }\n  }\n","date":"2020-05-07 23:04:06","endLine":70,"groupId":"101461","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"select","params":"(List<T>list@doubleplace@intbegin@intend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1c/c7a36091cb0cc5aa98005fbe9209b93c71509f.src","preCode":"  private static <T extends Comparable<T>> void select(List<T> list, double place, int begin, int end) {\n    T split;\n    if (end - begin < 10) {\n      split = list.get((int) (Math.random() * (end - begin + 1)) + begin);\n    } else {\n      split = split(list, begin, end);\n    }\n\n    Point result = partition(list, begin, end, split);\n\n    if (place < result.low) {\n      select(list, place, begin, result.low);\n    } else if (place > result.high) {\n      select(list, place, result.high, end);\n    } else {\n      if (result.low == (int) (Math.floor(place)) && result.low > begin) {\n        select(list, result.low, begin, result.low);\n      }\n      if (result.high == (int) (Math.ceil(place)) && result.high < end) {\n        select(list, result.high, result.high, end);\n      }\n    }\n  }\n","realPath":"solr/contrib/analytics/src/java/org/apache/solr/analytics/util/MedianCalculator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2017-06-29 17:00:17","commitOrder":3,"curCode":"  private static <T extends Comparable<T>> void select(List<T> list, int place, int begin, int end) {\n    T split;\n    if (end - begin < 10) {\n      split = list.get((int) (Math.random() * (end - begin + 1)) + begin);\n    } else {\n      split = split(list, begin, end);\n    }\n\n    Point result = partition(list, begin, end, split);\n\n    if (place <= result.low) {\n      select(list, place, begin, result.low);\n    } else if (place >= result.high) {\n      select(list, place, result.high, end);\n    }\n  }\n","date":"2017-06-29 17:00:17","endLine":102,"groupId":"101461","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"select","params":"(List<T>list@intplace@intbegin@intend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e4/84e7caccaf9adee11b8936085f81630e3faaf9.src","preCode":"  private static <T extends Comparable<T>> void select(List<T> list, int place, int begin, int end) {\n    T split;\n    if (end - begin < 10) {\n      split = list.get((int) (Math.random() * (end - begin + 1)) + begin);\n    } else {\n      split = split(list, begin, end);\n    }\n\n    Point result = partition(list, begin, end, split);\n\n    if (place <= result.low) {\n      select(list, place, begin, result.low);\n    } else if (place >= result.high) {\n      select(list, place, result.high, end);\n    }\n  }\n","realPath":"solr/contrib/analytics/src/java/org/apache/solr/analytics/util/OrdinalCalculator.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"}],"commitId":"31b350e8040cbe30c4e85b7fb82eab4b6afd81c7","commitMessage":"@@@SOLR-14426 Move auxiliary classes to nested classes (#1487)\n\n","date":"2020-05-07 23:04:06","modifiedFileCount":"67","status":"M","submitter":"Mike Drob"}]
