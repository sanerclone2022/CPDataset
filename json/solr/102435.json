[{"authorTime":"2021-02-17 10:59:24","codes":[{"authorDate":"2021-02-17 10:59:24","commitOrder":1,"curCode":"    private void disableReadOnly(ClusterState clusterState, DocCollection restoreCollection) throws Exception {\n      ZkNodeProps params = new ZkNodeProps(\n              Overseer.QUEUE_OPERATION, CollectionParams.CollectionAction.MODIFYCOLLECTION.toString(),\n              ZkStateReader.COLLECTION_PROP, restoreCollection.getName(),\n              ZkStateReader.READ_ONLY, null\n      );\n      ocmh.modifyCollection(clusterState, params, new NamedList<>());\n    }\n","date":"2021-02-17 10:59:24","endLine":594,"groupId":"30184","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"disableReadOnly","params":"(ClusterStateclusterState@DocCollectionrestoreCollection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c6/176afc49413463ad1e895fec603fc6b41a50bd.src","preCode":"    private void disableReadOnly(ClusterState clusterState, DocCollection restoreCollection) throws Exception {\n      ZkNodeProps params = new ZkNodeProps(\n              Overseer.QUEUE_OPERATION, CollectionParams.CollectionAction.MODIFYCOLLECTION.toString(),\n              ZkStateReader.COLLECTION_PROP, restoreCollection.getName(),\n              ZkStateReader.READ_ONLY, null\n      );\n      ocmh.modifyCollection(clusterState, params, new NamedList<>());\n    }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/api/collections/RestoreCmd.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":587,"status":"B"},{"authorDate":"2021-02-17 10:59:24","commitOrder":1,"curCode":"    private void enableReadOnly(ClusterState clusterState, DocCollection restoreCollection) throws Exception {\n      ZkNodeProps params = new ZkNodeProps(\n              Overseer.QUEUE_OPERATION, CollectionParams.CollectionAction.MODIFYCOLLECTION.toString(),\n              ZkStateReader.COLLECTION_PROP, restoreCollection.getName(),\n              ZkStateReader.READ_ONLY, \"true\"\n      );\n      ocmh.modifyCollection(clusterState, params, new NamedList<>());\n    }\n","date":"2021-02-17 10:59:24","endLine":603,"groupId":"36429","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"enableReadOnly","params":"(ClusterStateclusterState@DocCollectionrestoreCollection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/c6/176afc49413463ad1e895fec603fc6b41a50bd.src","preCode":"    private void enableReadOnly(ClusterState clusterState, DocCollection restoreCollection) throws Exception {\n      ZkNodeProps params = new ZkNodeProps(\n              Overseer.QUEUE_OPERATION, CollectionParams.CollectionAction.MODIFYCOLLECTION.toString(),\n              ZkStateReader.COLLECTION_PROP, restoreCollection.getName(),\n              ZkStateReader.READ_ONLY, \"true\"\n      );\n      ocmh.modifyCollection(clusterState, params, new NamedList<>());\n    }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/api/collections/RestoreCmd.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"B"}],"commitId":"15bd858d349fa434bbd296b6cab0435ecf26c719","commitMessage":"@@@SOLR-15087: Allow restoration to existing collections (#2380)\n\nThe recent addition of support for a \"readonly\" mode for collections\nopens the door to restoring to already-existing collections.\n\nThis commit adds a codepath to allow this.  Any compatible existing\ncollection may be used for restoration.  including the collection that\nwas the original source of the backup.","date":"2021-02-17 10:59:24","modifiedFileCount":"5","status":"B","submitter":"Jason Gerlowski"},{"authorTime":"2021-02-19 21:40:23","codes":[{"authorDate":"2021-02-19 21:40:23","commitOrder":2,"curCode":"    private void disableReadOnly(ClusterState clusterState, DocCollection restoreCollection) throws Exception {\n      ZkNodeProps params = new ZkNodeProps(\n              Overseer.QUEUE_OPERATION, CollectionParams.CollectionAction.MODIFYCOLLECTION.toString(),\n              ZkStateReader.COLLECTION_PROP, restoreCollection.getName(),\n              ZkStateReader.READ_ONLY, null\n      );\n      new CollApiCmds.ModifyCollectionCmd(ccc).call(clusterState, params, new NamedList<>());\n    }\n","date":"2021-02-19 21:40:23","endLine":594,"groupId":"102435","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"disableReadOnly","params":"(ClusterStateclusterState@DocCollectionrestoreCollection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/0605cda463d7d0908bf8d0a31dd31f476a6148.src","preCode":"    private void disableReadOnly(ClusterState clusterState, DocCollection restoreCollection) throws Exception {\n      ZkNodeProps params = new ZkNodeProps(\n              Overseer.QUEUE_OPERATION, CollectionParams.CollectionAction.MODIFYCOLLECTION.toString(),\n              ZkStateReader.COLLECTION_PROP, restoreCollection.getName(),\n              ZkStateReader.READ_ONLY, null\n      );\n      ocmh.modifyCollection(clusterState, params, new NamedList<>());\n    }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/api/collections/RestoreCmd.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":587,"status":"M"},{"authorDate":"2021-02-19 21:40:23","commitOrder":2,"curCode":"    private void enableReadOnly(ClusterState clusterState, DocCollection restoreCollection) throws Exception {\n      ZkNodeProps params = new ZkNodeProps(\n              Overseer.QUEUE_OPERATION, CollectionParams.CollectionAction.MODIFYCOLLECTION.toString(),\n              ZkStateReader.COLLECTION_PROP, restoreCollection.getName(),\n              ZkStateReader.READ_ONLY, \"true\"\n      );\n      new CollApiCmds.ModifyCollectionCmd(ccc).call(clusterState, params, new NamedList<>());\n    }\n","date":"2021-02-19 21:40:23","endLine":603,"groupId":"102435","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"enableReadOnly","params":"(ClusterStateclusterState@DocCollectionrestoreCollection)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/86/0605cda463d7d0908bf8d0a31dd31f476a6148.src","preCode":"    private void enableReadOnly(ClusterState clusterState, DocCollection restoreCollection) throws Exception {\n      ZkNodeProps params = new ZkNodeProps(\n              Overseer.QUEUE_OPERATION, CollectionParams.CollectionAction.MODIFYCOLLECTION.toString(),\n              ZkStateReader.COLLECTION_PROP, restoreCollection.getName(),\n              ZkStateReader.READ_ONLY, \"true\"\n      );\n      ocmh.modifyCollection(clusterState, params, new NamedList<>());\n    }\n","realPath":"solr/core/src/java/org/apache/solr/cloud/api/collections/RestoreCmd.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":596,"status":"M"}],"commitId":"e7c80f6445a04cb3d1b49d85d773fde283c916fe","commitMessage":"@@@SOLR-15157: refactor Collection API to separate from Overseer and message handling abstractions (#2390)\n\nNo functional changes. In preparation of distributing the Collection API command execution.","date":"2021-02-19 21:40:23","modifiedFileCount":"42","status":"M","submitter":"Ilan Ginzburg"}]
