[{"authorTime":"2012-01-26 03:49:26","codes":[{"authorDate":"2012-01-26 03:49:26","commitOrder":1,"curCode":"  public long writeDelete(DeleteUpdateCommand cmd) {\n    LogCodec codec = new LogCodec();\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.DELETE);  \r\n        codec.writeLong(cmd.getVersion());\n        BytesRef br = cmd.getIndexedId();\n        codec.writeByteArray(br.bytes, br.offset, br.length);\n\n        endRecord(pos);\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","date":"2012-01-26 03:49:26","endLine":356,"groupId":"44895","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeDelete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d5/e2f09f2f895019f8d79e1b6b22d2f42c6ecfc5.src","preCode":"  public long writeDelete(DeleteUpdateCommand cmd) {\n    LogCodec codec = new LogCodec();\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.DELETE);  \r\n        codec.writeLong(cmd.getVersion());\n        BytesRef br = cmd.getIndexedId();\n        codec.writeByteArray(br.bytes, br.offset, br.length);\n\n        endRecord(pos);\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":332,"status":"B"},{"authorDate":"2012-01-26 03:49:26","commitOrder":1,"curCode":"  public long writeDeleteByQuery(DeleteUpdateCommand cmd) {\n    LogCodec codec = new LogCodec();\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.DELETE_BY_QUERY);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(cmd.query);\n\n        endRecord(pos);\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","date":"2012-01-26 03:49:26","endLine":381,"groupId":"60835","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeDeleteByQuery","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d5/e2f09f2f895019f8d79e1b6b22d2f42c6ecfc5.src","preCode":"  public long writeDeleteByQuery(DeleteUpdateCommand cmd) {\n    LogCodec codec = new LogCodec();\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.DELETE_BY_QUERY);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(cmd.query);\n\n        endRecord(pos);\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"B"}],"commitId":"9fed484fb108e53cd6026133f660b3fd270e2025","commitMessage":"@@@SOLR-2358: merge in solrcloud branch (watch out hudson!)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1235888 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-01-26 03:49:26","modifiedFileCount":"88","status":"B","submitter":"Mark Robert Miller"},{"authorTime":"2012-05-22 08:36:11","codes":[{"authorDate":"2012-05-22 08:36:11","commitOrder":2,"curCode":"  public long writeDelete(DeleteUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec();\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.DELETE | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        BytesRef br = cmd.getIndexedId();\n        codec.writeByteArray(br.bytes, br.offset, br.length);\n\n        endRecord(pos);\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","date":"2012-05-22 08:36:11","endLine":360,"groupId":"44895","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeDelete","params":"(DeleteUpdateCommandcmd@intflags)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/61/8b83ac3a9731ece58a7a0d3ae68ddf43b99fd3.src","preCode":"  public long writeDelete(DeleteUpdateCommand cmd) {\n    LogCodec codec = new LogCodec();\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.DELETE);  \r\n        codec.writeLong(cmd.getVersion());\n        BytesRef br = cmd.getIndexedId();\n        codec.writeByteArray(br.bytes, br.offset, br.length);\n\n        endRecord(pos);\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"M"},{"authorDate":"2012-05-22 08:36:11","commitOrder":2,"curCode":"  public long writeDeleteByQuery(DeleteUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec();\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.DELETE_BY_QUERY | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(cmd.query);\n\n        endRecord(pos);\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","date":"2012-05-22 08:36:11","endLine":385,"groupId":"60835","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeDeleteByQuery","params":"(DeleteUpdateCommandcmd@intflags)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/61/8b83ac3a9731ece58a7a0d3ae68ddf43b99fd3.src","preCode":"  public long writeDeleteByQuery(DeleteUpdateCommand cmd) {\n    LogCodec codec = new LogCodec();\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.DELETE_BY_QUERY);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(cmd.query);\n\n        endRecord(pos);\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":362,"status":"M"}],"commitId":"964e90adb3384a86130a5f626585677ab6561dd0","commitMessage":"@@@SOLR-3469: prevent false peersync recovery by recording buffering flags in tlog\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1341283 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-05-22 08:36:11","modifiedFileCount":"6","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2012-08-10 02:53:19","codes":[{"authorDate":"2012-08-10 02:53:19","commitOrder":3,"curCode":"  public long writeDelete(DeleteUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec();\n\n    try {\n      checkWriteHeader(codec, null);\n\n      BytesRef br = cmd.getIndexedId();\n\n      MemOutputStream out = new MemOutputStream(new byte[20 + br.length]);\n      codec.init(out);\n      codec.writeTag(JavaBinCodec.ARR, 3);\n      codec.writeInt(UpdateLog.DELETE | flags);  \r\n      codec.writeLong(cmd.getVersion());\n      codec.writeByteArray(br.bytes, br.offset, br.length);\n\n      synchronized (this) {\n        long pos = fos.size();   \r\n        assert pos != 0;\n        out.writeAll(fos);\n        endRecord(pos);\n        \r\n        return pos;\n      }\n\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n\n  }\n","date":"2012-08-10 02:53:19","endLine":394,"groupId":"48679","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"writeDelete","params":"(DeleteUpdateCommandcmd@intflags)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e2/f4a5882f7ba803a0a95bb4a3875bb3c27603c4.src","preCode":"  public long writeDelete(DeleteUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec();\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.DELETE | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        BytesRef br = cmd.getIndexedId();\n        codec.writeByteArray(br.bytes, br.offset, br.length);\n\n        endRecord(pos);\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":366,"status":"M"},{"authorDate":"2012-08-10 02:53:19","commitOrder":3,"curCode":"  public long writeDeleteByQuery(DeleteUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec();\n    try {\n      checkWriteHeader(codec, null);\n\n      MemOutputStream out = new MemOutputStream(new byte[20 + (cmd.query.length())]);\n      codec.init(out);\n      codec.writeTag(JavaBinCodec.ARR, 3);\n      codec.writeInt(UpdateLog.DELETE_BY_QUERY | flags);  \r\n      codec.writeLong(cmd.getVersion());\n      codec.writeStr(cmd.query);\n\n      synchronized (this) {\n        long pos = fos.size();   \r\n        out.writeAll(fos);\n        endRecord(pos);\n        \r\n        return pos;\n      }\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n\n  }\n","date":"2012-08-10 02:53:19","endLine":419,"groupId":"48677","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"writeDeleteByQuery","params":"(DeleteUpdateCommandcmd@intflags)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e2/f4a5882f7ba803a0a95bb4a3875bb3c27603c4.src","preCode":"  public long writeDeleteByQuery(DeleteUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec();\n    synchronized (this) {\n      try {\n        long pos = fos.size();   \r\n        if (pos == 0) {\n          writeLogHeader(codec);\n          pos = fos.size();\n        }\n        codec.init(fos);\n        codec.writeTag(JavaBinCodec.ARR, 3);\n        codec.writeInt(UpdateLog.DELETE_BY_QUERY | flags);  \r\n        codec.writeLong(cmd.getVersion());\n        codec.writeStr(cmd.query);\n\n        endRecord(pos);\n        \r\n\n        return pos;\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n    }\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":396,"status":"M"}],"commitId":"932901bb010c5a185a94db9e1ce920f355dac0f6","commitMessage":"@@@SOLR-3715: remove sync around tlog serialization\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1371379 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-10 02:53:19","modifiedFileCount":"4","status":"M","submitter":"Yonik Seeley"},{"authorTime":"2013-06-27 04:18:33","codes":[{"authorDate":"2013-06-27 04:18:33","commitOrder":4,"curCode":"  public long writeDelete(DeleteUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n\n    try {\n      checkWriteHeader(codec, null);\n\n      BytesRef br = cmd.getIndexedId();\n\n      MemOutputStream out = new MemOutputStream(new byte[20 + br.length]);\n      codec.init(out);\n      codec.writeTag(JavaBinCodec.ARR, 3);\n      codec.writeInt(UpdateLog.DELETE | flags);  \r\n      codec.writeLong(cmd.getVersion());\n      codec.writeByteArray(br.bytes, br.offset, br.length);\n\n      synchronized (this) {\n        long pos = fos.size();   \r\n        assert pos != 0;\n        out.writeAll(fos);\n        endRecord(pos);\n        \r\n        return pos;\n      }\n\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n\n  }\n","date":"2013-06-27 04:18:33","endLine":407,"groupId":"48679","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"writeDelete","params":"(DeleteUpdateCommandcmd@intflags)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/31/f1a342c93396a1566d8759d7b85e82a66fa715.src","preCode":"  public long writeDelete(DeleteUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec();\n\n    try {\n      checkWriteHeader(codec, null);\n\n      BytesRef br = cmd.getIndexedId();\n\n      MemOutputStream out = new MemOutputStream(new byte[20 + br.length]);\n      codec.init(out);\n      codec.writeTag(JavaBinCodec.ARR, 3);\n      codec.writeInt(UpdateLog.DELETE | flags);  \r\n      codec.writeLong(cmd.getVersion());\n      codec.writeByteArray(br.bytes, br.offset, br.length);\n\n      synchronized (this) {\n        long pos = fos.size();   \r\n        assert pos != 0;\n        out.writeAll(fos);\n        endRecord(pos);\n        \r\n        return pos;\n      }\n\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":379,"status":"M"},{"authorDate":"2013-06-27 04:18:33","commitOrder":4,"curCode":"  public long writeDeleteByQuery(DeleteUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n    try {\n      checkWriteHeader(codec, null);\n\n      MemOutputStream out = new MemOutputStream(new byte[20 + (cmd.query.length())]);\n      codec.init(out);\n      codec.writeTag(JavaBinCodec.ARR, 3);\n      codec.writeInt(UpdateLog.DELETE_BY_QUERY | flags);  \r\n      codec.writeLong(cmd.getVersion());\n      codec.writeStr(cmd.query);\n\n      synchronized (this) {\n        long pos = fos.size();   \r\n        out.writeAll(fos);\n        endRecord(pos);\n        \r\n        return pos;\n      }\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n\n  }\n","date":"2013-06-27 04:18:33","endLine":432,"groupId":"48677","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"writeDeleteByQuery","params":"(DeleteUpdateCommandcmd@intflags)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/31/f1a342c93396a1566d8759d7b85e82a66fa715.src","preCode":"  public long writeDeleteByQuery(DeleteUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec();\n    try {\n      checkWriteHeader(codec, null);\n\n      MemOutputStream out = new MemOutputStream(new byte[20 + (cmd.query.length())]);\n      codec.init(out);\n      codec.writeTag(JavaBinCodec.ARR, 3);\n      codec.writeInt(UpdateLog.DELETE_BY_QUERY | flags);  \r\n      codec.writeLong(cmd.getVersion());\n      codec.writeStr(cmd.query);\n\n      synchronized (this) {\n        long pos = fos.size();   \r\n        out.writeAll(fos);\n        endRecord(pos);\n        \r\n        return pos;\n      }\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":409,"status":"M"}],"commitId":"b9e1537a7e12e6c15622452e48d8ca8c23aa98c4","commitMessage":"@@@SOLR-4916: Add support to write and read Solr index files and transaction log files to and from HDFS.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497072 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 04:18:33","modifiedFileCount":"42","status":"M","submitter":"Mark Robert Miller"},{"authorTime":"2018-06-04 12:32:31","codes":[{"authorDate":"2018-06-04 12:32:31","commitOrder":5,"curCode":"  public long writeDelete(DeleteUpdateCommand cmd) {\n    LogCodec codec = new LogCodec(resolver);\n\n    try {\n      checkWriteHeader(codec, null);\n\n      BytesRef br = cmd.getIndexedId();\n\n      MemOutputStream out = new MemOutputStream(new byte[20 + br.length]);\n      codec.init(out);\n      codec.writeTag(JavaBinCodec.ARR, 3);\n      codec.writeInt(UpdateLog.DELETE);  \r\n      codec.writeLong(cmd.getVersion());\n      codec.writeByteArray(br.bytes, br.offset, br.length);\n\n      synchronized (this) {\n        long pos = fos.size();   \r\n        assert pos != 0;\n        out.writeAll(fos);\n        endRecord(pos);\n        \r\n        return pos;\n      }\n\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n\n  }\n","date":"2018-06-04 12:32:31","endLine":425,"groupId":"102036","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"writeDelete","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2a/23896d491e177e3002e96cae35a78ef5848cd1.src","preCode":"  public long writeDelete(DeleteUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n\n    try {\n      checkWriteHeader(codec, null);\n\n      BytesRef br = cmd.getIndexedId();\n\n      MemOutputStream out = new MemOutputStream(new byte[20 + br.length]);\n      codec.init(out);\n      codec.writeTag(JavaBinCodec.ARR, 3);\n      codec.writeInt(UpdateLog.DELETE | flags);  \r\n      codec.writeLong(cmd.getVersion());\n      codec.writeByteArray(br.bytes, br.offset, br.length);\n\n      synchronized (this) {\n        long pos = fos.size();   \r\n        assert pos != 0;\n        out.writeAll(fos);\n        endRecord(pos);\n        \r\n        return pos;\n      }\n\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":397,"status":"M"},{"authorDate":"2018-06-04 12:32:31","commitOrder":5,"curCode":"  public long writeDeleteByQuery(DeleteUpdateCommand cmd) {\n    LogCodec codec = new LogCodec(resolver);\n    try {\n      checkWriteHeader(codec, null);\n\n      MemOutputStream out = new MemOutputStream(new byte[20 + (cmd.query.length())]);\n      codec.init(out);\n      codec.writeTag(JavaBinCodec.ARR, 3);\n      codec.writeInt(UpdateLog.DELETE_BY_QUERY);  \r\n      codec.writeLong(cmd.getVersion());\n      codec.writeStr(cmd.query);\n\n      synchronized (this) {\n        long pos = fos.size();   \r\n        out.writeAll(fos);\n        endRecord(pos);\n        \r\n        return pos;\n      }\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n\n  }\n","date":"2018-06-04 12:32:31","endLine":450,"groupId":"102036","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"writeDeleteByQuery","params":"(DeleteUpdateCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/2a/23896d491e177e3002e96cae35a78ef5848cd1.src","preCode":"  public long writeDeleteByQuery(DeleteUpdateCommand cmd, int flags) {\n    LogCodec codec = new LogCodec(resolver);\n    try {\n      checkWriteHeader(codec, null);\n\n      MemOutputStream out = new MemOutputStream(new byte[20 + (cmd.query.length())]);\n      codec.init(out);\n      codec.writeTag(JavaBinCodec.ARR, 3);\n      codec.writeInt(UpdateLog.DELETE_BY_QUERY | flags);  \r\n      codec.writeLong(cmd.getVersion());\n      codec.writeStr(cmd.query);\n\n      synchronized (this) {\n        long pos = fos.size();   \r\n        out.writeAll(fos);\n        endRecord(pos);\n        \r\n        return pos;\n      }\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n      }\n\n  }\n","realPath":"solr/core/src/java/org/apache/solr/update/TransactionLog.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":427,"status":"M"}],"commitId":"ab316bbc91c273b13c851a38ad5d14ef64ab3eec","commitMessage":"@@@SOLR-9922: Write buffering updates to another tlog\n","date":"2018-06-04 12:32:31","modifiedFileCount":"11","status":"M","submitter":"Cao Manh Dat"}]
