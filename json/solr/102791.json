[{"authorTime":"2016-05-05 15:05:25","codes":[{"authorDate":"2016-05-05 15:05:25","commitOrder":1,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n  }\n","date":"2016-05-05 15:05:25","endLine":78,"groupId":"21218","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/f712659106d84b3dd605745f3409c0625ad4a7.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/graph/GraphExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2016-05-05 15:05:25","commitOrder":1,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n  }\n","date":"2016-05-05 15:05:25","endLine":65,"groupId":"21218","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/27/c9dca9477d295ec9327a2141e198b3a98e8bb7.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/graph/GraphTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"}],"commitId":"940281bb5d5ee299aa3965350216eb0e6c0e758d","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-05-05 15:05:25","modifiedFileCount":"49","status":"B","submitter":"Karl Wright"},{"authorTime":"2018-11-30 01:58:18","codes":[{"authorDate":"2016-05-05 15:05:25","commitOrder":2,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n  }\n","date":"2016-05-05 15:05:25","endLine":78,"groupId":"102791","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/53/f712659106d84b3dd605745f3409c0625ad4a7.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/graph/GraphExpressionTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"N"},{"authorDate":"2018-11-30 01:58:18","commitOrder":2,"curCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1).process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(COLLECTION, 2, 2);\n  }\n","date":"2018-11-30 01:58:51","endLine":62,"groupId":"102791","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/1e/dc0e952ef1b95cf52c4a551d3ccfdc836ef7e7.src","preCode":"  public static void setupCluster() throws Exception {\n    configureCluster(2)\n        .addConfig(\"conf\", getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\"))\n        .configure();\n\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 2, 1).process(cluster.getSolrClient());\n    AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(),\n        false, true, TIMEOUT);\n  }\n","realPath":"solr/solrj/src/test/org/apache/solr/client/solrj/io/graph/GraphTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"75b183196798232aa6f2dcaaaab117f309119053","commitMessage":"@@@SOLR-12801: Make massive improvements to the tests.\n\nSOLR-12804: Remove static modifier from Overseer queue access.\n\nSOLR-12896: Introduce more checks for shutdown and closed to improve clean close and shutdown. (Partial)\n\nSOLR-12897: Introduce AlreadyClosedException to clean up silly close / shutdown logging. (Partial)\n\nSOLR-12898: Replace cluster state polling with ZkStateReader#waitFor. (Partial)\n\nSOLR-12923: The new AutoScaling tests are way too flaky and need special attention. (Partial)\n\nSOLR-12932: ant test (without badapples=false) should pass easily for developers. (Partial)\n\nSOLR-12933: Fix SolrCloud distributed commit.\n","date":"2018-11-30 01:58:51","modifiedFileCount":"339","status":"M","submitter":"markrmiller"}]
