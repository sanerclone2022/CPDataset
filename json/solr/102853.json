[{"authorTime":"2018-04-20 17:34:04","codes":[{"authorDate":"2018-04-20 17:34:04","commitOrder":12,"curCode":"  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n","date":"2018-04-20 17:34:04","endLine":99,"groupId":"16995","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTieredMPSolrIndexConfigCreation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d5/ebf051d9f677e33fe761170a2ee4ffee3ab0f1.src","preCode":"  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"MB"},{"authorDate":"2018-04-20 17:34:04","commitOrder":12,"curCode":"  public void testConcurrentMergeSchedularSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameConnMSPolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", false, ms.getAutoIOThrottle());\n\n  }\n","date":"2018-04-20 17:34:04","endLine":121,"groupId":"34266","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcurrentMergeSchedularSolrIndexConfigCreation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/d5/ebf051d9f677e33fe761170a2ee4ffee3ab0f1.src","preCode":"  public void testConcurrentMergeSchedularSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameConnMSPolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", false, ms.getAutoIOThrottle());\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"}],"commitId":"4eead83a83235b235145f07f0a625055b860ad65","commitMessage":"@@@SOLR-11200: A new CMS config option 'ioThrottle' to manually enable/disable ConcurrentMergeSchedule.doAutoIOThrottle. (Amrit Sarkar.  Nawab Zada Asad iqbal)\n","date":"2018-04-20 17:34:04","modifiedFileCount":"2","status":"M","submitter":"Dawid Weiss"},{"authorTime":"2019-12-12 17:30:09","codes":[{"authorDate":"2019-12-12 17:30:09","commitOrder":13,"curCode":"  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n","date":"2019-12-12 17:30:09","endLine":98,"groupId":"16995","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTieredMPSolrIndexConfigCreation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/27/138ce51f8185356dbb112fd8522560ae4bb69b.src","preCode":"  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2019-12-12 17:30:09","commitOrder":13,"curCode":"  public void testConcurrentMergeSchedularSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameConnMSPolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", false, ms.getAutoIOThrottle());\n\n  }\n","date":"2019-12-12 17:30:09","endLine":120,"groupId":"34266","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcurrentMergeSchedularSolrIndexConfigCreation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/27/138ce51f8185356dbb112fd8522560ae4bb69b.src","preCode":"  public void testConcurrentMergeSchedularSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameConnMSPolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", false, ms.getAutoIOThrottle());\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"fa1ad006b67d8f1f736c74b4376fdb23d09100c0","commitMessage":"@@@SOLR-14071: Untrusted configsets shouldn't be allowed to use <lib> directive\n","date":"2019-12-12 17:30:09","modifiedFileCount":"9","status":"M","submitter":"Ishan Chattopadhyaya"},{"authorTime":"2020-01-06 13:32:31","codes":[{"authorDate":"2020-01-06 13:32:31","commitOrder":14,"curCode":"  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n","date":"2020-03-11 21:20:28","endLine":98,"groupId":"16995","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testTieredMPSolrIndexConfigCreation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5a/e02aff2d24da441de4e3df26e2e94605fc9cad.src","preCode":"  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2020-01-06 13:32:31","commitOrder":14,"curCode":"  public void testConcurrentMergeSchedularSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameConnMSPolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", false, ms.getAutoIOThrottle());\n\n  }\n","date":"2020-03-11 21:20:28","endLine":120,"groupId":"34266","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcurrentMergeSchedularSolrIndexConfigCreation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/5a/e02aff2d24da441de4e3df26e2e94605fc9cad.src","preCode":"  public void testConcurrentMergeSchedularSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameConnMSPolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", false, ms.getAutoIOThrottle());\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"732348ec7f9c6b6f7bf9d539a40e50d16198cccc","commitMessage":"@@@SOLR-14197: SolrResourceLoader refactorings to reduce API\n* Remove SRL.listConfigDir (unused)\n* Remove SRL.getDataDir\n* Remove SRL.getCoreName\n* Remove SRL.getCoreProperties\n XmlConfigFile needs to be passed in the substitutableProperties\n IndexSchema needs to be passed in the substitutableProperties\n Remove redundant Properties from CoreContainer constructors\n* Remove SRL.newAdminHandlerInstance (unused)\n* Remove SRL.openSchema and openConfig\n* Avoid SRL.getConfigDir\n Also harmonized similar initialization logic between DIH Tika processor & ExtractingRequestHandler.\n* Ensure SRL.addToClassLoader and reloadLuceneSPI are called at most once\n Don't auto-load \"lib\" in constructor; wrong place for this logic.\n* Avoid SRL.getInstancePath\n Added SolrCore.getInstancePath instead\n Use CoreContainer.getSolrHome instead\n NodeConfig should track solrHome separate from SolrResourceLoader\n* Simplify some SolrCore constructors\n* Move locateSolrHome to new SolrPaths\n* Move \"User Files\" stuff to SolrPaths\n","date":"2020-03-11 21:20:28","modifiedFileCount":"58","status":"M","submitter":"David Smiley"},{"authorTime":"2021-04-29 21:34:26","codes":[{"authorDate":"2021-04-29 21:34:26","commitOrder":15,"curCode":"  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n","date":"2021-04-29 21:34:26","endLine":105,"groupId":"16995","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testTieredMPSolrIndexConfigCreation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/1dd07e4700f8c50adeddc53783b0024e1c8068.src","preCode":"  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2021-04-29 21:34:26","commitOrder":15,"curCode":"  public void testConcurrentMergeSchedularSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameConnMSPolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", false, ms.getAutoIOThrottle());\n\n  }\n","date":"2021-04-29 21:34:26","endLine":127,"groupId":"34266","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcurrentMergeSchedularSolrIndexConfigCreation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/22/1dd07e4700f8c50adeddc53783b0024e1c8068.src","preCode":"  public void testConcurrentMergeSchedularSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameConnMSPolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", false, ms.getAutoIOThrottle());\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"ca031d23b55b3624df859bc5ce19ba5753358eec","commitMessage":"@@@SOLR-15337: Avoid XPath in solrconfig.xml parsing (#104)\n\n","date":"2021-04-29 21:34:26","modifiedFileCount":"26","status":"M","submitter":"Noble Paul"},{"authorTime":"2021-04-30 22:46:03","codes":[{"authorDate":"2021-04-30 22:46:03","commitOrder":16,"curCode":"  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n","date":"2021-04-30 22:46:33","endLine":105,"groupId":"102853","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testTieredMPSolrIndexConfigCreation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4f/43b10a260543032b26b77221c78130288ffdc9.src","preCode":"  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2021-04-30 22:46:03","commitOrder":16,"curCode":"  public void testConcurrentMergeSchedularSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameConnMSPolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", false, ms.getAutoIOThrottle());\n\n  }\n","date":"2021-04-30 22:46:33","endLine":127,"groupId":"102853","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testConcurrentMergeSchedularSolrIndexConfigCreation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4f/43b10a260543032b26b77221c78130288ffdc9.src","preCode":"  public void testConcurrentMergeSchedularSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameConnMSPolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n\n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", false, ms.getAutoIOThrottle());\n\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"cf7278cf57ebeaa07c79d4933269750e6f6ce883","commitMessage":"@@@Revert \"SOLR-15337: Avoid XPath in solrconfig.xml parsing (#104)\"\n\nThis reverts commit ca031d23b55b3624df859bc5ce19ba5753358eec.\n","date":"2021-04-30 22:46:33","modifiedFileCount":"26","status":"M","submitter":"Mike Drob"}]
