[{"authorTime":"2013-06-27 08:44:27","codes":[{"authorDate":"2013-06-27 08:44:27","commitOrder":1,"curCode":"  public void testParseDateFieldNotInSchema() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    String dateString = \"2010-11-12T13:14:15.168Z\";\n    DateTimeFormatter dateTimeFormatter = ISODateTimeFormat.dateTime();\n    DateTime dateTime = dateTimeFormatter.parseDateTime(dateString);\n\n    SolrInputDocument d = processAdd(\"parse-date-no-run-processor\",\n                                     doc(f(\"id\", \"18\"), f(\"not_in_schema\", dateString)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date);\n    assertEquals(dateTime.getMillis(), ((Date)d.getFieldValue(\"not_in_schema\")).getTime());\n    \n    d = processAdd(\"parse-date-no-run-processor\", \n                   doc(f(\"id\", \"36\"), f(\"not_in_schema\", \"not a date\", dateString)));\n    assertNotNull(d);\n    for (Object val : d.getFieldValues(\"not_in_schema\")) {\n      \r\n      assertTrue(val instanceof String);\n    }\n\n    d = processAdd(\"parse-date-no-run-processor\",\n        doc(f(\"id\", \"72\"), f(\"not_in_schema\", dateString, \"not a date\")));\n    assertNotNull(d);\n    for (Object val : d.getFieldValues(\"not_in_schema\")) {\n      \r\n      assertTrue(val instanceof String);\n    }\n  }\n","date":"2013-06-27 08:44:27","endLine":105,"groupId":"11389","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseDateFieldNotInSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/e6c21580d6797fda7663ad96ea802d93e27d17.src","preCode":"  public void testParseDateFieldNotInSchema() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    String dateString = \"2010-11-12T13:14:15.168Z\";\n    DateTimeFormatter dateTimeFormatter = ISODateTimeFormat.dateTime();\n    DateTime dateTime = dateTimeFormatter.parseDateTime(dateString);\n\n    SolrInputDocument d = processAdd(\"parse-date-no-run-processor\",\n                                     doc(f(\"id\", \"18\"), f(\"not_in_schema\", dateString)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date);\n    assertEquals(dateTime.getMillis(), ((Date)d.getFieldValue(\"not_in_schema\")).getTime());\n    \n    d = processAdd(\"parse-date-no-run-processor\", \n                   doc(f(\"id\", \"36\"), f(\"not_in_schema\", \"not a date\", dateString)));\n    assertNotNull(d);\n    for (Object val : d.getFieldValues(\"not_in_schema\")) {\n      \r\n      assertTrue(val instanceof String);\n    }\n\n    d = processAdd(\"parse-date-no-run-processor\",\n        doc(f(\"id\", \"72\"), f(\"not_in_schema\", dateString, \"not a date\")));\n    assertNotNull(d);\n    for (Object val : d.getFieldValues(\"not_in_schema\")) {\n      \r\n      assertTrue(val instanceof String);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2013-06-27 08:44:27","commitOrder":1,"curCode":"  public void testParseDateExplicitNotInSchemaSelector() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    String dateString = \"2010-11-12T13:14:15.168Z\";\n    DateTimeFormatter dateTimeFormatter = ISODateTimeFormat.dateTime();\n    DateTime dateTime = dateTimeFormatter.parseDateTime(dateString);\n\n    SolrInputDocument d = processAdd(\"parse-date-explicit-not-in-schema-selector-no-run-processor\",\n                                     doc(f(\"id\", \"88\"), f(\"not_in_schema\", dateString)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date);\n    assertEquals(dateTime.getMillis(), ((Date)d.getFieldValue(\"not_in_schema\")).getTime());\n  }\n","date":"2013-06-27 08:44:27","endLine":144,"groupId":"11389","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseDateExplicitNotInSchemaSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/4b/e6c21580d6797fda7663ad96ea802d93e27d17.src","preCode":"  public void testParseDateExplicitNotInSchemaSelector() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    String dateString = \"2010-11-12T13:14:15.168Z\";\n    DateTimeFormatter dateTimeFormatter = ISODateTimeFormat.dateTime();\n    DateTime dateTime = dateTimeFormatter.parseDateTime(dateString);\n\n    SolrInputDocument d = processAdd(\"parse-date-explicit-not-in-schema-selector-no-run-processor\",\n                                     doc(f(\"id\", \"88\"), f(\"not_in_schema\", dateString)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date);\n    assertEquals(dateTime.getMillis(), ((Date)d.getFieldValue(\"not_in_schema\")).getTime());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"B"}],"commitId":"d6d65851cf4a7d1f9e5f0b58544374785e7c2594","commitMessage":"@@@SOLR-4892: Add field update processors to parse/convert String-typed fields to Date.  Number.  and Boolean\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1497165 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-27 08:44:27","modifiedFileCount":"15","status":"B","submitter":"Steven Rowe"},{"authorTime":"2018-08-07 23:51:16","codes":[{"authorDate":"2018-08-07 23:51:16","commitOrder":2,"curCode":"  public void testParseDateFieldNotInSchema() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    String dateString = \"2010-11-12T13:14:15.168Z\";\n\n    SolrInputDocument d = processAdd(\"parse-date-no-run-processor\",\n                                     doc(f(\"id\", \"18\"), f(\"not_in_schema\", dateString)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date);\n    assertEquals(Instant.parse(dateString), ((Date)d.getFieldValue(\"not_in_schema\")).toInstant());\n    \n    d = processAdd(\"parse-date-no-run-processor\", \n                   doc(f(\"id\", \"36\"), f(\"not_in_schema\", \"not a date\", dateString)));\n    assertNotNull(d);\n    for (Object val : d.getFieldValues(\"not_in_schema\")) {\n      \r\n      assertTrue(val instanceof String);\n    }\n\n    d = processAdd(\"parse-date-no-run-processor\",\n        doc(f(\"id\", \"72\"), f(\"not_in_schema\", dateString, \"not a date\")));\n    assertNotNull(d);\n    for (Object val : d.getFieldValues(\"not_in_schema\")) {\n      \r\n      assertTrue(val instanceof String);\n    }\n  }\n","date":"2018-08-07 23:51:16","endLine":105,"groupId":"40834","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseDateFieldNotInSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e2/6ca4122bf8ede9bac449f640e50cefc57b7a98.src","preCode":"  public void testParseDateFieldNotInSchema() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    String dateString = \"2010-11-12T13:14:15.168Z\";\n    DateTimeFormatter dateTimeFormatter = ISODateTimeFormat.dateTime();\n    DateTime dateTime = dateTimeFormatter.parseDateTime(dateString);\n\n    SolrInputDocument d = processAdd(\"parse-date-no-run-processor\",\n                                     doc(f(\"id\", \"18\"), f(\"not_in_schema\", dateString)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date);\n    assertEquals(dateTime.getMillis(), ((Date)d.getFieldValue(\"not_in_schema\")).getTime());\n    \n    d = processAdd(\"parse-date-no-run-processor\", \n                   doc(f(\"id\", \"36\"), f(\"not_in_schema\", \"not a date\", dateString)));\n    assertNotNull(d);\n    for (Object val : d.getFieldValues(\"not_in_schema\")) {\n      \r\n      assertTrue(val instanceof String);\n    }\n\n    d = processAdd(\"parse-date-no-run-processor\",\n        doc(f(\"id\", \"72\"), f(\"not_in_schema\", dateString, \"not a date\")));\n    assertNotNull(d);\n    for (Object val : d.getFieldValues(\"not_in_schema\")) {\n      \r\n      assertTrue(val instanceof String);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2018-08-07 23:51:16","commitOrder":2,"curCode":"  public void testParseDateExplicitNotInSchemaSelector() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    String dateString = \"2010-11-12T13:14:15.168Z\";\n\n    SolrInputDocument d = processAdd(\"parse-date-explicit-not-in-schema-selector-no-run-processor\",\n                                     doc(f(\"id\", \"88\"), f(\"not_in_schema\", dateString)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date);\n    assertEquals(Instant.parse(dateString), ((Date)d.getFieldValue(\"not_in_schema\")).toInstant());\n  }\n","date":"2018-08-07 23:51:16","endLine":138,"groupId":"40834","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseDateExplicitNotInSchemaSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/e2/6ca4122bf8ede9bac449f640e50cefc57b7a98.src","preCode":"  public void testParseDateExplicitNotInSchemaSelector() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    String dateString = \"2010-11-12T13:14:15.168Z\";\n    DateTimeFormatter dateTimeFormatter = ISODateTimeFormat.dateTime();\n    DateTime dateTime = dateTimeFormatter.parseDateTime(dateString);\n\n    SolrInputDocument d = processAdd(\"parse-date-explicit-not-in-schema-selector-no-run-processor\",\n                                     doc(f(\"id\", \"88\"), f(\"not_in_schema\", dateString)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date);\n    assertEquals(dateTime.getMillis(), ((Date)d.getFieldValue(\"not_in_schema\")).getTime());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"c3887b351e77ab6d23ddd662564b3d0d977895e4","commitMessage":"@@@SOLR-12586: Change ParseDateFieldUpdateProcessorFactory to use java.time.DateTimeFormatter.  not Joda Time.\nNote: slightly different pattern language!\nRemove Joda Time.\nCloses #428\n","date":"2018-08-07 23:51:16","modifiedFileCount":"4","status":"M","submitter":"David Smiley"},{"authorTime":"2019-06-26 07:26:03","codes":[{"authorDate":"2019-06-26 07:26:03","commitOrder":3,"curCode":"  public void testParseDateFieldNotInSchema() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    String dateString = \"2010-11-12T13:14:15.168Z\";\n\n    SolrInputDocument d = processAdd(\"parse-date-no-run-processor\",\n                                     doc(f(\"id\", \"18\"), f(\"not_in_schema\", dateString)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_DATE);\n    assertEquals(Instant.parse(dateString), ((Date)d.getFieldValue(\"not_in_schema\")).toInstant());\n    \n    d = processAdd(\"parse-date-no-run-processor\", \n                   doc(f(\"id\", \"36\"), f(\"not_in_schema\", \"not a date\", dateString)));\n    assertNotNull(d);\n    for (Object val : d.getFieldValues(\"not_in_schema\")) {\n      \r\n      assertThat(val, IS_STRING);\n    }\n\n    d = processAdd(\"parse-date-no-run-processor\",\n        doc(f(\"id\", \"72\"), f(\"not_in_schema\", dateString, \"not a date\")));\n    assertNotNull(d);\n    for (Object val : d.getFieldValues(\"not_in_schema\")) {\n      \r\n      assertThat(val, IS_STRING);\n    }\n  }\n","date":"2019-06-26 07:26:03","endLine":121,"groupId":"102904","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseDateFieldNotInSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/978c83e26b147be8a7b06765e593d9eddf99e9.src","preCode":"  public void testParseDateFieldNotInSchema() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    String dateString = \"2010-11-12T13:14:15.168Z\";\n\n    SolrInputDocument d = processAdd(\"parse-date-no-run-processor\",\n                                     doc(f(\"id\", \"18\"), f(\"not_in_schema\", dateString)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date);\n    assertEquals(Instant.parse(dateString), ((Date)d.getFieldValue(\"not_in_schema\")).toInstant());\n    \n    d = processAdd(\"parse-date-no-run-processor\", \n                   doc(f(\"id\", \"36\"), f(\"not_in_schema\", \"not a date\", dateString)));\n    assertNotNull(d);\n    for (Object val : d.getFieldValues(\"not_in_schema\")) {\n      \r\n      assertTrue(val instanceof String);\n    }\n\n    d = processAdd(\"parse-date-no-run-processor\",\n        doc(f(\"id\", \"72\"), f(\"not_in_schema\", dateString, \"not a date\")));\n    assertNotNull(d);\n    for (Object val : d.getFieldValues(\"not_in_schema\")) {\n      \r\n      assertTrue(val instanceof String);\n    }\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2019-06-26 07:26:03","commitOrder":3,"curCode":"  public void testParseDateExplicitNotInSchemaSelector() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    String dateString = \"2010-11-12T13:14:15.168Z\";\n\n    SolrInputDocument d = processAdd(\"parse-date-explicit-not-in-schema-selector-no-run-processor\",\n                                     doc(f(\"id\", \"88\"), f(\"not_in_schema\", dateString)));\n    assertNotNull(d);\n    assertThat(d.getFieldValue(\"not_in_schema\"), IS_DATE);\n    assertEquals(Instant.parse(dateString), ((Date)d.getFieldValue(\"not_in_schema\")).toInstant());\n  }\n","date":"2019-06-26 07:26:03","endLine":154,"groupId":"102904","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseDateExplicitNotInSchemaSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-solr-10-0.7/blobInfo/CC_OUT/blobs/ec/978c83e26b147be8a7b06765e593d9eddf99e9.src","preCode":"  public void testParseDateExplicitNotInSchemaSelector() throws Exception {\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertNull(schema.getFieldOrNull(\"not_in_schema\"));\n    String dateString = \"2010-11-12T13:14:15.168Z\";\n\n    SolrInputDocument d = processAdd(\"parse-date-explicit-not-in-schema-selector-no-run-processor\",\n                                     doc(f(\"id\", \"88\"), f(\"not_in_schema\", dateString)));\n    assertNotNull(d);\n    assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date);\n    assertEquals(Instant.parse(dateString), ((Date)d.getFieldValue(\"not_in_schema\")).toInstant());\n  }\n","realPath":"solr/core/src/test/org/apache/solr/update/processor/ParsingFieldUpdateProcessorsTest.java","repoName":"solr","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"583c219183b2bca85936a095727d287c5c28526b","commitMessage":"@@@SOLR-13580: add assumeThat calls to ParsingFieldUpdateProcessorsTest to skip test methods impacted by java 13-ea bug in NumberFormat.parse()\n","date":"2019-06-26 07:26:03","modifiedFileCount":"1","status":"M","submitter":"Chris Hostetter"}]
