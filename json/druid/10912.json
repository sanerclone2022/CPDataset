[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testRun() throws Exception\n  {\n    segmentAnnouncer.announceSegments(testSegments);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    DruidServer server = Iterables.get(batchServerInventoryView.getInventory(), 0);\n    Set<DataSegment> segments = Sets.newHashSet(server.getSegments().values());\n\n    Assert.assertEquals(testSegments, segments);\n\n    DataSegment segment1 = makeSegment(101);\n    DataSegment segment2 = makeSegment(102);\n\n    segmentAnnouncer.announceSegment(segment1);\n    segmentAnnouncer.announceSegment(segment2);\n    testSegments.add(segment1);\n    testSegments.add(segment2);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    Assert.assertEquals(testSegments, Sets.newHashSet(server.getSegments().values()));\n\n    segmentAnnouncer.unannounceSegment(segment1);\n    segmentAnnouncer.unannounceSegment(segment2);\n    testSegments.remove(segment1);\n    testSegments.remove(segment2);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    Assert.assertEquals(testSegments, Sets.newHashSet(server.getSegments().values()));\n  }\n","date":"2018-08-31 00:56:26","endLine":264,"groupId":"875","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/fa/2fa440c26817a355b528cdcd0754fee8616f2d.src","preCode":"  public void testRun() throws Exception\n  {\n    segmentAnnouncer.announceSegments(testSegments);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    DruidServer server = Iterables.get(batchServerInventoryView.getInventory(), 0);\n    Set<DataSegment> segments = Sets.newHashSet(server.getSegments().values());\n\n    Assert.assertEquals(testSegments, segments);\n\n    DataSegment segment1 = makeSegment(101);\n    DataSegment segment2 = makeSegment(102);\n\n    segmentAnnouncer.announceSegment(segment1);\n    segmentAnnouncer.announceSegment(segment2);\n    testSegments.add(segment1);\n    testSegments.add(segment2);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    Assert.assertEquals(testSegments, Sets.newHashSet(server.getSegments().values()));\n\n    segmentAnnouncer.unannounceSegment(segment1);\n    segmentAnnouncer.unannounceSegment(segment2);\n    testSegments.remove(segment1);\n    testSegments.remove(segment2);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    Assert.assertEquals(testSegments, Sets.newHashSet(server.getSegments().values()));\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/client/BatchServerInventoryViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testRunWithFilter() throws Exception\n  {\n    segmentAnnouncer.announceSegments(testSegments);\n\n    waitForSync(filteredBatchServerInventoryView, testSegments);\n\n    DruidServer server = Iterables.get(filteredBatchServerInventoryView.getInventory(), 0);\n    Set<DataSegment> segments = Sets.newHashSet(server.getSegments().values());\n\n    Assert.assertEquals(testSegments, segments);\n    int prevUpdateCount = inventoryUpdateCounter.get();\n    \r\n    DataSegment segment1 = makeSegment(101);\n    segmentAnnouncer.announceSegment(segment1);\n    testSegments.add(segment1);\n\n    waitForUpdateEvents(prevUpdateCount + 1);\n    Assert.assertNull(\n        Iterables.getOnlyElement(filteredBatchServerInventoryView.getInventory())\n                 .getSegment(segment1.getIdentifier())\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":288,"groupId":"17292","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRunWithFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/fa/2fa440c26817a355b528cdcd0754fee8616f2d.src","preCode":"  public void testRunWithFilter() throws Exception\n  {\n    segmentAnnouncer.announceSegments(testSegments);\n\n    waitForSync(filteredBatchServerInventoryView, testSegments);\n\n    DruidServer server = Iterables.get(filteredBatchServerInventoryView.getInventory(), 0);\n    Set<DataSegment> segments = Sets.newHashSet(server.getSegments().values());\n\n    Assert.assertEquals(testSegments, segments);\n    int prevUpdateCount = inventoryUpdateCounter.get();\n    \r\n    DataSegment segment1 = makeSegment(101);\n    segmentAnnouncer.announceSegment(segment1);\n    testSegments.add(segment1);\n\n    waitForUpdateEvents(prevUpdateCount + 1);\n    Assert.assertNull(\n        Iterables.getOnlyElement(filteredBatchServerInventoryView.getInventory())\n                 .getSegment(segment1.getIdentifier())\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/client/BatchServerInventoryViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":267,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-01-22 03:11:10","codes":[{"authorDate":"2019-01-22 03:11:10","commitOrder":2,"curCode":"  public void testRun() throws Exception\n  {\n    segmentAnnouncer.announceSegments(testSegments);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    DruidServer server = Iterables.get(batchServerInventoryView.getInventory(), 0);\n    Set<DataSegment> segments = Sets.newHashSet(server.getSegments());\n\n    Assert.assertEquals(testSegments, segments);\n\n    DataSegment segment1 = makeSegment(101);\n    DataSegment segment2 = makeSegment(102);\n\n    segmentAnnouncer.announceSegment(segment1);\n    segmentAnnouncer.announceSegment(segment2);\n    testSegments.add(segment1);\n    testSegments.add(segment2);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    Assert.assertEquals(testSegments, Sets.newHashSet(server.getSegments()));\n\n    segmentAnnouncer.unannounceSegment(segment1);\n    segmentAnnouncer.unannounceSegment(segment2);\n    testSegments.remove(segment1);\n    testSegments.remove(segment2);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    Assert.assertEquals(testSegments, Sets.newHashSet(server.getSegments()));\n  }\n","date":"2019-01-22 03:11:10","endLine":265,"groupId":"875","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d0/7322c4a51cfc181eb0256e6648183cd51d4195.src","preCode":"  public void testRun() throws Exception\n  {\n    segmentAnnouncer.announceSegments(testSegments);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    DruidServer server = Iterables.get(batchServerInventoryView.getInventory(), 0);\n    Set<DataSegment> segments = Sets.newHashSet(server.getSegments().values());\n\n    Assert.assertEquals(testSegments, segments);\n\n    DataSegment segment1 = makeSegment(101);\n    DataSegment segment2 = makeSegment(102);\n\n    segmentAnnouncer.announceSegment(segment1);\n    segmentAnnouncer.announceSegment(segment2);\n    testSegments.add(segment1);\n    testSegments.add(segment2);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    Assert.assertEquals(testSegments, Sets.newHashSet(server.getSegments().values()));\n\n    segmentAnnouncer.unannounceSegment(segment1);\n    segmentAnnouncer.unannounceSegment(segment2);\n    testSegments.remove(segment1);\n    testSegments.remove(segment2);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    Assert.assertEquals(testSegments, Sets.newHashSet(server.getSegments().values()));\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/client/BatchServerInventoryViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"},{"authorDate":"2019-01-22 03:11:10","commitOrder":2,"curCode":"  public void testRunWithFilter() throws Exception\n  {\n    segmentAnnouncer.announceSegments(testSegments);\n\n    waitForSync(filteredBatchServerInventoryView, testSegments);\n\n    DruidServer server = Iterables.get(filteredBatchServerInventoryView.getInventory(), 0);\n    Set<DataSegment> segments = Sets.newHashSet(server.getSegments());\n\n    Assert.assertEquals(testSegments, segments);\n    int prevUpdateCount = inventoryUpdateCounter.get();\n    \r\n    DataSegment segment1 = makeSegment(101);\n    segmentAnnouncer.announceSegment(segment1);\n    testSegments.add(segment1);\n\n    waitForUpdateEvents(prevUpdateCount + 1);\n    Assert.assertNull(\n        Iterables.getOnlyElement(filteredBatchServerInventoryView.getInventory())\n                 .getSegment(segment1.getId())\n    );\n  }\n","date":"2019-01-22 03:11:10","endLine":289,"groupId":"19635","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRunWithFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d0/7322c4a51cfc181eb0256e6648183cd51d4195.src","preCode":"  public void testRunWithFilter() throws Exception\n  {\n    segmentAnnouncer.announceSegments(testSegments);\n\n    waitForSync(filteredBatchServerInventoryView, testSegments);\n\n    DruidServer server = Iterables.get(filteredBatchServerInventoryView.getInventory(), 0);\n    Set<DataSegment> segments = Sets.newHashSet(server.getSegments().values());\n\n    Assert.assertEquals(testSegments, segments);\n    int prevUpdateCount = inventoryUpdateCounter.get();\n    \r\n    DataSegment segment1 = makeSegment(101);\n    segmentAnnouncer.announceSegment(segment1);\n    testSegments.add(segment1);\n\n    waitForUpdateEvents(prevUpdateCount + 1);\n    Assert.assertNull(\n        Iterables.getOnlyElement(filteredBatchServerInventoryView.getInventory())\n                 .getSegment(segment1.getIdentifier())\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/client/BatchServerInventoryViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":268,"status":"M"}],"commitId":"8eae26fd4e7572060d112864dd3d5f6a865b9c89","commitMessage":"@@@Introduce SegmentId class (#6370)\n\n* Introduce SegmentId class\n\n* tmp\n\n* Fix SelectQueryRunnerTest\n\n* Fix indentation\n\n* Fixes\n\n* Remove Comparators.inverse() tests\n\n* Refinements\n\n* Fix tests\n\n* Fix more tests\n\n* Remove duplicate DataSegmentTest.  fixes #6064\n\n* SegmentDescriptor doc\n\n* Fix SQLMetadataStorageUpdaterJobHandler\n\n* Fix DataSegment deserialization for ignoring id\n\n* Add comments\n\n* More comments\n\n* Address more comments\n\n* Fix compilation\n\n* Restore segment2 in SystemSchemaTest according to a comment\n\n* Fix style\n\n* fix testServerSegmentsTable\n\n* Fix compilation\n\n* Add comments about why SegmentId and SegmentIdWithShardSpec are separate classes\n\n* Fix SystemSchemaTest\n\n* Fix style\n\n* Compare SegmentDescriptor with SegmentId in Javadoc and comments rather than with DataSegment\n\n* Remove a link.  see https://youtrack.jetbrains.com/issue/IDEA-205164\n\n* Fix compilation\n","date":"2019-01-22 03:11:10","modifiedFileCount":"308","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-03-20 05:22:56","codes":[{"authorDate":"2019-03-20 05:22:56","commitOrder":3,"curCode":"  public void testRun() throws Exception\n  {\n    segmentAnnouncer.announceSegments(testSegments);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    DruidServer server = Iterables.get(batchServerInventoryView.getInventory(), 0);\n    Set<DataSegment> segments = Sets.newHashSet(server.iterateAllSegments());\n\n    Assert.assertEquals(testSegments, segments);\n\n    DataSegment segment1 = makeSegment(101);\n    DataSegment segment2 = makeSegment(102);\n\n    segmentAnnouncer.announceSegment(segment1);\n    segmentAnnouncer.announceSegment(segment2);\n    testSegments.add(segment1);\n    testSegments.add(segment2);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    Assert.assertEquals(testSegments, Sets.newHashSet(server.iterateAllSegments()));\n\n    segmentAnnouncer.unannounceSegment(segment1);\n    segmentAnnouncer.unannounceSegment(segment2);\n    testSegments.remove(segment1);\n    testSegments.remove(segment2);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    Assert.assertEquals(testSegments, Sets.newHashSet(server.iterateAllSegments()));\n  }\n","date":"2019-03-20 05:22:56","endLine":264,"groupId":"10912","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d2/de54fa8270888eabc07cd13d6782bfedfbb507.src","preCode":"  public void testRun() throws Exception\n  {\n    segmentAnnouncer.announceSegments(testSegments);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    DruidServer server = Iterables.get(batchServerInventoryView.getInventory(), 0);\n    Set<DataSegment> segments = Sets.newHashSet(server.getSegments());\n\n    Assert.assertEquals(testSegments, segments);\n\n    DataSegment segment1 = makeSegment(101);\n    DataSegment segment2 = makeSegment(102);\n\n    segmentAnnouncer.announceSegment(segment1);\n    segmentAnnouncer.announceSegment(segment2);\n    testSegments.add(segment1);\n    testSegments.add(segment2);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    Assert.assertEquals(testSegments, Sets.newHashSet(server.getSegments()));\n\n    segmentAnnouncer.unannounceSegment(segment1);\n    segmentAnnouncer.unannounceSegment(segment2);\n    testSegments.remove(segment1);\n    testSegments.remove(segment2);\n\n    waitForSync(batchServerInventoryView, testSegments);\n\n    Assert.assertEquals(testSegments, Sets.newHashSet(server.getSegments()));\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/client/BatchServerInventoryViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"},{"authorDate":"2019-03-20 05:22:56","commitOrder":3,"curCode":"  public void testRunWithFilter() throws Exception\n  {\n    segmentAnnouncer.announceSegments(testSegments);\n\n    waitForSync(filteredBatchServerInventoryView, testSegments);\n\n    DruidServer server = Iterables.get(filteredBatchServerInventoryView.getInventory(), 0);\n    Set<DataSegment> segments = Sets.newHashSet(server.iterateAllSegments());\n\n    Assert.assertEquals(testSegments, segments);\n    int prevUpdateCount = inventoryUpdateCounter.get();\n    \r\n    DataSegment segment1 = makeSegment(101);\n    segmentAnnouncer.announceSegment(segment1);\n    testSegments.add(segment1);\n\n    waitForUpdateEvents(prevUpdateCount + 1);\n    Assert.assertNull(\n        Iterables.getOnlyElement(filteredBatchServerInventoryView.getInventory())\n                 .getSegment(segment1.getId())\n    );\n  }\n","date":"2019-03-20 05:22:56","endLine":288,"groupId":"10912","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testRunWithFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d2/de54fa8270888eabc07cd13d6782bfedfbb507.src","preCode":"  public void testRunWithFilter() throws Exception\n  {\n    segmentAnnouncer.announceSegments(testSegments);\n\n    waitForSync(filteredBatchServerInventoryView, testSegments);\n\n    DruidServer server = Iterables.get(filteredBatchServerInventoryView.getInventory(), 0);\n    Set<DataSegment> segments = Sets.newHashSet(server.getSegments());\n\n    Assert.assertEquals(testSegments, segments);\n    int prevUpdateCount = inventoryUpdateCounter.get();\n    \r\n    DataSegment segment1 = makeSegment(101);\n    segmentAnnouncer.announceSegment(segment1);\n    testSegments.add(segment1);\n\n    waitForUpdateEvents(prevUpdateCount + 1);\n    Assert.assertNull(\n        Iterables.getOnlyElement(filteredBatchServerInventoryView.getInventory())\n                 .getSegment(segment1.getId())\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/client/BatchServerInventoryViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":267,"status":"M"}],"commitId":"dfd27e00c0559e89a77ad8abbae03eeb382c2d09","commitMessage":"@@@Avoid many unnecessary materializations of collections of 'all segments in cluster' cardinality (#7185)\n\n* Avoid many  unnecessary materializations of collections of 'all segments in cluster' cardinality\n\n* Fix DruidCoordinatorTest; Renamed DruidCoordinator.getReplicationStatus() to computeUnderReplicationCountsPerDataSourcePerTier()\n\n* More Javadocs.  typos.  refactor DruidCoordinatorRuntimeParams.createAvailableSegmentsSet()\n\n* Style\n\n* typo\n\n* Disable StaticPseudoFunctionalStyleMethod inspection because of too much false positives\n\n* Fixes\n","date":"2019-03-20 05:22:56","modifiedFileCount":"45","status":"M","submitter":"Roman Leventov"}]
