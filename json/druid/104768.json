[{"authorTime":"2019-11-21 09:24:12","codes":[{"authorDate":"2019-12-10 15:05:49","commitOrder":2,"curCode":"  SubTaskSpec<PartialRangeSegmentGenerateTask> createSubTaskSpec(\n      String id,\n      String groupId,\n      String supervisorTaskId,\n      Map<String, Object> context,\n      InputSplit split,\n      ParallelIndexIngestionSpec subTaskIngestionSpec,\n      IndexingServiceClient indexingServiceClient\n  )\n  {\n    return new SubTaskSpec<PartialRangeSegmentGenerateTask>(\n        id,\n        groupId,\n        supervisorTaskId,\n        context,\n        split\n    )\n    {\n      @Override\n      public PartialRangeSegmentGenerateTask newSubTask(int numAttempts)\n      {\n        return new PartialRangeSegmentGenerateTask(\n            null,\n            groupId,\n            null,\n            supervisorTaskId,\n            numAttempts,\n            subTaskIngestionSpec,\n            context,\n            intervalToPartitions,\n            indexingServiceClient,\n            taskClientFactory,\n            appenderatorsManager\n        );\n      }\n    };\n  }\n","date":"2019-12-10 15:05:49","endLine":130,"groupId":"4086","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createSubTaskSpec","params":"(Stringid@StringgroupId@StringsupervisorTaskId@Map<String@Object>context@InputSplitsplit@ParallelIndexIngestionSpecsubTaskIngestionSpec@IndexingServiceClientindexingServiceClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/71/f084dab86e502c61f2ea2f70f68969391b82b9.src","preCode":"  SubTaskSpec<PartialRangeSegmentGenerateTask> createSubTaskSpec(\n      String id,\n      String groupId,\n      String supervisorTaskId,\n      Map<String, Object> context,\n      InputSplit split,\n      ParallelIndexIngestionSpec subTaskIngestionSpec,\n      IndexingServiceClient indexingServiceClient\n  )\n  {\n    return new SubTaskSpec<PartialRangeSegmentGenerateTask>(\n        id,\n        groupId,\n        supervisorTaskId,\n        context,\n        split\n    )\n    {\n      @Override\n      public PartialRangeSegmentGenerateTask newSubTask(int numAttempts)\n      {\n        return new PartialRangeSegmentGenerateTask(\n            null,\n            groupId,\n            null,\n            supervisorTaskId,\n            numAttempts,\n            subTaskIngestionSpec,\n            context,\n            intervalToPartitions,\n            indexingServiceClient,\n            taskClientFactory,\n            appenderatorsManager\n        );\n      }\n    };\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialRangeSegmentGenerateParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"},{"authorDate":"2019-11-21 09:24:12","commitOrder":2,"curCode":"  SubTaskSpec<PartialHashSegmentGenerateTask> createSubTaskSpec(\n      String id,\n      String groupId,\n      String supervisorTaskId,\n      Map<String, Object> context,\n      InputSplit split,\n      ParallelIndexIngestionSpec subTaskIngestionSpec,\n      IndexingServiceClient indexingServiceClient\n  )\n  {\n    return new SubTaskSpec<PartialHashSegmentGenerateTask>(\n        id,\n        groupId,\n        supervisorTaskId,\n        context,\n        split\n    )\n    {\n      @Override\n      public PartialHashSegmentGenerateTask newSubTask(int numAttempts)\n      {\n        return new PartialHashSegmentGenerateTask(\n            null,\n            groupId,\n            null,\n            supervisorTaskId,\n            numAttempts,\n            subTaskIngestionSpec,\n            context,\n            indexingServiceClient,\n            taskClientFactory,\n            appenderatorsManager\n        );\n      }\n    };\n  }\n","date":"2019-11-21 09:24:12","endLine":114,"groupId":"4086","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createSubTaskSpec","params":"(Stringid@StringgroupId@StringsupervisorTaskId@Map<String@Object>context@InputSplitsplit@ParallelIndexIngestionSpecsubTaskIngestionSpec@IndexingServiceClientindexingServiceClient)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/db/92233aab30ccb17891bdbeba810a89fbe43649.src","preCode":"  SubTaskSpec<PartialHashSegmentGenerateTask> createSubTaskSpec(\n      String id,\n      String groupId,\n      String supervisorTaskId,\n      Map<String, Object> context,\n      InputSplit split,\n      ParallelIndexIngestionSpec subTaskIngestionSpec,\n      IndexingServiceClient indexingServiceClient\n  )\n  {\n    return new SubTaskSpec<PartialHashSegmentGenerateTask>(\n        id,\n        groupId,\n        supervisorTaskId,\n        context,\n        split\n    )\n    {\n      @Override\n      public PartialHashSegmentGenerateTask newSubTask(int numAttempts)\n      {\n        return new PartialHashSegmentGenerateTask(\n            null,\n            groupId,\n            null,\n            supervisorTaskId,\n            numAttempts,\n            subTaskIngestionSpec,\n            context,\n            indexingServiceClient,\n            taskClientFactory,\n            appenderatorsManager\n        );\n      }\n    };\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialHashSegmentGenerateParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"NB"}],"commitId":"bab78fc80e8ee2929d6d2c277d3999695c8402a4","commitMessage":"@@@Parallel indexing single dim partitions (#8925)\n\n* Parallel indexing single dim partitions\n\nImplements single dimension range partitioning for native parallel batch\nindexing as described in #8769. This initial version requires the\ndruid-datasketches extension to be loaded.\n\nThe algorithm has 5 phases that are orchestrated by the supervisor in\n`ParallelIndexSupervisorTask#runRangePartitionMultiPhaseParallel()`.\nThese phases and the main classes involved are described below:\n\n1) In parallel.  determine the distribution of dimension values for each\n   input source split.\n\n   `PartialDimensionDistributionTask` uses `StringSketch` to generate\n   the approximate distribution of dimension values for each input\n   source split. If the rows are ungrouped. \n   `PartialDimensionDistributionTask.UngroupedRowDimensionValueFilter`\n   uses a Bloom filter to skip rows that would be grouped. The final\n   distribution is sent back to the supervisor via\n   `DimensionDistributionReport`.\n\n2) The range partitions are determined.\n\n   In `ParallelIndexSupervisorTask#determineAllRangePartitions()`.  the\n   supervisor uses `StringSketchMerger` to merge the individual\n   `StringSketch`es created in the preceding phase. The merged sketch is\n   then used to create the range partitions.\n\n3) In parallel.  generate partial range-partitioned segments.\n\n   `PartialRangeSegmentGenerateTask` uses the range partitions\n   determined in the preceding phase and\n   `RangePartitionCachingLocalSegmentAllocator` to generate\n   `SingleDimensionShardSpec`s.  The partition information is sent back\n   to the supervisor via `GeneratedGenericPartitionsReport`.\n\n4) The partial range segments are grouped.\n\n   In `ParallelIndexSupervisorTask#groupGenericPartitionLocationsPerPartition()`. \n   the supervisor creates the `PartialGenericSegmentMergeIOConfig`s\n   necessary for the next phase.\n\n5) In parallel.  merge partial range-partitioned segments.\n\n   `PartialGenericSegmentMergeTask` uses `GenericPartitionLocation` to\n   retrieve the partial range-partitioned segments generated earlier and\n   then merges and publishes them.\n\n* Fix dependencies & forbidden apis\n\n* Fixes for integration test\n\n* Address review comments\n\n* Fix docs.  strict compile.  sketch check.  rollup check\n\n* Fix first shard spec.  partition serde.  single subtask\n\n* Fix first partition check in test\n\n* Misc rewording/refactoring to address code review\n\n* Fix doc link\n\n* Split batch index integration test\n\n* Do not run parallel-batch-index twice\n\n* Adjust last partition\n\n* Split ITParallelIndexTest to reduce runtime\n\n* Rename test class\n\n* Allow null values in range partitions\n\n* Indicate which phase failed\n\n* Improve asserts in tests\n","date":"2019-12-10 15:05:49","modifiedFileCount":"18","status":"M","submitter":"Chi Cao Minh"},{"authorTime":"2020-02-17 05:00:12","codes":[{"authorDate":"2020-02-17 05:00:12","commitOrder":3,"curCode":"  SubTaskSpec<PartialRangeSegmentGenerateTask> createSubTaskSpec(\n      String id,\n      String groupId,\n      String supervisorTaskId,\n      Map<String, Object> context,\n      InputSplit split,\n      ParallelIndexIngestionSpec subTaskIngestionSpec\n  )\n  {\n    return new SubTaskSpec<PartialRangeSegmentGenerateTask>(\n        id,\n        groupId,\n        supervisorTaskId,\n        context,\n        split\n    )\n    {\n      @Override\n      public PartialRangeSegmentGenerateTask newSubTask(int numAttempts)\n      {\n        return new PartialRangeSegmentGenerateTask(\n            null,\n            groupId,\n            null,\n            supervisorTaskId,\n            numAttempts,\n            subTaskIngestionSpec,\n            context,\n            intervalToPartitions,\n            null,\n            null,\n            null\n        );\n      }\n    };\n  }\n","date":"2020-02-17 05:00:12","endLine":98,"groupId":"4086","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createSubTaskSpec","params":"(Stringid@StringgroupId@StringsupervisorTaskId@Map<String@Object>context@InputSplitsplit@ParallelIndexIngestionSpecsubTaskIngestionSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e0/f9461d166ba53dac4952cee1f2ec78a4f4faa6.src","preCode":"  SubTaskSpec<PartialRangeSegmentGenerateTask> createSubTaskSpec(\n      String id,\n      String groupId,\n      String supervisorTaskId,\n      Map<String, Object> context,\n      InputSplit split,\n      ParallelIndexIngestionSpec subTaskIngestionSpec,\n      IndexingServiceClient indexingServiceClient\n  )\n  {\n    return new SubTaskSpec<PartialRangeSegmentGenerateTask>(\n        id,\n        groupId,\n        supervisorTaskId,\n        context,\n        split\n    )\n    {\n      @Override\n      public PartialRangeSegmentGenerateTask newSubTask(int numAttempts)\n      {\n        return new PartialRangeSegmentGenerateTask(\n            null,\n            groupId,\n            null,\n            supervisorTaskId,\n            numAttempts,\n            subTaskIngestionSpec,\n            context,\n            intervalToPartitions,\n            indexingServiceClient,\n            taskClientFactory,\n            appenderatorsManager\n        );\n      }\n    };\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialRangeSegmentGenerateParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-02-17 05:00:12","commitOrder":3,"curCode":"  SubTaskSpec<PartialHashSegmentGenerateTask> createSubTaskSpec(\n      String id,\n      String groupId,\n      String supervisorTaskId,\n      Map<String, Object> context,\n      InputSplit split,\n      ParallelIndexIngestionSpec subTaskIngestionSpec\n  )\n  {\n    return new SubTaskSpec<PartialHashSegmentGenerateTask>(\n        id,\n        groupId,\n        supervisorTaskId,\n        context,\n        split\n    )\n    {\n      @Override\n      public PartialHashSegmentGenerateTask newSubTask(int numAttempts)\n      {\n        return new PartialHashSegmentGenerateTask(\n            null,\n            groupId,\n            null,\n            supervisorTaskId,\n            numAttempts,\n            subTaskIngestionSpec,\n            context,\n            null,\n            null,\n            null\n        );\n      }\n    };\n  }\n","date":"2020-02-17 05:00:12","endLine":91,"groupId":"4086","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createSubTaskSpec","params":"(Stringid@StringgroupId@StringsupervisorTaskId@Map<String@Object>context@InputSplitsplit@ParallelIndexIngestionSpecsubTaskIngestionSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ef/8869c42727ca5905fe75ff776c35b9f64a634f.src","preCode":"  SubTaskSpec<PartialHashSegmentGenerateTask> createSubTaskSpec(\n      String id,\n      String groupId,\n      String supervisorTaskId,\n      Map<String, Object> context,\n      InputSplit split,\n      ParallelIndexIngestionSpec subTaskIngestionSpec,\n      IndexingServiceClient indexingServiceClient\n  )\n  {\n    return new SubTaskSpec<PartialHashSegmentGenerateTask>(\n        id,\n        groupId,\n        supervisorTaskId,\n        context,\n        split\n    )\n    {\n      @Override\n      public PartialHashSegmentGenerateTask newSubTask(int numAttempts)\n      {\n        return new PartialHashSegmentGenerateTask(\n            null,\n            groupId,\n            null,\n            supervisorTaskId,\n            numAttempts,\n            subTaskIngestionSpec,\n            context,\n            indexingServiceClient,\n            taskClientFactory,\n            appenderatorsManager\n        );\n      }\n    };\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialHashSegmentGenerateParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"3bb9e7e53af4d5926995931e05294f83f756d85c","commitMessage":"@@@Inject things instead of subclassing everything for parallel task testing (#9353)\n\n* Inject things instead of subclassing everything for parallel task\ntesting\n\n* javadoc\n\n* fix compilation\n\n* fix wrong merge\n\n* Address comments\n","date":"2020-02-17 05:00:12","modifiedFileCount":"33","status":"M","submitter":"Jihoon Son"},{"authorTime":"2021-05-08 05:29:48","codes":[{"authorDate":"2021-05-08 05:29:48","commitOrder":4,"curCode":"  SubTaskSpec<PartialRangeSegmentGenerateTask> createSubTaskSpec(\n      String id,\n      String groupId,\n      String supervisorTaskId,\n      Map<String, Object> context,\n      InputSplit split,\n      ParallelIndexIngestionSpec subTaskIngestionSpec\n  )\n  {\n    return new SubTaskSpec<PartialRangeSegmentGenerateTask>(\n        id,\n        groupId,\n        supervisorTaskId,\n        context,\n        split\n    )\n    {\n      @Override\n      public PartialRangeSegmentGenerateTask newSubTask(int numAttempts)\n      {\n        return new PartialRangeSegmentGenerateTask(\n            null,\n            groupId,\n            null,\n            supervisorTaskId,\n            id,\n            numAttempts,\n            subTaskIngestionSpec,\n            context,\n            intervalToPartitions\n        );\n      }\n    };\n  }\n","date":"2021-05-08 05:29:48","endLine":93,"groupId":"104768","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createSubTaskSpec","params":"(Stringid@StringgroupId@StringsupervisorTaskId@Map<String@Object>context@InputSplitsplit@ParallelIndexIngestionSpecsubTaskIngestionSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ce/c1f7aca395aa66ebe9b1c5a54700e320d92f78.src","preCode":"  SubTaskSpec<PartialRangeSegmentGenerateTask> createSubTaskSpec(\n      String id,\n      String groupId,\n      String supervisorTaskId,\n      Map<String, Object> context,\n      InputSplit split,\n      ParallelIndexIngestionSpec subTaskIngestionSpec\n  )\n  {\n    return new SubTaskSpec<PartialRangeSegmentGenerateTask>(\n        id,\n        groupId,\n        supervisorTaskId,\n        context,\n        split\n    )\n    {\n      @Override\n      public PartialRangeSegmentGenerateTask newSubTask(int numAttempts)\n      {\n        return new PartialRangeSegmentGenerateTask(\n            null,\n            groupId,\n            null,\n            supervisorTaskId,\n            numAttempts,\n            subTaskIngestionSpec,\n            context,\n            intervalToPartitions,\n            null,\n            null,\n            null\n        );\n      }\n    };\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialRangeSegmentGenerateParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2021-05-08 05:29:48","commitOrder":4,"curCode":"  SubTaskSpec<PartialHashSegmentGenerateTask> createSubTaskSpec(\n      String id,\n      String groupId,\n      String supervisorTaskId,\n      Map<String, Object> context,\n      InputSplit split,\n      ParallelIndexIngestionSpec subTaskIngestionSpec\n  )\n  {\n    return new SubTaskSpec<PartialHashSegmentGenerateTask>(\n        id,\n        groupId,\n        supervisorTaskId,\n        context,\n        split\n    )\n    {\n      @Override\n      public PartialHashSegmentGenerateTask newSubTask(int numAttempts)\n      {\n        return new PartialHashSegmentGenerateTask(\n            null,\n            groupId,\n            null,\n            supervisorTaskId,\n            id,\n            numAttempts,\n            subTaskIngestionSpec,\n            context,\n            intervalToNumShardsOverride\n        );\n      }\n    };\n  }\n","date":"2021-05-08 05:29:48","endLine":94,"groupId":"104768","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createSubTaskSpec","params":"(Stringid@StringgroupId@StringsupervisorTaskId@Map<String@Object>context@InputSplitsplit@ParallelIndexIngestionSpecsubTaskIngestionSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2f/4cea95c5310d2b17a49fa2212a42ce8fe53caf.src","preCode":"  SubTaskSpec<PartialHashSegmentGenerateTask> createSubTaskSpec(\n      String id,\n      String groupId,\n      String supervisorTaskId,\n      Map<String, Object> context,\n      InputSplit split,\n      ParallelIndexIngestionSpec subTaskIngestionSpec\n  )\n  {\n    return new SubTaskSpec<PartialHashSegmentGenerateTask>(\n        id,\n        groupId,\n        supervisorTaskId,\n        context,\n        split\n    )\n    {\n      @Override\n      public PartialHashSegmentGenerateTask newSubTask(int numAttempts)\n      {\n        return new PartialHashSegmentGenerateTask(\n            null,\n            groupId,\n            null,\n            supervisorTaskId,\n            numAttempts,\n            subTaskIngestionSpec,\n            context,\n            null,\n            null,\n            null\n        );\n      }\n    };\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialHashSegmentGenerateParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"2df42143aec6c50e9ac31d89cd75749d10d37a3d","commitMessage":"@@@Fix idempotence of segment allocation and task report apis in native batch ingestion (#11189)\n\n* Fix idempotence of segment allocation and task report apis in native\nbatch ingestion\n\n* better error and javadoc\n\n* checkstyle and dependency\n\n* fix tests and add more tests\n\n* task config instead of context; add doc\n\n* unused import and dependency\n\n* typo in doc\n\n* fix unintended changes\n\n* fix wrong import\n\n* remove unnecessary error handling\n\n* add task context back\n\n* default task context\n\n* fix test and doc\n\n* address comments\n\n* unused imports","date":"2021-05-08 05:29:48","modifiedFileCount":"72","status":"M","submitter":"Jihoon Son"}]
