[{"authorTime":"2019-04-11 09:16:38","codes":[{"authorDate":"2019-04-11 09:16:38","commitOrder":8,"curCode":"  private KafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-04-11 09:16:38","endLine":3303,"groupId":"18941","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b6/e7b3406771642225b6ce082b4b2bc68e735a67.src","preCode":"  private KafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3228,"status":"B"},{"authorDate":"2019-04-11 09:16:38","commitOrder":8,"curCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","date":"2019-04-11 09:16:38","endLine":3385,"groupId":"18941","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@StringkafkaHost@DataSchemadataSchema@KafkaSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b6/e7b3406771642225b6ce082b4b2bc68e735a67.src","preCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3309,"status":"MB"}],"commitId":"2771ed50b0f07b0ee519da72ed9f4877466f8be4","commitMessage":"@@@Support Kafka supervisor adopting running tasks between versions  (#7212)\n\n* Recompute hash in isTaskCurrent() and added tests\n\n* Fixed checkstyle stuff\n\n* Fixed failing tests\n\n* Make TestableKafkaSupervisorWithCustomIsTaskCurrent static\n\n* Add doc\n\n* baseSequenceName change\n\n* Added comment\n\n* WIP\n\n* Fixed imports\n\n* Undid lambda change for diff sake\n\n* Cleanup\n\n* Added comment\n\n* Reinsert Kafka tests\n\n* Readded kinesis test\n\n* Readd bad partition assignment in kinesis supervisor test\n\n* Nit\n\n* Misnamed var\n","date":"2019-04-11 09:16:38","modifiedFileCount":"6","status":"M","submitter":"Justin Borromeo"},{"authorTime":"2019-06-01 08:16:01","codes":[{"authorDate":"2019-06-01 08:16:01","commitOrder":9,"curCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-06-01 08:16:01","endLine":3327,"groupId":"18941","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2e/ff41c7106c8b4e0ad8fd243280839cac2354e7.src","preCode":"  private KafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3251,"status":"M"},{"authorDate":"2019-06-01 08:16:01","commitOrder":9,"curCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","date":"2019-06-01 08:16:01","endLine":3410,"groupId":"18941","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@StringkafkaHost@DataSchemadataSchema@KafkaSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2e/ff41c7106c8b4e0ad8fd243280839cac2354e7.src","preCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3333,"status":"M"}],"commitId":"8032c4add8f78d0c15044d0847201c618e27dc25","commitMessage":"@@@Add errors and state to stream supervisor status API endpoint (#7428)\n\n* Add state and error tracking for seekable stream supervisors\n\n* Fixed nits in docs\n\n* Made inner class static and updated spec test with jackson inject\n\n* Review changes\n\n* Remove redundant config param in supervisor\n\n* Style\n\n* Applied some of Jon's recommendations\n\n* Add transience field\n\n* write test\n\n* implement code review changes except for reconsidering logic of markRunFinishedAndEvaluateHealth()\n\n* remove transience reporting and fix SeekableStreamSupervisorStateManager impl\n\n* move call to stateManager.markRunFinished() from RunNotice to runInternal() for tests\n\n* remove stateHistory because it wasn't adding much value.  some fixes.  and add more tests\n\n* fix tests\n\n* code review changes and add HTTP health check status\n\n* fix test failure\n\n* refactor to split into a generic SupervisorStateManager and a specific SeekableStreamSupervisorStateManager\n\n* fixup after merge\n\n* code review changes - add additional docs\n\n* cleanup KafkaIndexTaskTest\n\n* add additional documentation for Kinesis indexing\n\n* remove unused throws class\n","date":"2019-06-01 08:16:01","modifiedFileCount":"32","status":"M","submitter":"Justin Borromeo"},{"authorTime":"2019-06-01 08:16:01","codes":[{"authorDate":"2019-08-23 05:51:25","commitOrder":10,"curCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        1000,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-08-23 05:51:25","endLine":3523,"groupId":"18941","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/0d/255b66d24d58735694d9fe14274069e9ba5ee9.src","preCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3420,"status":"M"},{"authorDate":"2019-06-01 08:16:01","commitOrder":10,"curCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","date":"2019-06-01 08:16:01","endLine":3410,"groupId":"18941","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@StringkafkaHost@DataSchemadataSchema@KafkaSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2e/ff41c7106c8b4e0ad8fd243280839cac2354e7.src","preCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3333,"status":"N"}],"commitId":"fba92ae469b512cca6cdf86ffc1c1a2090808453","commitMessage":"@@@Fix to always use end sequenceNumber for reset (#8305)\n\n* Fix to always use end sequenceNumber for reset\n\n* fix checkstyle\n\n* fix style and add log\n","date":"2019-08-23 05:51:25","modifiedFileCount":"8","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":11,"curCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        1000,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-08-23 18:13:54","endLine":3523,"groupId":"18941","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4d/fa47227192d656c1fe4c9dce5d9f5723fe6865.src","preCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        1000,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3420,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":11,"curCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","date":"2019-08-23 18:13:54","endLine":3606,"groupId":"18941","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@StringkafkaHost@DataSchemadataSchema@KafkaSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4d/fa47227192d656c1fe4c9dce5d9f5723fe6865.src","preCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3529,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"},{"authorTime":"2019-11-01 06:13:02","codes":[{"authorDate":"2019-11-01 06:13:02","commitOrder":12,"curCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        1000,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-11-01 06:13:02","endLine":3417,"groupId":"13970","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/89/ec2b6541c8ce13b4e933520670e9124cf44906.src","preCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        1000,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3313,"status":"M"},{"authorDate":"2019-11-01 06:13:02","commitOrder":12,"curCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","date":"2019-11-01 06:13:02","endLine":3501,"groupId":"13970","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@StringkafkaHost@DataSchemadataSchema@KafkaSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/89/ec2b6541c8ce13b4e933520670e9124cf44906.src","preCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3423,"status":"M"}],"commitId":"9c171e2b1fe6de81c8e06e5726acb1728266830d","commitMessage":"@@@Message rejection absolute date (#8656)\n\n* Add option lateMessageRejectionStartDate\n\n* Use option lateMessageRejectionStartDate\n\n* Fix tests\n\n* Add lateMessageRejectionStartDate to kafka indexing service\n\n* Update tests kafka indexing service\n\n* Fix tests for KafkaSupervisorTest\n\n* Add lateMessageRejectionStartDate to KinesisSupervisorIOConfig\n\n* Fix var name\n\n* Update documentation\n\n* Add check lateMessageRejectionStartDateTime and lateMessageRejectionPeriod.  fails if both were specified.\n","date":"2019-11-01 06:13:02","modifiedFileCount":"11","status":"M","submitter":"Giuseppe Martino"},{"authorTime":"2019-11-21 02:04:41","codes":[{"authorDate":"2019-11-21 02:04:41","commitOrder":13,"curCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        1000,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-11-21 02:04:41","endLine":3584,"groupId":"13970","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/24/603132c9ea36d0b519b68275b3c5186d4295fa.src","preCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        1000,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3479,"status":"M"},{"authorDate":"2019-11-21 02:04:41","commitOrder":13,"curCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","date":"2019-11-21 02:04:41","endLine":3669,"groupId":"13970","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@StringkafkaHost@DataSchemadataSchema@KafkaSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/24/603132c9ea36d0b519b68275b3c5186d4295fa.src","preCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3590,"status":"M"}],"commitId":"d628bebbd7ca1f103227d3d73fc938f580e4f7c6","commitMessage":"@@@Make supervisor API similar to submit task API (#8810)\n\n* accept spec or dataSchema.  tuningConfig.  ioConfig while submitting task json\n\n* fix test\n\n* update docs\n\n* lgtm warning\n\n* Add original constructor back to IndexTask to minimize changes\n\n* fix indentation in docs\n\n* Allow spec to be specified in supervisor schema\n\n* undo IndexTask spec changes\n\n* update docs\n\n* Add Nullable and deprecated annotations\n\n* remove deprecated configs from SeekableStreamSupervisorSpec\n\n* remove nullable annotation\n","date":"2019-11-21 02:04:41","modifiedFileCount":"10","status":"M","submitter":"Surekha"},{"authorTime":"2019-11-21 06:51:25","codes":[{"authorDate":"2019-11-21 06:51:25","commitOrder":14,"curCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        1000,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-11-21 06:51:25","endLine":3590,"groupId":"13970","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/47/b2d11cc7cf8846f79b5794f16229d5d583aad9.src","preCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        1000,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3484,"status":"M"},{"authorDate":"2019-11-21 06:51:25","commitOrder":14,"curCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","date":"2019-11-21 06:51:25","endLine":3676,"groupId":"13970","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@StringkafkaHost@DataSchemadataSchema@KafkaSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/47/b2d11cc7cf8846f79b5794f16229d5d583aad9.src","preCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3596,"status":"M"}],"commitId":"ac6d703814ccb5b258c586b63e0bc33d669e0f57","commitMessage":"@@@Support inputFormat and inputSource for sampler (#8901)\n\n* Support inputFormat and inputSource for sampler\n\n* Cleanup javadocs and names\n\n* fix style\n\n* fix timed shutoff input source reader\n\n* fix timed shutoff input source reader again\n\n* tidy up timed shutoff reader\n\n* unused imports\n\n* fix tc\n","date":"2019-11-21 06:51:25","modifiedFileCount":"66","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-11-21 06:51:25","codes":[{"authorDate":"2020-10-24 09:34:26","commitOrder":15,"curCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        null,\n        1000,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2020-10-24 09:34:26","endLine":3574,"groupId":"20631","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/25/1d8376a69050929706200374480b52c10403f6.src","preCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        1000,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3467,"status":"M"},{"authorDate":"2019-11-21 06:51:25","commitOrder":15,"curCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","date":"2019-11-21 06:51:25","endLine":3676,"groupId":"13970","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@StringkafkaHost@DataSchemadataSchema@KafkaSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/47/b2d11cc7cf8846f79b5794f16229d5d583aad9.src","preCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3596,"status":"N"}],"commitId":"f3a2903218573f5d336b082b1c9b8a60a19e8c54","commitMessage":"@@@Configurable Index Type (#10335)\n\n* Introduce a Configurable Index Type\n\n* Change to @UnstableApi\n\n* Add AppendableIndexSpecTest\n\n* Update doc\n\n* Add spelling exception\n\n* Add tests coverage\n\n* Revert some of the changes to reduce diff\n\n* Minor fixes\n\n* Update getMaxBytesInMemoryOrDefault() comment\n\n* Fix typo.  remove redundant interface\n\n* Remove off-heap spec (postponed to a later PR)\n\n* Add javadocs to AppendableIndexSpec\n\n* Describe testCreateTask()\n\n* Add tests for AppendableIndexSpec within TuningConfig\n\n* Modify hashCode() to conform with equals()\n\n* Add comment where building incremental-index\n\n* Add \"EqualsVerifier\" tests\n\n* Revert some of the API back to AppenderatorConfig\n\n* Don't use multi-line comments\n\n* Remove knob documentation (deferred)","date":"2020-10-24 09:34:26","modifiedFileCount":"72","status":"M","submitter":"Liran Funaro"},{"authorTime":"2019-11-21 06:51:25","codes":[{"authorDate":"2021-01-27 16:34:56","commitOrder":16,"curCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        null,\n        1000,\n        null,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2021-01-27 16:34:56","endLine":3580,"groupId":"13970","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1d/babe84481390946a2f067ee27564053a88de2e.src","preCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        null,\n        1000,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3472,"status":"M"},{"authorDate":"2019-11-21 06:51:25","commitOrder":16,"curCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","date":"2019-11-21 06:51:25","endLine":3676,"groupId":"13970","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@StringkafkaHost@DataSchemadataSchema@KafkaSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/47/b2d11cc7cf8846f79b5794f16229d5d583aad9.src","preCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3596,"status":"N"}],"commitId":"a46d561bd7e2b045a08a2e475847d4a7505a1c93","commitMessage":"@@@Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead (#10740)\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* fix checkstyle\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* fix test\n\n* fix test\n\n* add log\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* address comments\n\n* fix checkstyle\n\n* fix checkstyle\n\n* add config to skip overhead memory calculation\n\n* add test for the skipBytesInMemoryOverheadCheck config\n\n* add docs\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix spelling\n\n* address comments\n\n* fix travis\n\n* address comments","date":"2021-01-27 16:34:56","modifiedFileCount":"50","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-03-06 17:06:52","codes":[{"authorDate":"2021-03-06 17:06:52","commitOrder":17,"curCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        null,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        null,\n        1000,\n        null,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2021-03-06 17:06:52","endLine":3778,"groupId":"13970","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ac/6b6e50590f06e42808368c88192fade7284e26.src","preCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        null,\n        1000,\n        null,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3669,"status":"M"},{"authorDate":"2021-03-06 17:06:52","commitOrder":17,"curCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        null,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","date":"2021-03-06 17:06:52","endLine":3865,"groupId":"13970","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@StringkafkaHost@DataSchemadataSchema@KafkaSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ac/6b6e50590f06e42808368c88192fade7284e26.src","preCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3784,"status":"M"}],"commitId":"bddacbb1c3abccf6ad035a4756a6960761fd43a2","commitMessage":"@@@Dynamic auto scale Kafka-Stream ingest tasks (#10524)\n\n* druid task auto scale based on kafka lag\n\n* fix kafkaSupervisorIOConfig and KinesisSupervisorIOConfig\n\n* druid task auto scale based on kafka lag\n\n* fix kafkaSupervisorIOConfig and KinesisSupervisorIOConfig\n\n* test dynamic auto scale done\n\n* auto scale tasks tested on prd cluster\n\n* auto scale tasks tested on prd cluster\n\n* modify code style to solve 29055.10 29055.9 29055.17 29055.18 29055.19 29055.20\n\n* rename test fiel function\n\n* change codes and add docs based on capistrant reviewed\n\n* midify test docs\n\n* modify docs\n\n* modify docs\n\n* modify docs\n\n* merge from master\n\n* Extract the autoScale logic out of SeekableStreamSupervisor to minimize putting more stuff inside there &&  Make autoscaling algorithm configurable and scalable.\n\n* fix ci failed\n\n* revert msic.xml\n\n* add uts to test autoscaler create && scale out/in and kafka ingest with scale enable\n\n* add more uts\n\n* fix inner class check\n\n* add IT for kafka ingestion with autoscaler\n\n* add new IT in groups=kafka-index named testKafkaIndexDataWithWithAutoscaler\n\n* review change\n\n* code review\n\n* remove unused imports\n\n* fix NLP\n\n* fix docs and UTs\n\n* revert misc.xml\n\n* use jackson to build autoScaleConfig with default values\n\n* add uts\n\n* use jackson to init AutoScalerConfig in IOConfig instead of Map<>\n\n* autoscalerConfig interface and provide a defaultAutoScalerConfig\n\n* modify uts\n\n* modify docs\n\n* fix checkstyle\n\n* revert misc.xml\n\n* modify uts\n\n* reviewed code change\n\n* reviewed code change\n\n* code reviewed\n\n* code review\n\n* log changed\n\n* do StringUtils.encodeForFormat when create allocationExec\n\n* code review && limit taskCountMax to partitionNumbers\n\n* modify docs\n\n* code review\n\nCo-authored-by: yuezhang <yuezhang@freewheel.tv>","date":"2021-03-06 17:06:52","modifiedFileCount":"24","status":"M","submitter":"zhangyue19921010"},{"authorTime":"2021-03-06 17:06:52","codes":[{"authorDate":"2021-06-24 07:36:46","commitOrder":18,"curCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        null,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        null,\n        1000,\n        null,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2021-06-24 07:36:46","endLine":3772,"groupId":"102500","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c2/48a110a853ae1a13832d1b96d67fe79c0a2cf9.src","preCode":"  private TestableKafkaSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      boolean isTaskCurrentReturn\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        null,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    final KafkaSupervisorTuningConfig tuningConfig = new KafkaSupervisorTuningConfig(\n        null,\n        1000,\n        null,\n        null,\n        50000,\n        null,\n        new Period(\"P1Y\"),\n        new File(\"/test\"),\n        null,\n        null,\n        null,\n        true,\n        false,\n        null,\n        false,\n        null,\n        numThreads,\n        TEST_CHAT_THREADS,\n        TEST_CHAT_RETRIES,\n        TEST_HTTP_TIMEOUT,\n        TEST_SHUTDOWN_TIMEOUT,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n\n    return new TestableKafkaSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3664,"status":"M"},{"authorDate":"2021-03-06 17:06:52","commitOrder":18,"curCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        null,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","date":"2021-03-06 17:06:52","endLine":3865,"groupId":"102500","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@StringkafkaHost@DataSchemadataSchema@KafkaSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ac/6b6e50590f06e42808368c88192fade7284e26.src","preCode":"  private KafkaSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      String kafkaHost,\n      DataSchema dataSchema,\n      KafkaSupervisorTuningConfig tuningConfig\n  )\n  {\n    Map<String, Object> consumerProperties = new HashMap<>();\n    consumerProperties.put(\"myCustomKey\", \"myCustomValue\");\n    consumerProperties.put(\"bootstrap.servers\", kafkaHost);\n    consumerProperties.put(\"isolation.level\", \"read_committed\");\n    KafkaSupervisorIOConfig kafkaSupervisorIOConfig = new KafkaSupervisorIOConfig(\n        topic,\n        INPUT_FORMAT,\n        replicas,\n        taskCount,\n        new Period(duration),\n        consumerProperties,\n        null,\n        KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null\n    );\n\n    KafkaIndexTaskClientFactory taskClientFactory = new KafkaIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KafkaIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KafkaSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KafkaSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kafkaSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3784,"status":"N"}],"commitId":"de8daf8139dcb8a497f1191587dcd5e7ea992092","commitMessage":"@@@Delete buildV9Directly in Kafka and Kinesis Indexing Service (#11351)\n\n* delete_buildV9Directly_in_kafka_and_kinesis_indexing_service\n\n* delete\n\n* delete them from server\n\n* delete buildV9Directly from hadoop indexing\n\n* bug fixed\n\nCo-authored-by: yuanyi <yuanyi@freewheel.tv>","date":"2021-06-24 07:36:46","modifiedFileCount":"38","status":"M","submitter":"Yi Yuan"}]
