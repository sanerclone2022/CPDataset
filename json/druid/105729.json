[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public ComplexMetricExtractor getExtractor()\n  {\n    return new ComplexMetricExtractor()\n    {\n      @Override\n      public Class<HyperLogLogCollector> extractedClass()\n      {\n        return HyperLogLogCollector.class;\n      }\n\n      @Override\n      public HyperLogLogCollector extractValue(InputRow inputRow, String metricName)\n      {\n        Object rawValue = inputRow.getRaw(metricName);\n\n        if (rawValue instanceof HyperLogLogCollector) {\n          return (HyperLogLogCollector) rawValue;\n        } else {\n          HyperLogLogCollector collector = HyperLogLogCollector.makeLatestCollector();\n\n          List<String> dimValues = inputRow.getDimension(metricName);\n          if (dimValues == null) {\n            return collector;\n          }\n\n          for (String dimensionValue : dimValues) {\n            collector.add(\n                hashFn.hashBytes(StringUtils.toUtf8(dimensionValue)).asBytes());\n          }\n          return collector;\n        }\n      }\n    };\n  }\n","date":"2018-08-31 00:56:26","endLine":98,"groupId":"2986","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getExtractor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/02/cef87f1794228350afc928bef983de5e8cd1a5.src","preCode":"  public ComplexMetricExtractor getExtractor()\n  {\n    return new ComplexMetricExtractor()\n    {\n      @Override\n      public Class<HyperLogLogCollector> extractedClass()\n      {\n        return HyperLogLogCollector.class;\n      }\n\n      @Override\n      public HyperLogLogCollector extractValue(InputRow inputRow, String metricName)\n      {\n        Object rawValue = inputRow.getRaw(metricName);\n\n        if (rawValue instanceof HyperLogLogCollector) {\n          return (HyperLogLogCollector) rawValue;\n        } else {\n          HyperLogLogCollector collector = HyperLogLogCollector.makeLatestCollector();\n\n          List<String> dimValues = inputRow.getDimension(metricName);\n          if (dimValues == null) {\n            return collector;\n          }\n\n          for (String dimensionValue : dimValues) {\n            collector.add(\n                hashFn.hashBytes(StringUtils.toUtf8(dimensionValue)).asBytes());\n          }\n          return collector;\n        }\n      }\n    };\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/serde/HyperUniquesSerdeForTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public ComplexMetricExtractor getExtractor()\n  {\n    return new ComplexMetricExtractor()\n    {\n      @Override\n      public Class<HyperLogLogCollector> extractedClass()\n      {\n        return HyperLogLogCollector.class;\n      }\n\n      @Override\n      public HyperLogLogCollector extractValue(InputRow inputRow, String metricName)\n      {\n        Object rawValue = inputRow.getRaw(metricName);\n\n        if (rawValue instanceof HyperLogLogCollector) {\n          return (HyperLogLogCollector) rawValue;\n        } else {\n          HyperLogLogCollector collector = HyperLogLogCollector.makeLatestCollector();\n\n          List<String> dimValues = inputRow.getDimension(metricName);\n          if (dimValues == null) {\n            return collector;\n          }\n\n          for (String dimensionValue : dimValues) {\n            collector.add(hyperLogLogHash.hash(dimensionValue));\n          }\n          return collector;\n        }\n      }\n    };\n  }\n","date":"2018-08-31 00:56:26","endLine":98,"groupId":"2986","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getExtractor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a8/5a8e1fc6095a8ddc3f0a2115433030f4cbf284.src","preCode":"  public ComplexMetricExtractor getExtractor()\n  {\n    return new ComplexMetricExtractor()\n    {\n      @Override\n      public Class<HyperLogLogCollector> extractedClass()\n      {\n        return HyperLogLogCollector.class;\n      }\n\n      @Override\n      public HyperLogLogCollector extractValue(InputRow inputRow, String metricName)\n      {\n        Object rawValue = inputRow.getRaw(metricName);\n\n        if (rawValue instanceof HyperLogLogCollector) {\n          return (HyperLogLogCollector) rawValue;\n        } else {\n          HyperLogLogCollector collector = HyperLogLogCollector.makeLatestCollector();\n\n          List<String> dimValues = inputRow.getDimension(metricName);\n          if (dimValues == null) {\n            return collector;\n          }\n\n          for (String dimensionValue : dimValues) {\n            collector.add(hyperLogLogHash.hash(dimensionValue));\n          }\n          return collector;\n        }\n      }\n    };\n  }\n","realPath":"processing/src/main/java/org/apache/druid/query/aggregation/hyperloglog/HyperUniquesSerde.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-10-03 01:50:22","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public ComplexMetricExtractor getExtractor()\n  {\n    return new ComplexMetricExtractor()\n    {\n      @Override\n      public Class<HyperLogLogCollector> extractedClass()\n      {\n        return HyperLogLogCollector.class;\n      }\n\n      @Override\n      public HyperLogLogCollector extractValue(InputRow inputRow, String metricName)\n      {\n        Object rawValue = inputRow.getRaw(metricName);\n\n        if (rawValue instanceof HyperLogLogCollector) {\n          return (HyperLogLogCollector) rawValue;\n        } else {\n          HyperLogLogCollector collector = HyperLogLogCollector.makeLatestCollector();\n\n          List<String> dimValues = inputRow.getDimension(metricName);\n          if (dimValues == null) {\n            return collector;\n          }\n\n          for (String dimensionValue : dimValues) {\n            collector.add(\n                hashFn.hashBytes(StringUtils.toUtf8(dimensionValue)).asBytes());\n          }\n          return collector;\n        }\n      }\n    };\n  }\n","date":"2018-08-31 00:56:26","endLine":98,"groupId":"105729","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getExtractor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/02/cef87f1794228350afc928bef983de5e8cd1a5.src","preCode":"  public ComplexMetricExtractor getExtractor()\n  {\n    return new ComplexMetricExtractor()\n    {\n      @Override\n      public Class<HyperLogLogCollector> extractedClass()\n      {\n        return HyperLogLogCollector.class;\n      }\n\n      @Override\n      public HyperLogLogCollector extractValue(InputRow inputRow, String metricName)\n      {\n        Object rawValue = inputRow.getRaw(metricName);\n\n        if (rawValue instanceof HyperLogLogCollector) {\n          return (HyperLogLogCollector) rawValue;\n        } else {\n          HyperLogLogCollector collector = HyperLogLogCollector.makeLatestCollector();\n\n          List<String> dimValues = inputRow.getDimension(metricName);\n          if (dimValues == null) {\n            return collector;\n          }\n\n          for (String dimensionValue : dimValues) {\n            collector.add(\n                hashFn.hashBytes(StringUtils.toUtf8(dimensionValue)).asBytes());\n          }\n          return collector;\n        }\n      }\n    };\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/serde/HyperUniquesSerdeForTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"},{"authorDate":"2018-10-03 01:50:22","commitOrder":2,"curCode":"  public ComplexMetricExtractor<HyperLogLogCollector> getExtractor()\n  {\n    return new ComplexMetricExtractor<HyperLogLogCollector>()\n    {\n      @Override\n      public Class<HyperLogLogCollector> extractedClass()\n      {\n        return HyperLogLogCollector.class;\n      }\n\n      @Override\n      public HyperLogLogCollector extractValue(InputRow inputRow, String metricName)\n      {\n        Object rawValue = inputRow.getRaw(metricName);\n\n        if (rawValue instanceof HyperLogLogCollector) {\n          return (HyperLogLogCollector) rawValue;\n        } else {\n          HyperLogLogCollector collector = HyperLogLogCollector.makeLatestCollector();\n\n          List<String> dimValues = inputRow.getDimension(metricName);\n          if (dimValues == null) {\n            return collector;\n          }\n\n          for (String dimensionValue : dimValues) {\n            collector.add(hyperLogLogHash.hash(dimensionValue));\n          }\n          return collector;\n        }\n      }\n    };\n  }\n","date":"2018-10-03 01:50:22","endLine":90,"groupId":"105729","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getExtractor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/56/979500c41e00c1fe6a2ec4498f3897c0e2aa94.src","preCode":"  public ComplexMetricExtractor getExtractor()\n  {\n    return new ComplexMetricExtractor()\n    {\n      @Override\n      public Class<HyperLogLogCollector> extractedClass()\n      {\n        return HyperLogLogCollector.class;\n      }\n\n      @Override\n      public HyperLogLogCollector extractValue(InputRow inputRow, String metricName)\n      {\n        Object rawValue = inputRow.getRaw(metricName);\n\n        if (rawValue instanceof HyperLogLogCollector) {\n          return (HyperLogLogCollector) rawValue;\n        } else {\n          HyperLogLogCollector collector = HyperLogLogCollector.makeLatestCollector();\n\n          List<String> dimValues = inputRow.getDimension(metricName);\n          if (dimValues == null) {\n            return collector;\n          }\n\n          for (String dimensionValue : dimValues) {\n            collector.add(hyperLogLogHash.hash(dimensionValue));\n          }\n          return collector;\n        }\n      }\n    };\n  }\n","realPath":"processing/src/main/java/org/apache/druid/query/aggregation/hyperloglog/HyperUniquesSerde.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"3ae563263a23000560749071d262727d47296856","commitMessage":"@@@Renamed 'Generic Column' -> 'Numeric Column'; Fixed a few resource leaks in processing; misc refinements (#5957)\n\nThis PR accumulates many refactorings and small improvements that I did while preparing the next change set of https://github.com/druid-io/druid/projects/2. I finally decided to make them a separate PR to minimize the volume of the main PR.\n\nSome of the changes:\n - Renamed confusing \"Generic Column\" term to \"Numeric Column\" (what it actually implies) in many class names.\n - Generified `ComplexMetricExtractor`","date":"2018-10-03 01:50:22","modifiedFileCount":"776","status":"M","submitter":"Roman Leventov"}]
