[{"authorTime":"2019-04-03 05:59:17","codes":[{"authorDate":"2019-04-03 05:59:17","commitOrder":2,"curCode":"  private void testSimple() throws Exception\n  {\n    int count = 0;\n    long sum = 0;\n\n    try (final Firehose firehose = factory.connect(ROW_PARSER, null)) {\n      while (firehose.hasMore()) {\n        final InputRow row = firehose.nextRow();\n        count++;\n        sum += row.getMetric(METRICS[0]).longValue();\n      }\n    }\n\n    Assert.assertEquals(\"count\", expectedCount, count);\n    Assert.assertEquals(\"sum\", expectedSum, sum);\n  }\n","date":"2019-04-03 05:59:17","endLine":161,"groupId":"9020","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/11/9097b10e4e8f3da5ad0379ee9dc05c78f16d40.src","preCode":"  private void testSimple() throws Exception\n  {\n    int count = 0;\n    long sum = 0;\n\n    try (final Firehose firehose = factory.connect(ROW_PARSER, null)) {\n      while (firehose.hasMore()) {\n        final InputRow row = firehose.nextRow();\n        count++;\n        sum += row.getMetric(METRICS[0]).longValue();\n      }\n    }\n\n    Assert.assertEquals(\"count\", expectedCount, count);\n    Assert.assertEquals(\"sum\", expectedSum, sum);\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/firehose/IngestSegmentFirehoseFactoryTimelineTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"MB"},{"authorDate":"2019-04-03 05:59:17","commitOrder":2,"curCode":"  private void testSplit() throws Exception\n  {\n    Assert.assertTrue(factory.isSplittable());\n    final int numSplits = factory.getNumSplits();\n    \r\n    Assert.assertEquals(segmentCount, numSplits);\n    final List<InputSplit<List<WindowedSegmentId>>> splits =\n        factory.getSplits().collect(Collectors.toList());\n    Assert.assertEquals(numSplits, splits.size());\n\n    int count = 0;\n    long sum = 0;\n\n    for (InputSplit<List<WindowedSegmentId>> split : splits) {\n      final FiniteFirehoseFactory<InputRowParser, List<WindowedSegmentId>> splitFactory =\n          factory.withSplit(split);\n      try (final Firehose firehose = splitFactory.connect(ROW_PARSER, null)) {\n        while (firehose.hasMore()) {\n          final InputRow row = firehose.nextRow();\n          count++;\n          sum += row.getMetric(METRICS[0]).longValue();\n        }\n      }\n    }\n\n    Assert.assertEquals(\"count\", expectedCount, count);\n    Assert.assertEquals(\"sum\", expectedSum, sum);\n\n  }\n","date":"2019-04-03 05:59:17","endLine":191,"groupId":"9020","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/11/9097b10e4e8f3da5ad0379ee9dc05c78f16d40.src","preCode":"  private void testSplit() throws Exception\n  {\n    Assert.assertTrue(factory.isSplittable());\n    final int numSplits = factory.getNumSplits();\n    \r\n    Assert.assertEquals(segmentCount, numSplits);\n    final List<InputSplit<List<WindowedSegmentId>>> splits =\n        factory.getSplits().collect(Collectors.toList());\n    Assert.assertEquals(numSplits, splits.size());\n\n    int count = 0;\n    long sum = 0;\n\n    for (InputSplit<List<WindowedSegmentId>> split : splits) {\n      final FiniteFirehoseFactory<InputRowParser, List<WindowedSegmentId>> splitFactory =\n          factory.withSplit(split);\n      try (final Firehose firehose = splitFactory.connect(ROW_PARSER, null)) {\n        while (firehose.hasMore()) {\n          final InputRow row = firehose.nextRow();\n          count++;\n          sum += row.getMetric(METRICS[0]).longValue();\n        }\n      }\n    }\n\n    Assert.assertEquals(\"count\", expectedCount, count);\n    Assert.assertEquals(\"sum\", expectedSum, sum);\n\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/firehose/IngestSegmentFirehoseFactoryTimelineTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"B"}],"commitId":"4e23c11345de694c997881d72ca6c668b3fb795b","commitMessage":"@@@Make IngestSegmentFirehoseFactory splittable for parallel ingestion (#7048)\n\n* Make IngestSegmentFirehoseFactory splittable for parallel ingestion\n\n* Code review feedback\n\n- Get rid of WindowedSegment\n- Don't document 'segments' parameter or support splitting firehoses that use it\n- Require 'intervals' in WindowedSegmentId (since it won't be written by hand)\n\n* Add missing @JsonProperty\n\n* Integration test passes\n\n* Add unit test\n\n* Remove two FIXME comments from CompactionTask\n\nI'd like to leave this PR in a potentially mergeable state.  but I still would\nappreciate reviewer eyes on the questions I'm removing here.\n\n* Updates from code review\n","date":"2019-04-03 05:59:17","modifiedFileCount":"6","status":"M","submitter":"David Glasser"},{"authorTime":"2019-07-19 05:46:47","codes":[{"authorDate":"2019-07-19 05:46:47","commitOrder":3,"curCode":"  private void testSimple() throws Exception\n  {\n    int count = 0;\n    long sum = 0;\n\n    try (final Firehose firehose = factory.connect(ROW_PARSER, tmpDir)) {\n      while (firehose.hasMore()) {\n        final InputRow row = firehose.nextRow();\n        count++;\n        sum += row.getMetric(METRICS[0]).longValue();\n      }\n    }\n\n    Assert.assertEquals(\"count\", expectedCount, count);\n    Assert.assertEquals(\"sum\", expectedSum, sum);\n  }\n","date":"2019-07-19 05:46:47","endLine":161,"groupId":"9020","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/49/44d276522153566e85cf5a4f8bfc2e94406b4e.src","preCode":"  private void testSimple() throws Exception\n  {\n    int count = 0;\n    long sum = 0;\n\n    try (final Firehose firehose = factory.connect(ROW_PARSER, null)) {\n      while (firehose.hasMore()) {\n        final InputRow row = firehose.nextRow();\n        count++;\n        sum += row.getMetric(METRICS[0]).longValue();\n      }\n    }\n\n    Assert.assertEquals(\"count\", expectedCount, count);\n    Assert.assertEquals(\"sum\", expectedSum, sum);\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/firehose/IngestSegmentFirehoseFactoryTimelineTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2019-07-19 05:46:47","commitOrder":3,"curCode":"  private void testSplit() throws Exception\n  {\n    Assert.assertTrue(factory.isSplittable());\n    final int numSplits = factory.getNumSplits();\n    \r\n    Assert.assertEquals(segmentCount, numSplits);\n    final List<InputSplit<List<WindowedSegmentId>>> splits =\n        factory.getSplits().collect(Collectors.toList());\n    Assert.assertEquals(numSplits, splits.size());\n\n    int count = 0;\n    long sum = 0;\n\n    for (InputSplit<List<WindowedSegmentId>> split : splits) {\n      final FiniteFirehoseFactory<InputRowParser, List<WindowedSegmentId>> splitFactory =\n          factory.withSplit(split);\n      try (final Firehose firehose = splitFactory.connect(ROW_PARSER, tmpDir)) {\n        while (firehose.hasMore()) {\n          final InputRow row = firehose.nextRow();\n          count++;\n          sum += row.getMetric(METRICS[0]).longValue();\n        }\n      }\n    }\n\n    Assert.assertEquals(\"count\", expectedCount, count);\n    Assert.assertEquals(\"sum\", expectedSum, sum);\n\n  }\n","date":"2019-07-19 05:46:47","endLine":191,"groupId":"9020","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/49/44d276522153566e85cf5a4f8bfc2e94406b4e.src","preCode":"  private void testSplit() throws Exception\n  {\n    Assert.assertTrue(factory.isSplittable());\n    final int numSplits = factory.getNumSplits();\n    \r\n    Assert.assertEquals(segmentCount, numSplits);\n    final List<InputSplit<List<WindowedSegmentId>>> splits =\n        factory.getSplits().collect(Collectors.toList());\n    Assert.assertEquals(numSplits, splits.size());\n\n    int count = 0;\n    long sum = 0;\n\n    for (InputSplit<List<WindowedSegmentId>> split : splits) {\n      final FiniteFirehoseFactory<InputRowParser, List<WindowedSegmentId>> splitFactory =\n          factory.withSplit(split);\n      try (final Firehose firehose = splitFactory.connect(ROW_PARSER, null)) {\n        while (firehose.hasMore()) {\n          final InputRow row = firehose.nextRow();\n          count++;\n          sum += row.getMetric(METRICS[0]).longValue();\n        }\n      }\n    }\n\n    Assert.assertEquals(\"count\", expectedCount, count);\n    Assert.assertEquals(\"sum\", expectedSum, sum);\n\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/firehose/IngestSegmentFirehoseFactoryTimelineTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"c7eb7cd01837c48914ba284d08b6096b47c957b0","commitMessage":"@@@Add intermediary data server for shuffle (#8088)\n\n* Add intermediary data server for shuffle\n\n* javadoc\n\n* adjust timeout\n\n* resolved todo\n\n* fix test\n\n* style\n\n* address comments\n\n* rename to shuffleDataLocations\n\n* Address comments\n\n* bit adjustment StorageLocation\n\n* fix test\n\n* address comment & fix test\n\n* handle interrupted exception\n","date":"2019-07-19 05:46:47","modifiedFileCount":"29","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-10-19 04:24:14","codes":[{"authorDate":"2019-07-19 05:46:47","commitOrder":4,"curCode":"  private void testSimple() throws Exception\n  {\n    int count = 0;\n    long sum = 0;\n\n    try (final Firehose firehose = factory.connect(ROW_PARSER, tmpDir)) {\n      while (firehose.hasMore()) {\n        final InputRow row = firehose.nextRow();\n        count++;\n        sum += row.getMetric(METRICS[0]).longValue();\n      }\n    }\n\n    Assert.assertEquals(\"count\", expectedCount, count);\n    Assert.assertEquals(\"sum\", expectedSum, sum);\n  }\n","date":"2019-07-19 05:46:47","endLine":161,"groupId":"104643","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/49/44d276522153566e85cf5a4f8bfc2e94406b4e.src","preCode":"  private void testSimple() throws Exception\n  {\n    int count = 0;\n    long sum = 0;\n\n    try (final Firehose firehose = factory.connect(ROW_PARSER, tmpDir)) {\n      while (firehose.hasMore()) {\n        final InputRow row = firehose.nextRow();\n        count++;\n        sum += row.getMetric(METRICS[0]).longValue();\n      }\n    }\n\n    Assert.assertEquals(\"count\", expectedCount, count);\n    Assert.assertEquals(\"sum\", expectedSum, sum);\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/firehose/IngestSegmentFirehoseFactoryTimelineTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"N"},{"authorDate":"2019-10-19 04:24:14","commitOrder":4,"curCode":"  private void testSplit() throws Exception\n  {\n    Assert.assertTrue(factory.isSplittable());\n    final int numSplits = factory.getNumSplits(null);\n    \r\n    Assert.assertEquals(segmentCount, numSplits);\n    final List<InputSplit<List<WindowedSegmentId>>> splits =\n        factory.getSplits(null).collect(Collectors.toList());\n    Assert.assertEquals(numSplits, splits.size());\n\n    int count = 0;\n    long sum = 0;\n\n    for (InputSplit<List<WindowedSegmentId>> split : splits) {\n      final FiniteFirehoseFactory<InputRowParser, List<WindowedSegmentId>> splitFactory =\n          factory.withSplit(split);\n      try (final Firehose firehose = splitFactory.connect(ROW_PARSER, tmpDir)) {\n        while (firehose.hasMore()) {\n          final InputRow row = firehose.nextRow();\n          count++;\n          sum += row.getMetric(METRICS[0]).longValue();\n        }\n      }\n    }\n\n    Assert.assertEquals(\"count\", expectedCount, count);\n    Assert.assertEquals(\"sum\", expectedSum, sum);\n\n  }\n","date":"2019-10-19 04:24:14","endLine":191,"groupId":"104643","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ec/250c4217d36d5812d6d6fe5d31eefcd17f5e6a.src","preCode":"  private void testSplit() throws Exception\n  {\n    Assert.assertTrue(factory.isSplittable());\n    final int numSplits = factory.getNumSplits();\n    \r\n    Assert.assertEquals(segmentCount, numSplits);\n    final List<InputSplit<List<WindowedSegmentId>>> splits =\n        factory.getSplits().collect(Collectors.toList());\n    Assert.assertEquals(numSplits, splits.size());\n\n    int count = 0;\n    long sum = 0;\n\n    for (InputSplit<List<WindowedSegmentId>> split : splits) {\n      final FiniteFirehoseFactory<InputRowParser, List<WindowedSegmentId>> splitFactory =\n          factory.withSplit(split);\n      try (final Firehose firehose = splitFactory.connect(ROW_PARSER, tmpDir)) {\n        while (firehose.hasMore()) {\n          final InputRow row = firehose.nextRow();\n          count++;\n          sum += row.getMetric(METRICS[0]).longValue();\n        }\n      }\n    }\n\n    Assert.assertEquals(\"count\", expectedCount, count);\n    Assert.assertEquals(\"sum\", expectedSum, sum);\n\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/firehose/IngestSegmentFirehoseFactoryTimelineTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"30c15900bec7f4df7a72088ec076223839da258f","commitMessage":"@@@Auto compaction based on parallel indexing (#8570)\n\n* Auto compaction based on parallel indexing\n\n* javadoc and doc\n\n* typo\n\n* update spell\n\n* addressing comments\n\n* address comments\n\n* fix log\n\n* fix build\n\n* fix test\n\n* increase default max input segment bytes per task\n\n* fix test\n","date":"2019-10-19 04:24:14","modifiedFileCount":"28","status":"M","submitter":"Jihoon Son"}]
