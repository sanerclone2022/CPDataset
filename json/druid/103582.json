[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public Aggregator factorize(final ColumnSelectorFactory metricFactory)\n  {\n    if (metricFactory.getColumnCapabilities(fieldName) != null\n        && ValueType.isNumeric(metricFactory.getColumnCapabilities(fieldName).getType())) {\n      final ColumnValueSelector<Double> selector = metricFactory.makeColumnValueSelector(fieldName);\n      if (selector instanceof NilColumnValueSelector) {\n        return new DoublesSketchNoOpAggregator();\n      }\n      return new DoublesSketchBuildAggregator(selector, k);\n    }\n    final ColumnValueSelector<DoublesSketch> selector = metricFactory.makeColumnValueSelector(fieldName);\n    if (selector instanceof NilColumnValueSelector) {\n      return new DoublesSketchNoOpAggregator();\n    }\n    return new DoublesSketchMergeAggregator(selector, k);\n  }\n","date":"2018-08-31 00:56:26","endLine":98,"groupId":"2480","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"factorize","params":"(finalColumnSelectorFactorymetricFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/33/1cd1bb394507b4905dd93413575ca3bcf414d2.src","preCode":"  public Aggregator factorize(final ColumnSelectorFactory metricFactory)\n  {\n    if (metricFactory.getColumnCapabilities(fieldName) != null\n        && ValueType.isNumeric(metricFactory.getColumnCapabilities(fieldName).getType())) {\n      final ColumnValueSelector<Double> selector = metricFactory.makeColumnValueSelector(fieldName);\n      if (selector instanceof NilColumnValueSelector) {\n        return new DoublesSketchNoOpAggregator();\n      }\n      return new DoublesSketchBuildAggregator(selector, k);\n    }\n    final ColumnValueSelector<DoublesSketch> selector = metricFactory.makeColumnValueSelector(fieldName);\n    if (selector instanceof NilColumnValueSelector) {\n      return new DoublesSketchNoOpAggregator();\n    }\n    return new DoublesSketchMergeAggregator(selector, k);\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorFactory.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public BufferAggregator factorizeBuffered(final ColumnSelectorFactory metricFactory)\n  {\n    if (metricFactory.getColumnCapabilities(fieldName) != null\n        && ValueType.isNumeric(metricFactory.getColumnCapabilities(fieldName).getType())) {\n      final ColumnValueSelector<Double> selector = metricFactory.makeColumnValueSelector(fieldName);\n      if (selector instanceof NilColumnValueSelector) {\n        return new DoublesSketchNoOpBufferAggregator();\n      }\n      return new DoublesSketchBuildBufferAggregator(selector, k, getMaxIntermediateSizeWithNulls());\n    }\n    final ColumnValueSelector<DoublesSketch> selector = metricFactory.makeColumnValueSelector(fieldName);\n    if (selector instanceof NilColumnValueSelector) {\n      return new DoublesSketchNoOpBufferAggregator();\n    }\n    return new DoublesSketchMergeBufferAggregator(selector, k, getMaxIntermediateSizeWithNulls());\n  }\n","date":"2018-08-31 00:56:26","endLine":116,"groupId":"2480","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"factorizeBuffered","params":"(finalColumnSelectorFactorymetricFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/33/1cd1bb394507b4905dd93413575ca3bcf414d2.src","preCode":"  public BufferAggregator factorizeBuffered(final ColumnSelectorFactory metricFactory)\n  {\n    if (metricFactory.getColumnCapabilities(fieldName) != null\n        && ValueType.isNumeric(metricFactory.getColumnCapabilities(fieldName).getType())) {\n      final ColumnValueSelector<Double> selector = metricFactory.makeColumnValueSelector(fieldName);\n      if (selector instanceof NilColumnValueSelector) {\n        return new DoublesSketchNoOpBufferAggregator();\n      }\n      return new DoublesSketchBuildBufferAggregator(selector, k, getMaxIntermediateSizeWithNulls());\n    }\n    final ColumnValueSelector<DoublesSketch> selector = metricFactory.makeColumnValueSelector(fieldName);\n    if (selector instanceof NilColumnValueSelector) {\n      return new DoublesSketchNoOpBufferAggregator();\n    }\n    return new DoublesSketchMergeBufferAggregator(selector, k, getMaxIntermediateSizeWithNulls());\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorFactory.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-04-03 06:05:07","codes":[{"authorDate":"2019-04-03 06:05:07","commitOrder":2,"curCode":"  public Aggregator factorize(final ColumnSelectorFactory metricFactory)\n  {\n    if (metricFactory.getColumnCapabilities(fieldName) != null\n        && ValueType.isNumeric(metricFactory.getColumnCapabilities(fieldName).getType())) {\n      final ColumnValueSelector<Double> selector = metricFactory.makeColumnValueSelector(fieldName);\n      if (selector instanceof NilColumnValueSelector) {\n        return new NoopDoublesSketchAggregator();\n      }\n      return new DoublesSketchBuildAggregator(selector, k);\n    }\n    final ColumnValueSelector<DoublesSketch> selector = metricFactory.makeColumnValueSelector(fieldName);\n    if (selector instanceof NilColumnValueSelector) {\n      return new NoopDoublesSketchAggregator();\n    }\n    return new DoublesSketchMergeAggregator(selector, k);\n  }\n","date":"2019-04-03 06:05:07","endLine":102,"groupId":"2480","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"factorize","params":"(finalColumnSelectorFactorymetricFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6b/17ec7733e83b93c264b4aad7c40304da325084.src","preCode":"  public Aggregator factorize(final ColumnSelectorFactory metricFactory)\n  {\n    if (metricFactory.getColumnCapabilities(fieldName) != null\n        && ValueType.isNumeric(metricFactory.getColumnCapabilities(fieldName).getType())) {\n      final ColumnValueSelector<Double> selector = metricFactory.makeColumnValueSelector(fieldName);\n      if (selector instanceof NilColumnValueSelector) {\n        return new DoublesSketchNoOpAggregator();\n      }\n      return new DoublesSketchBuildAggregator(selector, k);\n    }\n    final ColumnValueSelector<DoublesSketch> selector = metricFactory.makeColumnValueSelector(fieldName);\n    if (selector instanceof NilColumnValueSelector) {\n      return new DoublesSketchNoOpAggregator();\n    }\n    return new DoublesSketchMergeAggregator(selector, k);\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorFactory.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2019-04-03 06:05:07","commitOrder":2,"curCode":"  public BufferAggregator factorizeBuffered(final ColumnSelectorFactory metricFactory)\n  {\n    if (metricFactory.getColumnCapabilities(fieldName) != null\n        && ValueType.isNumeric(metricFactory.getColumnCapabilities(fieldName).getType())) {\n      final ColumnValueSelector<Double> selector = metricFactory.makeColumnValueSelector(fieldName);\n      if (selector instanceof NilColumnValueSelector) {\n        return new NoopDoublesSketchBufferAggregator();\n      }\n      return new DoublesSketchBuildBufferAggregator(selector, k, getMaxIntermediateSizeWithNulls());\n    }\n    final ColumnValueSelector<DoublesSketch> selector = metricFactory.makeColumnValueSelector(fieldName);\n    if (selector instanceof NilColumnValueSelector) {\n      return new NoopDoublesSketchBufferAggregator();\n    }\n    return new DoublesSketchMergeBufferAggregator(selector, k, getMaxIntermediateSizeWithNulls());\n  }\n","date":"2019-04-03 06:05:07","endLine":120,"groupId":"2480","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"factorizeBuffered","params":"(finalColumnSelectorFactorymetricFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6b/17ec7733e83b93c264b4aad7c40304da325084.src","preCode":"  public BufferAggregator factorizeBuffered(final ColumnSelectorFactory metricFactory)\n  {\n    if (metricFactory.getColumnCapabilities(fieldName) != null\n        && ValueType.isNumeric(metricFactory.getColumnCapabilities(fieldName).getType())) {\n      final ColumnValueSelector<Double> selector = metricFactory.makeColumnValueSelector(fieldName);\n      if (selector instanceof NilColumnValueSelector) {\n        return new DoublesSketchNoOpBufferAggregator();\n      }\n      return new DoublesSketchBuildBufferAggregator(selector, k, getMaxIntermediateSizeWithNulls());\n    }\n    final ColumnValueSelector<DoublesSketch> selector = metricFactory.makeColumnValueSelector(fieldName);\n    if (selector instanceof NilColumnValueSelector) {\n      return new DoublesSketchNoOpBufferAggregator();\n    }\n    return new DoublesSketchMergeBufferAggregator(selector, k, getMaxIntermediateSizeWithNulls());\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorFactory.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"a99f0ff450a04ac049020f86994967e8cfdcc62b","commitMessage":"@@@prefix no-op aggs with \"Noop\" (#6960)\n\n","date":"2019-04-03 06:05:07","modifiedFileCount":"7","status":"M","submitter":"Clint Wylie"},{"authorTime":"2021-05-03 07:14:21","codes":[{"authorDate":"2019-04-03 06:05:07","commitOrder":3,"curCode":"  public Aggregator factorize(final ColumnSelectorFactory metricFactory)\n  {\n    if (metricFactory.getColumnCapabilities(fieldName) != null\n        && ValueType.isNumeric(metricFactory.getColumnCapabilities(fieldName).getType())) {\n      final ColumnValueSelector<Double> selector = metricFactory.makeColumnValueSelector(fieldName);\n      if (selector instanceof NilColumnValueSelector) {\n        return new NoopDoublesSketchAggregator();\n      }\n      return new DoublesSketchBuildAggregator(selector, k);\n    }\n    final ColumnValueSelector<DoublesSketch> selector = metricFactory.makeColumnValueSelector(fieldName);\n    if (selector instanceof NilColumnValueSelector) {\n      return new NoopDoublesSketchAggregator();\n    }\n    return new DoublesSketchMergeAggregator(selector, k);\n  }\n","date":"2019-04-03 06:05:07","endLine":102,"groupId":"103582","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"factorize","params":"(finalColumnSelectorFactorymetricFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6b/17ec7733e83b93c264b4aad7c40304da325084.src","preCode":"  public Aggregator factorize(final ColumnSelectorFactory metricFactory)\n  {\n    if (metricFactory.getColumnCapabilities(fieldName) != null\n        && ValueType.isNumeric(metricFactory.getColumnCapabilities(fieldName).getType())) {\n      final ColumnValueSelector<Double> selector = metricFactory.makeColumnValueSelector(fieldName);\n      if (selector instanceof NilColumnValueSelector) {\n        return new NoopDoublesSketchAggregator();\n      }\n      return new DoublesSketchBuildAggregator(selector, k);\n    }\n    final ColumnValueSelector<DoublesSketch> selector = metricFactory.makeColumnValueSelector(fieldName);\n    if (selector instanceof NilColumnValueSelector) {\n      return new NoopDoublesSketchAggregator();\n    }\n    return new DoublesSketchMergeAggregator(selector, k);\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorFactory.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2021-05-03 07:14:21","commitOrder":3,"curCode":"  public BufferAggregator factorizeBuffered(final ColumnSelectorFactory metricFactory)\n  {\n    if (metricFactory.getColumnCapabilities(fieldName) != null\n        && ValueType.isNumeric(metricFactory.getColumnCapabilities(fieldName).getType())) {\n      final BaseDoubleColumnValueSelector selector = metricFactory.makeColumnValueSelector(fieldName);\n      if (selector instanceof NilColumnValueSelector) {\n        return new NoopDoublesSketchBufferAggregator();\n      }\n      return new DoublesSketchBuildBufferAggregator(selector, k, getMaxIntermediateSizeWithNulls());\n    }\n    final ColumnValueSelector<DoublesSketch> selector = metricFactory.makeColumnValueSelector(fieldName);\n    if (selector instanceof NilColumnValueSelector) {\n      return new NoopDoublesSketchBufferAggregator();\n    }\n    return new DoublesSketchMergeBufferAggregator(selector, k, getMaxIntermediateSizeWithNulls());\n  }\n","date":"2021-05-03 07:14:21","endLine":132,"groupId":"103582","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"factorizeBuffered","params":"(finalColumnSelectorFactorymetricFactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/27/da4a21ab3def57631e4cda380d391f8ec89743.src","preCode":"  public BufferAggregator factorizeBuffered(final ColumnSelectorFactory metricFactory)\n  {\n    if (metricFactory.getColumnCapabilities(fieldName) != null\n        && ValueType.isNumeric(metricFactory.getColumnCapabilities(fieldName).getType())) {\n      final ColumnValueSelector<Double> selector = metricFactory.makeColumnValueSelector(fieldName);\n      if (selector instanceof NilColumnValueSelector) {\n        return new NoopDoublesSketchBufferAggregator();\n      }\n      return new DoublesSketchBuildBufferAggregator(selector, k, getMaxIntermediateSizeWithNulls());\n    }\n    final ColumnValueSelector<DoublesSketch> selector = metricFactory.makeColumnValueSelector(fieldName);\n    if (selector instanceof NilColumnValueSelector) {\n      return new NoopDoublesSketchBufferAggregator();\n    }\n    return new DoublesSketchMergeBufferAggregator(selector, k, getMaxIntermediateSizeWithNulls());\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchAggregatorFactory.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"809e001939be9196a4c3c620037606ab6e5af3b8","commitMessage":"@@@Vectorize the DataSketches quantiles aggregator. (#11183)\n\n* Vectorize the DataSketches quantiles aggregator.\n\nAlso removes synchronization for the BufferAggregator and VectorAggregator\nimplementations.  since it is not necessary (similar to #11115).\n\nExtends DoublesSketchAggregatorTest and DoublesSketchSqlAggregatorTest\nto run all test cases in vectorized mode.\n\n* Style fix.","date":"2021-05-03 07:14:21","modifiedFileCount":"8","status":"M","submitter":"Gian Merlino"}]
