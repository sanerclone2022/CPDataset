[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testCostBalancerSingleThreadStrategy()\n  {\n    List<ServerHolder> serverHolderList = setupDummyCluster(10, 20);\n    DataSegment segment = getSegment(1000);\n\n    final DateTime referenceTimestamp = DateTimes.of(\"2014-01-01\");\n    BalancerStrategy strategy = new CostBalancerStrategy(\n        MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(1))\n    );\n    ServerHolder holder = strategy.findNewSegmentHomeReplicator(segment, serverHolderList);\n    Assert.assertNotNull(\"Should be able to find a place for new segment!!\", holder);\n    Assert.assertEquals(\"Best Server should be BEST_SERVER\", \"BEST_SERVER\", holder.getServer().getName());\n  }\n","date":"2018-08-31 00:56:26","endLine":147,"groupId":"15789","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCostBalancerSingleThreadStrategy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8e/26a959a918d8464f0ed185917e118fd0d73c35.src","preCode":"  public void testCostBalancerSingleThreadStrategy()\n  {\n    List<ServerHolder> serverHolderList = setupDummyCluster(10, 20);\n    DataSegment segment = getSegment(1000);\n\n    final DateTime referenceTimestamp = DateTimes.of(\"2014-01-01\");\n    BalancerStrategy strategy = new CostBalancerStrategy(\n        MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(1))\n    );\n    ServerHolder holder = strategy.findNewSegmentHomeReplicator(segment, serverHolderList);\n    Assert.assertNotNull(\"Should be able to find a place for new segment!!\", holder);\n    Assert.assertEquals(\"Best Server should be BEST_SERVER\", \"BEST_SERVER\", holder.getServer().getName());\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/CostBalancerStrategyTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testNormalizedCostBalancerSingleThreadStrategy()\n  {\n    List<ServerHolder> serverHolderList = setupDummyCluster(10, 20);\n    DataSegment segment = getSegment(1000);\n\n    BalancerStrategy strategy = new DiskNormalizedCostBalancerStrategy(\n        MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(1))\n    );\n    ServerHolder holder = strategy.findNewSegmentHomeReplicator(segment, serverHolderList);\n    Assert.assertNotNull(\"Should be able to find a place for new segment!!\", holder);\n    Assert.assertEquals(\"Best Server should be BEST_SERVER\", \"BEST_SERVER\", holder.getServer().getName());\n  }\n","date":"2018-08-31 00:56:26","endLine":144,"groupId":"15789","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNormalizedCostBalancerSingleThreadStrategy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/88/fe93a88ed6bf01a49a6a5ce8d9633ec20f0608.src","preCode":"  public void testNormalizedCostBalancerSingleThreadStrategy()\n  {\n    List<ServerHolder> serverHolderList = setupDummyCluster(10, 20);\n    DataSegment segment = getSegment(1000);\n\n    BalancerStrategy strategy = new DiskNormalizedCostBalancerStrategy(\n        MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(1))\n    );\n    ServerHolder holder = strategy.findNewSegmentHomeReplicator(segment, serverHolderList);\n    Assert.assertNotNull(\"Should be able to find a place for new segment!!\", holder);\n    Assert.assertEquals(\"Best Server should be BEST_SERVER\", \"BEST_SERVER\", holder.getServer().getName());\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/DiskNormalizedCostBalancerStrategyTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2019-01-22 03:11:10","commitOrder":2,"curCode":"  public void testCostBalancerSingleThreadStrategy()\n  {\n    List<ServerHolder> serverHolderList = setupDummyCluster(10, 20);\n    DataSegment segment = getSegment(1000);\n\n    BalancerStrategy strategy = new CostBalancerStrategy(\n        MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(1))\n    );\n    ServerHolder holder = strategy.findNewSegmentHomeReplicator(segment, serverHolderList);\n    Assert.assertNotNull(\"Should be able to find a place for new segment!!\", holder);\n    Assert.assertEquals(\"Best Server should be BEST_SERVER\", \"BEST_SERVER\", holder.getServer().getName());\n  }\n","date":"2019-01-22 03:11:10","endLine":159,"groupId":"10344","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCostBalancerSingleThreadStrategy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8a/5cf43efe6dd9469ab7420ce57068838f5409e9.src","preCode":"  public void testCostBalancerSingleThreadStrategy()\n  {\n    List<ServerHolder> serverHolderList = setupDummyCluster(10, 20);\n    DataSegment segment = getSegment(1000);\n\n    final DateTime referenceTimestamp = DateTimes.of(\"2014-01-01\");\n    BalancerStrategy strategy = new CostBalancerStrategy(\n        MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(1))\n    );\n    ServerHolder holder = strategy.findNewSegmentHomeReplicator(segment, serverHolderList);\n    Assert.assertNotNull(\"Should be able to find a place for new segment!!\", holder);\n    Assert.assertEquals(\"Best Server should be BEST_SERVER\", \"BEST_SERVER\", holder.getServer().getName());\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/CostBalancerStrategyTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void testNormalizedCostBalancerSingleThreadStrategy()\n  {\n    List<ServerHolder> serverHolderList = setupDummyCluster(10, 20);\n    DataSegment segment = getSegment(1000);\n\n    BalancerStrategy strategy = new DiskNormalizedCostBalancerStrategy(\n        MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(1))\n    );\n    ServerHolder holder = strategy.findNewSegmentHomeReplicator(segment, serverHolderList);\n    Assert.assertNotNull(\"Should be able to find a place for new segment!!\", holder);\n    Assert.assertEquals(\"Best Server should be BEST_SERVER\", \"BEST_SERVER\", holder.getServer().getName());\n  }\n","date":"2018-08-31 00:56:26","endLine":144,"groupId":"10344","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNormalizedCostBalancerSingleThreadStrategy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/88/fe93a88ed6bf01a49a6a5ce8d9633ec20f0608.src","preCode":"  public void testNormalizedCostBalancerSingleThreadStrategy()\n  {\n    List<ServerHolder> serverHolderList = setupDummyCluster(10, 20);\n    DataSegment segment = getSegment(1000);\n\n    BalancerStrategy strategy = new DiskNormalizedCostBalancerStrategy(\n        MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(1))\n    );\n    ServerHolder holder = strategy.findNewSegmentHomeReplicator(segment, serverHolderList);\n    Assert.assertNotNull(\"Should be able to find a place for new segment!!\", holder);\n    Assert.assertEquals(\"Best Server should be BEST_SERVER\", \"BEST_SERVER\", holder.getServer().getName());\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/DiskNormalizedCostBalancerStrategyTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"N"}],"commitId":"8eae26fd4e7572060d112864dd3d5f6a865b9c89","commitMessage":"@@@Introduce SegmentId class (#6370)\n\n* Introduce SegmentId class\n\n* tmp\n\n* Fix SelectQueryRunnerTest\n\n* Fix indentation\n\n* Fixes\n\n* Remove Comparators.inverse() tests\n\n* Refinements\n\n* Fix tests\n\n* Fix more tests\n\n* Remove duplicate DataSegmentTest.  fixes #6064\n\n* SegmentDescriptor doc\n\n* Fix SQLMetadataStorageUpdaterJobHandler\n\n* Fix DataSegment deserialization for ignoring id\n\n* Add comments\n\n* More comments\n\n* Address more comments\n\n* Fix compilation\n\n* Restore segment2 in SystemSchemaTest according to a comment\n\n* Fix style\n\n* fix testServerSegmentsTable\n\n* Fix compilation\n\n* Add comments about why SegmentId and SegmentIdWithShardSpec are separate classes\n\n* Fix SystemSchemaTest\n\n* Fix style\n\n* Compare SegmentDescriptor with SegmentId in Javadoc and comments rather than with DataSegment\n\n* Remove a link.  see https://youtrack.jetbrains.com/issue/IDEA-205164\n\n* Fix compilation\n","date":"2019-01-22 03:11:10","modifiedFileCount":"308","status":"M","submitter":"Roman Leventov"}]
