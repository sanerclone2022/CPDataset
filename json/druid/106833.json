[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testSearchSameValueInMultiDims()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnInterval)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = Lists.newLinkedList();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","date":"2018-08-31 00:56:26","endLine":216,"groupId":"9882","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchSameValueInMultiDims","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/16/31307af9f9892e28a4c49f01932eb6054f3080.src","preCode":"  public void testSearchSameValueInMultiDims()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnInterval)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = Lists.newLinkedList();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testSearchSameValueInMultiDims2()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnInterval)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .sortSpec(new SearchSortSpec(StringComparators.STRLEN))\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = Lists.newLinkedList();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","date":"2018-08-31 00:56:26","endLine":241,"groupId":"10755","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearchSameValueInMultiDims2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/16/31307af9f9892e28a4c49f01932eb6054f3080.src","preCode":"  public void testSearchSameValueInMultiDims2()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnInterval)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .sortSpec(new SearchSortSpec(StringComparators.STRLEN))\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = Lists.newLinkedList();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-09-14 09:07:06","codes":[{"authorDate":"2018-09-14 09:07:06","commitOrder":2,"curCode":"  public void testSearchSameValueInMultiDims()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnInterval)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = new ArrayList<>();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","date":"2018-09-14 09:07:06","endLine":216,"groupId":"21386","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchSameValueInMultiDims","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/df/c2e8a8525dcdbe3320798228812e6a46fa9b61.src","preCode":"  public void testSearchSameValueInMultiDims()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnInterval)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = Lists.newLinkedList();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"M"},{"authorDate":"2018-09-14 09:07:06","commitOrder":2,"curCode":"  public void testSearchSameValueInMultiDims2()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnInterval)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .sortSpec(new SearchSortSpec(StringComparators.STRLEN))\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = new ArrayList<>();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","date":"2018-09-14 09:07:06","endLine":241,"groupId":"10755","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearchSameValueInMultiDims2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/df/c2e8a8525dcdbe3320798228812e6a46fa9b61.src","preCode":"  public void testSearchSameValueInMultiDims2()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnInterval)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .sortSpec(new SearchSortSpec(StringComparators.STRLEN))\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = Lists.newLinkedList();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"}],"commitId":"d50b69e6d4c29913de4d670b05523a719dbfd97f","commitMessage":"@@@Prohibit LinkedList (#6112)\n\n* Prohibit LinkedList\n\n* Fix tests\n\n* Fix\n\n* Remove unused import\n","date":"2018-09-14 09:07:06","modifiedFileCount":"24","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-01-22 03:11:10","codes":[{"authorDate":"2019-01-22 03:11:10","commitOrder":3,"curCode":"  public void testSearchSameValueInMultiDims()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = new ArrayList<>();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","date":"2019-01-22 03:11:10","endLine":218,"groupId":"21386","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchSameValueInMultiDims","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4d/3d1e0590574f39b0a600035f27bef92cf05e2b.src","preCode":"  public void testSearchSameValueInMultiDims()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnInterval)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = new ArrayList<>();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"},{"authorDate":"2019-01-22 03:11:10","commitOrder":3,"curCode":"  public void testSearchSameValueInMultiDims2()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .sortSpec(new SearchSortSpec(StringComparators.STRLEN))\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = new ArrayList<>();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","date":"2019-01-22 03:11:10","endLine":243,"groupId":"10755","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearchSameValueInMultiDims2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4d/3d1e0590574f39b0a600035f27bef92cf05e2b.src","preCode":"  public void testSearchSameValueInMultiDims2()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnInterval)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .sortSpec(new SearchSortSpec(StringComparators.STRLEN))\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = new ArrayList<>();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"M"}],"commitId":"8eae26fd4e7572060d112864dd3d5f6a865b9c89","commitMessage":"@@@Introduce SegmentId class (#6370)\n\n* Introduce SegmentId class\n\n* tmp\n\n* Fix SelectQueryRunnerTest\n\n* Fix indentation\n\n* Fixes\n\n* Remove Comparators.inverse() tests\n\n* Refinements\n\n* Fix tests\n\n* Fix more tests\n\n* Remove duplicate DataSegmentTest.  fixes #6064\n\n* SegmentDescriptor doc\n\n* Fix SQLMetadataStorageUpdaterJobHandler\n\n* Fix DataSegment deserialization for ignoring id\n\n* Add comments\n\n* More comments\n\n* Address more comments\n\n* Fix compilation\n\n* Restore segment2 in SystemSchemaTest according to a comment\n\n* Fix style\n\n* fix testServerSegmentsTable\n\n* Fix compilation\n\n* Add comments about why SegmentId and SegmentIdWithShardSpec are separate classes\n\n* Fix SystemSchemaTest\n\n* Fix style\n\n* Compare SegmentDescriptor with SegmentId in Javadoc and comments rather than with DataSegment\n\n* Remove a link.  see https://youtrack.jetbrains.com/issue/IDEA-205164\n\n* Fix compilation\n","date":"2019-01-22 03:11:10","modifiedFileCount":"308","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":4,"curCode":"  public void testSearchSameValueInMultiDims()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.DATA_SOURCE)\n                                    .granularity(QueryRunnerTestHelper.ALL_GRAN)\n                                    .intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.PLACEMENT_DIMENSION,\n                                            QueryRunnerTestHelper.PLACEMENTISH_DIMENSION\n                                        )\n                                    )\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = new ArrayList<>();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENT_DIMENSION, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENTISH_DIMENSION, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENTISH_DIMENSION, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","date":"2019-08-23 18:13:54","endLine":218,"groupId":"106833","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchSameValueInMultiDims","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/41/c2c1a3ed354e8c8a38c59b06bcd1a6ae1d3d1b.src","preCode":"  public void testSearchSameValueInMultiDims()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = new ArrayList<>();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":4,"curCode":"  public void testSearchSameValueInMultiDims2()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.DATA_SOURCE)\n                                    .granularity(QueryRunnerTestHelper.ALL_GRAN)\n                                    .intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.PLACEMENT_DIMENSION,\n                                            QueryRunnerTestHelper.PLACEMENTISH_DIMENSION\n                                        )\n                                    )\n                                    .sortSpec(new SearchSortSpec(StringComparators.STRLEN))\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = new ArrayList<>();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENTISH_DIMENSION, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENT_DIMENSION, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENTISH_DIMENSION, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","date":"2019-08-23 18:13:54","endLine":243,"groupId":"106833","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearchSameValueInMultiDims2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/41/c2c1a3ed354e8c8a38c59b06bcd1a6ae1d3d1b.src","preCode":"  public void testSearchSameValueInMultiDims2()\n  {\n    SearchQuery searchQuery = Druids.newSearchQueryBuilder()\n                                    .dataSource(QueryRunnerTestHelper.dataSource)\n                                    .granularity(QueryRunnerTestHelper.allGran)\n                                    .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n                                    .dimensions(\n                                        Arrays.asList(\n                                            QueryRunnerTestHelper.placementDimension,\n                                            QueryRunnerTestHelper.placementishDimension\n                                        )\n                                    )\n                                    .sortSpec(new SearchSortSpec(StringComparators.STRLEN))\n                                    .query(\"e\")\n                                    .build();\n\n    List<SearchHit> expectedHits = new ArrayList<>();\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"e\", 93));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension, \"preferred\", 1209));\n    expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension, \"preferred\", 1209));\n\n    checkSearchQuery(searchQuery, expectedHits);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/search/SearchQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
