[{"authorTime":"2019-02-24 12:10:31","codes":[{"authorDate":"2019-05-22 02:32:09","commitOrder":3,"curCode":"  public void testGroupByNothingWithImpossibleTimeFilter() throws Exception\n  {\n    \r\n\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo\\n\"\n        + \"WHERE FLOOR(__time TO DAY) = TIMESTAMP '2000-01-02 01:00:00'\\n\"\n        + \"OR FLOOR(__time TO DAY) = TIMESTAMP '2000-01-02 02:00:00'\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec())\n                  .granularity(Granularities.ALL)\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of()\n    );\n  }\n","date":"2019-05-22 02:32:09","endLine":1914,"groupId":"17894","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGroupByNothingWithImpossibleTimeFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ec/ef1b5a303659e289bee1e5bcd8c560f8b4cf87.src","preCode":"  public void testGroupByNothingWithImpossibleTimeFilter() throws Exception\n  {\n    \r\n\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo\\n\"\n        + \"WHERE FLOOR(__time TO DAY) = TIMESTAMP '2000-01-02 01:00:00'\\n\"\n        + \"OR FLOOR(__time TO DAY) = TIMESTAMP '2000-01-02 02:00:00'\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec())\n                  .granularity(Granularities.ALL)\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of()\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1895,"status":"B"},{"authorDate":"2019-02-24 12:10:31","commitOrder":3,"curCode":"  public void testFilterOnTimeFloorMisaligned() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo \"\n        + \"WHERE floor(__time TO month) = TIMESTAMP '2000-01-01 00:00:01'\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec())\n                  .granularity(Granularities.ALL)\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of()\n    );\n  }\n","date":"2019-02-24 12:10:31","endLine":5513,"groupId":"17894","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFilterOnTimeFloorMisaligned","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ad/6030fb8d73521776662c2a97e0f873c4ad7d0f.src","preCode":"  public void testFilterOnTimeFloorMisaligned() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo \"\n        + \"WHERE floor(__time TO month) = TIMESTAMP '2000-01-01 00:00:01'\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec())\n                  .granularity(Granularities.ALL)\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of()\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":5497,"status":"NB"}],"commitId":"bcea05e4e8d4cabd698aedbc8f60fdfa8666e2ca","commitMessage":"@@@SQL: Fix exception with OR of impossible filters. (#7707)\n\nFixes #7671.","date":"2019-05-22 02:32:09","modifiedFileCount":"2","status":"M","submitter":"Gian Merlino"},{"authorTime":"2021-05-11 01:13:37","codes":[{"authorDate":"2021-05-11 01:13:37","commitOrder":4,"curCode":"  public void testGroupByNothingWithImpossibleTimeFilter() throws Exception\n  {\n    \r\n\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo\\n\"\n        + \"WHERE FLOOR(__time TO DAY) = TIMESTAMP '2000-01-02 01:00:00'\\n\"\n        + \"OR FLOOR(__time TO DAY) = TIMESTAMP '2000-01-02 02:00:00'\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec())\n                  .granularity(Granularities.ALL)\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(QUERY_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{0L}\n        )\n    );\n  }\n","date":"2021-05-11 01:13:37","endLine":5439,"groupId":"101694","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGroupByNothingWithImpossibleTimeFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/fd99b05ebe6da94fffaa752ce8de0e97ef485f.src","preCode":"  public void testGroupByNothingWithImpossibleTimeFilter() throws Exception\n  {\n    \r\n\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo\\n\"\n        + \"WHERE FLOOR(__time TO DAY) = TIMESTAMP '2000-01-02 01:00:00'\\n\"\n        + \"OR FLOOR(__time TO DAY) = TIMESTAMP '2000-01-02 02:00:00'\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec())\n                  .granularity(Granularities.ALL)\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of()\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":5418,"status":"M"},{"authorDate":"2021-05-11 01:13:37","commitOrder":4,"curCode":"  public void testFilterOnTimeFloorMisaligned() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo \"\n        + \"WHERE floor(__time TO month) = TIMESTAMP '2000-01-01 00:00:01'\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec())\n                  .granularity(Granularities.ALL)\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(QUERY_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(new Object[]{0L})\n    );\n  }\n","date":"2021-05-11 01:13:37","endLine":9911,"groupId":"101694","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFilterOnTimeFloorMisaligned","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/fd99b05ebe6da94fffaa752ce8de0e97ef485f.src","preCode":"  public void testFilterOnTimeFloorMisaligned() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo \"\n        + \"WHERE floor(__time TO month) = TIMESTAMP '2000-01-01 00:00:01'\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec())\n                  .granularity(Granularities.ALL)\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of()\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":9895,"status":"M"}],"commitId":"691d7a1d548909951468005348a603380f4d6d74","commitMessage":"@@@SQL timeseries no longer skip empty buckets with all granularity (#11188)\n\n* SQL timeseries no longer skip empty buckets with all granularity\n\n* add comment.  fix tests\n\n* the ol switcheroo\n\n* revert unintended change\n\n* docs and more tests\n\n* style\n\n* make checkstyle happy\n\n* docs fixes and more tests\n\n* add docs.  tests for array_agg\n\n* fixes\n\n* oops\n\n* doc stuffs\n\n* fix compile.  match doc style","date":"2021-05-11 01:13:37","modifiedFileCount":"16","status":"M","submitter":"Clint Wylie"}]
