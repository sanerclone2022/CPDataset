[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testFetchAuditHistory()\n  {\n    AuditEntry entry = new AuditEntry(\n        \"testKey\",\n        \"testType\",\n        new AuditInfo(\n            \"testAuthor\",\n            \"testComment\",\n            \"127.0.0.1\"\n        ),\n        \"testPayload\",\n        DateTimes.of(\"2013-01-01T00:00:00Z\")\n    );\n    auditManager.doAudit(entry);\n    auditManager.doAudit(entry);\n    List<AuditEntry> auditEntries = auditManager.fetchAuditHistory(\n        \"testKey\",\n        \"testType\",\n        Intervals.of(\"2012-01-01T00:00:00Z/2013-01-03T00:00:00Z\")\n    );\n    Assert.assertEquals(2, auditEntries.size());\n    Assert.assertEquals(entry, auditEntries.get(0));\n    Assert.assertEquals(entry, auditEntries.get(1));\n  }\n","date":"2018-08-31 00:56:26","endLine":136,"groupId":"6828","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFetchAuditHistory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/86/77f42a0c583041574a0756975b3ea16f352c90.src","preCode":"  public void testFetchAuditHistory()\n  {\n    AuditEntry entry = new AuditEntry(\n        \"testKey\",\n        \"testType\",\n        new AuditInfo(\n            \"testAuthor\",\n            \"testComment\",\n            \"127.0.0.1\"\n        ),\n        \"testPayload\",\n        DateTimes.of(\"2013-01-01T00:00:00Z\")\n    );\n    auditManager.doAudit(entry);\n    auditManager.doAudit(entry);\n    List<AuditEntry> auditEntries = auditManager.fetchAuditHistory(\n        \"testKey\",\n        \"testType\",\n        Intervals.of(\"2012-01-01T00:00:00Z/2013-01-03T00:00:00Z\")\n    );\n    Assert.assertEquals(2, auditEntries.size());\n    Assert.assertEquals(entry, auditEntries.get(0));\n    Assert.assertEquals(entry, auditEntries.get(1));\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/audit/SQLAuditManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testFetchAuditHistoryByKeyAndTypeWithLimit()\n  {\n    AuditEntry entry1 = new AuditEntry(\n        \"testKey1\",\n        \"testType\",\n        new AuditInfo(\n            \"testAuthor\",\n            \"testComment\",\n            \"127.0.0.1\"\n        ),\n        \"testPayload\",\n        DateTimes.of(\"2013-01-01T00:00:00Z\")\n    );\n    AuditEntry entry2 = new AuditEntry(\n        \"testKey2\",\n        \"testType\",\n        new AuditInfo(\n            \"testAuthor\",\n            \"testComment\",\n            \"127.0.0.1\"\n        ),\n        \"testPayload\",\n        DateTimes.of(\"2013-01-02T00:00:00Z\")\n    );\n    auditManager.doAudit(entry1);\n    auditManager.doAudit(entry2);\n    List<AuditEntry> auditEntries = auditManager.fetchAuditHistory(\n        \"testKey1\",\n        \"testType\",\n        1\n    );\n    Assert.assertEquals(1, auditEntries.size());\n    Assert.assertEquals(entry1, auditEntries.get(0));\n  }\n","date":"2018-08-31 00:56:26","endLine":172,"groupId":"17426","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFetchAuditHistoryByKeyAndTypeWithLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/86/77f42a0c583041574a0756975b3ea16f352c90.src","preCode":"  public void testFetchAuditHistoryByKeyAndTypeWithLimit()\n  {\n    AuditEntry entry1 = new AuditEntry(\n        \"testKey1\",\n        \"testType\",\n        new AuditInfo(\n            \"testAuthor\",\n            \"testComment\",\n            \"127.0.0.1\"\n        ),\n        \"testPayload\",\n        DateTimes.of(\"2013-01-01T00:00:00Z\")\n    );\n    AuditEntry entry2 = new AuditEntry(\n        \"testKey2\",\n        \"testType\",\n        new AuditInfo(\n            \"testAuthor\",\n            \"testComment\",\n            \"127.0.0.1\"\n        ),\n        \"testPayload\",\n        DateTimes.of(\"2013-01-02T00:00:00Z\")\n    );\n    auditManager.doAudit(entry1);\n    auditManager.doAudit(entry2);\n    List<AuditEntry> auditEntries = auditManager.fetchAuditHistory(\n        \"testKey1\",\n        \"testType\",\n        1\n    );\n    Assert.assertEquals(1, auditEntries.size());\n    Assert.assertEquals(entry1, auditEntries.get(0));\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/audit/SQLAuditManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2021-04-14 11:18:28","codes":[{"authorDate":"2021-04-14 11:18:28","commitOrder":2,"curCode":"  public void testFetchAuditHistory()\n  {\n    String entry1Key = \"testKey\";\n    String entry1Type = \"testType\";\n    AuditInfo entry1AuditInfo = new AuditInfo(\n        \"testAuthor\",\n        \"testComment\",\n        \"127.0.0.1\"\n    );\n    String entry1Payload = \"testPayload\";\n\n    auditManager.doAudit(entry1Key, entry1Type, entry1AuditInfo, entry1Payload, stringConfigSerde);\n    auditManager.doAudit(entry1Key, entry1Type, entry1AuditInfo, entry1Payload, stringConfigSerde);\n\n    List<AuditEntry> auditEntries = auditManager.fetchAuditHistory(\n        \"testKey\",\n        \"testType\",\n        Intervals.of(\"2000-01-01T00:00:00Z/2100-01-03T00:00:00Z\")\n    );\n    Assert.assertEquals(2, auditEntries.size());\n\n    Assert.assertEquals(entry1Key, auditEntries.get(0).getKey());\n    Assert.assertEquals(entry1Payload, auditEntries.get(0).getPayload());\n    Assert.assertEquals(entry1Type, auditEntries.get(0).getType());\n    Assert.assertEquals(entry1AuditInfo, auditEntries.get(0).getAuditInfo());\n\n    Assert.assertEquals(entry1Key, auditEntries.get(1).getKey());\n    Assert.assertEquals(entry1Payload, auditEntries.get(1).getPayload());\n    Assert.assertEquals(entry1Type, auditEntries.get(1).getType());\n    Assert.assertEquals(entry1AuditInfo, auditEntries.get(1).getAuditInfo());\n  }\n","date":"2021-04-14 11:18:28","endLine":222,"groupId":"10667","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFetchAuditHistory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/42/9402e9e9e5fb1d847802ffe95dfef312034a90.src","preCode":"  public void testFetchAuditHistory()\n  {\n    AuditEntry entry = new AuditEntry(\n        \"testKey\",\n        \"testType\",\n        new AuditInfo(\n            \"testAuthor\",\n            \"testComment\",\n            \"127.0.0.1\"\n        ),\n        \"testPayload\",\n        DateTimes.of(\"2013-01-01T00:00:00Z\")\n    );\n    auditManager.doAudit(entry);\n    auditManager.doAudit(entry);\n    List<AuditEntry> auditEntries = auditManager.fetchAuditHistory(\n        \"testKey\",\n        \"testType\",\n        Intervals.of(\"2012-01-01T00:00:00Z/2013-01-03T00:00:00Z\")\n    );\n    Assert.assertEquals(2, auditEntries.size());\n    Assert.assertEquals(entry, auditEntries.get(0));\n    Assert.assertEquals(entry, auditEntries.get(1));\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/audit/SQLAuditManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"M"},{"authorDate":"2021-04-14 11:18:28","commitOrder":2,"curCode":"  public void testFetchAuditHistoryByKeyAndTypeWithLimit()\n  {\n    String entry1Key = \"testKey1\";\n    String entry1Type = \"testType\";\n    AuditInfo entry1AuditInfo = new AuditInfo(\n        \"testAuthor\",\n        \"testComment\",\n        \"127.0.0.1\"\n    );\n    String entry1Payload = \"testPayload\";\n\n    String entry2Key = \"testKey2\";\n    String entry2Type = \"testType\";\n    AuditInfo entry2AuditInfo = new AuditInfo(\n        \"testAuthor\",\n        \"testComment\",\n        \"127.0.0.1\"\n    );\n    String entry2Payload = \"testPayload\";\n\n    auditManager.doAudit(entry1Key, entry1Type, entry1AuditInfo, entry1Payload, stringConfigSerde);\n    auditManager.doAudit(entry2Key, entry2Type, entry2AuditInfo, entry2Payload, stringConfigSerde);\n    List<AuditEntry> auditEntries = auditManager.fetchAuditHistory(\n        \"testKey1\",\n        \"testType\",\n        1\n    );\n    Assert.assertEquals(1, auditEntries.size());\n    Assert.assertEquals(entry1Key, auditEntries.get(0).getKey());\n    Assert.assertEquals(entry1Payload, auditEntries.get(0).getPayload());\n    Assert.assertEquals(entry1Type, auditEntries.get(0).getType());\n    Assert.assertEquals(entry1AuditInfo, auditEntries.get(0).getAuditInfo());\n  }\n","date":"2021-04-14 11:18:28","endLine":257,"groupId":"10667","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFetchAuditHistoryByKeyAndTypeWithLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/42/9402e9e9e5fb1d847802ffe95dfef312034a90.src","preCode":"  public void testFetchAuditHistoryByKeyAndTypeWithLimit()\n  {\n    AuditEntry entry1 = new AuditEntry(\n        \"testKey1\",\n        \"testType\",\n        new AuditInfo(\n            \"testAuthor\",\n            \"testComment\",\n            \"127.0.0.1\"\n        ),\n        \"testPayload\",\n        DateTimes.of(\"2013-01-01T00:00:00Z\")\n    );\n    AuditEntry entry2 = new AuditEntry(\n        \"testKey2\",\n        \"testType\",\n        new AuditInfo(\n            \"testAuthor\",\n            \"testComment\",\n            \"127.0.0.1\"\n        ),\n        \"testPayload\",\n        DateTimes.of(\"2013-01-02T00:00:00Z\")\n    );\n    auditManager.doAudit(entry1);\n    auditManager.doAudit(entry2);\n    List<AuditEntry> auditEntries = auditManager.fetchAuditHistory(\n        \"testKey1\",\n        \"testType\",\n        1\n    );\n    Assert.assertEquals(1, auditEntries.size());\n    Assert.assertEquals(entry1, auditEntries.get(0));\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/audit/SQLAuditManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"M"}],"commitId":"f96840017017806d2bbe35cf344e682995e8a9c1","commitMessage":"@@@Introduce a new configuration that skip storing audit payload if payload size exceed limit and skip storing null fields for audit payload (#11078)\n\n* Add config to skip storing audit payload if exceed limit\n\n* fix checkstyle\n\n* change config name\n\n* skip null fields for audit payload\n\n* fix checkstyle\n\n* address comments\n\n* fix guice\n\n* fix test\n\n* add tests\n\n* address comments\n\n* address comments\n\n* address comments\n\n* fix checkstyle\n\n* address comments\n\n* fix test\n\n* fix test\n\n* address comments\n\n* Address comments\n\nCo-authored-by: Jihoon Son <jihoonson@apache.org>\n\nCo-authored-by: Jihoon Son <jihoonson@apache.org>","date":"2021-04-14 11:18:28","modifiedFileCount":"8","status":"M","submitter":"Maytas Monsereenusorn"}]
