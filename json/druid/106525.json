[{"authorTime":"2020-04-11 16:18:11","codes":[{"authorDate":"2020-04-11 16:18:11","commitOrder":1,"curCode":"  public void testCanPushDownLimitForSegmentStringSelector()\n  {\n    ColumnCapabilities capabilities = new ColumnCapabilitiesImpl().setType(ValueType.STRING)\n                                                                  .setHasBitmapIndexes(true)\n                                                                  .setHasMultipleValues(false)\n                                                                  .setDictionaryEncoded(true)\n                                                                  .setDictionaryValuesSorted(true)\n                                                                  .setDictionaryValuesUnique(true)\n                                                                  .setIsComplete(true);\n    EasyMock.expect(factory.getColumnCapabilities(DIM)).andReturn(capabilities).once();\n    EasyMock.replay(factory);\n    Assert.assertTrue(GroupByQueryEngineV2.canPushDownLimit(factory, DIM));\n    EasyMock.verify(factory);\n  }\n","date":"2020-04-11 16:18:11","endLine":56,"groupId":"20418","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCanPushDownLimitForSegmentStringSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d7/1d70a1aac958d702a1c708821f50e0e7fb4d1e.src","preCode":"  public void testCanPushDownLimitForSegmentStringSelector()\n  {\n    ColumnCapabilities capabilities = new ColumnCapabilitiesImpl().setType(ValueType.STRING)\n                                                                  .setHasBitmapIndexes(true)\n                                                                  .setHasMultipleValues(false)\n                                                                  .setDictionaryEncoded(true)\n                                                                  .setDictionaryValuesSorted(true)\n                                                                  .setDictionaryValuesUnique(true)\n                                                                  .setIsComplete(true);\n    EasyMock.expect(factory.getColumnCapabilities(DIM)).andReturn(capabilities).once();\n    EasyMock.replay(factory);\n    Assert.assertTrue(GroupByQueryEngineV2.canPushDownLimit(factory, DIM));\n    EasyMock.verify(factory);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/epinephelinae/GroupByQueryEngineV2Test.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"B"},{"authorDate":"2020-04-11 16:18:11","commitOrder":1,"curCode":"  public void testCanPushDownLimitForJoinStringSelector()\n  {\n    ColumnCapabilities capabilities = new ColumnCapabilitiesImpl().setType(ValueType.STRING)\n                                                                  .setHasBitmapIndexes(false)\n                                                                  .setHasMultipleValues(false)\n                                                                  .setDictionaryEncoded(true)\n                                                                  .setDictionaryValuesSorted(false)\n                                                                  .setDictionaryValuesUnique(false)\n                                                                  .setIsComplete(true);\n    EasyMock.expect(factory.getColumnCapabilities(DIM)).andReturn(capabilities).once();\n    EasyMock.replay(factory);\n    Assert.assertFalse(GroupByQueryEngineV2.canPushDownLimit(factory, DIM));\n    EasyMock.verify(factory);\n  }\n","date":"2020-04-11 16:18:11","endLine":104,"groupId":"20418","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCanPushDownLimitForJoinStringSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d7/1d70a1aac958d702a1c708821f50e0e7fb4d1e.src","preCode":"  public void testCanPushDownLimitForJoinStringSelector()\n  {\n    ColumnCapabilities capabilities = new ColumnCapabilitiesImpl().setType(ValueType.STRING)\n                                                                  .setHasBitmapIndexes(false)\n                                                                  .setHasMultipleValues(false)\n                                                                  .setDictionaryEncoded(true)\n                                                                  .setDictionaryValuesSorted(false)\n                                                                  .setDictionaryValuesUnique(false)\n                                                                  .setIsComplete(true);\n    EasyMock.expect(factory.getColumnCapabilities(DIM)).andReturn(capabilities).once();\n    EasyMock.replay(factory);\n    Assert.assertFalse(GroupByQueryEngineV2.canPushDownLimit(factory, DIM));\n    EasyMock.verify(factory);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/epinephelinae/GroupByQueryEngineV2Test.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"0ff926b1a1367be88fb6f5f4baaa74ca849bd8bf","commitMessage":"@@@fix issue with group by limit pushdown for extractionFn.  expressions.  joins.  etc (#9662)\n\n* fix issue with group by limit pushdown for extractionFn.  expressions.  joins.  etc\n\n* remove unused\n\n* fix test\n\n* revert unintended change\n\n* more tests\n\n* consider capabilities for StringGroupByColumnSelectorStrategy\n\n* fix test\n\n* fix and more test\n\n* revert because im scared","date":"2020-04-11 16:18:11","modifiedFileCount":"22","status":"B","submitter":"Clint Wylie"},{"authorTime":"2020-06-05 14:52:37","codes":[{"authorDate":"2020-06-05 14:52:37","commitOrder":2,"curCode":"  public void testCanPushDownLimitForSegmentStringSelector()\n  {\n    ColumnCapabilities capabilities = new ColumnCapabilitiesImpl().setType(ValueType.STRING)\n                                                                  .setHasBitmapIndexes(true)\n                                                                  .setHasMultipleValues(false)\n                                                                  .setDictionaryEncoded(true)\n                                                                  .setDictionaryValuesSorted(true)\n                                                                  .setDictionaryValuesUnique(true);\n    EasyMock.expect(factory.getColumnCapabilities(DIM)).andReturn(capabilities).once();\n    EasyMock.replay(factory);\n    Assert.assertTrue(GroupByQueryEngineV2.canPushDownLimit(factory, DIM));\n    EasyMock.verify(factory);\n  }\n","date":"2020-06-05 14:52:37","endLine":55,"groupId":"106525","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testCanPushDownLimitForSegmentStringSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/75/a12a90cb6c4f8bf3590cf2a5036869e39433a1.src","preCode":"  public void testCanPushDownLimitForSegmentStringSelector()\n  {\n    ColumnCapabilities capabilities = new ColumnCapabilitiesImpl().setType(ValueType.STRING)\n                                                                  .setHasBitmapIndexes(true)\n                                                                  .setHasMultipleValues(false)\n                                                                  .setDictionaryEncoded(true)\n                                                                  .setDictionaryValuesSorted(true)\n                                                                  .setDictionaryValuesUnique(true)\n                                                                  .setIsComplete(true);\n    EasyMock.expect(factory.getColumnCapabilities(DIM)).andReturn(capabilities).once();\n    EasyMock.replay(factory);\n    Assert.assertTrue(GroupByQueryEngineV2.canPushDownLimit(factory, DIM));\n    EasyMock.verify(factory);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/epinephelinae/GroupByQueryEngineV2Test.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2020-06-05 14:52:37","commitOrder":2,"curCode":"  public void testCanPushDownLimitForJoinStringSelector()\n  {\n    ColumnCapabilities capabilities = new ColumnCapabilitiesImpl().setType(ValueType.STRING)\n                                                                  .setHasBitmapIndexes(false)\n                                                                  .setHasMultipleValues(false)\n                                                                  .setDictionaryEncoded(true)\n                                                                  .setDictionaryValuesSorted(false)\n                                                                  .setDictionaryValuesUnique(false);\n    EasyMock.expect(factory.getColumnCapabilities(DIM)).andReturn(capabilities).once();\n    EasyMock.replay(factory);\n    Assert.assertFalse(GroupByQueryEngineV2.canPushDownLimit(factory, DIM));\n    EasyMock.verify(factory);\n  }\n","date":"2020-06-05 14:52:37","endLine":100,"groupId":"106525","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testCanPushDownLimitForJoinStringSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/75/a12a90cb6c4f8bf3590cf2a5036869e39433a1.src","preCode":"  public void testCanPushDownLimitForJoinStringSelector()\n  {\n    ColumnCapabilities capabilities = new ColumnCapabilitiesImpl().setType(ValueType.STRING)\n                                                                  .setHasBitmapIndexes(false)\n                                                                  .setHasMultipleValues(false)\n                                                                  .setDictionaryEncoded(true)\n                                                                  .setDictionaryValuesSorted(false)\n                                                                  .setDictionaryValuesUnique(false)\n                                                                  .setIsComplete(true);\n    EasyMock.expect(factory.getColumnCapabilities(DIM)).andReturn(capabilities).once();\n    EasyMock.replay(factory);\n    Assert.assertFalse(GroupByQueryEngineV2.canPushDownLimit(factory, DIM));\n    EasyMock.verify(factory);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/epinephelinae/GroupByQueryEngineV2Test.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"77dd5b06ae8fd7c81474cb03c0fc399cdf21646a","commitMessage":"@@@ColumnCapabilities.hasMultipleValues refactor (#9731)\n\n* transition ColumnCapabilities.hasMultipleValues to Capable enum.  remove ColumnCapabilities.isComplete\n\n* remove artifical.  always multi-value capabilities from IncrementalIndexStorageAdapter and fix up fallout from that.  fix ColumnCapabilities merge in index merger\n\n* fix typo\n\n* remove unused method\n\n* review stuffs.  revert IncrementalIndexStorageAdapater capabilities change.  plumb lame workaround to SegmentAnalyzer\n\n* more comment\n\n* use volatile booleans\n\n* fix line length\n\n* correctly handle missing columns for vector processors\n\n* return ColumnCapabilities.Capable for BitmapIndexSelector.hasMultipleValues.  fix vector processor selection for complex\n\n* false on non-existent","date":"2020-06-05 14:52:37","modifiedFileCount":"41","status":"M","submitter":"Clint Wylie"}]
