[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private ImmutableSortedMap<String, ImmutableList<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        actualPath = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\").getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        InputStream byteContent = this.getClass().getClassLoader().getResourceAsStream(\"defaultWhiteListMap.json\");\n        fileContent = CharStreams.toString(new InputStreamReader(byteContent, StandardCharsets.UTF_8));\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), StandardCharsets.UTF_8).read();\n      }\n      return mapper.reader(new TypeReference<ImmutableSortedMap<String, ImmutableList<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":228,"groupId":"8053","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"readMap","params":"(finalStringmapPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/12/e6008adb47dcf1e45e7c7f2cc0b423d9a3e59f.src","preCode":"  private ImmutableSortedMap<String, ImmutableList<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        actualPath = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\").getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        InputStream byteContent = this.getClass().getClassLoader().getResourceAsStream(\"defaultWhiteListMap.json\");\n        fileContent = CharStreams.toString(new InputStreamReader(byteContent, StandardCharsets.UTF_8));\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), StandardCharsets.UTF_8).read();\n      }\n      return mapper.reader(new TypeReference<ImmutableSortedMap<String, ImmutableList<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","realPath":"extensions-contrib/ambari-metrics-emitter/src/main/java/org/apache/druid/emitter/ambari/metrics/WhiteListBasedDruidToTimelineEventConverter.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private ImmutableSortedMap<String, ImmutableSet<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        URL resource = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\");\n        actualPath = resource.getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        fileContent = Resources.toString(resource, Charset.defaultCharset());\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), Charset.forName(\"UTF-8\")).read();\n      }\n      return mapper.reader(new TypeReference<ImmutableSortedMap<String, ImmutableSet<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":292,"groupId":"16824","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"readMap","params":"(finalStringmapPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6d/97c9e2ec3909fa8082a3fea941d7625e63d84d.src","preCode":"  private ImmutableSortedMap<String, ImmutableSet<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        URL resource = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\");\n        actualPath = resource.getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        fileContent = Resources.toString(resource, Charset.defaultCharset());\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), Charset.forName(\"UTF-8\")).read();\n      }\n      return mapper.reader(new TypeReference<ImmutableSortedMap<String, ImmutableSet<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","realPath":"extensions-contrib/graphite-emitter/src/main/java/org/apache/druid/emitter/graphite/WhiteListBasedConverter.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-10-04 04:55:20","codes":[{"authorDate":"2018-10-04 04:55:20","commitOrder":2,"curCode":"  private ImmutableSortedMap<String, ImmutableList<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        actualPath = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\").getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        InputStream byteContent = this.getClass().getClassLoader().getResourceAsStream(\"defaultWhiteListMap.json\");\n        fileContent = CharStreams.toString(new InputStreamReader(byteContent, StandardCharsets.UTF_8));\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), StandardCharsets.UTF_8).read();\n      }\n      return mapper.readerFor(new TypeReference<ImmutableSortedMap<String, ImmutableList<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","date":"2018-10-04 04:55:20","endLine":228,"groupId":"8053","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"readMap","params":"(finalStringmapPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6d/77d8ef9c9d9091ff8151b9073d2468b9732344.src","preCode":"  private ImmutableSortedMap<String, ImmutableList<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        actualPath = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\").getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        InputStream byteContent = this.getClass().getClassLoader().getResourceAsStream(\"defaultWhiteListMap.json\");\n        fileContent = CharStreams.toString(new InputStreamReader(byteContent, StandardCharsets.UTF_8));\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), StandardCharsets.UTF_8).read();\n      }\n      return mapper.reader(new TypeReference<ImmutableSortedMap<String, ImmutableList<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","realPath":"extensions-contrib/ambari-metrics-emitter/src/main/java/org/apache/druid/emitter/ambari/metrics/WhiteListBasedDruidToTimelineEventConverter.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"M"},{"authorDate":"2018-10-04 04:55:20","commitOrder":2,"curCode":"  private ImmutableSortedMap<String, ImmutableSet<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        URL resource = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\");\n        actualPath = resource.getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        fileContent = Resources.toString(resource, Charset.defaultCharset());\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), Charset.forName(\"UTF-8\")).read();\n      }\n      return mapper.readerFor(new TypeReference<ImmutableSortedMap<String, ImmutableSet<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","date":"2018-10-04 04:55:20","endLine":292,"groupId":"16824","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"readMap","params":"(finalStringmapPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/25/28a7b53632e881153dc23a426c20eed0818948.src","preCode":"  private ImmutableSortedMap<String, ImmutableSet<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        URL resource = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\");\n        actualPath = resource.getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        fileContent = Resources.toString(resource, Charset.defaultCharset());\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), Charset.forName(\"UTF-8\")).read();\n      }\n      return mapper.reader(new TypeReference<ImmutableSortedMap<String, ImmutableSet<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","realPath":"extensions-contrib/graphite-emitter/src/main/java/org/apache/druid/emitter/graphite/WhiteListBasedConverter.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"}],"commitId":"0b8085aff77d215995da994eb2d86676fdb50911","commitMessage":"@@@Prohibit jackson ObjectMapper#reader methods which are deprecated (#6386)\n\n* Prohibit jackson ObjectMapper#reader methods which are deprecated\n\n* address comments\n","date":"2018-10-04 04:55:20","modifiedFileCount":"24","status":"M","submitter":"QiuMM"},{"authorTime":"2018-10-04 04:55:20","codes":[{"authorDate":"2019-08-20 17:55:41","commitOrder":3,"curCode":"  private ImmutableSortedMap<String, ImmutableList<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        URL defaultWhiteListMapUrl = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\");\n        actualPath = defaultWhiteListMapUrl.getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        fileContent = Resources.toString(defaultWhiteListMapUrl, StandardCharsets.UTF_8);\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), StandardCharsets.UTF_8).read();\n      }\n      return mapper.readerFor(new TypeReference<ImmutableSortedMap<String, ImmutableList<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","date":"2019-08-20 17:55:41","endLine":227,"groupId":"16824","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"readMap","params":"(finalStringmapPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/aa/0def755c1c164e32c2145d65c53bb7d94c0a96.src","preCode":"  private ImmutableSortedMap<String, ImmutableList<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        actualPath = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\").getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        InputStream byteContent = this.getClass().getClassLoader().getResourceAsStream(\"defaultWhiteListMap.json\");\n        fileContent = CharStreams.toString(new InputStreamReader(byteContent, StandardCharsets.UTF_8));\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), StandardCharsets.UTF_8).read();\n      }\n      return mapper.readerFor(new TypeReference<ImmutableSortedMap<String, ImmutableList<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","realPath":"extensions-contrib/ambari-metrics-emitter/src/main/java/org/apache/druid/emitter/ambari/metrics/WhiteListBasedDruidToTimelineEventConverter.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"},{"authorDate":"2018-10-04 04:55:20","commitOrder":3,"curCode":"  private ImmutableSortedMap<String, ImmutableSet<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        URL resource = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\");\n        actualPath = resource.getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        fileContent = Resources.toString(resource, Charset.defaultCharset());\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), Charset.forName(\"UTF-8\")).read();\n      }\n      return mapper.readerFor(new TypeReference<ImmutableSortedMap<String, ImmutableSet<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","date":"2018-10-04 04:55:20","endLine":292,"groupId":"16824","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"readMap","params":"(finalStringmapPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/25/28a7b53632e881153dc23a426c20eed0818948.src","preCode":"  private ImmutableSortedMap<String, ImmutableSet<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        URL resource = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\");\n        actualPath = resource.getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        fileContent = Resources.toString(resource, Charset.defaultCharset());\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), Charset.forName(\"UTF-8\")).read();\n      }\n      return mapper.readerFor(new TypeReference<ImmutableSortedMap<String, ImmutableSet<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","realPath":"extensions-contrib/graphite-emitter/src/main/java/org/apache/druid/emitter/graphite/WhiteListBasedConverter.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"N"}],"commitId":"781873ba53a43db50e99e6f21180f748b3c65919","commitMessage":"@@@Fix resource leak (#8337)\n\n* Fix resource leak\n\n* Patch comments\n","date":"2019-08-20 17:55:41","modifiedFileCount":"8","status":"M","submitter":"Benedict Jin"},{"authorTime":"2020-04-11 01:04:40","codes":[{"authorDate":"2019-08-20 17:55:41","commitOrder":4,"curCode":"  private ImmutableSortedMap<String, ImmutableList<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        URL defaultWhiteListMapUrl = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\");\n        actualPath = defaultWhiteListMapUrl.getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        fileContent = Resources.toString(defaultWhiteListMapUrl, StandardCharsets.UTF_8);\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), StandardCharsets.UTF_8).read();\n      }\n      return mapper.readerFor(new TypeReference<ImmutableSortedMap<String, ImmutableList<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","date":"2019-08-20 17:55:41","endLine":227,"groupId":"103937","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"readMap","params":"(finalStringmapPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/aa/0def755c1c164e32c2145d65c53bb7d94c0a96.src","preCode":"  private ImmutableSortedMap<String, ImmutableList<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        URL defaultWhiteListMapUrl = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\");\n        actualPath = defaultWhiteListMapUrl.getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        fileContent = Resources.toString(defaultWhiteListMapUrl, StandardCharsets.UTF_8);\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), StandardCharsets.UTF_8).read();\n      }\n      return mapper.readerFor(new TypeReference<ImmutableSortedMap<String, ImmutableList<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","realPath":"extensions-contrib/ambari-metrics-emitter/src/main/java/org/apache/druid/emitter/ambari/metrics/WhiteListBasedDruidToTimelineEventConverter.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"N"},{"authorDate":"2020-04-11 01:04:40","commitOrder":4,"curCode":"  private ImmutableSortedMap<String, ImmutableSet<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        URL resource = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\");\n        actualPath = resource.getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        fileContent = Resources.toString(resource, Charset.defaultCharset());\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), StandardCharsets.UTF_8).read();\n      }\n      return mapper.readerFor(new TypeReference<ImmutableSortedMap<String, ImmutableSet<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","date":"2020-04-11 01:04:40","endLine":293,"groupId":"103937","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"readMap","params":"(finalStringmapPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/80/27e237e91e84404c300fb8ac4d5b9788bba27e.src","preCode":"  private ImmutableSortedMap<String, ImmutableSet<String>> readMap(final String mapPath)\n  {\n    String fileContent;\n    String actualPath = mapPath;\n    try {\n      if (Strings.isNullOrEmpty(mapPath)) {\n        URL resource = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\");\n        actualPath = resource.getFile();\n        LOGGER.info(\"using default whiteList map located at [%s]\", actualPath);\n        fileContent = Resources.toString(resource, Charset.defaultCharset());\n      } else {\n        fileContent = Files.asCharSource(new File(mapPath), Charset.forName(\"UTF-8\")).read();\n      }\n      return mapper.readerFor(new TypeReference<ImmutableSortedMap<String, ImmutableSet<String>>>()\n      {\n      }).readValue(fileContent);\n    }\n    catch (IOException e) {\n      throw new ISE(e, \"Got an exception while parsing file [%s]\", actualPath);\n    }\n  }\n","realPath":"extensions-contrib/graphite-emitter/src/main/java/org/apache/druid/emitter/graphite/WhiteListBasedConverter.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"}],"commitId":"1ced3b33fb1642ee71e542940e4e2a4840e7a48c","commitMessage":"@@@IntelliJ inspections cleanup (#9339)\n\n* IntelliJ inspections cleanup\n\n* Standard Charset object can be used\n* Redundant Collection.addAll() call\n* String literal concatenation missing whitespace\n* Statement with empty body\n* Redundant Collection operation\n* StringBuilder can be replaced with String\n* Type parameter hides visible type\n\n* fix warnings in test code\n\n* more test fixes\n\n* remove string concatenation inspection error\n\n* fix extra curly brace\n\n* cleanup AzureTestUtils\n\n* fix charsets for RangerAdminClient\n\n* review comments","date":"2020-04-11 01:04:40","modifiedFileCount":"33","status":"M","submitter":"Suneet Saldanha"}]
