[{"authorTime":"2020-04-11 16:18:11","codes":[{"authorDate":"2020-04-11 16:18:11","commitOrder":1,"curCode":"  public void testStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d1\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(caps.hasMultipleValues());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.isComplete());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d1\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(caps.hasMultipleValues());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.isComplete());\n  }\n","date":"2020-04-11 16:18:11","endLine":168,"groupId":"3904","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testStringColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/dc/102e688164704fe3e95c4e53e949a15bc1d346.src","preCode":"  public void testStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d1\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(caps.hasMultipleValues());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.isComplete());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d1\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(caps.hasMultipleValues());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.isComplete());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/QueryableIndexColumnCapabilitiesTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"},{"authorDate":"2020-04-11 16:18:11","commitOrder":1,"curCode":"  public void testMultiStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d2\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.isComplete());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d2\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.isComplete());\n  }\n","date":"2020-04-11 16:18:11","endLine":192,"groupId":"3903","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiStringColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/dc/102e688164704fe3e95c4e53e949a15bc1d346.src","preCode":"  public void testMultiStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d2\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.isComplete());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d2\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.isComplete());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/QueryableIndexColumnCapabilitiesTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"B"}],"commitId":"0ff926b1a1367be88fb6f5f4baaa74ca849bd8bf","commitMessage":"@@@fix issue with group by limit pushdown for extractionFn.  expressions.  joins.  etc (#9662)\n\n* fix issue with group by limit pushdown for extractionFn.  expressions.  joins.  etc\n\n* remove unused\n\n* fix test\n\n* revert unintended change\n\n* more tests\n\n* consider capabilities for StringGroupByColumnSelectorStrategy\n\n* fix test\n\n* fix and more test\n\n* revert because im scared","date":"2020-04-11 16:18:11","modifiedFileCount":"22","status":"B","submitter":"Clint Wylie"},{"authorTime":"2020-06-05 14:52:37","codes":[{"authorDate":"2020-06-05 14:52:37","commitOrder":2,"curCode":"  public void testStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d1\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    \r\n    Assert.assertTrue(caps.hasMultipleValues().isUnknown());\n    \r\n    \r\n    Assert.assertFalse(ColumnCapabilitiesImpl.snapshot(caps).hasMultipleValues().isMaybeTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d1\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(caps.hasMultipleValues().isMaybeTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n  }\n","date":"2020-06-05 14:52:37","endLine":171,"groupId":"3904","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testStringColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c7/783e9921971db0a69a688adcf37b920a1fd96e.src","preCode":"  public void testStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d1\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(caps.hasMultipleValues());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.isComplete());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d1\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(caps.hasMultipleValues());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.isComplete());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/QueryableIndexColumnCapabilitiesTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2020-06-05 14:52:37","commitOrder":2,"curCode":"  public void testMultiStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d2\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues().isTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d2\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues().isTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n  }\n","date":"2020-06-05 14:52:37","endLine":193,"groupId":"3903","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiStringColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c7/783e9921971db0a69a688adcf37b920a1fd96e.src","preCode":"  public void testMultiStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d2\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.isComplete());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d2\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.isComplete());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/QueryableIndexColumnCapabilitiesTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"}],"commitId":"77dd5b06ae8fd7c81474cb03c0fc399cdf21646a","commitMessage":"@@@ColumnCapabilities.hasMultipleValues refactor (#9731)\n\n* transition ColumnCapabilities.hasMultipleValues to Capable enum.  remove ColumnCapabilities.isComplete\n\n* remove artifical.  always multi-value capabilities from IncrementalIndexStorageAdapter and fix up fallout from that.  fix ColumnCapabilities merge in index merger\n\n* fix typo\n\n* remove unused method\n\n* review stuffs.  revert IncrementalIndexStorageAdapater capabilities change.  plumb lame workaround to SegmentAnalyzer\n\n* more comment\n\n* use volatile booleans\n\n* fix line length\n\n* correctly handle missing columns for vector processors\n\n* return ColumnCapabilities.Capable for BitmapIndexSelector.hasMultipleValues.  fix vector processor selection for complex\n\n* false on non-existent","date":"2020-06-05 14:52:37","modifiedFileCount":"41","status":"M","submitter":"Clint Wylie"},{"authorTime":"2020-08-12 02:07:17","codes":[{"authorDate":"2020-08-12 02:07:17","commitOrder":3,"curCode":"  public void testStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d1\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded().isMaybeTrue());\n    Assert.assertTrue(caps.isDictionaryEncoded().isTrue());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    \r\n    Assert.assertTrue(caps.hasMultipleValues().isUnknown());\n    \r\n    \r\n    Assert.assertFalse(\n        ColumnCapabilitiesImpl.snapshot(caps, IndexMergerV9.DIMENSION_CAPABILITY_MERGE_LOGIC)\n                              .hasMultipleValues()\n                              .isMaybeTrue()\n    );\n    Assert.assertFalse(caps.hasSpatialIndexes());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d1\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(caps.hasMultipleValues().isMaybeTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n  }\n","date":"2020-08-12 02:07:17","endLine":176,"groupId":"3904","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testStringColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/57/689a46cb0aeacb76bffbab1c5ec1799a6b6c18.src","preCode":"  public void testStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d1\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    \r\n    Assert.assertTrue(caps.hasMultipleValues().isUnknown());\n    \r\n    \r\n    Assert.assertFalse(ColumnCapabilitiesImpl.snapshot(caps).hasMultipleValues().isMaybeTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d1\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(caps.hasMultipleValues().isMaybeTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/QueryableIndexColumnCapabilitiesTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2020-08-12 02:07:17","commitOrder":3,"curCode":"  public void testMultiStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d2\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded().isTrue());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues().isTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d2\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues().isTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n  }\n","date":"2020-08-12 02:07:17","endLine":198,"groupId":"3903","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiStringColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/57/689a46cb0aeacb76bffbab1c5ec1799a6b6c18.src","preCode":"  public void testMultiStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d2\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues().isTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d2\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues().isTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/QueryableIndexColumnCapabilitiesTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"c72f96a4babdf5055912bb0fb5eb2236cfe0ef23","commitMessage":"@@@fix bug with expressions on sparse string realtime columns without explicit null valued rows (#10248)\n\n* fix bug with realtime expressions on sparse string columns\n\n* fix test\n\n* add comment back\n\n* push capabilities for dimensions to dimension indexers since they know things\n\n* style\n\n* style\n\n* fixes\n\n* getting a bit carried away\n\n* missed one\n\n* fix it\n\n* benchmark build fix\n\n* review stuffs\n\n* javadoc and comments\n\n* add comment\n\n* more strict check\n\n* fix missed usaged of impl instead of interface","date":"2020-08-12 02:07:17","modifiedFileCount":"30","status":"M","submitter":"Clint Wylie"},{"authorTime":"2020-08-14 05:55:32","codes":[{"authorDate":"2020-08-14 05:55:32","commitOrder":4,"curCode":"  public void testStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d1\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded().isMaybeTrue());\n    Assert.assertTrue(caps.isDictionaryEncoded().isTrue());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    \r\n    Assert.assertTrue(caps.hasMultipleValues().isUnknown());\n    \r\n    \r\n    Assert.assertFalse(\n        ColumnCapabilitiesImpl.snapshot(\n            caps,\n            IndexMergerV9.DIMENSION_CAPABILITY_MERGE_LOGIC\n        ).hasMultipleValues().isMaybeTrue()\n    );\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.hasNulls().isUnknown());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d1\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(caps.hasMultipleValues().isMaybeTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertFalse(caps.hasNulls().isMaybeTrue());\n  }\n","date":"2020-08-14 05:55:32","endLine":261,"groupId":"105713","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testStringColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cd/fc1b149781df4cd00f4a6cae2dc0b291c2d36f.src","preCode":"  public void testStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d1\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded().isMaybeTrue());\n    Assert.assertTrue(caps.isDictionaryEncoded().isTrue());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    \r\n    Assert.assertTrue(caps.hasMultipleValues().isUnknown());\n    \r\n    \r\n    Assert.assertFalse(\n        ColumnCapabilitiesImpl.snapshot(caps, IndexMergerV9.DIMENSION_CAPABILITY_MERGE_LOGIC)\n                              .hasMultipleValues()\n                              .isMaybeTrue()\n    );\n    Assert.assertFalse(caps.hasSpatialIndexes());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d1\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(caps.hasMultipleValues().isMaybeTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/QueryableIndexColumnCapabilitiesTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"M"},{"authorDate":"2020-08-14 05:55:32","commitOrder":4,"curCode":"  public void testMultiStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d2\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded().isTrue());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues().isTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertTrue(caps.hasNulls().isUnknown());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d2\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues().isTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n    Assert.assertFalse(caps.hasNulls().isMaybeTrue());\n  }\n","date":"2020-08-14 05:55:32","endLine":319,"groupId":"105713","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testMultiStringColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cd/fc1b149781df4cd00f4a6cae2dc0b291c2d36f.src","preCode":"  public void testMultiStringColumn()\n  {\n    ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d2\");\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded().isTrue());\n    Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues().isTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n\n    caps = MMAP_INDEX.getColumnHolder(\"d2\").getCapabilities();\n    Assert.assertEquals(ValueType.STRING, caps.getType());\n    Assert.assertTrue(caps.hasBitmapIndexes());\n    Assert.assertTrue(caps.isDictionaryEncoded().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue());\n    Assert.assertTrue(caps.hasMultipleValues().isTrue());\n    Assert.assertFalse(caps.hasSpatialIndexes());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/QueryableIndexColumnCapabilitiesTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"M"}],"commitId":"e053348f747f6428e14362e4844e916f8790b726","commitMessage":"@@@add hasNulls to ColumnCapabilities.  ColumnAnalysis (#10219)\n\n* add isNullable to ColumnCapabilities.  ColumnAnalysis\n\n* better builder\n\n* fix segment metadata queries in integration tests\n\n* adjustments\n\n* cleanup\n\n* fix spotbugs\n\n* treat unknown as true in segmentmetadata\n\n* rename to hasNulls.  add docs\n\n* fixup\n\n* test the dim indexer selector isNull fix for numeric columns\n\n* fixes\n\n* oof","date":"2020-08-14 05:55:32","modifiedFileCount":"29","status":"M","submitter":"Clint Wylie"}]
