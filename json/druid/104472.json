[{"authorTime":"2020-02-17 05:00:12","codes":[{"authorDate":"2020-02-17 05:00:12","commitOrder":1,"curCode":"  public void testLargeEstimatedNumSplits() throws Exception\n  {\n    final NoopTask task = NoopTask.create();\n    final TaskActionClient actionClient = createActionClient(task);\n    final TaskToolbox toolbox = createTaskToolbox(task, actionClient);\n    final TestPhaseRunner runner = new TestPhaseRunner(\n        toolbox,\n        \"supervisorTaskId\",\n        \"groupId\",\n        AbstractParallelIndexSupervisorTaskTest.DEFAULT_TUNING_CONFIG_FOR_PARALLEL_INDEXING,\n        getIndexingServiceClient(),\n        10,\n        12\n    );\n    Assert.assertEquals(TaskState.SUCCESS, runner.run());\n  }\n","date":"2020-02-17 05:00:12","endLine":94,"groupId":"15756","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLargeEstimatedNumSplits","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5f/c07fa70e3d408d452ba78c48c6efc75bc9431a.src","preCode":"  public void testLargeEstimatedNumSplits() throws Exception\n  {\n    final NoopTask task = NoopTask.create();\n    final TaskActionClient actionClient = createActionClient(task);\n    final TaskToolbox toolbox = createTaskToolbox(task, actionClient);\n    final TestPhaseRunner runner = new TestPhaseRunner(\n        toolbox,\n        \"supervisorTaskId\",\n        \"groupId\",\n        AbstractParallelIndexSupervisorTaskTest.DEFAULT_TUNING_CONFIG_FOR_PARALLEL_INDEXING,\n        getIndexingServiceClient(),\n        10,\n        12\n    );\n    Assert.assertEquals(TaskState.SUCCESS, runner.run());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexPhaseRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"},{"authorDate":"2020-02-17 05:00:12","commitOrder":1,"curCode":"  public void testSmallEstimatedNumSplits() throws Exception\n  {\n    final NoopTask task = NoopTask.create();\n    final TaskActionClient actionClient = createActionClient(task);\n    final TaskToolbox toolbox = createTaskToolbox(task, actionClient);\n    final TestPhaseRunner runner = new TestPhaseRunner(\n        toolbox,\n        \"supervisorTaskId\",\n        \"groupId\",\n        AbstractParallelIndexSupervisorTaskTest.DEFAULT_TUNING_CONFIG_FOR_PARALLEL_INDEXING,\n        getIndexingServiceClient(),\n        10,\n        8\n    );\n    Assert.assertEquals(TaskState.SUCCESS, runner.run());\n  }\n","date":"2020-02-17 05:00:12","endLine":112,"groupId":"15756","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSmallEstimatedNumSplits","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5f/c07fa70e3d408d452ba78c48c6efc75bc9431a.src","preCode":"  public void testSmallEstimatedNumSplits() throws Exception\n  {\n    final NoopTask task = NoopTask.create();\n    final TaskActionClient actionClient = createActionClient(task);\n    final TaskToolbox toolbox = createTaskToolbox(task, actionClient);\n    final TestPhaseRunner runner = new TestPhaseRunner(\n        toolbox,\n        \"supervisorTaskId\",\n        \"groupId\",\n        AbstractParallelIndexSupervisorTaskTest.DEFAULT_TUNING_CONFIG_FOR_PARALLEL_INDEXING,\n        getIndexingServiceClient(),\n        10,\n        8\n    );\n    Assert.assertEquals(TaskState.SUCCESS, runner.run());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexPhaseRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"}],"commitId":"3bb9e7e53af4d5926995931e05294f83f756d85c","commitMessage":"@@@Inject things instead of subclassing everything for parallel task testing (#9353)\n\n* Inject things instead of subclassing everything for parallel task\ntesting\n\n* javadoc\n\n* fix compilation\n\n* fix wrong merge\n\n* Address comments\n","date":"2020-02-17 05:00:12","modifiedFileCount":"33","status":"B","submitter":"Jihoon Son"},{"authorTime":"2020-08-27 08:08:12","codes":[{"authorDate":"2020-08-27 08:08:12","commitOrder":2,"curCode":"  public void testLargeEstimatedNumSplits() throws Exception\n  {\n    final NoopTask task = NoopTask.create();\n    final TaskActionClient actionClient = createActionClient(task);\n    final TaskToolbox toolbox = createTaskToolbox(task, actionClient);\n    final TestPhaseRunner runner = new TestPhaseRunner(\n        toolbox,\n        \"supervisorTaskId\",\n        \"groupId\",\n        AbstractParallelIndexSupervisorTaskTest.DEFAULT_TUNING_CONFIG_FOR_PARALLEL_INDEXING,\n        10,\n        12\n    );\n    Assert.assertEquals(TaskState.SUCCESS, runner.run());\n  }\n","date":"2020-08-27 08:08:12","endLine":92,"groupId":"104472","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLargeEstimatedNumSplits","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/95/df2e2b98ce52c74c4a5b07f2286773a03f9073.src","preCode":"  public void testLargeEstimatedNumSplits() throws Exception\n  {\n    final NoopTask task = NoopTask.create();\n    final TaskActionClient actionClient = createActionClient(task);\n    final TaskToolbox toolbox = createTaskToolbox(task, actionClient);\n    final TestPhaseRunner runner = new TestPhaseRunner(\n        toolbox,\n        \"supervisorTaskId\",\n        \"groupId\",\n        AbstractParallelIndexSupervisorTaskTest.DEFAULT_TUNING_CONFIG_FOR_PARALLEL_INDEXING,\n        getIndexingServiceClient(),\n        10,\n        12\n    );\n    Assert.assertEquals(TaskState.SUCCESS, runner.run());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexPhaseRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2020-08-27 08:08:12","commitOrder":2,"curCode":"  public void testSmallEstimatedNumSplits() throws Exception\n  {\n    final NoopTask task = NoopTask.create();\n    final TaskActionClient actionClient = createActionClient(task);\n    final TaskToolbox toolbox = createTaskToolbox(task, actionClient);\n    final TestPhaseRunner runner = new TestPhaseRunner(\n        toolbox,\n        \"supervisorTaskId\",\n        \"groupId\",\n        AbstractParallelIndexSupervisorTaskTest.DEFAULT_TUNING_CONFIG_FOR_PARALLEL_INDEXING,\n        10,\n        8\n    );\n    Assert.assertEquals(TaskState.SUCCESS, runner.run());\n  }\n","date":"2020-08-27 08:08:12","endLine":109,"groupId":"104472","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSmallEstimatedNumSplits","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/95/df2e2b98ce52c74c4a5b07f2286773a03f9073.src","preCode":"  public void testSmallEstimatedNumSplits() throws Exception\n  {\n    final NoopTask task = NoopTask.create();\n    final TaskActionClient actionClient = createActionClient(task);\n    final TaskToolbox toolbox = createTaskToolbox(task, actionClient);\n    final TestPhaseRunner runner = new TestPhaseRunner(\n        toolbox,\n        \"supervisorTaskId\",\n        \"groupId\",\n        AbstractParallelIndexSupervisorTaskTest.DEFAULT_TUNING_CONFIG_FOR_PARALLEL_INDEXING,\n        getIndexingServiceClient(),\n        10,\n        8\n    );\n    Assert.assertEquals(TaskState.SUCCESS, runner.run());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexPhaseRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"f82fd22fa7de175200b7127c34c2eb2900bf7317","commitMessage":"@@@Move tools for indexing to TaskToolbox instead of injecting them in constructor (#10308)\n\n* Move tools for indexing to TaskToolbox instead of injecting them in constructor\n\n* oops.  other changes\n\n* fix test\n\n* unnecessary new file\n\n* fix test\n\n* fix build","date":"2020-08-27 08:08:12","modifiedFileCount":"67","status":"M","submitter":"Jihoon Son"}]
