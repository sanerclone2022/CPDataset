[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec, new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView);\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        databaseSegmentManager,\n        baseView,\n        metadataRuleManager,\n        curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector()\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":511,"groupId":"15897","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setupView","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/0e/52e668e57497f5ff3050efea812388548a1386.src","preCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec, new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView);\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        databaseSegmentManager,\n        baseView,\n        metadataRuleManager,\n        curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector()\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/CuratorDruidCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":419,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec, new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView\n    );\n\n    baseView.start();\n  }\n","date":"2018-08-31 00:56:26","endLine":336,"groupId":"15897","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setupViews","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ec/67833e504aa55bee404833597ba74771c3aea2.src","preCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec, new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView\n    );\n\n    baseView.start();\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CoordinatorServerViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-02-21 03:56:23","codes":[{"authorDate":"2019-02-21 03:56:23","commitOrder":2,"curCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        databaseSegmentManager,\n        baseView,\n        metadataRuleManager,\n        curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector()\n    );\n  }\n","date":"2019-02-21 03:56:23","endLine":525,"groupId":"15897","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setupView","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/94/fecdb4d787195308d301a200bb3a23b52c5089.src","preCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView);\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        databaseSegmentManager,\n        baseView,\n        metadataRuleManager,\n        curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector()\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/CuratorDruidCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":432,"status":"M"},{"authorDate":"2019-02-21 03:56:23","commitOrder":2,"curCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","date":"2019-02-21 03:56:23","endLine":336,"groupId":"15897","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setupViews","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f6/e26989eadca81e3e7ebe7a63aa3ebff7ab2ed6.src","preCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView\n    );\n\n    baseView.start();\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CoordinatorServerViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"M"}],"commitId":"dd34691004ca87128e775136ac99be404191f897","commitMessage":"@@@Coordinator await initialization before finishing startup (#6847)\n\n* Curator server inventory await initialization\n\n* address comments\n\n* print exception object in log\n\n* remove throws ISE\n\n* cachingCost awaitInitialization default to false\n","date":"2019-02-21 03:56:23","modifiedFileCount":"6","status":"M","submitter":"Mingming Qiu"},{"authorTime":"2019-02-21 03:56:23","codes":[{"authorDate":"2019-07-17 22:18:48","commitOrder":3,"curCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        segmentsMetadata,\n        baseView,\n        metadataRuleManager,\n        curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector()\n    );\n  }\n","date":"2019-07-17 22:18:48","endLine":537,"groupId":"15897","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setupView","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/eb/3b25b6899f111cb04563dad3fc8b0bf48fb4a6.src","preCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        databaseSegmentManager,\n        baseView,\n        metadataRuleManager,\n        curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector()\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/CuratorDruidCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":444,"status":"M"},{"authorDate":"2019-02-21 03:56:23","commitOrder":3,"curCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","date":"2019-02-21 03:56:23","endLine":336,"groupId":"15897","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setupViews","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f6/e26989eadca81e3e7ebe7a63aa3ebff7ab2ed6.src","preCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CoordinatorServerViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"N"}],"commitId":"ceb969903f06a72d669bb55ab83223bddb5355ee","commitMessage":"@@@Refactor SQLMetadataSegmentManager; Change contract of REST met? (#7653)\n\n* Refactor SQLMetadataSegmentManager; Change contract of REST methods in DataSourcesResource\n\n* Style fixes\n\n* Unused imports\n\n* Fix tests\n\n* Fix style\n\n* Comments\n\n* Comment fix\n\n* Remove unresolvable Javadoc references; address comments\n\n* Add comments to ImmutableDruidDataSource\n\n* Merge with master\n\n* Fix bad web-console merge\n\n* Fixes in api-reference.md\n\n* Rename in DruidCoordinatorRuntimeParams\n\n* Fix compilation\n\n* Residual changes\n","date":"2019-07-17 22:18:48","modifiedFileCount":"77","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-02-21 03:56:23","codes":[{"authorDate":"2019-10-16 13:57:42","commitOrder":4,"curCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        segmentsMetadata,\n        baseView,\n        metadataRuleManager,\n        curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector(),\n        null\n    );\n  }\n","date":"2019-10-16 13:57:42","endLine":553,"groupId":"15897","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setupView","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/36/1355226bdb42e8d4a1ee149851bcb9253370ff.src","preCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        segmentsMetadata,\n        baseView,\n        metadataRuleManager,\n        curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector()\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/CuratorDruidCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":459,"status":"M"},{"authorDate":"2019-02-21 03:56:23","commitOrder":4,"curCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","date":"2019-02-21 03:56:23","endLine":336,"groupId":"15897","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setupViews","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f6/e26989eadca81e3e7ebe7a63aa3ebff7ab2ed6.src","preCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CoordinatorServerViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"N"}],"commitId":"4046c86d62192c812cea87188dd17e745fb83b04","commitMessage":"@@@Stateful auto compaction (#8573)\n\n* Stateful auto compaction\n\n* javaodc\n\n* add removed test back\n\n* fix test\n\n* adding indexSpec to compactionState\n\n* fix build\n\n* add lastCompactionState\n\n* address comments\n\n* extract CompactionState\n\n* fix doc\n\n* fix build and test\n\n* Add a task context to store compaction state; add javadoc\n\n* fix it test\n","date":"2019-10-16 13:57:42","modifiedFileCount":"69","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-02-21 03:56:23","codes":[{"authorDate":"2020-01-28 03:24:29","commitOrder":5,"curCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        segmentsMetadataManager,\n        baseView,\n        metadataRuleManager,\n        curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector(),\n        null\n    );\n  }\n","date":"2020-01-28 03:24:29","endLine":552,"groupId":"15897","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setupView","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c4/4c0d8d3fb36cab628f1d1f56eacf8899d19a5b.src","preCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        segmentsMetadata,\n        baseView,\n        metadataRuleManager,\n        curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector(),\n        null\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/CuratorDruidCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":458,"status":"M"},{"authorDate":"2019-02-21 03:56:23","commitOrder":5,"curCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","date":"2019-02-21 03:56:23","endLine":336,"groupId":"15897","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setupViews","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f6/e26989eadca81e3e7ebe7a63aa3ebff7ab2ed6.src","preCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CoordinatorServerViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"N"}],"commitId":"b9186f8f9ff2ff52aceda42bc5f24ffd47a7d17e","commitMessage":"@@@Reconcile terminology and method naming to 'used/unused segments'; Rename MetadataSegmentManager to MetadataSegmentsManager (#7306)\n\n* Reconcile terminology and method naming to 'used/unused segments'; Don't use terms 'enable/disable data source'; Rename MetadataSegmentManager to MetadataSegments; Make REST API methods which mark segments as used/unused to return server error instead of an empty response in case of error\n\n* Fix brace\n\n* Import order\n\n* Rename withKillDataSourceWhitelist to withSpecificDataSourcesToKill\n\n* Fix tests\n\n* Fix tests by adding proper methods without interval parameters to IndexerMetadataStorageCoordinator instead of hacking with Intervals.ETERNITY\n\n* More aligned names of DruidCoordinatorHelpers.  rename several CoordinatorDynamicConfig parameters\n\n* Rename ClientCompactTaskQuery to ClientCompactionTaskQuery for consistency with CompactionTask; ClientCompactQueryTuningConfig to ClientCompactionTaskQueryTuningConfig\n\n* More variable and method renames\n\n* Rename MetadataSegments to SegmentsMetadata\n\n* Javadoc update\n\n* Simplify SegmentsMetadata.getUnusedSegmentIntervals().  more javadocs\n\n* Update Javadoc of VersionedIntervalTimeline.iterateAllObjects()\n\n* Reorder imports\n\n* Rename SegmentsMetadata.tryMark... methods to mark... and make them to return boolean and the numbers of segments changed and relay exceptions to callers\n\n* Complete merge\n\n* Add CollectionUtils.newTreeSet(); Refactor DruidCoordinatorRuntimeParams creation in tests\n\n* Remove MetadataSegmentManager\n\n* Rename millisLagSinceCoordinatorBecomesLeaderBeforeCanMarkAsUnusedOvershadowedSegments to leadingTimeMillisBeforeCanMarkAsUnusedOvershadowedSegments\n\n* Fix tests.  refactor DruidCluster creation in tests into DruidClusterBuilder\n\n* Fix inspections\n\n* Fix SQLMetadataSegmentManagerEmptyTest and rename it to SqlSegmentsMetadataEmptyTest\n\n* Rename SegmentsAndMetadata to SegmentsAndCommitMetadata to reduce the similarity with SegmentsMetadata; Rename some methods\n\n* Rename DruidCoordinatorHelper to CoordinatorDuty.  refactor DruidCoordinator\n\n* Unused import\n\n* Optimize imports\n\n* Rename IndexerSQLMetadataStorageCoordinator.getDataSourceMetadata() to retrieveDataSourceMetadata()\n\n* Unused import\n\n* Update terminology in datasource-view.tsx\n\n* Fix label in datasource-view.spec.tsx.snap\n\n* Fix lint errors in datasource-view.tsx\n\n* Doc improvements\n\n* Another attempt to please TSLint\n\n* Another attempt to please TSLint\n\n* Style fixes\n\n* Fix IndexerSQLMetadataStorageCoordinator.createUsedSegmentsSqlQueryForIntervals() (wrong merge)\n\n* Try to fix docs build issue\n\n* Javadoc and spelling fixes\n\n* Rename SegmentsMetadata to SegmentsMetadataManager.  address other comments\n\n* Address more comments\n","date":"2020-01-28 03:24:29","modifiedFileCount":"127","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-02-21 03:56:23","codes":[{"authorDate":"2020-10-27 13:35:59","commitOrder":6,"curCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        segmentsMetadataManager,\n        baseView,\n        metadataRuleManager,\n        () -> curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector(),\n        null,\n        ZkEnablementConfig.ENABLED\n    );\n  }\n","date":"2020-10-27 13:35:59","endLine":555,"groupId":"15897","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setupView","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/dd/382e31a65f4424c3dfc692c10fbddcfc4a6802.src","preCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        segmentsMetadataManager,\n        baseView,\n        metadataRuleManager,\n        curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector(),\n        null\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/CuratorDruidCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":460,"status":"M"},{"authorDate":"2019-02-21 03:56:23","commitOrder":6,"curCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","date":"2019-02-21 03:56:23","endLine":336,"groupId":"15897","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setupViews","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f6/e26989eadca81e3e7ebe7a63aa3ebff7ab2ed6.src","preCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CoordinatorServerViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"N"}],"commitId":"ee136303bb561d02dcfc8e4cd7f7b7af907e4e28","commitMessage":"@@@optionally disable all of hardcoded zookeeper use (#9507)\n\n* optionally disable all of hardcoded zookeeper use\n\n* fix DruidCoordinatorTest compilation\n\n* fix test in DruidCoordinatorTest\n\n* fix strict compilation\n\nCo-authored-by: Himanshu Gupta <fill email>","date":"2020-10-27 13:35:59","modifiedFileCount":"22","status":"M","submitter":"Himanshu"},{"authorTime":"2019-02-21 03:56:23","codes":[{"authorDate":"2021-04-21 08:10:43","commitOrder":7,"curCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        segmentsMetadataManager,\n        baseView,\n        metadataRuleManager,\n        () -> curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector(),\n        null,\n        ZkEnablementConfig.ENABLED\n    );\n  }\n","date":"2021-04-21 08:10:43","endLine":560,"groupId":"15897","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"setupView","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a8/deb667dd0593142792f87eb0e25006165a317b.src","preCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        segmentsMetadataManager,\n        baseView,\n        metadataRuleManager,\n        () -> curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector(),\n        null,\n        ZkEnablementConfig.ENABLED\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/CuratorDruidCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":464,"status":"M"},{"authorDate":"2019-02-21 03:56:23","commitOrder":7,"curCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","date":"2019-02-21 03:56:23","endLine":336,"groupId":"15897","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setupViews","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f6/e26989eadca81e3e7ebe7a63aa3ebff7ab2ed6.src","preCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CoordinatorServerViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"N"}],"commitId":"6d2b5cdd7e080401bce64d352e3a65788ff110c4","commitMessage":"@@@Add feature to automatically remove audit logs based on retention period (#11084)\n\n* add docs\n\n* add impl\n\n* fix checkstyle\n\n* fix test\n\n* add test\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix test\n\n* Address comments\n\n* Address comments\n\n* fix spelling\n\n* fix docs","date":"2021-04-21 08:10:43","modifiedFileCount":"13","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2019-02-21 03:56:23","codes":[{"authorDate":"2021-08-19 12:54:11","commitOrder":8,"curCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        segmentsMetadataManager,\n        baseView,\n        metadataRuleManager,\n        () -> curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        null,\n        new CoordinatorCustomDutyGroups(ImmutableSet.of()),\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector(),\n        null,\n        ZkEnablementConfig.ENABLED\n    );\n  }\n","date":"2021-08-19 12:54:11","endLine":570,"groupId":"10388","id":15,"instanceNumber":1,"isCurCommit":1,"methodName":"setupView","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f8/304085a2d56f254bfe98bf5610c9ebff38c6d8.src","preCode":"  private void setupView() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    serverView = new CoordinatorServerView(baseView, new CoordinatorSegmentWatcherConfig());\n\n    baseView.start();\n\n    sourceLoadQueuePeon.start();\n    destinationLoadQueuePeon.start();\n\n    coordinator = new DruidCoordinator(\n        druidCoordinatorConfig,\n        new ZkPathsConfig()\n        {\n\n          @Override\n          public String getBase()\n          {\n            return \"druid\";\n          }\n        },\n        configManager,\n        segmentsMetadataManager,\n        baseView,\n        metadataRuleManager,\n        () -> curator,\n        new NoopServiceEmitter(),\n        scheduledExecutorFactory,\n        null,\n        null,\n        new NoopServiceAnnouncer()\n        {\n          @Override\n          public void announce(DruidNode node)\n          {\n            \r\n            leaderAnnouncerLatch.countDown();\n          }\n\n          @Override\n          public void unannounce(DruidNode node)\n          {\n            leaderUnannouncerLatch.countDown();\n          }\n        },\n        druidNode,\n        loadManagementPeons,\n        null,\n        null,\n        new CostBalancerStrategyFactory(),\n        EasyMock.createNiceMock(LookupCoordinatorManager.class),\n        new TestDruidLeaderSelector(),\n        null,\n        ZkEnablementConfig.ENABLED\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/CuratorDruidCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":473,"status":"M"},{"authorDate":"2019-02-21 03:56:23","commitOrder":8,"curCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","date":"2019-02-21 03:56:23","endLine":336,"groupId":"10388","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"setupViews","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f6/e26989eadca81e3e7ebe7a63aa3ebff7ab2ed6.src","preCode":"  private void setupViews() throws Exception\n  {\n    baseView = new BatchServerInventoryView(\n        zkPathsConfig,\n        curator,\n        jsonMapper,\n        Predicates.alwaysTrue()\n    )\n    {\n      @Override\n      public void registerSegmentCallback(Executor exec, final SegmentCallback callback)\n      {\n        super.registerSegmentCallback(\n            exec,\n            new SegmentCallback()\n            {\n              @Override\n              public CallbackAction segmentAdded(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentAdded(server, segment);\n                segmentAddedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentRemoved(DruidServerMetadata server, DataSegment segment)\n              {\n                CallbackAction res = callback.segmentRemoved(server, segment);\n                segmentRemovedLatch.countDown();\n                return res;\n              }\n\n              @Override\n              public CallbackAction segmentViewInitialized()\n              {\n                CallbackAction res = callback.segmentViewInitialized();\n                segmentViewInitLatch.countDown();\n                return res;\n              }\n            }\n        );\n      }\n    };\n\n    overlordServerView = new CoordinatorServerView(\n        baseView,\n        new CoordinatorSegmentWatcherConfig()\n    );\n\n    baseView.start();\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CoordinatorServerViewTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"N"}],"commitId":"ce4dd48bb8b33110f66737820aec936f536fa75c","commitMessage":"@@@Support custom coordinator duties (#11601)\n\n* impl\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix checkstyle\n\n* add test\n\n* add test\n\n* add test\n\n* add integration tests\n\n* add integration tests\n\n* add more docs\n\n* address comments\n\n* address comments\n\n* address comments\n\n* add test\n\n* fix checkstyle\n\n* fix test","date":"2021-08-19 12:54:11","modifiedFileCount":"5","status":"M","submitter":"Maytas Monsereenusorn"}]
