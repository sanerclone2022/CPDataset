[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testAggregateRowsWithExtraction()\n  {\n    CardinalityAggregator agg = new CardinalityAggregator(\n        \"billy\",\n        dimInfoListWithExtraction,\n        true\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListWithExtraction, agg);\n    }\n    Assert.assertEquals(9.0, (Double) rowAggregatorFactory.finalizeComputation(agg.get()), 0.05);\n\n    CardinalityAggregator agg2 = new CardinalityAggregator(\n        \"billy\",\n        dimInfoListConstantVal,\n        true\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListConstantVal, agg2);\n    }\n    Assert.assertEquals(3.0, (Double) rowAggregatorFactory.finalizeComputation(agg2.get()), 0.05);\n  }\n","date":"2018-08-31 00:56:26","endLine":595,"groupId":"13918","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAggregateRowsWithExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/37/d016a36089fefc2f33226524fc35196a1364de.src","preCode":"  public void testAggregateRowsWithExtraction()\n  {\n    CardinalityAggregator agg = new CardinalityAggregator(\n        \"billy\",\n        dimInfoListWithExtraction,\n        true\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListWithExtraction, agg);\n    }\n    Assert.assertEquals(9.0, (Double) rowAggregatorFactory.finalizeComputation(agg.get()), 0.05);\n\n    CardinalityAggregator agg2 = new CardinalityAggregator(\n        \"billy\",\n        dimInfoListConstantVal,\n        true\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListConstantVal, agg2);\n    }\n    Assert.assertEquals(3.0, (Double) rowAggregatorFactory.finalizeComputation(agg2.get()), 0.05);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/cardinality/CardinalityAggregatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":574,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testAggregateValuesWithExtraction()\n  {\n    CardinalityAggregator agg = new CardinalityAggregator(\n        \"billy\",\n        dimInfoListWithExtraction,\n        false\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListWithExtraction, agg);\n    }\n    Assert.assertEquals(7.0, (Double) valueAggregatorFactory.finalizeComputation(agg.get()), 0.05);\n\n    CardinalityAggregator agg2 = new CardinalityAggregator(\n        \"billy\",\n        dimInfoListConstantVal,\n        false\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListConstantVal, agg2);\n    }\n    Assert.assertEquals(1.0, (Double) valueAggregatorFactory.finalizeComputation(agg2.get()), 0.05);\n  }\n","date":"2018-08-31 00:56:26","endLine":619,"groupId":"1472","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAggregateValuesWithExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/37/d016a36089fefc2f33226524fc35196a1364de.src","preCode":"  public void testAggregateValuesWithExtraction()\n  {\n    CardinalityAggregator agg = new CardinalityAggregator(\n        \"billy\",\n        dimInfoListWithExtraction,\n        false\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListWithExtraction, agg);\n    }\n    Assert.assertEquals(7.0, (Double) valueAggregatorFactory.finalizeComputation(agg.get()), 0.05);\n\n    CardinalityAggregator agg2 = new CardinalityAggregator(\n        \"billy\",\n        dimInfoListConstantVal,\n        false\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListConstantVal, agg2);\n    }\n    Assert.assertEquals(1.0, (Double) valueAggregatorFactory.finalizeComputation(agg2.get()), 0.05);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/cardinality/CardinalityAggregatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":598,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-10-10 21:07:56","codes":[{"authorDate":"2018-10-10 21:07:56","commitOrder":2,"curCode":"  public void testAggregateRowsWithExtraction()\n  {\n    CardinalityAggregator agg = new CardinalityAggregator(\n        dimInfoListWithExtraction,\n        true\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListWithExtraction, agg);\n    }\n    Assert.assertEquals(9.0, (Double) rowAggregatorFactory.finalizeComputation(agg.get()), 0.05);\n\n    CardinalityAggregator agg2 = new CardinalityAggregator(\n        dimInfoListConstantVal,\n        true\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListConstantVal, agg2);\n    }\n    Assert.assertEquals(3.0, (Double) rowAggregatorFactory.finalizeComputation(agg2.get()), 0.05);\n  }\n","date":"2018-10-10 21:07:56","endLine":585,"groupId":"13918","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAggregateRowsWithExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1a/563c72ac0c7c17e343fbcf7c1d01db3ca4664b.src","preCode":"  public void testAggregateRowsWithExtraction()\n  {\n    CardinalityAggregator agg = new CardinalityAggregator(\n        \"billy\",\n        dimInfoListWithExtraction,\n        true\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListWithExtraction, agg);\n    }\n    Assert.assertEquals(9.0, (Double) rowAggregatorFactory.finalizeComputation(agg.get()), 0.05);\n\n    CardinalityAggregator agg2 = new CardinalityAggregator(\n        \"billy\",\n        dimInfoListConstantVal,\n        true\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListConstantVal, agg2);\n    }\n    Assert.assertEquals(3.0, (Double) rowAggregatorFactory.finalizeComputation(agg2.get()), 0.05);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/cardinality/CardinalityAggregatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":566,"status":"M"},{"authorDate":"2018-10-10 21:07:56","commitOrder":2,"curCode":"  public void testAggregateValuesWithExtraction()\n  {\n    CardinalityAggregator agg = new CardinalityAggregator(\n        dimInfoListWithExtraction,\n        false\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListWithExtraction, agg);\n    }\n    Assert.assertEquals(7.0, (Double) valueAggregatorFactory.finalizeComputation(agg.get()), 0.05);\n\n    CardinalityAggregator agg2 = new CardinalityAggregator(\n        dimInfoListConstantVal,\n        false\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListConstantVal, agg2);\n    }\n    Assert.assertEquals(1.0, (Double) valueAggregatorFactory.finalizeComputation(agg2.get()), 0.05);\n  }\n","date":"2018-10-10 21:07:56","endLine":607,"groupId":"6726","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAggregateValuesWithExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1a/563c72ac0c7c17e343fbcf7c1d01db3ca4664b.src","preCode":"  public void testAggregateValuesWithExtraction()\n  {\n    CardinalityAggregator agg = new CardinalityAggregator(\n        \"billy\",\n        dimInfoListWithExtraction,\n        false\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListWithExtraction, agg);\n    }\n    Assert.assertEquals(7.0, (Double) valueAggregatorFactory.finalizeComputation(agg.get()), 0.05);\n\n    CardinalityAggregator agg2 = new CardinalityAggregator(\n        \"billy\",\n        dimInfoListConstantVal,\n        false\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListConstantVal, agg2);\n    }\n    Assert.assertEquals(1.0, (Double) valueAggregatorFactory.finalizeComputation(agg2.get()), 0.05);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/cardinality/CardinalityAggregatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":588,"status":"M"}],"commitId":"09126c021a786ea13656e8a390732021a8e61b94","commitMessage":"@@@Remove Aggregator.clone() methods (#6437)\n\n* Remove Aggregator.clone() methods\n\n* Remove CardinalityAggregator.name\n","date":"2018-10-10 21:07:56","modifiedFileCount":"15","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":3,"curCode":"  public void testAggregateRowsWithExtraction()\n  {\n    CardinalityAggregator agg = new CardinalityAggregator(\n        dimInfoListWithExtraction,\n        true\n    );\n    for (int i = 0; i < VALUES1.size(); ++i) {\n      aggregate(selectorListWithExtraction, agg);\n    }\n    Assert.assertEquals(9.0, (Double) rowAggregatorFactory.finalizeComputation(agg.get()), 0.05);\n\n    CardinalityAggregator agg2 = new CardinalityAggregator(\n        dimInfoListConstantVal,\n        true\n    );\n    for (int i = 0; i < VALUES1.size(); ++i) {\n      aggregate(selectorListConstantVal, agg2);\n    }\n    Assert.assertEquals(3.0, (Double) rowAggregatorFactory.finalizeComputation(agg2.get()), 0.05);\n  }\n","date":"2019-08-23 18:13:54","endLine":567,"groupId":"106996","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testAggregateRowsWithExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/65/631c5ccedd114913aea0328cb7303aa1d821ca.src","preCode":"  public void testAggregateRowsWithExtraction()\n  {\n    CardinalityAggregator agg = new CardinalityAggregator(\n        dimInfoListWithExtraction,\n        true\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListWithExtraction, agg);\n    }\n    Assert.assertEquals(9.0, (Double) rowAggregatorFactory.finalizeComputation(agg.get()), 0.05);\n\n    CardinalityAggregator agg2 = new CardinalityAggregator(\n        dimInfoListConstantVal,\n        true\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListConstantVal, agg2);\n    }\n    Assert.assertEquals(3.0, (Double) rowAggregatorFactory.finalizeComputation(agg2.get()), 0.05);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/cardinality/CardinalityAggregatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":548,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":3,"curCode":"  public void testAggregateValuesWithExtraction()\n  {\n    CardinalityAggregator agg = new CardinalityAggregator(\n        dimInfoListWithExtraction,\n        false\n    );\n    for (int i = 0; i < VALUES1.size(); ++i) {\n      aggregate(selectorListWithExtraction, agg);\n    }\n    Assert.assertEquals(7.0, (Double) valueAggregatorFactory.finalizeComputation(agg.get()), 0.05);\n\n    CardinalityAggregator agg2 = new CardinalityAggregator(\n        dimInfoListConstantVal,\n        false\n    );\n    for (int i = 0; i < VALUES1.size(); ++i) {\n      aggregate(selectorListConstantVal, agg2);\n    }\n    Assert.assertEquals(1.0, (Double) valueAggregatorFactory.finalizeComputation(agg2.get()), 0.05);\n  }\n","date":"2019-08-23 18:13:54","endLine":589,"groupId":"106996","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testAggregateValuesWithExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/65/631c5ccedd114913aea0328cb7303aa1d821ca.src","preCode":"  public void testAggregateValuesWithExtraction()\n  {\n    CardinalityAggregator agg = new CardinalityAggregator(\n        dimInfoListWithExtraction,\n        false\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListWithExtraction, agg);\n    }\n    Assert.assertEquals(7.0, (Double) valueAggregatorFactory.finalizeComputation(agg.get()), 0.05);\n\n    CardinalityAggregator agg2 = new CardinalityAggregator(\n        dimInfoListConstantVal,\n        false\n    );\n    for (int i = 0; i < values1.size(); ++i) {\n      aggregate(selectorListConstantVal, agg2);\n    }\n    Assert.assertEquals(1.0, (Double) valueAggregatorFactory.finalizeComputation(agg2.get()), 0.05);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/cardinality/CardinalityAggregatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":570,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
