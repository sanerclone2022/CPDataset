[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void configure(Binder binder)\n  {\n    createBindingChoices(binder, TYPE);\n    super.configure(binder);\n\n    binder.bind(MetadataStorage.class).toProvider(NoopMetadataStorageProvider.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageProvider.class))\n            .addBinding(TYPE)\n            .to(DerbyMetadataStorageProvider.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageConnector.class))\n            .addBinding(TYPE)\n            .to(DerbyConnector.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(SQLMetadataConnector.class))\n            .addBinding(TYPE)\n            .to(DerbyConnector.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageActionHandlerFactory.class))\n            .addBinding(TYPE)\n            .to(DerbyMetadataStorageActionHandlerFactory.class)\n            .in(LazySingleton.class);\n  }\n","date":"2018-08-31 00:56:26","endLine":71,"groupId":"2544","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"configure","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/40/9c95eb6da43ef4a8452b5e8545bba008180008.src","preCode":"  public void configure(Binder binder)\n  {\n    createBindingChoices(binder, TYPE);\n    super.configure(binder);\n\n    binder.bind(MetadataStorage.class).toProvider(NoopMetadataStorageProvider.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageProvider.class))\n            .addBinding(TYPE)\n            .to(DerbyMetadataStorageProvider.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageConnector.class))\n            .addBinding(TYPE)\n            .to(DerbyConnector.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(SQLMetadataConnector.class))\n            .addBinding(TYPE)\n            .to(DerbyConnector.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageActionHandlerFactory.class))\n            .addBinding(TYPE)\n            .to(DerbyMetadataStorageActionHandlerFactory.class)\n            .in(LazySingleton.class);\n  }\n","realPath":"server/src/main/java/org/apache/druid/metadata/storage/derby/DerbyMetadataStorageDruidModule.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void configure(Binder binder)\n  {\n    super.configure(binder);\n\n    JsonConfigProvider.bind(binder, \"druid.metadata.postgres.ssl\", PostgreSQLConnector.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(MetadataStorageProvider.class))\n        .addBinding(TYPE)\n        .to(NoopMetadataStorageProvider.class)\n        .in(LazySingleton.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(MetadataStorageConnector.class))\n        .addBinding(TYPE)\n        .to(PostgreSQLConnector.class)\n        .in(LazySingleton.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(SQLMetadataConnector.class))\n        .addBinding(TYPE)\n        .to(PostgreSQLConnector.class)\n        .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageActionHandlerFactory.class))\n            .addBinding(TYPE)\n            .to(PostgreSQLMetadataStorageActionHandlerFactory.class)\n            .in(LazySingleton.class);\n  }\n","date":"2018-08-31 00:56:26","endLine":85,"groupId":"2544","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6e/aca55fd38fbde8c2ebc81b736c74fa9037a219.src","preCode":"  public void configure(Binder binder)\n  {\n    super.configure(binder);\n\n    JsonConfigProvider.bind(binder, \"druid.metadata.postgres.ssl\", PostgreSQLConnector.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(MetadataStorageProvider.class))\n        .addBinding(TYPE)\n        .to(NoopMetadataStorageProvider.class)\n        .in(LazySingleton.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(MetadataStorageConnector.class))\n        .addBinding(TYPE)\n        .to(PostgreSQLConnector.class)\n        .in(LazySingleton.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(SQLMetadataConnector.class))\n        .addBinding(TYPE)\n        .to(PostgreSQLConnector.class)\n        .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageActionHandlerFactory.class))\n            .addBinding(TYPE)\n            .to(PostgreSQLMetadataStorageActionHandlerFactory.class)\n            .in(LazySingleton.class);\n  }\n","realPath":"extensions-core/postgresql-metadata-storage/src/main/java/org/apache/druid/metadata/storage/postgresql/PostgreSQLMetadataStorageModule.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-09-01 05:18:29","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void configure(Binder binder)\n  {\n    createBindingChoices(binder, TYPE);\n    super.configure(binder);\n\n    binder.bind(MetadataStorage.class).toProvider(NoopMetadataStorageProvider.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageProvider.class))\n            .addBinding(TYPE)\n            .to(DerbyMetadataStorageProvider.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageConnector.class))\n            .addBinding(TYPE)\n            .to(DerbyConnector.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(SQLMetadataConnector.class))\n            .addBinding(TYPE)\n            .to(DerbyConnector.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageActionHandlerFactory.class))\n            .addBinding(TYPE)\n            .to(DerbyMetadataStorageActionHandlerFactory.class)\n            .in(LazySingleton.class);\n  }\n","date":"2018-08-31 00:56:26","endLine":71,"groupId":"2544","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"configure","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/40/9c95eb6da43ef4a8452b5e8545bba008180008.src","preCode":"  public void configure(Binder binder)\n  {\n    createBindingChoices(binder, TYPE);\n    super.configure(binder);\n\n    binder.bind(MetadataStorage.class).toProvider(NoopMetadataStorageProvider.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageProvider.class))\n            .addBinding(TYPE)\n            .to(DerbyMetadataStorageProvider.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageConnector.class))\n            .addBinding(TYPE)\n            .to(DerbyConnector.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(SQLMetadataConnector.class))\n            .addBinding(TYPE)\n            .to(DerbyConnector.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageActionHandlerFactory.class))\n            .addBinding(TYPE)\n            .to(DerbyMetadataStorageActionHandlerFactory.class)\n            .in(LazySingleton.class);\n  }\n","realPath":"server/src/main/java/org/apache/druid/metadata/storage/derby/DerbyMetadataStorageDruidModule.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"},{"authorDate":"2018-09-01 05:18:29","commitOrder":2,"curCode":"  public void configure(Binder binder)\n  {\n    super.configure(binder);\n\n    JsonConfigProvider.bind(binder, \"druid.metadata.postgres.ssl\", PostgreSQLConnectorConfig.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(MetadataStorageProvider.class))\n        .addBinding(TYPE)\n        .to(NoopMetadataStorageProvider.class)\n        .in(LazySingleton.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(MetadataStorageConnector.class))\n        .addBinding(TYPE)\n        .to(PostgreSQLConnector.class)\n        .in(LazySingleton.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(SQLMetadataConnector.class))\n        .addBinding(TYPE)\n        .to(PostgreSQLConnector.class)\n        .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageActionHandlerFactory.class))\n            .addBinding(TYPE)\n            .to(PostgreSQLMetadataStorageActionHandlerFactory.class)\n            .in(LazySingleton.class);\n  }\n","date":"2018-09-01 05:18:29","endLine":85,"groupId":"2544","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6c/bb09b8cc9c633a4eae1a9e5c0b874b6d47ada4.src","preCode":"  public void configure(Binder binder)\n  {\n    super.configure(binder);\n\n    JsonConfigProvider.bind(binder, \"druid.metadata.postgres.ssl\", PostgreSQLConnector.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(MetadataStorageProvider.class))\n        .addBinding(TYPE)\n        .to(NoopMetadataStorageProvider.class)\n        .in(LazySingleton.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(MetadataStorageConnector.class))\n        .addBinding(TYPE)\n        .to(PostgreSQLConnector.class)\n        .in(LazySingleton.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(SQLMetadataConnector.class))\n        .addBinding(TYPE)\n        .to(PostgreSQLConnector.class)\n        .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageActionHandlerFactory.class))\n            .addBinding(TYPE)\n            .to(PostgreSQLMetadataStorageActionHandlerFactory.class)\n            .in(LazySingleton.class);\n  }\n","realPath":"extensions-core/postgresql-metadata-storage/src/main/java/org/apache/druid/metadata/storage/postgresql/PostgreSQLMetadataStorageModule.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"d0fb83760eefdf9269dd0e81ca83bbf52fb139d9","commitMessage":"@@@Fix PostgreSQLConnectorConfig binding (#6273)\n\n","date":"2018-09-01 05:18:29","modifiedFileCount":"1","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2019-05-09 03:56:30","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":3,"curCode":"  public void configure(Binder binder)\n  {\n    createBindingChoices(binder, TYPE);\n    super.configure(binder);\n\n    binder.bind(MetadataStorage.class).toProvider(NoopMetadataStorageProvider.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageProvider.class))\n            .addBinding(TYPE)\n            .to(DerbyMetadataStorageProvider.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageConnector.class))\n            .addBinding(TYPE)\n            .to(DerbyConnector.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(SQLMetadataConnector.class))\n            .addBinding(TYPE)\n            .to(DerbyConnector.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageActionHandlerFactory.class))\n            .addBinding(TYPE)\n            .to(DerbyMetadataStorageActionHandlerFactory.class)\n            .in(LazySingleton.class);\n  }\n","date":"2018-08-31 00:56:26","endLine":71,"groupId":"102431","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"configure","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/40/9c95eb6da43ef4a8452b5e8545bba008180008.src","preCode":"  public void configure(Binder binder)\n  {\n    createBindingChoices(binder, TYPE);\n    super.configure(binder);\n\n    binder.bind(MetadataStorage.class).toProvider(NoopMetadataStorageProvider.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageProvider.class))\n            .addBinding(TYPE)\n            .to(DerbyMetadataStorageProvider.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageConnector.class))\n            .addBinding(TYPE)\n            .to(DerbyConnector.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(SQLMetadataConnector.class))\n            .addBinding(TYPE)\n            .to(DerbyConnector.class)\n            .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageActionHandlerFactory.class))\n            .addBinding(TYPE)\n            .to(DerbyMetadataStorageActionHandlerFactory.class)\n            .in(LazySingleton.class);\n  }\n","realPath":"server/src/main/java/org/apache/druid/metadata/storage/derby/DerbyMetadataStorageDruidModule.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"},{"authorDate":"2019-05-09 03:56:30","commitOrder":3,"curCode":"  public void configure(Binder binder)\n  {\n    super.configure(binder);\n\n    JsonConfigProvider.bind(binder, \"druid.metadata.postgres.ssl\", PostgreSQLConnectorConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.metadata.postgres\", PostgreSQLTablesConfig.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(MetadataStorageProvider.class))\n        .addBinding(TYPE)\n        .to(NoopMetadataStorageProvider.class)\n        .in(LazySingleton.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(MetadataStorageConnector.class))\n        .addBinding(TYPE)\n        .to(PostgreSQLConnector.class)\n        .in(LazySingleton.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(SQLMetadataConnector.class))\n        .addBinding(TYPE)\n        .to(PostgreSQLConnector.class)\n        .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageActionHandlerFactory.class))\n            .addBinding(TYPE)\n            .to(PostgreSQLMetadataStorageActionHandlerFactory.class)\n            .in(LazySingleton.class);\n  }\n","date":"2019-05-09 03:56:30","endLine":94,"groupId":"102431","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"configure","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/95/06eddd04bf108d31199f6d37b9b53dcd3ba5ff.src","preCode":"  public void configure(Binder binder)\n  {\n    super.configure(binder);\n\n    JsonConfigProvider.bind(binder, \"druid.metadata.postgres.ssl\", PostgreSQLConnectorConfig.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(MetadataStorageProvider.class))\n        .addBinding(TYPE)\n        .to(NoopMetadataStorageProvider.class)\n        .in(LazySingleton.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(MetadataStorageConnector.class))\n        .addBinding(TYPE)\n        .to(PostgreSQLConnector.class)\n        .in(LazySingleton.class);\n\n    PolyBind\n        .optionBinder(binder, Key.get(SQLMetadataConnector.class))\n        .addBinding(TYPE)\n        .to(PostgreSQLConnector.class)\n        .in(LazySingleton.class);\n\n    PolyBind.optionBinder(binder, Key.get(MetadataStorageActionHandlerFactory.class))\n            .addBinding(TYPE)\n            .to(PostgreSQLMetadataStorageActionHandlerFactory.class)\n            .in(LazySingleton.class);\n  }\n","realPath":"extensions-core/postgresql-metadata-storage/src/main/java/org/apache/druid/metadata/storage/postgresql/PostgreSQLMetadataStorageModule.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"0ef435a16c511181bb97f61b230eeadf50d63535","commitMessage":"@@@add postgresql meta db table schema configuration property (#7137) (#7183)\n\n* add postgresql meta db table schema configuration property (#7137)\n\nIf the postgresql db schema changes.  you must set the configuration\nvalues.\nYou do not need to set it if there is no change from the default schema\n'public'.\ndruid.metadata.postgres.dbTableSchema=public\n\n* create postgresql metadb table schema configuration property (#7137)\nIf the postgresql db schema changes.  you must set the configuration\nvalues.\nYou do not need to set it if there is no change from the default schema\n'public'.\ndruid.metadata.postgres.dbTableSchema=public\ncheck PostgreSQLTablesConfig.java\n\n* modify postgresql readme file. - metadb table schema (#7137)\nIf the postgresql db schema changes.  you must set the configuration\nvalues.\nYou do not need to set it if there is no change from the default schema\n'public'.\ndruid.metadata.postgres.dbTableSchema=public\ncheck PostgreSQLTablesConfig.java\n","date":"2019-05-09 03:56:30","modifiedFileCount":"3","status":"M","submitter":"Jinseon Lee"}]
