[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private Map<String, BasicAuthenticatorUser> fetchUserMapFromCoordinator(String prefix, boolean isInit)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            return tryFetchUserMapFromCoordinator(prefix);\n          },\n          e -> true,\n          commonCacheConfig.getMaxSyncRetries()\n      );\n    }\n    catch (Exception e) {\n      LOG.makeAlert(e, \"Encountered exception while fetching user map for authenticator [%s]\", prefix).emit();\n      if (isInit) {\n        if (commonCacheConfig.getCacheDirectory() != null) {\n          try {\n            LOG.info(\"Attempting to load user map snapshot from disk.\");\n            return loadUserMapFromDisk(prefix);\n          }\n          catch (Exception e2) {\n            e2.addSuppressed(e);\n            LOG.makeAlert(e2, \"Encountered exception while loading user map snapshot for authenticator [%s]\", prefix)\n               .emit();\n          }\n        }\n      }\n      return null;\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":214,"groupId":"14668","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fetchUserMapFromCoordinator","params":"(Stringprefix@booleanisInit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/03/5568feb547b6366b8c25212eb4b5135fa04486.src","preCode":"  private Map<String, BasicAuthenticatorUser> fetchUserMapFromCoordinator(String prefix, boolean isInit)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            return tryFetchUserMapFromCoordinator(prefix);\n          },\n          e -> true,\n          commonCacheConfig.getMaxSyncRetries()\n      );\n    }\n    catch (Exception e) {\n      LOG.makeAlert(e, \"Encountered exception while fetching user map for authenticator [%s]\", prefix).emit();\n      if (isInit) {\n        if (commonCacheConfig.getCacheDirectory() != null) {\n          try {\n            LOG.info(\"Attempting to load user map snapshot from disk.\");\n            return loadUserMapFromDisk(prefix);\n          }\n          catch (Exception e2) {\n            e2.addSuppressed(e);\n            LOG.makeAlert(e2, \"Encountered exception while loading user map snapshot for authenticator [%s]\", prefix)\n               .emit();\n          }\n        }\n      }\n      return null;\n    }\n  }\n","realPath":"extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authentication/db/cache/CoordinatorPollingBasicAuthenticatorCacheManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private UserAndRoleMap fetchUserAndRoleMapFromCoordinator(String prefix, boolean isInit)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            return tryFetchMapsFromCoordinator(prefix);\n          },\n          e -> true,\n          commonCacheConfig.getMaxSyncRetries()\n      );\n    }\n    catch (Exception e) {\n      LOG.makeAlert(e, \"Encountered exception while fetching user and role map for authorizer [%s]\", prefix).emit();\n      if (isInit) {\n        if (commonCacheConfig.getCacheDirectory() != null) {\n          try {\n            LOG.info(\"Attempting to load user map snapshot from disk.\");\n            return loadUserAndRoleMapFromDisk(prefix);\n          }\n          catch (Exception e2) {\n            e2.addSuppressed(e);\n            LOG.makeAlert(e2, \"Encountered exception while loading user-role map snapshot for authorizer [%s]\", prefix)\n               .emit();\n          }\n        }\n      }\n      return null;\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":247,"groupId":"14668","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fetchUserAndRoleMapFromCoordinator","params":"(Stringprefix@booleanisInit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c3/115c3a24ba2a8ed4a105db081983151ff66474.src","preCode":"  private UserAndRoleMap fetchUserAndRoleMapFromCoordinator(String prefix, boolean isInit)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            return tryFetchMapsFromCoordinator(prefix);\n          },\n          e -> true,\n          commonCacheConfig.getMaxSyncRetries()\n      );\n    }\n    catch (Exception e) {\n      LOG.makeAlert(e, \"Encountered exception while fetching user and role map for authorizer [%s]\", prefix).emit();\n      if (isInit) {\n        if (commonCacheConfig.getCacheDirectory() != null) {\n          try {\n            LOG.info(\"Attempting to load user map snapshot from disk.\");\n            return loadUserAndRoleMapFromDisk(prefix);\n          }\n          catch (Exception e2) {\n            e2.addSuppressed(e);\n            LOG.makeAlert(e2, \"Encountered exception while loading user-role map snapshot for authorizer [%s]\", prefix)\n               .emit();\n          }\n        }\n      }\n      return null;\n    }\n  }\n","realPath":"extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authorization/db/cache/CoordinatorPollingBasicAuthorizerCacheManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-10-09 08:08:27","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  private Map<String, BasicAuthenticatorUser> fetchUserMapFromCoordinator(String prefix, boolean isInit)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            return tryFetchUserMapFromCoordinator(prefix);\n          },\n          e -> true,\n          commonCacheConfig.getMaxSyncRetries()\n      );\n    }\n    catch (Exception e) {\n      LOG.makeAlert(e, \"Encountered exception while fetching user map for authenticator [%s]\", prefix).emit();\n      if (isInit) {\n        if (commonCacheConfig.getCacheDirectory() != null) {\n          try {\n            LOG.info(\"Attempting to load user map snapshot from disk.\");\n            return loadUserMapFromDisk(prefix);\n          }\n          catch (Exception e2) {\n            e2.addSuppressed(e);\n            LOG.makeAlert(e2, \"Encountered exception while loading user map snapshot for authenticator [%s]\", prefix)\n               .emit();\n          }\n        }\n      }\n      return null;\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":214,"groupId":"103076","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fetchUserMapFromCoordinator","params":"(Stringprefix@booleanisInit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/03/5568feb547b6366b8c25212eb4b5135fa04486.src","preCode":"  private Map<String, BasicAuthenticatorUser> fetchUserMapFromCoordinator(String prefix, boolean isInit)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            return tryFetchUserMapFromCoordinator(prefix);\n          },\n          e -> true,\n          commonCacheConfig.getMaxSyncRetries()\n      );\n    }\n    catch (Exception e) {\n      LOG.makeAlert(e, \"Encountered exception while fetching user map for authenticator [%s]\", prefix).emit();\n      if (isInit) {\n        if (commonCacheConfig.getCacheDirectory() != null) {\n          try {\n            LOG.info(\"Attempting to load user map snapshot from disk.\");\n            return loadUserMapFromDisk(prefix);\n          }\n          catch (Exception e2) {\n            e2.addSuppressed(e);\n            LOG.makeAlert(e2, \"Encountered exception while loading user map snapshot for authenticator [%s]\", prefix)\n               .emit();\n          }\n        }\n      }\n      return null;\n    }\n  }\n","realPath":"extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authentication/db/cache/CoordinatorPollingBasicAuthenticatorCacheManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"N"},{"authorDate":"2019-10-09 08:08:27","commitOrder":2,"curCode":"  private UserAndRoleMap fetchUserAndRoleMapFromCoordinator(String prefix, boolean isInit)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            return tryFetchUserMapsFromCoordinator(prefix);\n          },\n          e -> true,\n          commonCacheConfig.getMaxSyncRetries()\n      );\n    }\n    catch (Exception e) {\n      LOG.makeAlert(e, \"Encountered exception while fetching user and role map for authorizer [%s]\", prefix).emit();\n      if (isInit) {\n        if (commonCacheConfig.getCacheDirectory() != null) {\n          try {\n            LOG.info(\"Attempting to load user map snapshot from disk.\");\n            return loadUserAndRoleMapFromDisk(prefix);\n          }\n          catch (Exception e2) {\n            e2.addSuppressed(e);\n            LOG.makeAlert(e2, \"Encountered exception while loading user-role map snapshot for authorizer [%s]\", prefix)\n               .emit();\n          }\n        }\n      }\n      return null;\n    }\n  }\n","date":"2019-10-09 08:08:27","endLine":352,"groupId":"103076","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"fetchUserAndRoleMapFromCoordinator","params":"(Stringprefix@booleanisInit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d4/58d977a490bf94aeb8c63bd63770efbec4c111.src","preCode":"  private UserAndRoleMap fetchUserAndRoleMapFromCoordinator(String prefix, boolean isInit)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            return tryFetchMapsFromCoordinator(prefix);\n          },\n          e -> true,\n          commonCacheConfig.getMaxSyncRetries()\n      );\n    }\n    catch (Exception e) {\n      LOG.makeAlert(e, \"Encountered exception while fetching user and role map for authorizer [%s]\", prefix).emit();\n      if (isInit) {\n        if (commonCacheConfig.getCacheDirectory() != null) {\n          try {\n            LOG.info(\"Attempting to load user map snapshot from disk.\");\n            return loadUserAndRoleMapFromDisk(prefix);\n          }\n          catch (Exception e2) {\n            e2.addSuppressed(e);\n            LOG.makeAlert(e2, \"Encountered exception while loading user-role map snapshot for authorizer [%s]\", prefix)\n               .emit();\n          }\n        }\n      }\n      return null;\n    }\n  }\n","realPath":"extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authorization/db/cache/CoordinatorPollingBasicAuthorizerCacheManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":324,"status":"M"}],"commitId":"18758f52283696ba12ab0763260909b7ca734f1e","commitMessage":"@@@Support LDAP authentication/authorization (#6972)\n\n* Support LDAP authentication/authorization\n\n* fixed integration-tests\n\n* fixed Travis CI build errors related to druid-security module\n\n* fixed failing test\n\n* fixed failing test header\n\n* added comments.  force build\n\n* fixes for strict compilation spotbugs checks\n\n* removed authenticator rolling credential update feature\n\n* removed escalator rolling credential update feature\n\n* fixed teamcity inspection deprecated API usage error\n\n* fixed checkstyle execution error.  removed unused import\n\n* removed cached config as part of removing authenticator rolling credential update feature\n\n* removed config bundle entity as part of removing authenticator rolling credential update feature\n\n* refactored ldao configuration\n\n* added support for SSLContext configuration and TLSCertificateChecker\n\n* removed check to return authentication failure when user has no group assigned.  will be checked and handled by the authorizer\n\n* Separate out authorizer checks between metadata-backed store user and LDAP user/groups\n\n* refactored BasicSecuritySSLSocketFactory usage to fix strict compilation spotbugs checks\n\n* fixes build issue\n\n* final review comments updates\n\n* final review comments updates\n\n* fixed LGTM and spellcheck alerts\n\n* Fixed Avatica auth failure error message check\n\n* Updated metadata credentials validator exception message string.  replaced DB with metadata store\n","date":"2019-10-09 08:08:27","modifiedFileCount":"44","status":"M","submitter":"Mohammad J. Khan"}]
