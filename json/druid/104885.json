[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testWithoutCache() throws IOException\n  {\n    createAndUpdateTable(TABLE_NAME_1);\n    final SqlFirehoseFactory factory =\n        new SqlFirehoseFactory(\n            SQLLIST1,\n            0L,\n            null,\n            null,\n            null,\n            true,\n            derbyFirehoseConnector,\n            mapper\n        );\n\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithoutCache\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows, SQLLIST1);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 0);\n    dropTable(TABLE_NAME_1);\n  }\n","date":"2018-08-31 00:56:26","endLine":257,"groupId":"14978","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithoutCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/27/f19d02de564e08539c2e9938e5c7a9f9433a12.src","preCode":"  public void testWithoutCache() throws IOException\n  {\n    createAndUpdateTable(TABLE_NAME_1);\n    final SqlFirehoseFactory factory =\n        new SqlFirehoseFactory(\n            SQLLIST1,\n            0L,\n            null,\n            null,\n            null,\n            true,\n            derbyFirehoseConnector,\n            mapper\n        );\n\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithoutCache\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows, SQLLIST1);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 0);\n    dropTable(TABLE_NAME_1);\n  }\n","realPath":"server/src/test/java/org/apache/druid/segment/realtime/firehose/SqlFirehoseFactoryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testWithCacheAndFetch() throws IOException\n  {\n    createAndUpdateTable(TABLE_NAME_1);\n    createAndUpdateTable(TABLE_NAME_2);\n\n    final SqlFirehoseFactory factory = new\n        SqlFirehoseFactory(\n        SQLLIST2,\n        null,\n        null,\n        0L,\n        null,\n        true,\n        derbyFirehoseConnector,\n        mapper\n    );\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithCacheAndFetch\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows, SQLLIST2);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 2);\n    dropTable(TABLE_NAME_1);\n    dropTable(TABLE_NAME_2);\n\n  }\n","date":"2018-08-31 00:56:26","endLine":291,"groupId":"13011","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithCacheAndFetch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/27/f19d02de564e08539c2e9938e5c7a9f9433a12.src","preCode":"  public void testWithCacheAndFetch() throws IOException\n  {\n    createAndUpdateTable(TABLE_NAME_1);\n    createAndUpdateTable(TABLE_NAME_2);\n\n    final SqlFirehoseFactory factory = new\n        SqlFirehoseFactory(\n        SQLLIST2,\n        null,\n        null,\n        0L,\n        null,\n        true,\n        derbyFirehoseConnector,\n        mapper\n    );\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithCacheAndFetch\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows, SQLLIST2);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 2);\n    dropTable(TABLE_NAME_1);\n    dropTable(TABLE_NAME_2);\n\n  }\n","realPath":"server/src/test/java/org/apache/druid/segment/realtime/firehose/SqlFirehoseFactoryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2020-06-10 03:55:20","codes":[{"authorDate":"2020-06-10 03:55:20","commitOrder":2,"curCode":"  public void testWithoutCache() throws IOException\n  {\n    derbyConnector = derbyConnectorRule.getConnector();\n    SqlTestUtils testUtils = new SqlTestUtils(derbyConnector);\n    testUtils.createAndUpdateTable(TABLE_NAME_1, 10);\n    final SqlFirehoseFactory factory =\n        new SqlFirehoseFactory(\n            SQLLIST1,\n            0L,\n            null,\n            null,\n            null,\n            true,\n            testUtils.getDerbyFirehoseConnector(),\n            mapper\n        );\n\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithoutCache\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows, SQLLIST1);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 0);\n    testUtils.dropTable(TABLE_NAME_1);\n  }\n","date":"2020-06-10 03:55:20","endLine":202,"groupId":"104885","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithoutCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/18/9aa4984aacd19dbc7deed3c15a017114e23744.src","preCode":"  public void testWithoutCache() throws IOException\n  {\n    createAndUpdateTable(TABLE_NAME_1);\n    final SqlFirehoseFactory factory =\n        new SqlFirehoseFactory(\n            SQLLIST1,\n            0L,\n            null,\n            null,\n            null,\n            true,\n            derbyFirehoseConnector,\n            mapper\n        );\n\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithoutCache\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows, SQLLIST1);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 0);\n    dropTable(TABLE_NAME_1);\n  }\n","realPath":"server/src/test/java/org/apache/druid/segment/realtime/firehose/SqlFirehoseFactoryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"},{"authorDate":"2020-06-10 03:55:20","commitOrder":2,"curCode":"  public void testWithCacheAndFetch() throws IOException\n  {\n    derbyConnector = derbyConnectorRule.getConnector();\n    SqlTestUtils testUtils = new SqlTestUtils(derbyConnector);\n    testUtils.createAndUpdateTable(TABLE_NAME_1, 10);\n    testUtils.createAndUpdateTable(TABLE_NAME_2, 10);\n\n    final SqlFirehoseFactory factory = new\n        SqlFirehoseFactory(\n        SQLLIST2,\n        null,\n        null,\n        0L,\n        null,\n        true,\n        testUtils.getDerbyFirehoseConnector(),\n        mapper\n    );\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithCacheAndFetch\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows, SQLLIST2);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 2);\n    testUtils.dropTable(TABLE_NAME_1);\n    testUtils.dropTable(TABLE_NAME_2);\n\n  }\n","date":"2020-06-10 03:55:20","endLine":238,"groupId":"104885","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithCacheAndFetch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/18/9aa4984aacd19dbc7deed3c15a017114e23744.src","preCode":"  public void testWithCacheAndFetch() throws IOException\n  {\n    createAndUpdateTable(TABLE_NAME_1);\n    createAndUpdateTable(TABLE_NAME_2);\n\n    final SqlFirehoseFactory factory = new\n        SqlFirehoseFactory(\n        SQLLIST2,\n        null,\n        null,\n        0L,\n        null,\n        true,\n        derbyFirehoseConnector,\n        mapper\n    );\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithCacheAndFetch\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows, SQLLIST2);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 2);\n    dropTable(TABLE_NAME_1);\n    dropTable(TABLE_NAME_2);\n\n  }\n","realPath":"server/src/test/java/org/apache/druid/segment/realtime/firehose/SqlFirehoseFactoryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"}],"commitId":"17cf8ea8f2cc6a4fe8e2c6e29e3b9f066a6ccc2b","commitMessage":"@@@Add Sql InputSource (#9449)\n\n* Add Sql InputSource\n\n* Add spelling\n\n* Use separate DruidModule\n\n* Change module name\n\n* Fix docs\n\n* Use sqltestutils for tests\n\n* Add additional tests\n\n* Fix inspection\n\n* Add module test\n\n* Fix md in docs\n\n* Remove annotation\n\nCo-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>","date":"2020-06-10 03:55:20","modifiedFileCount":"9","status":"M","submitter":"Atul Mohan"}]
