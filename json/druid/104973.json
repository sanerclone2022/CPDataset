[{"authorTime":"2018-10-15 11:37:37","codes":[{"authorDate":"2018-10-15 11:37:37","commitOrder":1,"curCode":"  public void testSimple()\n  {\n    List<JSONPathFieldSpec> fields = new ArrayList<>();\n    final Parser<String, Object> jsonParser = new JSONPathParser(new JSONPathSpec(true, fields), null);\n    final Map<String, Object> jsonMap = jsonParser.parseToMap(json);\n    Assert.assertEquals(\n        \"jsonMap\",\n        ImmutableMap.of(\"one\", \"foo\", \"two\", ImmutableList.of(\"bar\", \"baz\"), \"three\", \"qux\"),\n        jsonMap\n    );\n  }\n","date":"2018-10-15 11:37:37","endLine":66,"groupId":"2181","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b4/ee2849daac46bf188c8f2f201937a776edd0f0.src","preCode":"  public void testSimple()\n  {\n    List<JSONPathFieldSpec> fields = new ArrayList<>();\n    final Parser<String, Object> jsonParser = new JSONPathParser(new JSONPathSpec(true, fields), null);\n    final Map<String, Object> jsonMap = jsonParser.parseToMap(json);\n    Assert.assertEquals(\n        \"jsonMap\",\n        ImmutableMap.of(\"one\", \"foo\", \"two\", ImmutableList.of(\"bar\", \"baz\"), \"three\", \"qux\"),\n        jsonMap\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/java/util/common/parsers/JSONPathParserTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2018-10-15 11:37:37","commitOrder":1,"curCode":"  public void testWithWhackyCharacters()\n  {\n    List<JSONPathFieldSpec> fields = new ArrayList<>();\n    final Parser<String, Object> jsonParser = new JSONPathParser(new JSONPathSpec(true, fields), null);\n    final Map<String, Object> jsonMap = jsonParser.parseToMap(whackyCharacterJson);\n    Assert.assertEquals(\n        \"jsonMap\",\n        ImmutableMap.of(\"one\", \"foo?\"),\n        jsonMap\n    );\n  }\n","date":"2018-10-15 11:37:37","endLine":92,"groupId":"2181","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithWhackyCharacters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b4/ee2849daac46bf188c8f2f201937a776edd0f0.src","preCode":"  public void testWithWhackyCharacters()\n  {\n    List<JSONPathFieldSpec> fields = new ArrayList<>();\n    final Parser<String, Object> jsonParser = new JSONPathParser(new JSONPathSpec(true, fields), null);\n    final Map<String, Object> jsonMap = jsonParser.parseToMap(whackyCharacterJson);\n    Assert.assertEquals(\n        \"jsonMap\",\n        ImmutableMap.of(\"one\", \"foo?\"),\n        jsonMap\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/java/util/common/parsers/JSONPathParserTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"}],"commitId":"84598fba3b283cbfd6a5addd2602c7b12ba8c00c","commitMessage":"@@@combine druid-api.  druid-common.  java-util into druid-core (#6443)\n\n* combine druid-api.  druid-common.  java-util\n\n* spacing\n","date":"2018-10-15 11:37:37","modifiedFileCount":"0","status":"B","submitter":"Clint Wylie"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testSimple()\n  {\n    List<JSONPathFieldSpec> fields = new ArrayList<>();\n    final Parser<String, Object> jsonParser = new JSONPathParser(new JSONPathSpec(true, fields), null);\n    final Map<String, Object> jsonMap = jsonParser.parseToMap(JSON);\n    Assert.assertEquals(\n        \"jsonMap\",\n        ImmutableMap.of(\"one\", \"foo\", \"two\", ImmutableList.of(\"bar\", \"baz\"), \"three\", \"qux\"),\n        jsonMap\n    );\n  }\n","date":"2019-08-23 18:13:54","endLine":66,"groupId":"2181","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/02/38e6b11733d5ce16216ff3bdddb258d74e4c62.src","preCode":"  public void testSimple()\n  {\n    List<JSONPathFieldSpec> fields = new ArrayList<>();\n    final Parser<String, Object> jsonParser = new JSONPathParser(new JSONPathSpec(true, fields), null);\n    final Map<String, Object> jsonMap = jsonParser.parseToMap(json);\n    Assert.assertEquals(\n        \"jsonMap\",\n        ImmutableMap.of(\"one\", \"foo\", \"two\", ImmutableList.of(\"bar\", \"baz\"), \"three\", \"qux\"),\n        jsonMap\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/java/util/common/parsers/JSONPathParserTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testWithWhackyCharacters()\n  {\n    List<JSONPathFieldSpec> fields = new ArrayList<>();\n    final Parser<String, Object> jsonParser = new JSONPathParser(new JSONPathSpec(true, fields), null);\n    final Map<String, Object> jsonMap = jsonParser.parseToMap(WHACKY_CHARACTER_JSON);\n    Assert.assertEquals(\n        \"jsonMap\",\n        ImmutableMap.of(\"one\", \"foo?\"),\n        jsonMap\n    );\n  }\n","date":"2019-08-23 18:13:54","endLine":92,"groupId":"2181","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithWhackyCharacters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/02/38e6b11733d5ce16216ff3bdddb258d74e4c62.src","preCode":"  public void testWithWhackyCharacters()\n  {\n    List<JSONPathFieldSpec> fields = new ArrayList<>();\n    final Parser<String, Object> jsonParser = new JSONPathParser(new JSONPathSpec(true, fields), null);\n    final Map<String, Object> jsonMap = jsonParser.parseToMap(whackyCharacterJson);\n    Assert.assertEquals(\n        \"jsonMap\",\n        ImmutableMap.of(\"one\", \"foo?\"),\n        jsonMap\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/java/util/common/parsers/JSONPathParserTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"},{"authorTime":"2020-05-09 12:53:39","codes":[{"authorDate":"2020-05-09 12:53:39","commitOrder":3,"curCode":"  public void testSimple()\n  {\n    List<JSONPathFieldSpec> fields = new ArrayList<>();\n    final Parser<String, Object> jsonParser = new JSONPathParser(new JSONPathSpec(true, fields), null, false);\n    final Map<String, Object> jsonMap = jsonParser.parseToMap(JSON);\n    Assert.assertEquals(\n        \"jsonMap\",\n        ImmutableMap.of(\"one\", \"foo\", \"two\", ImmutableList.of(\"bar\", \"baz\"), \"three\", \"qux\"),\n        jsonMap\n    );\n  }\n","date":"2020-05-09 12:53:39","endLine":66,"groupId":"104973","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5d/2d7de3f7fadb8d216f90f1c65d73d1f77818ec.src","preCode":"  public void testSimple()\n  {\n    List<JSONPathFieldSpec> fields = new ArrayList<>();\n    final Parser<String, Object> jsonParser = new JSONPathParser(new JSONPathSpec(true, fields), null);\n    final Map<String, Object> jsonMap = jsonParser.parseToMap(JSON);\n    Assert.assertEquals(\n        \"jsonMap\",\n        ImmutableMap.of(\"one\", \"foo\", \"two\", ImmutableList.of(\"bar\", \"baz\"), \"three\", \"qux\"),\n        jsonMap\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/java/util/common/parsers/JSONPathParserTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2020-05-09 12:53:39","commitOrder":3,"curCode":"  public void testWithWhackyCharacters()\n  {\n    List<JSONPathFieldSpec> fields = new ArrayList<>();\n    final Parser<String, Object> jsonParser = new JSONPathParser(new JSONPathSpec(true, fields), null, false);\n    final Map<String, Object> jsonMap = jsonParser.parseToMap(WHACKY_CHARACTER_JSON);\n    Assert.assertEquals(\n        \"jsonMap\",\n        ImmutableMap.of(\"one\", \"foo?\"),\n        jsonMap\n    );\n  }\n","date":"2020-05-09 12:53:39","endLine":92,"groupId":"104973","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testWithWhackyCharacters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5d/2d7de3f7fadb8d216f90f1c65d73d1f77818ec.src","preCode":"  public void testWithWhackyCharacters()\n  {\n    List<JSONPathFieldSpec> fields = new ArrayList<>();\n    final Parser<String, Object> jsonParser = new JSONPathParser(new JSONPathSpec(true, fields), null);\n    final Map<String, Object> jsonMap = jsonParser.parseToMap(WHACKY_CHARACTER_JSON);\n    Assert.assertEquals(\n        \"jsonMap\",\n        ImmutableMap.of(\"one\", \"foo?\"),\n        jsonMap\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/java/util/common/parsers/JSONPathParserTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"28be107a1c18ef1fd9fd268c8b04e232efb63695","commitMessage":"@@@add flag to flattenSpec to keep null columns (#9814)\n\n* add flag to flattenSpec to keep null columns\n\n* remove changes to inputFormat interface\n\n* add comment\n\n* change comment message\n\n* update web console e2e test\n\n* move keepNullColmns to JSONParseSpec\n\n* fix merge conflicts\n\n* fix tests\n\n* set keepNullColumns to false by default\n\n* fix lgtm\n\n* change Boolean to boolean.  add keepNullColumns to hash.  add tests for keepKeepNullColumns false + true with no nuulul columns\n\n* Add equals verifier tests","date":"2020-05-09 12:53:39","modifiedFileCount":"41","status":"M","submitter":"mcbrewster"}]
