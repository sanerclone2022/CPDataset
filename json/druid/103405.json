[{"authorTime":"2019-11-23 02:49:16","codes":[{"authorDate":"2019-11-29 04:45:24","commitOrder":2,"curCode":"  public void configure(Binder binder)\n  {\n    \r\n    \r\n\n    final Configuration conf = new Configuration();\n\n    \r\n    conf.setClassLoader(getClass().getClassLoader());\n\n    \r\n    \r\n    ClassLoader currCtxCl = Thread.currentThread().getContextClassLoader();\n    try {\n      Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n      FileSystem.get(conf);\n    }\n    catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n    finally {\n      Thread.currentThread().setContextClassLoader(currCtxCl);\n    }\n\n    if (props != null) {\n      for (String propName : props.stringPropertyNames()) {\n        if (propName.startsWith(\"hadoop.\")) {\n          conf.set(propName.substring(\"hadoop.\".length()), props.getProperty(propName));\n        }\n      }\n    }\n\n    binder.bind(Configuration.class).toInstance(conf);\n  }\n","date":"2019-11-29 04:45:24","endLine":93,"groupId":"15630","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"configure","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e5/7995bd26f4fa4b905461d32f537261b6160e2d.src","preCode":"  public void configure(Binder binder)\n  {\n    \r\n    \r\n\n    final Configuration conf = new Configuration();\n\n    \r\n    conf.setClassLoader(getClass().getClassLoader());\n\n    \r\n    \r\n    ClassLoader currCtxCl = Thread.currentThread().getContextClassLoader();\n    try {\n      Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n      FileSystem.get(conf);\n    }\n    catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n    finally {\n      Thread.currentThread().setContextClassLoader(currCtxCl);\n    }\n\n    if (props != null) {\n      for (String propName : props.stringPropertyNames()) {\n        if (propName.startsWith(\"hadoop.\")) {\n          conf.set(propName.substring(\"hadoop.\".length()), props.getProperty(propName));\n        }\n      }\n    }\n\n    binder.bind(Configuration.class).toInstance(conf);\n  }\n","realPath":"extensions-core/orc-extensions/src/main/java/org/apache/druid/data/input/orc/OrcExtensionsModule.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2019-11-23 02:49:16","commitOrder":2,"curCode":"  public void configure(Binder binder)\n  {\n    \r\n    \r\n\n    final Configuration conf = new Configuration();\n\n    \r\n    conf.setClassLoader(getClass().getClassLoader());\n\n    \r\n    \r\n    ClassLoader currCtxCl = Thread.currentThread().getContextClassLoader();\n    try {\n      Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n      FileSystem.get(conf);\n    }\n    catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n    finally {\n      Thread.currentThread().setContextClassLoader(currCtxCl);\n    }\n\n    if (props != null) {\n      for (String propName : props.stringPropertyNames()) {\n        if (propName.startsWith(\"hadoop.\")) {\n          conf.set(propName.substring(\"hadoop.\".length()), props.getProperty(propName));\n        }\n      }\n    }\n\n    binder.bind(Configuration.class).toInstance(conf);\n  }\n","date":"2019-11-23 02:49:16","endLine":102,"groupId":"15630","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/dd/2cf4c34f824f8078c29203af1c02999a1d3719.src","preCode":"  public void configure(Binder binder)\n  {\n    \r\n    \r\n\n    final Configuration conf = new Configuration();\n\n    \r\n    conf.setClassLoader(getClass().getClassLoader());\n\n    \r\n    \r\n    ClassLoader currCtxCl = Thread.currentThread().getContextClassLoader();\n    try {\n      Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n      FileSystem.get(conf);\n    }\n    catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n    finally {\n      Thread.currentThread().setContextClassLoader(currCtxCl);\n    }\n\n    if (props != null) {\n      for (String propName : props.stringPropertyNames()) {\n        if (propName.startsWith(\"hadoop.\")) {\n          conf.set(propName.substring(\"hadoop.\".length()), props.getProperty(propName));\n        }\n      }\n    }\n\n    binder.bind(Configuration.class).toInstance(conf);\n  }\n","realPath":"extensions-core/parquet-extensions/src/main/java/org/apache/druid/data/input/parquet/ParquetExtensionsModule.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"NB"}],"commitId":"86e8903523fc3d2d177963d2f95fd56441605102","commitMessage":"@@@Support orc format for native batch ingestion (#8950)\n\n* Support orc format for native batch ingestion\n\n* fix pom and remove wrong comment\n\n* fix unnecessary condition check\n\n* use flatMap back to handle exception properly\n\n* move exceptionThrowingIterator to intermediateRowParsingReader\n\n* runtime\n","date":"2019-11-29 04:45:24","modifiedFileCount":"5","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-12-12 09:30:44","codes":[{"authorDate":"2019-12-12 09:30:44","commitOrder":3,"curCode":"  public void configure(Binder binder)\n  {\n    \r\n    \r\n\n    final Configuration conf = new Configuration();\n\n    \r\n    conf.setClassLoader(getClass().getClassLoader());\n\n    \r\n    \r\n    ClassLoader currCtxCl = Thread.currentThread().getContextClassLoader();\n    try {\n      Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n      FileSystem.get(conf);\n    }\n    catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n    finally {\n      Thread.currentThread().setContextClassLoader(currCtxCl);\n    }\n\n    if (props != null) {\n      for (String propName : props.stringPropertyNames()) {\n        if (propName.startsWith(\"hadoop.\")) {\n          conf.set(propName.substring(\"hadoop.\".length()), props.getProperty(propName));\n        }\n      }\n    }\n\n    binder.bind(Configuration.class).annotatedWith(Orc.class).toInstance(conf);\n  }\n","date":"2019-12-12 09:30:44","endLine":94,"groupId":"103405","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"configure","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/78/082cba5a82b28f407a3d4bea9224cfd1bfa76a.src","preCode":"  public void configure(Binder binder)\n  {\n    \r\n    \r\n\n    final Configuration conf = new Configuration();\n\n    \r\n    conf.setClassLoader(getClass().getClassLoader());\n\n    \r\n    \r\n    ClassLoader currCtxCl = Thread.currentThread().getContextClassLoader();\n    try {\n      Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n      FileSystem.get(conf);\n    }\n    catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n    finally {\n      Thread.currentThread().setContextClassLoader(currCtxCl);\n    }\n\n    if (props != null) {\n      for (String propName : props.stringPropertyNames()) {\n        if (propName.startsWith(\"hadoop.\")) {\n          conf.set(propName.substring(\"hadoop.\".length()), props.getProperty(propName));\n        }\n      }\n    }\n\n    binder.bind(Configuration.class).toInstance(conf);\n  }\n","realPath":"extensions-core/orc-extensions/src/main/java/org/apache/druid/data/input/orc/OrcExtensionsModule.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2019-12-12 09:30:44","commitOrder":3,"curCode":"  public void configure(Binder binder)\n  {\n    \r\n    \r\n\n    final Configuration conf = new Configuration();\n\n    \r\n    conf.setClassLoader(getClass().getClassLoader());\n\n    \r\n    \r\n    ClassLoader currCtxCl = Thread.currentThread().getContextClassLoader();\n    try {\n      Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n      FileSystem.get(conf);\n    }\n    catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n    finally {\n      Thread.currentThread().setContextClassLoader(currCtxCl);\n    }\n\n    if (props != null) {\n      for (String propName : props.stringPropertyNames()) {\n        if (propName.startsWith(\"hadoop.\")) {\n          conf.set(propName.substring(\"hadoop.\".length()), props.getProperty(propName));\n        }\n      }\n    }\n\n    binder.bind(Configuration.class).annotatedWith(Parquet.class).toInstance(conf);\n  }\n","date":"2019-12-12 09:30:44","endLine":103,"groupId":"103405","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/17/fe50d42870c7b9b240f290b2287bcaf38f6df0.src","preCode":"  public void configure(Binder binder)\n  {\n    \r\n    \r\n\n    final Configuration conf = new Configuration();\n\n    \r\n    conf.setClassLoader(getClass().getClassLoader());\n\n    \r\n    \r\n    ClassLoader currCtxCl = Thread.currentThread().getContextClassLoader();\n    try {\n      Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n      FileSystem.get(conf);\n    }\n    catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n    finally {\n      Thread.currentThread().setContextClassLoader(currCtxCl);\n    }\n\n    if (props != null) {\n      for (String propName : props.stringPropertyNames()) {\n        if (propName.startsWith(\"hadoop.\")) {\n          conf.set(propName.substring(\"hadoop.\".length()), props.getProperty(propName));\n        }\n      }\n    }\n\n    binder.bind(Configuration.class).toInstance(conf);\n  }\n","realPath":"extensions-core/parquet-extensions/src/main/java/org/apache/druid/data/input/parquet/ParquetExtensionsModule.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"66056b282620e82fa464d79b0f76b1687b92530e","commitMessage":"@@@Using annotation to distinguish Hadoop Configuration in each module (#9013)\n\n* Multibinding for NodeRole\n\n* Fix endpoints\n\n* fix doc\n\n* fix test\n\n* Using annotation to distinguish Hadoop Configuration in each module\n","date":"2019-12-12 09:30:44","modifiedFileCount":"15","status":"M","submitter":"Jihoon Son"}]
