[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testEmptyBaseDataSource() throws Exception\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        \"\",\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":195,"groupId":"9855","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEmptyBaseDataSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b9/c816083f8081cfaf4c18f175516dd76dca0cbd.src","preCode":"  public void testEmptyBaseDataSource() throws Exception\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        \"\",\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","realPath":"extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testNullBaseDataSource() throws Exception\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        null,\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":239,"groupId":"9855","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullBaseDataSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b9/c816083f8081cfaf4c18f175516dd76dca0cbd.src","preCode":"  public void testNullBaseDataSource() throws Exception\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        null,\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","realPath":"extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-09-14 05:42:18","codes":[{"authorDate":"2018-09-14 05:42:18","commitOrder":2,"curCode":"  public void testEmptyBaseDataSource() throws Exception\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        \"\",\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","date":"2018-09-14 05:42:18","endLine":243,"groupId":"9855","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEmptyBaseDataSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/40/da151f1d47d95c6a08c5c0b1834a2147f00198.src","preCode":"  public void testEmptyBaseDataSource() throws Exception\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        \"\",\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","realPath":"extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"},{"authorDate":"2018-09-14 05:42:18","commitOrder":2,"curCode":"  public void testNullBaseDataSource() throws Exception\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        null,\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","date":"2018-09-14 05:42:18","endLine":288,"groupId":"9855","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullBaseDataSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/40/da151f1d47d95c6a08c5c0b1834a2147f00198.src","preCode":"  public void testNullBaseDataSource() throws Exception\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        null,\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","realPath":"extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"M"}],"commitId":"91a37c692dd8db34d6e4323cd61dba38a00145b1","commitMessage":"@@@'suspend' and 'resume' support for supervisors (kafka indexing service.  materialized views) (#6234)\n\n* 'suspend' and 'resume' support for kafka indexing service\nchanges:\n* introduces `SuspendableSupervisorSpec` interface to describe supervisors which support suspend/resume functionality controlled through the `SupervisorManager`.  which will gracefully shutdown the supervisor and it's tasks.  update it's `SupervisorSpec` with either a suspended or running state.  and update with the toggled spec. Spec updates are provided by `SuspendableSupervisorSpec.createSuspendedSpec` and `SuspendableSupervisorSpec.createRunningSpec` respectively.\n* `KafkaSupervisorSpec` extends `SuspendableSupervisorSpec` and now supports suspend/resume functionality. The difference in behavior between 'running' and 'suspended' state is whether the supervisor will attempt to ensure that indexing tasks are or are not running respectively. Behavior is identical otherwise.\n* `SupervisorResource` now provides `/druid/indexer/v1/supervisor/{id}/suspend` and `/druid/indexer/v1/supervisor/{id}/resume` which are used to suspend/resume suspendable supervisors\n* Deprecated `/druid/indexer/v1/supervisor/{id}/shutdown` and moved it's functionality to `/druid/indexer/v1/supervisor/{id}/terminate` since 'shutdown' is ambiguous verbage for something that effectively stops a supervisor forever\n* Added ability to get all supervisor specs from `/druid/indexer/v1/supervisor` by supplying the 'full' query parameter `/druid/indexer/v1/supervisor?full` which will return a list of json objects of the form `{\"id\":<id>.  \"spec\":<SupervisorSpec>}`\n* Updated overlord console ui to enable suspend/resume.  and changed 'shutdown' to 'terminate'\n\n* move overlord console status to own column in supervisor table so does not look like garbage\n\n* spacing\n\n* padding\n\n* other kind of spacing\n\n* fix rebase fail\n\n* fix more better\n\n* all supervisors now suspendable.  updated materialized view supervisor to support suspend.  more tests\n\n* fix log\n","date":"2018-09-14 05:42:18","modifiedFileCount":"16","status":"M","submitter":"Clint Wylie"},{"authorTime":"2019-03-26 08:11:01","codes":[{"authorDate":"2019-03-26 08:11:01","commitOrder":3,"curCode":"  public void testEmptyBaseDataSource()\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        \"\",\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","date":"2019-03-26 08:11:01","endLine":244,"groupId":"9855","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEmptyBaseDataSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3e/6e1a6199fcdb1f5c3b11e260f8bfd855937523.src","preCode":"  public void testEmptyBaseDataSource() throws Exception\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        \"\",\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","realPath":"extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"},{"authorDate":"2019-03-26 08:11:01","commitOrder":3,"curCode":"  public void testNullBaseDataSource()\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        null,\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","date":"2019-03-26 08:11:01","endLine":289,"groupId":"9855","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullBaseDataSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3e/6e1a6199fcdb1f5c3b11e260f8bfd855937523.src","preCode":"  public void testNullBaseDataSource() throws Exception\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        null,\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","realPath":"extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"M"}],"commitId":"bca40dcdaf3177b95d01187f413e1c0c6865964b","commitMessage":"@@@Fix some IntelliJ inspections (#7273)\n\nPrepare TeamCity for IntelliJ 2018.3.1 upgrade. Mostly removed redundant exceptions declarations in `throws` clauses.","date":"2019-03-26 08:11:01","modifiedFileCount":"26","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-06-01 08:16:01","codes":[{"authorDate":"2019-06-01 08:16:01","commitOrder":4,"curCode":"  public void testEmptyBaseDataSource()\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        \"\",\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider(),\n        new SupervisorStateManagerConfig()\n    );\n  }\n","date":"2019-06-01 08:16:01","endLine":248,"groupId":"9855","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testEmptyBaseDataSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/46/728e2418cb56dc96af2adedd31efa49babcaa5.src","preCode":"  public void testEmptyBaseDataSource()\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        \"\",\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","realPath":"extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"M"},{"authorDate":"2019-06-01 08:16:01","commitOrder":4,"curCode":"  public void testNullBaseDataSource()\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        null,\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider(),\n        new SupervisorStateManagerConfig()\n    );\n  }\n","date":"2019-06-01 08:16:01","endLine":294,"groupId":"9855","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullBaseDataSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/46/728e2418cb56dc96af2adedd31efa49babcaa5.src","preCode":"  public void testNullBaseDataSource()\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        null,\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider()\n    );\n  }\n","realPath":"extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":251,"status":"M"}],"commitId":"8032c4add8f78d0c15044d0847201c618e27dc25","commitMessage":"@@@Add errors and state to stream supervisor status API endpoint (#7428)\n\n* Add state and error tracking for seekable stream supervisors\n\n* Fixed nits in docs\n\n* Made inner class static and updated spec test with jackson inject\n\n* Review changes\n\n* Remove redundant config param in supervisor\n\n* Style\n\n* Applied some of Jon's recommendations\n\n* Add transience field\n\n* write test\n\n* implement code review changes except for reconsidering logic of markRunFinishedAndEvaluateHealth()\n\n* remove transience reporting and fix SeekableStreamSupervisorStateManager impl\n\n* move call to stateManager.markRunFinished() from RunNotice to runInternal() for tests\n\n* remove stateHistory because it wasn't adding much value.  some fixes.  and add more tests\n\n* fix tests\n\n* code review changes and add HTTP health check status\n\n* fix test failure\n\n* refactor to split into a generic SupervisorStateManager and a specific SeekableStreamSupervisorStateManager\n\n* fixup after merge\n\n* code review changes - add additional docs\n\n* cleanup KafkaIndexTaskTest\n\n* add additional documentation for Kinesis indexing\n\n* remove unused throws class\n","date":"2019-06-01 08:16:01","modifiedFileCount":"32","status":"M","submitter":"Justin Borromeo"},{"authorTime":"2019-07-07 00:33:12","codes":[{"authorDate":"2019-07-07 00:33:12","commitOrder":5,"curCode":"  public void testEmptyBaseDataSource()\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    \r\n    new MaterializedViewSupervisorSpec(\n        \"\",\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        EasyMock.createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider(),\n        new SupervisorStateManagerConfig()\n    );\n  }\n","date":"2019-07-07 00:33:12","endLine":254,"groupId":"103922","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testEmptyBaseDataSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e1/9cb784ac7c06ae6d52a04ca869db4a6404748a.src","preCode":"  public void testEmptyBaseDataSource()\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        \"\",\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider(),\n        new SupervisorStateManagerConfig()\n    );\n  }\n","realPath":"extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"},{"authorDate":"2019-07-07 00:33:12","commitOrder":5,"curCode":"  public void testNullBaseDataSource()\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    \r\n    new MaterializedViewSupervisorSpec(\n        null,\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        EasyMock.createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider(),\n        new SupervisorStateManagerConfig()\n    );\n  }\n","date":"2019-07-07 00:33:12","endLine":301,"groupId":"103922","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullBaseDataSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e1/9cb784ac7c06ae6d52a04ca869db4a6404748a.src","preCode":"  public void testNullBaseDataSource()\n  {\n    expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n    expectedException.expectMessage(\n        \"baseDataSource cannot be null or empty. Please provide a baseDataSource.\"\n    );\n    MaterializedViewSupervisorSpec materializedViewSupervisorSpec = new MaterializedViewSupervisorSpec(\n        null,\n        new DimensionsSpec(\n            Lists.newArrayList(\n                new StringDimensionSchema(\"isUnpatrolled\"),\n                new StringDimensionSchema(\"metroCode\"),\n                new StringDimensionSchema(\"namespace\"),\n                new StringDimensionSchema(\"page\"),\n                new StringDimensionSchema(\"regionIsoCode\"),\n                new StringDimensionSchema(\"regionName\"),\n                new StringDimensionSchema(\"user\")\n            ),\n            null,\n            null\n        ),\n        new AggregatorFactory[]{\n            new CountAggregatorFactory(\"count\"),\n            new LongSumAggregatorFactory(\"added\", \"added\")\n        },\n        HadoopTuningConfig.makeDefaultTuningConfig(),\n        null,\n        null,\n        null,\n        null,\n        null,\n        false,\n        objectMapper,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaterializedViewTaskConfig(),\n        createMock(AuthorizerMapper.class),\n        new NoopChatHandlerProvider(),\n        new SupervisorStateManagerConfig()\n    );\n  }\n","realPath":"extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/MaterializedViewSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"M"}],"commitId":"1166bbcb75d432817715fdd429737f86730b5591","commitMessage":"@@@Remove static imports from tests (#8036)\n\nMake static imports forbidden in tests and remove all occurrences to be\nconsistent with the non-test code.\n\nAlso.  various changes to files affected by above:\n- Reformat to adhere to druid style guide\n- Fix various IntelliJ warnings\n- Fix various SonarLint warnings (e.g..  the expected/actual args to\n  Assert.assertEquals() were flipped)","date":"2019-07-07 00:33:12","modifiedFileCount":"98","status":"M","submitter":"Chi Cao Minh"}]
