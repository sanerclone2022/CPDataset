[{"authorTime":"2019-03-28 00:00:43","codes":[{"authorDate":"2019-03-28 00:00:43","commitOrder":1,"curCode":"  public void killWithErrorTest() throws SegmentLoadingException, IOException\n  {\n    final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(\n        JacksonFactory.getDefaultInstance(),\n        300,\n        \"test\"\n    );\n    storage.delete(EasyMock.eq(bucket), EasyMock.eq(indexPath));\n    expectLastCall().andThrow(exception);\n\n    replayAll();\n\n    GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage);\n\n    killer.kill(dataSegment);\n\n    verifyAll();\n  }\n","date":"2019-03-28 00:00:43","endLine":100,"groupId":"810","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"killWithErrorTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6a/b2a1a4bb4afbe69f10723de835ef94b8dbd5a1.src","preCode":"  public void killWithErrorTest() throws SegmentLoadingException, IOException\n  {\n    final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(\n        JacksonFactory.getDefaultInstance(),\n        300,\n        \"test\"\n    );\n    storage.delete(EasyMock.eq(bucket), EasyMock.eq(indexPath));\n    expectLastCall().andThrow(exception);\n\n    replayAll();\n\n    GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage);\n\n    killer.kill(dataSegment);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleDataSegmentKillerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"},{"authorDate":"2019-03-28 00:00:43","commitOrder":1,"curCode":"  public void killRetryWithErrorTest() throws SegmentLoadingException, IOException\n  {\n    final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(\n        JacksonFactory.getDefaultInstance(),\n        500,\n        \"test\"\n    );\n    storage.delete(EasyMock.eq(bucket), EasyMock.eq(indexPath));\n    expectLastCall().andThrow(exception).once().andVoid().once();\n    storage.delete(EasyMock.eq(bucket), EasyMock.eq(descriptorPath));\n    expectLastCall().andThrow(exception).once().andVoid().once();\n\n    replayAll();\n\n    GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage);\n\n    killer.kill(dataSegment);\n\n    verifyAll();\n  }\n","date":"2019-03-28 00:00:43","endLine":122,"groupId":"7665","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"killRetryWithErrorTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6a/b2a1a4bb4afbe69f10723de835ef94b8dbd5a1.src","preCode":"  public void killRetryWithErrorTest() throws SegmentLoadingException, IOException\n  {\n    final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(\n        JacksonFactory.getDefaultInstance(),\n        500,\n        \"test\"\n    );\n    storage.delete(EasyMock.eq(bucket), EasyMock.eq(indexPath));\n    expectLastCall().andThrow(exception).once().andVoid().once();\n    storage.delete(EasyMock.eq(bucket), EasyMock.eq(descriptorPath));\n    expectLastCall().andThrow(exception).once().andVoid().once();\n\n    replayAll();\n\n    GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage);\n\n    killer.kill(dataSegment);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleDataSegmentKillerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"}],"commitId":"eeb3dbe79d442dd805ef4483c9c417e1f9cc11a5","commitMessage":"@@@Move GCP to a core extension (#6953)\n\n* Move GCP to a core extension\n\n* Don't provide druid-core >.<\n\n* Keep AWS and GCP modules separate\n\n* Move AWSModule to its own module\n\n* Add aws ec2 extension and more modules in more places\n\n* Fix bad imports\n\n* Fix test jackson module\n\n* Include AWS and GCP core in server\n\n* Add simple empty method comment\n\n* Update version to 15\n\n* One more 0.13.0-->0.15.0 change\n\n* Fix multi-binding problem\n\n* Grep for s3-extensions and update docs\n\n* Update extensions.md\n","date":"2019-03-28 00:00:43","modifiedFileCount":"4","status":"B","submitter":"Charles Allen"},{"authorTime":"2019-07-07 00:33:12","codes":[{"authorDate":"2019-07-07 00:33:12","commitOrder":2,"curCode":"  public void killWithErrorTest() throws SegmentLoadingException, IOException\n  {\n    final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(\n        JacksonFactory.getDefaultInstance(),\n        300,\n        \"test\"\n    );\n    storage.delete(EasyMock.eq(BUCKET), EasyMock.eq(INDEX_PATH));\n    EasyMock.expectLastCall().andThrow(exception);\n\n    replayAll();\n\n    GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage);\n\n    killer.kill(DATA_SEGMENT);\n\n    verifyAll();\n  }\n","date":"2019-07-07 00:33:12","endLine":99,"groupId":"7175","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"killWithErrorTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bf/99cf3e188ab35b3a280e0e07aba4f95affa592.src","preCode":"  public void killWithErrorTest() throws SegmentLoadingException, IOException\n  {\n    final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(\n        JacksonFactory.getDefaultInstance(),\n        300,\n        \"test\"\n    );\n    storage.delete(EasyMock.eq(bucket), EasyMock.eq(indexPath));\n    expectLastCall().andThrow(exception);\n\n    replayAll();\n\n    GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage);\n\n    killer.kill(dataSegment);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleDataSegmentKillerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2019-07-07 00:33:12","commitOrder":2,"curCode":"  public void killRetryWithErrorTest() throws SegmentLoadingException, IOException\n  {\n    final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(\n        JacksonFactory.getDefaultInstance(),\n        500,\n        \"test\"\n    );\n    storage.delete(EasyMock.eq(BUCKET), EasyMock.eq(INDEX_PATH));\n    EasyMock.expectLastCall().andThrow(exception).once().andVoid().once();\n    storage.delete(EasyMock.eq(BUCKET), EasyMock.eq(DESCRIPTOR_PATH));\n    EasyMock.expectLastCall().andThrow(exception).once().andVoid().once();\n\n    replayAll();\n\n    GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage);\n\n    killer.kill(DATA_SEGMENT);\n\n    verifyAll();\n  }\n","date":"2019-07-07 00:33:12","endLine":121,"groupId":"7176","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"killRetryWithErrorTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bf/99cf3e188ab35b3a280e0e07aba4f95affa592.src","preCode":"  public void killRetryWithErrorTest() throws SegmentLoadingException, IOException\n  {\n    final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(\n        JacksonFactory.getDefaultInstance(),\n        500,\n        \"test\"\n    );\n    storage.delete(EasyMock.eq(bucket), EasyMock.eq(indexPath));\n    expectLastCall().andThrow(exception).once().andVoid().once();\n    storage.delete(EasyMock.eq(bucket), EasyMock.eq(descriptorPath));\n    expectLastCall().andThrow(exception).once().andVoid().once();\n\n    replayAll();\n\n    GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage);\n\n    killer.kill(dataSegment);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleDataSegmentKillerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"1166bbcb75d432817715fdd429737f86730b5591","commitMessage":"@@@Remove static imports from tests (#8036)\n\nMake static imports forbidden in tests and remove all occurrences to be\nconsistent with the non-test code.\n\nAlso.  various changes to files affected by above:\n- Reformat to adhere to druid style guide\n- Fix various IntelliJ warnings\n- Fix various SonarLint warnings (e.g..  the expected/actual args to\n  Assert.assertEquals() were flipped)","date":"2019-07-07 00:33:12","modifiedFileCount":"98","status":"M","submitter":"Chi Cao Minh"},{"authorTime":"2020-03-19 09:00:43","codes":[{"authorDate":"2020-03-19 09:00:43","commitOrder":3,"curCode":"  public void killWithErrorTest() throws SegmentLoadingException, IOException\n  {\n    final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(\n        JacksonFactory.getDefaultInstance(),\n        300,\n        \"test\"\n    );\n    storage.delete(EasyMock.eq(BUCKET), EasyMock.eq(INDEX_PATH));\n    EasyMock.expectLastCall().andThrow(exception);\n\n    replayAll();\n\n    GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage, accountConfig, inputDataConfig);\n\n    killer.kill(DATA_SEGMENT);\n\n    verifyAll();\n  }\n","date":"2020-03-19 09:00:43","endLine":121,"groupId":"103233","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"killWithErrorTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/82/cda77a0182706b745d81ed9e2a6fbf4bcbce89.src","preCode":"  public void killWithErrorTest() throws SegmentLoadingException, IOException\n  {\n    final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(\n        JacksonFactory.getDefaultInstance(),\n        300,\n        \"test\"\n    );\n    storage.delete(EasyMock.eq(BUCKET), EasyMock.eq(INDEX_PATH));\n    EasyMock.expectLastCall().andThrow(exception);\n\n    replayAll();\n\n    GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage);\n\n    killer.kill(DATA_SEGMENT);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleDataSegmentKillerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2020-03-19 09:00:43","commitOrder":3,"curCode":"  public void killRetryWithErrorTest() throws SegmentLoadingException, IOException\n  {\n    final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(\n        JacksonFactory.getDefaultInstance(),\n        500,\n        \"test\"\n    );\n    storage.delete(EasyMock.eq(BUCKET), EasyMock.eq(INDEX_PATH));\n    EasyMock.expectLastCall().andThrow(exception).once().andVoid().once();\n    storage.delete(EasyMock.eq(BUCKET), EasyMock.eq(DESCRIPTOR_PATH));\n    EasyMock.expectLastCall().andThrow(exception).once().andVoid().once();\n\n    replayAll();\n\n    GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage, accountConfig, inputDataConfig);\n\n    killer.kill(DATA_SEGMENT);\n\n    verifyAll();\n  }\n","date":"2020-03-19 09:00:43","endLine":143,"groupId":"103233","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"killRetryWithErrorTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/82/cda77a0182706b745d81ed9e2a6fbf4bcbce89.src","preCode":"  public void killRetryWithErrorTest() throws SegmentLoadingException, IOException\n  {\n    final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(\n        JacksonFactory.getDefaultInstance(),\n        500,\n        \"test\"\n    );\n    storage.delete(EasyMock.eq(BUCKET), EasyMock.eq(INDEX_PATH));\n    EasyMock.expectLastCall().andThrow(exception).once().andVoid().once();\n    storage.delete(EasyMock.eq(BUCKET), EasyMock.eq(DESCRIPTOR_PATH));\n    EasyMock.expectLastCall().andThrow(exception).once().andVoid().once();\n\n    replayAll();\n\n    GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage);\n\n    killer.kill(DATA_SEGMENT);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleDataSegmentKillerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"838735411f495e355820da35ab0765a56a95b090","commitMessage":"@@@Ability to Delete task logs and segments from Google Storage (#9519)\n\n* Ability to Delete task logs and segments from Google Storage\n\n* implement ability to delete all tasks logs or all task logs\n  written before a particular date when written to Google storage\n\n* implement ability to delete all segments from Google deep storage\n\n* * Address review comments","date":"2020-03-19 09:00:43","modifiedFileCount":"7","status":"M","submitter":"zachjsh"}]
