[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testFoldDifferentTypes() throws Exception\n  {\n    final ColumnAnalysis analysis1 = new ColumnAnalysis(\"hyperUnique\", false, 1L, 1, null, null, null);\n    final ColumnAnalysis analysis2 = new ColumnAnalysis(\"COMPLEX\", false, 2L, 2, null, null, null);\n\n    assertSerDe(analysis1);\n    assertSerDe(analysis2);\n\n    final ColumnAnalysis expected = new ColumnAnalysis(\n        \"STRING\",\n        false,\n        -1L,\n        null,\n        null,\n        null,\n        \"error:cannot_merge_diff_types\"\n    );\n    ColumnAnalysis fold1 = analysis1.fold(analysis2);\n    ColumnAnalysis fold2 = analysis2.fold(analysis1);\n    Assert.assertEquals(expected, fold1);\n    Assert.assertEquals(expected, fold2);\n\n    assertSerDe(fold1);\n    assertSerDe(fold2);\n  }\n","date":"2018-08-31 00:56:26","endLine":109,"groupId":"12547","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFoldDifferentTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cc/f3363737aa3b0de38816362f7575a8762bbd97.src","preCode":"  public void testFoldDifferentTypes() throws Exception\n  {\n    final ColumnAnalysis analysis1 = new ColumnAnalysis(\"hyperUnique\", false, 1L, 1, null, null, null);\n    final ColumnAnalysis analysis2 = new ColumnAnalysis(\"COMPLEX\", false, 2L, 2, null, null, null);\n\n    assertSerDe(analysis1);\n    assertSerDe(analysis2);\n\n    final ColumnAnalysis expected = new ColumnAnalysis(\n        \"STRING\",\n        false,\n        -1L,\n        null,\n        null,\n        null,\n        \"error:cannot_merge_diff_types\"\n    );\n    ColumnAnalysis fold1 = analysis1.fold(analysis2);\n    ColumnAnalysis fold2 = analysis2.fold(analysis1);\n    Assert.assertEquals(expected, fold1);\n    Assert.assertEquals(expected, fold2);\n\n    assertSerDe(fold1);\n    assertSerDe(fold2);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/metadata/metadata/ColumnAnalysisTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testFoldDifferentErrors() throws Exception\n  {\n    final ColumnAnalysis analysis1 = ColumnAnalysis.error(\"foo\");\n    final ColumnAnalysis analysis2 = ColumnAnalysis.error(\"bar\");\n\n    assertSerDe(analysis1);\n    assertSerDe(analysis2);\n\n    final ColumnAnalysis expected = new ColumnAnalysis(\"STRING\", false, -1L, null, null, null, \"error:multiple_errors\");\n    ColumnAnalysis fold1 = analysis1.fold(analysis2);\n    ColumnAnalysis fold2 = analysis2.fold(analysis1);\n    Assert.assertEquals(expected, fold1);\n    Assert.assertEquals(expected, fold2);\n\n    assertSerDe(fold1);\n    assertSerDe(fold2);\n  }\n","date":"2018-08-31 00:56:26","endLine":166,"groupId":"12547","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFoldDifferentErrors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cc/f3363737aa3b0de38816362f7575a8762bbd97.src","preCode":"  public void testFoldDifferentErrors() throws Exception\n  {\n    final ColumnAnalysis analysis1 = ColumnAnalysis.error(\"foo\");\n    final ColumnAnalysis analysis2 = ColumnAnalysis.error(\"bar\");\n\n    assertSerDe(analysis1);\n    assertSerDe(analysis2);\n\n    final ColumnAnalysis expected = new ColumnAnalysis(\"STRING\", false, -1L, null, null, null, \"error:multiple_errors\");\n    ColumnAnalysis fold1 = analysis1.fold(analysis2);\n    ColumnAnalysis fold2 = analysis2.fold(analysis1);\n    Assert.assertEquals(expected, fold1);\n    Assert.assertEquals(expected, fold2);\n\n    assertSerDe(fold1);\n    assertSerDe(fold2);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/metadata/metadata/ColumnAnalysisTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2020-08-14 05:55:32","codes":[{"authorDate":"2020-08-14 05:55:32","commitOrder":2,"curCode":"  public void testFoldDifferentTypes() throws Exception\n  {\n    final ColumnAnalysis analysis1 = new ColumnAnalysis(\"hyperUnique\", false, false, 1L, 1, null, null, null);\n    final ColumnAnalysis analysis2 = new ColumnAnalysis(\"COMPLEX\", false, false, 2L, 2, null, null, null);\n\n    assertSerDe(analysis1);\n    assertSerDe(analysis2);\n\n    final ColumnAnalysis expected = new ColumnAnalysis(\n        \"STRING\",\n        false,\n        false,\n        -1L,\n        null,\n        null,\n        null,\n        \"error:cannot_merge_diff_types\"\n    );\n    ColumnAnalysis fold1 = analysis1.fold(analysis2);\n    ColumnAnalysis fold2 = analysis2.fold(analysis1);\n    Assert.assertEquals(expected, fold1);\n    Assert.assertEquals(expected, fold2);\n\n    assertSerDe(fold1);\n    assertSerDe(fold2);\n  }\n","date":"2020-08-14 05:55:32","endLine":110,"groupId":"106316","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testFoldDifferentTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/79/8d67a06fb112bc467c5ff09984adced89c2a2c.src","preCode":"  public void testFoldDifferentTypes() throws Exception\n  {\n    final ColumnAnalysis analysis1 = new ColumnAnalysis(\"hyperUnique\", false, 1L, 1, null, null, null);\n    final ColumnAnalysis analysis2 = new ColumnAnalysis(\"COMPLEX\", false, 2L, 2, null, null, null);\n\n    assertSerDe(analysis1);\n    assertSerDe(analysis2);\n\n    final ColumnAnalysis expected = new ColumnAnalysis(\n        \"STRING\",\n        false,\n        -1L,\n        null,\n        null,\n        null,\n        \"error:cannot_merge_diff_types\"\n    );\n    ColumnAnalysis fold1 = analysis1.fold(analysis2);\n    ColumnAnalysis fold2 = analysis2.fold(analysis1);\n    Assert.assertEquals(expected, fold1);\n    Assert.assertEquals(expected, fold2);\n\n    assertSerDe(fold1);\n    assertSerDe(fold2);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/metadata/metadata/ColumnAnalysisTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2020-08-14 05:55:32","commitOrder":2,"curCode":"  public void testFoldDifferentErrors() throws Exception\n  {\n    final ColumnAnalysis analysis1 = ColumnAnalysis.error(\"foo\");\n    final ColumnAnalysis analysis2 = ColumnAnalysis.error(\"bar\");\n\n    assertSerDe(analysis1);\n    assertSerDe(analysis2);\n\n    final ColumnAnalysis expected = new ColumnAnalysis(\"STRING\", false, false, -1L, null, null, null, \"error:multiple_errors\");\n    ColumnAnalysis fold1 = analysis1.fold(analysis2);\n    ColumnAnalysis fold2 = analysis2.fold(analysis1);\n    Assert.assertEquals(expected, fold1);\n    Assert.assertEquals(expected, fold2);\n\n    assertSerDe(fold1);\n    assertSerDe(fold2);\n  }\n","date":"2020-08-14 05:55:32","endLine":167,"groupId":"106316","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testFoldDifferentErrors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/79/8d67a06fb112bc467c5ff09984adced89c2a2c.src","preCode":"  public void testFoldDifferentErrors() throws Exception\n  {\n    final ColumnAnalysis analysis1 = ColumnAnalysis.error(\"foo\");\n    final ColumnAnalysis analysis2 = ColumnAnalysis.error(\"bar\");\n\n    assertSerDe(analysis1);\n    assertSerDe(analysis2);\n\n    final ColumnAnalysis expected = new ColumnAnalysis(\"STRING\", false, -1L, null, null, null, \"error:multiple_errors\");\n    ColumnAnalysis fold1 = analysis1.fold(analysis2);\n    ColumnAnalysis fold2 = analysis2.fold(analysis1);\n    Assert.assertEquals(expected, fold1);\n    Assert.assertEquals(expected, fold2);\n\n    assertSerDe(fold1);\n    assertSerDe(fold2);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/metadata/metadata/ColumnAnalysisTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"}],"commitId":"e053348f747f6428e14362e4844e916f8790b726","commitMessage":"@@@add hasNulls to ColumnCapabilities.  ColumnAnalysis (#10219)\n\n* add isNullable to ColumnCapabilities.  ColumnAnalysis\n\n* better builder\n\n* fix segment metadata queries in integration tests\n\n* adjustments\n\n* cleanup\n\n* fix spotbugs\n\n* treat unknown as true in segmentmetadata\n\n* rename to hasNulls.  add docs\n\n* fixup\n\n* test the dim indexer selector isNull fix for numeric columns\n\n* fixes\n\n* oof","date":"2020-08-14 05:55:32","modifiedFileCount":"29","status":"M","submitter":"Clint Wylie"}]
