[{"authorTime":"2019-05-24 02:11:48","codes":[{"authorDate":"2019-05-24 02:11:48","commitOrder":1,"curCode":"  public void setUp()\n  {\n    DateTime date = new DateTime(2017,\n                                 10,\n                                 30,\n                                 10,\n                                 00,\n                                 DateTimeZone.UTC); \r\n    String metric = \"metric/te/st/value\";\n    Number value = 1234;\n    ImmutableMap<String, String> serviceDims = ImmutableMap.of(\n        \"service\",\n        \"druid/historical\",\n        \"host\",\n        \"localhost\",\n        \"version\",\n        \"0.10.0\"\n    );\n    ServiceMetricEvent.Builder builder = ServiceMetricEvent.builder();\n    builder.setDimension(\"nonWhiteListedDim\", \"test\");\n    builder.setDimension(\"dataSource\", \"test_datasource\");\n    ServiceEventBuilder eventBuilder = builder.build(date, metric, value);\n    event = (ServiceMetricEvent) eventBuilder.build(serviceDims);\n  }\n","date":"2019-05-24 02:11:48","endLine":61,"groupId":"21196","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/20/95a2f708765021af10c8bce53a014cfe9e1a3c.src","preCode":"  public void setUp()\n  {\n    DateTime date = new DateTime(2017,\n                                 10,\n                                 30,\n                                 10,\n                                 00,\n                                 DateTimeZone.UTC); \r\n    String metric = \"metric/te/st/value\";\n    Number value = 1234;\n    ImmutableMap<String, String> serviceDims = ImmutableMap.of(\n        \"service\",\n        \"druid/historical\",\n        \"host\",\n        \"localhost\",\n        \"version\",\n        \"0.10.0\"\n    );\n    ServiceMetricEvent.Builder builder = ServiceMetricEvent.builder();\n    builder.setDimension(\"nonWhiteListedDim\", \"test\");\n    builder.setDimension(\"dataSource\", \"test_datasource\");\n    ServiceEventBuilder eventBuilder = builder.build(date, metric, value);\n    event = (ServiceMetricEvent) eventBuilder.build(serviceDims);\n  }\n","realPath":"extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"},{"authorDate":"2019-05-24 02:11:48","commitOrder":1,"curCode":"  public void testTransformForInfluxWithLongMetric()\n  {\n    InfluxdbEmitterConfig config = new InfluxdbEmitterConfig(\n        \"localhost\",\n        8086,\n        \"dbname\",\n        10000,\n        15000,\n        30000,\n        \"adam\",\n        \"password\",\n        null\n    );\n    InfluxdbEmitter influxdbEmitter = new InfluxdbEmitter(config);\n    String expected =\n        \"druid_metric,service=druid/historical,metric=druid_te_st,hostname=localhost,dataSource=test_datasource druid_value=1234 1509357600000000000\"\n        + \"\\n\";\n    String actual = influxdbEmitter.transformForInfluxSystems(event);\n    Assert.assertEquals(expected, actual);\n  }\n","date":"2019-05-24 02:11:48","endLine":83,"groupId":"21196","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTransformForInfluxWithLongMetric","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/20/95a2f708765021af10c8bce53a014cfe9e1a3c.src","preCode":"  public void testTransformForInfluxWithLongMetric()\n  {\n    InfluxdbEmitterConfig config = new InfluxdbEmitterConfig(\n        \"localhost\",\n        8086,\n        \"dbname\",\n        10000,\n        15000,\n        30000,\n        \"adam\",\n        \"password\",\n        null\n    );\n    InfluxdbEmitter influxdbEmitter = new InfluxdbEmitter(config);\n    String expected =\n        \"druid_metric,service=druid/historical,metric=druid_te_st,hostname=localhost,dataSource=test_datasource druid_value=1234 1509357600000000000\"\n        + \"\\n\";\n    String actual = influxdbEmitter.transformForInfluxSystems(event);\n    Assert.assertEquals(expected, actual);\n  }\n","realPath":"extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"}],"commitId":"6964ac23a2a3b95f29a2d4aa443ef9fcbc84dfdb","commitMessage":"@@@Adding influxdb emitter as a contrib extension (#7717)\n\n* Adding influxdb emitter as a contrib extension\n\n* addressing code review comments\n","date":"2019-05-24 02:11:48","modifiedFileCount":"0","status":"B","submitter":"awelsh93"},{"authorTime":"2020-10-27 10:49:26","codes":[{"authorDate":"2019-05-24 02:11:48","commitOrder":2,"curCode":"  public void setUp()\n  {\n    DateTime date = new DateTime(2017,\n                                 10,\n                                 30,\n                                 10,\n                                 00,\n                                 DateTimeZone.UTC); \r\n    String metric = \"metric/te/st/value\";\n    Number value = 1234;\n    ImmutableMap<String, String> serviceDims = ImmutableMap.of(\n        \"service\",\n        \"druid/historical\",\n        \"host\",\n        \"localhost\",\n        \"version\",\n        \"0.10.0\"\n    );\n    ServiceMetricEvent.Builder builder = ServiceMetricEvent.builder();\n    builder.setDimension(\"nonWhiteListedDim\", \"test\");\n    builder.setDimension(\"dataSource\", \"test_datasource\");\n    ServiceEventBuilder eventBuilder = builder.build(date, metric, value);\n    event = (ServiceMetricEvent) eventBuilder.build(serviceDims);\n  }\n","date":"2019-05-24 02:11:48","endLine":61,"groupId":"103876","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/20/95a2f708765021af10c8bce53a014cfe9e1a3c.src","preCode":"  public void setUp()\n  {\n    DateTime date = new DateTime(2017,\n                                 10,\n                                 30,\n                                 10,\n                                 00,\n                                 DateTimeZone.UTC); \r\n    String metric = \"metric/te/st/value\";\n    Number value = 1234;\n    ImmutableMap<String, String> serviceDims = ImmutableMap.of(\n        \"service\",\n        \"druid/historical\",\n        \"host\",\n        \"localhost\",\n        \"version\",\n        \"0.10.0\"\n    );\n    ServiceMetricEvent.Builder builder = ServiceMetricEvent.builder();\n    builder.setDimension(\"nonWhiteListedDim\", \"test\");\n    builder.setDimension(\"dataSource\", \"test_datasource\");\n    ServiceEventBuilder eventBuilder = builder.build(date, metric, value);\n    event = (ServiceMetricEvent) eventBuilder.build(serviceDims);\n  }\n","realPath":"extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"N"},{"authorDate":"2020-10-27 10:49:26","commitOrder":2,"curCode":"  public void testTransformForInfluxWithLongMetric()\n  {\n    InfluxdbEmitterConfig config = new InfluxdbEmitterConfig(\n        \"localhost\",\n        8086,\n        null,\n        null,\n        null,\n        null,\n        \"dbname\",\n        10000,\n        15000,\n        30000,\n        \"adam\",\n        \"password\",\n        null\n    );\n    InfluxdbEmitter influxdbEmitter = new InfluxdbEmitter(config);\n    String expected =\n        \"druid_metric,service=druid/historical,metric=druid_te_st,hostname=localhost,dataSource=test_datasource druid_value=1234 1509357600000000000\"\n        + \"\\n\";\n    String actual = influxdbEmitter.transformForInfluxSystems(event);\n    Assert.assertEquals(expected, actual);\n  }\n","date":"2020-10-27 10:49:26","endLine":87,"groupId":"103876","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testTransformForInfluxWithLongMetric","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f3/9549250f4784531c050dcc4241002d4cc88529.src","preCode":"  public void testTransformForInfluxWithLongMetric()\n  {\n    InfluxdbEmitterConfig config = new InfluxdbEmitterConfig(\n        \"localhost\",\n        8086,\n        \"dbname\",\n        10000,\n        15000,\n        30000,\n        \"adam\",\n        \"password\",\n        null\n    );\n    InfluxdbEmitter influxdbEmitter = new InfluxdbEmitter(config);\n    String expected =\n        \"druid_metric,service=druid/historical,metric=druid_te_st,hostname=localhost,dataSource=test_datasource druid_value=1234 1509357600000000000\"\n        + \"\\n\";\n    String actual = influxdbEmitter.transformForInfluxSystems(event);\n    Assert.assertEquals(expected, actual);\n  }\n","realPath":"extensions-contrib/influxdb-emitter/src/test/java/org/apache/druid/emitter/influxdb/InfluxdbEmitterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"a966de5319e833409c9513b6616b2d2e192f7adf","commitMessage":"@@@Add https to druid-influxdb-emitter extension (#9938)\n\n* Add https to druid-influxdb-emitter extension\n\n* address CI failures\n\n* increase test coverage\n\n* tests for being unable to load trustStore\n\n* fix EqualsVerifier test\n\n* fix intellij inspection error\n\n* use try-with-resources when loading trustStore","date":"2020-10-27 10:49:26","modifiedFileCount":"4","status":"M","submitter":"awelsh93"}]
