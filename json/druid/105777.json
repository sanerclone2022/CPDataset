[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testDuplicateDimensionsFirstOccurrence() throws IndexSizeExceededException\n  {\n    IncrementalIndex index = closerRule.closeLater(indexCreator.createIndex());\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"A\", \"joe\", \"B\")\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":189,"groupId":"13136","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuplicateDimensionsFirstOccurrence","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/31/266af15f55c6dd3d52fdfb477e3809e100c802.src","preCode":"  public void testDuplicateDimensionsFirstOccurrence() throws IndexSizeExceededException\n  {\n    IncrementalIndex index = closerRule.closeLater(indexCreator.createIndex());\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"A\", \"joe\", \"B\")\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void controlTest() throws IndexSizeExceededException\n  {\n    IncrementalIndex index = closerRule.closeLater(indexCreator.createIndex());\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"A\", \"joe\", \"B\")\n        )\n    );\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"C\", \"joe\", \"B\")\n        )\n    );\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"A\", \"joe\", \"B\")\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":216,"groupId":"13136","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"controlTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/31/266af15f55c6dd3d52fdfb477e3809e100c802.src","preCode":"  public void controlTest() throws IndexSizeExceededException\n  {\n    IncrementalIndex index = closerRule.closeLater(indexCreator.createIndex());\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"A\", \"joe\", \"B\")\n        )\n    );\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"C\", \"joe\", \"B\")\n        )\n    );\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"A\", \"joe\", \"B\")\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2021-01-08 14:18:47","codes":[{"authorDate":"2021-01-08 14:18:47","commitOrder":2,"curCode":"  public void testDuplicateDimensionsFirstOccurrence() throws IndexSizeExceededException\n  {\n    IncrementalIndex<?> index = indexCreator.createIndex();\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"A\", \"joe\", \"B\")\n        )\n    );\n  }\n","date":"2021-01-08 14:18:47","endLine":133,"groupId":"105777","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testDuplicateDimensionsFirstOccurrence","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/6b38bf303336969623d6f60c687293906a74b1.src","preCode":"  public void testDuplicateDimensionsFirstOccurrence() throws IndexSizeExceededException\n  {\n    IncrementalIndex index = closerRule.closeLater(indexCreator.createIndex());\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"A\", \"joe\", \"B\")\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2021-01-08 14:18:47","commitOrder":2,"curCode":"  public void controlTest() throws IndexSizeExceededException\n  {\n    IncrementalIndex<?> index = indexCreator.createIndex();\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"A\", \"joe\", \"B\")\n        )\n    );\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"C\", \"joe\", \"B\")\n        )\n    );\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"A\", \"joe\", \"B\")\n        )\n    );\n  }\n","date":"2021-01-08 14:18:47","endLine":160,"groupId":"105777","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"controlTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/6b38bf303336969623d6f60c687293906a74b1.src","preCode":"  public void controlTest() throws IndexSizeExceededException\n  {\n    IncrementalIndex index = closerRule.closeLater(indexCreator.createIndex());\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"A\", \"joe\", \"B\")\n        )\n    );\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"C\", \"joe\", \"B\")\n        )\n    );\n    index.add(\n        new MapBasedInputRow(\n            System.currentTimeMillis() - 1,\n            Lists.newArrayList(\"billy\", \"joe\"),\n            ImmutableMap.of(\"billy\", \"A\", \"joe\", \"B\")\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"M"}],"commitId":"08ab82f55ca856d60dfe1088c1c0393428b0bb6d","commitMessage":"@@@IncrementalIndex Tests and Benchmarks Parametrization (#10593)\n\n* Remove redundant IncrementalIndex.Builder\n\n* Parametrize incremental index tests and benchmarks\n\n- Reveal and fix a bug in OffheapIncrementalIndex\n\n* Fix forbiddenapis error: Forbidden method invocation: java.lang.String#format(java.lang.String. java.lang.Object[]) [Uses default locale]\n\n* Fix Intellij errors: declared exception is never thrown\n\n* Add documentation and validate before closing objects on tearDown.\n\n* Add documentation to OffheapIncrementalIndexTestSpec\n\n* Doc corrections and minor changes.\n\n* Add logging for generated rows.\n\n* Refactor new tests/benchmarks.\n\n* Improve IncrementalIndexCreator documentation\n\n* Add required tests for DataGenerator\n\n* Revert \"rollupOpportunity\" to be a string","date":"2021-01-08 14:18:47","modifiedFileCount":"62","status":"M","submitter":"Liran Funaro"}]
