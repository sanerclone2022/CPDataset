[{"authorTime":"2019-11-16 01:22:09","codes":[{"authorDate":"2019-11-21 09:24:12","commitOrder":4,"curCode":"  final SubTaskSpec<T> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final SplittableInputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    final ParallelIndexIngestionSpec subTaskIngestionSpec = new ParallelIndexIngestionSpec(\n        ingestionSchema.getDataSchema(),\n        new ParallelIndexIOConfig(\n            firehoseFactory,\n            inputSource,\n            ingestionSchema.getIOConfig().getInputFormat(),\n            ingestionSchema.getIOConfig().isAppendToExisting()\n        ),\n        ingestionSchema.getTuningConfig()\n    );\n\n    return createSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        getContext(),\n        split,\n        subTaskIngestionSpec,\n        getIndexingServiceClient()\n    );\n  }\n","date":"2019-11-21 09:24:12","endLine":116,"groupId":"5455","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c5/26ba7b8647ae0d5f1e5796e212d12ed65ce915.src","preCode":"  final SubTaskSpec<T> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final SplittableInputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    final ParallelIndexIngestionSpec subTaskIngestionSpec = new ParallelIndexIngestionSpec(\n        ingestionSchema.getDataSchema(),\n        new ParallelIndexIOConfig(\n            firehoseFactory,\n            inputSource,\n            ingestionSchema.getIOConfig().getInputFormat(),\n            ingestionSchema.getIOConfig().isAppendToExisting()\n        ),\n        ingestionSchema.getTuningConfig()\n    );\n\n    return createSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        getContext(),\n        split,\n        subTaskIngestionSpec,\n        getIndexingServiceClient()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/InputSourceSplitParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2019-11-16 01:22:09","commitOrder":4,"curCode":"  SubTaskSpec<SinglePhaseSubTask> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final SplittableInputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    return new SinglePhaseSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        new ParallelIndexIngestionSpec(\n            ingestionSchema.getDataSchema(),\n            new ParallelIndexIOConfig(\n                firehoseFactory,\n                inputSource,\n                ingestionSchema.getIOConfig().getInputFormat(),\n                ingestionSchema.getIOConfig().isAppendToExisting()\n            ),\n            ingestionSchema.getTuningConfig()\n        ),\n        getContext(),\n        split\n    );\n  }\n","date":"2019-11-16 01:22:09","endLine":130,"groupId":"17471","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/da/8aed91068e37f6a70973adbe9dab06f102a14d.src","preCode":"  SubTaskSpec<SinglePhaseSubTask> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final SplittableInputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    return new SinglePhaseSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        new ParallelIndexIngestionSpec(\n            ingestionSchema.getDataSchema(),\n            new ParallelIndexIOConfig(\n                firehoseFactory,\n                inputSource,\n                ingestionSchema.getIOConfig().getInputFormat(),\n                ingestionSchema.getIOConfig().isAppendToExisting()\n            ),\n            ingestionSchema.getTuningConfig()\n        ),\n        getContext(),\n        split\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/SinglePhaseParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"NB"}],"commitId":"ff6217365bb5803dae364dddbe7bfc870bd406bc","commitMessage":"@@@Refactor parallel indexing perfect rollup partitioning (#8852)\n\n* Refactor parallel indexing perfect rollup partitioning\n\nRefactoring to make it easier to later add range partitioning for\nperfect rollup parallel indexing. This is accomplished by adding several\nnew base classes (e.g..  PerfectRollupWorkerTask) and new classes for\nencapsulating logic that needs to be changed for different partitioning\nstrategies (e.g..  IndexTaskInputRowIteratorBuilder).\n\nThe code is functionally equivalent to before except for the following\nsmall behavior changes:\n\n1) PartialSegmentMergeTask: Previously.  this task had a priority of\n   DEFAULT_TASK_PRIORITY. It now has a priority of\n   DEFAULT_BATCH_INDEX_TASK_PRIORITY (via the new PerfectRollupWorkerTask\n   base class).  since it is a batch index task.\n\n2) ParallelIndexPhaseRunner: A decorator was added to\n   subTaskSpecIterator to ensure the subtasks are generated with unique\n   ids. Previously.  only tests (i.e..  MultiPhaseParallelIndexingTest)\n   would have this decorator.  but this behavior is desired for non-test\n   code as well.\n\n* Fix forbidden apis and pmd warnings\n\n* Fix analyze dependencies warnings\n\n* Fix IndexTask json and add IT diags\n\n* Fix parallel index supervisor<->worker serde\n\n* Fix TeamCity inspection errors/warnings\n\n* Fix TeamCity inspection errors/warnings again\n\n* Integrate changes with those from #8823\n\n* Address review comments\n\n* Address more review comments\n\n* Fix forbidden apis\n\n* Address more review comments\n","date":"2019-11-21 09:24:12","modifiedFileCount":"34","status":"M","submitter":"Chi Cao Minh"},{"authorTime":"2019-11-16 01:22:09","codes":[{"authorDate":"2020-02-17 05:00:12","commitOrder":5,"curCode":"  final SubTaskSpec<T> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final SplittableInputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    final ParallelIndexIngestionSpec subTaskIngestionSpec = new ParallelIndexIngestionSpec(\n        ingestionSchema.getDataSchema(),\n        new ParallelIndexIOConfig(\n            firehoseFactory,\n            inputSource,\n            ingestionSchema.getIOConfig().getInputFormat(),\n            ingestionSchema.getIOConfig().isAppendToExisting()\n        ),\n        ingestionSchema.getTuningConfig()\n    );\n\n    return createSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        getContext(),\n        split,\n        subTaskIngestionSpec\n    );\n  }\n","date":"2020-02-17 05:00:12","endLine":115,"groupId":"5455","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3f/5f9b8259d6a07d232f0ccdd7120eea9f14d337.src","preCode":"  final SubTaskSpec<T> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final SplittableInputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    final ParallelIndexIngestionSpec subTaskIngestionSpec = new ParallelIndexIngestionSpec(\n        ingestionSchema.getDataSchema(),\n        new ParallelIndexIOConfig(\n            firehoseFactory,\n            inputSource,\n            ingestionSchema.getIOConfig().getInputFormat(),\n            ingestionSchema.getIOConfig().isAppendToExisting()\n        ),\n        ingestionSchema.getTuningConfig()\n    );\n\n    return createSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        getContext(),\n        split,\n        subTaskIngestionSpec,\n        getIndexingServiceClient()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/InputSourceSplitParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2019-11-16 01:22:09","commitOrder":5,"curCode":"  SubTaskSpec<SinglePhaseSubTask> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final SplittableInputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    return new SinglePhaseSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        new ParallelIndexIngestionSpec(\n            ingestionSchema.getDataSchema(),\n            new ParallelIndexIOConfig(\n                firehoseFactory,\n                inputSource,\n                ingestionSchema.getIOConfig().getInputFormat(),\n                ingestionSchema.getIOConfig().isAppendToExisting()\n            ),\n            ingestionSchema.getTuningConfig()\n        ),\n        getContext(),\n        split\n    );\n  }\n","date":"2019-11-16 01:22:09","endLine":130,"groupId":"17471","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/da/8aed91068e37f6a70973adbe9dab06f102a14d.src","preCode":"  SubTaskSpec<SinglePhaseSubTask> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final SplittableInputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    return new SinglePhaseSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        new ParallelIndexIngestionSpec(\n            ingestionSchema.getDataSchema(),\n            new ParallelIndexIOConfig(\n                firehoseFactory,\n                inputSource,\n                ingestionSchema.getIOConfig().getInputFormat(),\n                ingestionSchema.getIOConfig().isAppendToExisting()\n            ),\n            ingestionSchema.getTuningConfig()\n        ),\n        getContext(),\n        split\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/SinglePhaseParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"}],"commitId":"3bb9e7e53af4d5926995931e05294f83f756d85c","commitMessage":"@@@Inject things instead of subclassing everything for parallel task testing (#9353)\n\n* Inject things instead of subclassing everything for parallel task\ntesting\n\n* javadoc\n\n* fix compilation\n\n* fix wrong merge\n\n* Address comments\n","date":"2020-02-17 05:00:12","modifiedFileCount":"33","status":"M","submitter":"Jihoon Son"},{"authorTime":"2020-02-25 09:34:39","codes":[{"authorDate":"2020-02-25 09:34:39","commitOrder":6,"curCode":"  final SubTaskSpec<T> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final InputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    final ParallelIndexIngestionSpec subTaskIngestionSpec = new ParallelIndexIngestionSpec(\n        ingestionSchema.getDataSchema(),\n        new ParallelIndexIOConfig(\n            firehoseFactory,\n            inputSource,\n            ingestionSchema.getIOConfig().getInputFormat(),\n            ingestionSchema.getIOConfig().isAppendToExisting()\n        ),\n        ingestionSchema.getTuningConfig()\n    );\n\n    return createSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        getContext(),\n        split,\n        subTaskIngestionSpec\n    );\n  }\n","date":"2020-02-25 09:34:39","endLine":116,"groupId":"5455","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f2/3c513e59d62bcc86bc9f0bad8a6d1cd61a1319.src","preCode":"  final SubTaskSpec<T> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final SplittableInputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    final ParallelIndexIngestionSpec subTaskIngestionSpec = new ParallelIndexIngestionSpec(\n        ingestionSchema.getDataSchema(),\n        new ParallelIndexIOConfig(\n            firehoseFactory,\n            inputSource,\n            ingestionSchema.getIOConfig().getInputFormat(),\n            ingestionSchema.getIOConfig().isAppendToExisting()\n        ),\n        ingestionSchema.getTuningConfig()\n    );\n\n    return createSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        getContext(),\n        split,\n        subTaskIngestionSpec\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/InputSourceSplitParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2020-02-25 09:34:39","commitOrder":6,"curCode":"  SubTaskSpec<SinglePhaseSubTask> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final InputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    return new SinglePhaseSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        new ParallelIndexIngestionSpec(\n            ingestionSchema.getDataSchema(),\n            new ParallelIndexIOConfig(\n                firehoseFactory,\n                inputSource,\n                ingestionSchema.getIOConfig().getInputFormat(),\n                ingestionSchema.getIOConfig().isAppendToExisting()\n            ),\n            ingestionSchema.getTuningConfig()\n        ),\n        getContext(),\n        split\n    );\n  }\n","date":"2020-02-25 09:34:39","endLine":132,"groupId":"17471","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/10/311a8a9c4e6a29c3350e8679cec556d8279d0e.src","preCode":"  SubTaskSpec<SinglePhaseSubTask> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final SplittableInputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    return new SinglePhaseSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        new ParallelIndexIngestionSpec(\n            ingestionSchema.getDataSchema(),\n            new ParallelIndexIOConfig(\n                firehoseFactory,\n                inputSource,\n                ingestionSchema.getIOConfig().getInputFormat(),\n                ingestionSchema.getIOConfig().isAppendToExisting()\n            ),\n            ingestionSchema.getTuningConfig()\n        ),\n        getContext(),\n        split\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/SinglePhaseParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"3bc7ae782c9e5989da88999fa91ddfb6fa559a31","commitMessage":"@@@Create splits of multiple files for parallel indexing (#9360)\n\n* Create splits of multiple files for parallel indexing\n\n* fix wrong import and npe in test\n\n* use the single file split in tests\n\n* rename\n\n* import order\n\n* Remove specific local input source\n\n* Update docs/ingestion/native-batch.md\n\nCo-Authored-By: sthetland <steve.hetland@imply.io>\n\n* Update docs/ingestion/native-batch.md\n\nCo-Authored-By: sthetland <steve.hetland@imply.io>\n\n* doc and error msg\n\n* fix build\n\n* fix a test and address comments\n\nCo-authored-by: sthetland <steve.hetland@imply.io>\n","date":"2020-02-25 09:34:39","modifiedFileCount":"31","status":"M","submitter":"Jihoon Son"},{"authorTime":"2021-04-02 03:29:36","codes":[{"authorDate":"2021-04-02 03:29:36","commitOrder":7,"curCode":"  final SubTaskSpec<T> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final InputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    final ParallelIndexIngestionSpec subTaskIngestionSpec = new ParallelIndexIngestionSpec(\n        ingestionSchema.getDataSchema(),\n        new ParallelIndexIOConfig(\n            firehoseFactory,\n            inputSource,\n            ingestionSchema.getIOConfig().getInputFormat(),\n            ingestionSchema.getIOConfig().isAppendToExisting(),\n            ingestionSchema.getIOConfig().isDropExisting()\n        ),\n        ingestionSchema.getTuningConfig()\n    );\n\n    return createSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        getContext(),\n        split,\n        subTaskIngestionSpec\n    );\n  }\n","date":"2021-04-02 03:29:36","endLine":114,"groupId":"2048","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b0/6539137455833516d0d0c23bd29aa6eeb12b62.src","preCode":"  final SubTaskSpec<T> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final InputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    final ParallelIndexIngestionSpec subTaskIngestionSpec = new ParallelIndexIngestionSpec(\n        ingestionSchema.getDataSchema(),\n        new ParallelIndexIOConfig(\n            firehoseFactory,\n            inputSource,\n            ingestionSchema.getIOConfig().getInputFormat(),\n            ingestionSchema.getIOConfig().isAppendToExisting()\n        ),\n        ingestionSchema.getTuningConfig()\n    );\n\n    return createSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        getContext(),\n        split,\n        subTaskIngestionSpec\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/InputSourceSplitParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2021-04-02 03:29:36","commitOrder":7,"curCode":"  SubTaskSpec<SinglePhaseSubTask> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final InputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    return new SinglePhaseSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        new ParallelIndexIngestionSpec(\n            ingestionSchema.getDataSchema(),\n            new ParallelIndexIOConfig(\n                firehoseFactory,\n                inputSource,\n                ingestionSchema.getIOConfig().getInputFormat(),\n                ingestionSchema.getIOConfig().isAppendToExisting(),\n                ingestionSchema.getIOConfig().isDropExisting()\n            ),\n            ingestionSchema.getTuningConfig()\n        ),\n        getContext(),\n        split\n    );\n  }\n","date":"2021-04-02 03:29:36","endLine":130,"groupId":"17471","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/17/987665a9c801a19df782b5d12cd9ea015438df.src","preCode":"  SubTaskSpec<SinglePhaseSubTask> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final InputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    return new SinglePhaseSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        new ParallelIndexIngestionSpec(\n            ingestionSchema.getDataSchema(),\n            new ParallelIndexIOConfig(\n                firehoseFactory,\n                inputSource,\n                ingestionSchema.getIOConfig().getInputFormat(),\n                ingestionSchema.getIOConfig().isAppendToExisting()\n            ),\n            ingestionSchema.getTuningConfig()\n        ),\n        getContext(),\n        split\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/SinglePhaseParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"d7f529336463dad273a742808b49d524bdc4ae11","commitMessage":"@@@Add an option for ingestion task to drop (mark unused) all existing segments that are contained by interval in the ingestionSpec (#11025)\n\n* Auto-Compaction can run indefinitely when segmentGranularity is changed from coarser to finer.\n\n* Add option to drop segments after ingestion\n\n* fix checkstyle\n\n* add tests\n\n* add tests\n\n* add tests\n\n* fix test\n\n* add tests\n\n* fix checkstyle\n\n* fix checkstyle\n\n* add docs\n\n* fix docs\n\n* address comments\n\n* address comments\n\n* fix spelling","date":"2021-04-02 03:29:36","modifiedFileCount":"44","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-05-08 05:29:48","codes":[{"authorDate":"2021-05-08 05:29:48","commitOrder":8,"curCode":"  final SubTaskSpec<T> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final InputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    final ParallelIndexIngestionSpec subTaskIngestionSpec = new ParallelIndexIngestionSpec(\n        ingestionSchema.getDataSchema(),\n        new ParallelIndexIOConfig(\n            firehoseFactory,\n            inputSource,\n            ingestionSchema.getIOConfig().getInputFormat(),\n            ingestionSchema.getIOConfig().isAppendToExisting(),\n            ingestionSchema.getIOConfig().isDropExisting()\n        ),\n        ingestionSchema.getTuningConfig()\n    );\n\n    return createSubTaskSpec(\n        getBaseSubtaskSpecName() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        getContext(),\n        split,\n        subTaskIngestionSpec\n    );\n  }\n","date":"2021-05-08 05:29:48","endLine":116,"groupId":"104765","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3f/41dba24c16b3987aff12d448ba72ed93dd61f5.src","preCode":"  final SubTaskSpec<T> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final InputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    final ParallelIndexIngestionSpec subTaskIngestionSpec = new ParallelIndexIngestionSpec(\n        ingestionSchema.getDataSchema(),\n        new ParallelIndexIOConfig(\n            firehoseFactory,\n            inputSource,\n            ingestionSchema.getIOConfig().getInputFormat(),\n            ingestionSchema.getIOConfig().isAppendToExisting(),\n            ingestionSchema.getIOConfig().isDropExisting()\n        ),\n        ingestionSchema.getTuningConfig()\n    );\n\n    return createSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        getContext(),\n        split,\n        subTaskIngestionSpec\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/InputSourceSplitParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2021-05-08 05:29:48","commitOrder":8,"curCode":"  SubTaskSpec<SinglePhaseSubTask> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final InputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    final Map<String, Object> subtaskContext = new HashMap<>(getContext());\n    return new SinglePhaseSubTaskSpec(\n        getBaseSubtaskSpecName() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        new ParallelIndexIngestionSpec(\n            ingestionSchema.getDataSchema(),\n            new ParallelIndexIOConfig(\n                firehoseFactory,\n                inputSource,\n                ingestionSchema.getIOConfig().getInputFormat(),\n                ingestionSchema.getIOConfig().isAppendToExisting(),\n                ingestionSchema.getIOConfig().isDropExisting()\n            ),\n            ingestionSchema.getTuningConfig()\n        ),\n        subtaskContext,\n        split\n    );\n  }\n","date":"2021-05-08 05:29:48","endLine":209,"groupId":"104765","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/86/bd13beec1917573daa5b4d4eecfc394609f901.src","preCode":"  SubTaskSpec<SinglePhaseSubTask> newTaskSpec(InputSplit split)\n  {\n    final FirehoseFactory firehoseFactory;\n    final InputSource inputSource;\n    if (baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor) {\n      firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor) baseInputSource).getFirehoseFactory().withSplit(split);\n      inputSource = null;\n    } else {\n      firehoseFactory = null;\n      inputSource = baseInputSource.withSplit(split);\n    }\n    return new SinglePhaseSubTaskSpec(\n        getTaskId() + \"_\" + getAndIncrementNextSpecId(),\n        getGroupId(),\n        getTaskId(),\n        new ParallelIndexIngestionSpec(\n            ingestionSchema.getDataSchema(),\n            new ParallelIndexIOConfig(\n                firehoseFactory,\n                inputSource,\n                ingestionSchema.getIOConfig().getInputFormat(),\n                ingestionSchema.getIOConfig().isAppendToExisting(),\n                ingestionSchema.getIOConfig().isDropExisting()\n            ),\n            ingestionSchema.getTuningConfig()\n        ),\n        getContext(),\n        split\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/SinglePhaseParallelIndexTaskRunner.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"2df42143aec6c50e9ac31d89cd75749d10d37a3d","commitMessage":"@@@Fix idempotence of segment allocation and task report apis in native batch ingestion (#11189)\n\n* Fix idempotence of segment allocation and task report apis in native\nbatch ingestion\n\n* better error and javadoc\n\n* checkstyle and dependency\n\n* fix tests and add more tests\n\n* task config instead of context; add doc\n\n* unused import and dependency\n\n* typo in doc\n\n* fix unintended changes\n\n* fix wrong import\n\n* remove unnecessary error handling\n\n* add task context back\n\n* default task context\n\n* fix test and doc\n\n* address comments\n\n* unused imports","date":"2021-05-08 05:29:48","modifiedFileCount":"72","status":"M","submitter":"Jihoon Son"}]
