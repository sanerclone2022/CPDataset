[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = new TopNQueryBuilder()\n        .dataSource(dataSource)\n        .granularity(allGran)\n        .dimension(marketDimension)\n        .metric(indexMetric)\n        .threshold(4)\n        .intervals(fullOnInterval)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonDoubleAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(addRowsIndexConstant))\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2018-08-31 00:56:26","endLine":82,"groupId":"23286","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/44/a030c9e5f6a95af29b94ac3d5a84976e68d0be.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = new TopNQueryBuilder()\n        .dataSource(dataSource)\n        .granularity(allGran)\n        .dimension(marketDimension)\n        .metric(indexMetric)\n        .threshold(4)\n        .intervals(fullOnInterval)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonDoubleAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(addRowsIndexConstant))\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeBoundaryQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2018-08-31 00:56:26","endLine":48,"groupId":"23286","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/27/ff47050d64684285583b0f0da7e4f52ddd6e05.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeBoundaryQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2019-01-22 03:11:10","commitOrder":2,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = new TopNQueryBuilder()\n        .dataSource(dataSource)\n        .granularity(allGran)\n        .dimension(marketDimension)\n        .metric(indexMetric)\n        .threshold(4)\n        .intervals(fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonDoubleAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(addRowsIndexConstant))\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2019-01-22 03:11:10","endLine":82,"groupId":"23286","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c8/6f3cb5b54c41a5e05badb25918927489fe8bd6.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = new TopNQueryBuilder()\n        .dataSource(dataSource)\n        .granularity(allGran)\n        .dimension(marketDimension)\n        .metric(indexMetric)\n        .threshold(4)\n        .intervals(fullOnInterval)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonDoubleAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(addRowsIndexConstant))\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeBoundaryQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2018-08-31 00:56:26","endLine":48,"groupId":"23286","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/27/ff47050d64684285583b0f0da7e4f52ddd6e05.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeBoundaryQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"N"}],"commitId":"8eae26fd4e7572060d112864dd3d5f6a865b9c89","commitMessage":"@@@Introduce SegmentId class (#6370)\n\n* Introduce SegmentId class\n\n* tmp\n\n* Fix SelectQueryRunnerTest\n\n* Fix indentation\n\n* Fixes\n\n* Remove Comparators.inverse() tests\n\n* Refinements\n\n* Fix tests\n\n* Fix more tests\n\n* Remove duplicate DataSegmentTest.  fixes #6064\n\n* SegmentDescriptor doc\n\n* Fix SQLMetadataStorageUpdaterJobHandler\n\n* Fix DataSegment deserialization for ignoring id\n\n* Add comments\n\n* More comments\n\n* Address more comments\n\n* Fix compilation\n\n* Restore segment2 in SystemSchemaTest according to a comment\n\n* Fix style\n\n* fix testServerSegmentsTable\n\n* Fix compilation\n\n* Add comments about why SegmentId and SegmentIdWithShardSpec are separate classes\n\n* Fix SystemSchemaTest\n\n* Fix style\n\n* Compare SegmentDescriptor with SegmentId in Javadoc and comments rather than with DataSegment\n\n* Remove a link.  see https://youtrack.jetbrains.com/issue/IDEA-205164\n\n* Fix compilation\n","date":"2019-01-22 03:11:10","modifiedFileCount":"308","status":"M","submitter":"Roman Leventov"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2019-07-07 00:33:12","commitOrder":3,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(QueryRunnerTestHelper.marketDimension)\n        .metric(QueryRunnerTestHelper.indexMetric)\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    QueryRunnerTestHelper.commonDoubleAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2019-07-07 00:33:12","endLine":74,"groupId":"23286","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2f/c0db7a1c93d59dc8a7204ec1cb42925ce9595f.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = new TopNQueryBuilder()\n        .dataSource(dataSource)\n        .granularity(allGran)\n        .dimension(marketDimension)\n        .metric(indexMetric)\n        .threshold(4)\n        .intervals(fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonDoubleAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(addRowsIndexConstant))\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":3,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeBoundaryQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2018-08-31 00:56:26","endLine":48,"groupId":"23286","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/27/ff47050d64684285583b0f0da7e4f52ddd6e05.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeBoundaryQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"N"}],"commitId":"1166bbcb75d432817715fdd429737f86730b5591","commitMessage":"@@@Remove static imports from tests (#8036)\n\nMake static imports forbidden in tests and remove all occurrences to be\nconsistent with the non-test code.\n\nAlso.  various changes to files affected by above:\n- Reformat to adhere to druid style guide\n- Fix various IntelliJ warnings\n- Fix various SonarLint warnings (e.g..  the expected/actual args to\n  Assert.assertEquals() were flipped)","date":"2019-07-07 00:33:12","modifiedFileCount":"98","status":"M","submitter":"Chi Cao Minh"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2019-07-19 04:16:28","commitOrder":4,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(QueryRunnerTestHelper.marketDimension)\n        .metric(QueryRunnerTestHelper.indexMetric)\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    QueryRunnerTestHelper.commonDoubleAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2019-07-19 04:16:28","endLine":73,"groupId":"23286","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/65/496170dfe120e4df0307d1c4765572cc499625.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(QueryRunnerTestHelper.marketDimension)\n        .metric(QueryRunnerTestHelper.indexMetric)\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    QueryRunnerTestHelper.commonDoubleAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":4,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeBoundaryQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2018-08-31 00:56:26","endLine":48,"groupId":"23286","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/27/ff47050d64684285583b0f0da7e4f52ddd6e05.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeBoundaryQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"N"}],"commitId":"03e55d30ebcac9ec97edb1a638a5a99886c41374","commitMessage":"@@@add CachingClusteredClient benchmark.  refactor some stuff (#8089)\n\n* add CachingClusteredClient benchmark.  refactor some stuff\n\n* revert WeightedServerSelectorStrategy to ConnectionCountServerSelectorStrategy and remove getWeight since felt artificial.  default mergeResults in toolchest implementation for topn.  search.  select\n\n* adjust javadoc\n\n* adjustments\n\n* oops\n\n* use it\n\n* use BinaryOperator.  remove CombiningFunction.  use Comparator instead of Ordering.  other review adjustments\n\n* rename createComparator to createResultComparator.  fix typo.  firstNonNull nullable parameters\n","date":"2019-07-19 04:16:28","modifiedFileCount":"50","status":"M","submitter":"Clint Wylie"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":5,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.DATA_SOURCE)\n        .granularity(QueryRunnerTestHelper.ALL_GRAN)\n        .dimension(QueryRunnerTestHelper.MARKET_DIMENSION)\n        .metric(QueryRunnerTestHelper.INDEX_METRIC)\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    QueryRunnerTestHelper.COMMON_DOUBLE_AGGREGATORS,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(QueryRunnerTestHelper.ADD_ROWS_INDEX_CONSTANT)\n        .build();\n\n    String json = JSON_MAPPER.writeValueAsString(query);\n    Query serdeQuery = JSON_MAPPER.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2019-08-23 18:13:54","endLine":73,"groupId":"106309","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e9/87f45c2280ea9c552c533ecb4e86e4ac7947df.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(QueryRunnerTestHelper.marketDimension)\n        .metric(QueryRunnerTestHelper.indexMetric)\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    QueryRunnerTestHelper.commonDoubleAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":5,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeBoundaryQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = JSON_MAPPER.writeValueAsString(query);\n    Query serdeQuery = JSON_MAPPER.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2019-08-23 18:13:54","endLine":48,"groupId":"106309","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/92/5eed2af7763cca23d3d4bab1339e6f865ff5c2.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeBoundaryQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
