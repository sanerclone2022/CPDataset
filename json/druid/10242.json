[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTransactionalAnnounceFailDbNotNullWantNull() throws IOException\n  {\n    final SegmentPublishResult result1 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(new SegmentPublishResult(ImmutableSet.of(defaultSegment), true), result1);\n\n    final SegmentPublishResult result2 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment2),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(new SegmentPublishResult(ImmutableSet.of(), false), result2);\n\n    \r\n    Assert.assertEquals(2, metadataUpdateCounter.get());\n  }\n","date":"2018-08-31 00:56:26","endLine":456,"groupId":"7226","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTransactionalAnnounceFailDbNotNullWantNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f1/3105ebceab4724c2e7154daff80973b47eece1.src","preCode":"  public void testTransactionalAnnounceFailDbNotNullWantNull() throws IOException\n  {\n    final SegmentPublishResult result1 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(new SegmentPublishResult(ImmutableSet.of(defaultSegment), true), result1);\n\n    final SegmentPublishResult result2 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment2),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(new SegmentPublishResult(ImmutableSet.of(), false), result2);\n\n    \r\n    Assert.assertEquals(2, metadataUpdateCounter.get());\n  }\n","realPath":"server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":438,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTransactionalAnnounceFailDbNotNullWantDifferent() throws IOException\n  {\n    final SegmentPublishResult result1 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(new SegmentPublishResult(ImmutableSet.of(defaultSegment), true), result1);\n\n    final SegmentPublishResult result2 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment2),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"qux\")),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(new SegmentPublishResult(ImmutableSet.of(), false), result2);\n\n    \r\n    Assert.assertEquals(2, metadataUpdateCounter.get());\n  }\n","date":"2018-08-31 00:56:26","endLine":477,"groupId":"21400","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTransactionalAnnounceFailDbNotNullWantDifferent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f1/3105ebceab4724c2e7154daff80973b47eece1.src","preCode":"  public void testTransactionalAnnounceFailDbNotNullWantDifferent() throws IOException\n  {\n    final SegmentPublishResult result1 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(new SegmentPublishResult(ImmutableSet.of(defaultSegment), true), result1);\n\n    final SegmentPublishResult result2 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment2),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"qux\")),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(new SegmentPublishResult(ImmutableSet.of(), false), result2);\n\n    \r\n    Assert.assertEquals(2, metadataUpdateCounter.get());\n  }\n","realPath":"server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":459,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-02-14 03:22:48","codes":[{"authorDate":"2019-02-14 03:22:48","commitOrder":2,"curCode":"  public void testTransactionalAnnounceFailDbNotNullWantNull() throws IOException\n  {\n    final SegmentPublishResult result1 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(SegmentPublishResult.ok(ImmutableSet.of(defaultSegment)), result1);\n\n    final SegmentPublishResult result2 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment2),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(SegmentPublishResult.fail(\"java.lang.RuntimeException: Aborting transaction!\"), result2);\n\n    \r\n    Assert.assertEquals(2, metadataUpdateCounter.get());\n  }\n","date":"2019-02-14 03:22:48","endLine":457,"groupId":"23237","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTransactionalAnnounceFailDbNotNullWantNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/87/9ddfb13b4ce6d0f2bcea290ce3b833b0cd0191.src","preCode":"  public void testTransactionalAnnounceFailDbNotNullWantNull() throws IOException\n  {\n    final SegmentPublishResult result1 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(new SegmentPublishResult(ImmutableSet.of(defaultSegment), true), result1);\n\n    final SegmentPublishResult result2 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment2),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(new SegmentPublishResult(ImmutableSet.of(), false), result2);\n\n    \r\n    Assert.assertEquals(2, metadataUpdateCounter.get());\n  }\n","realPath":"server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":439,"status":"M"},{"authorDate":"2019-02-14 03:22:48","commitOrder":2,"curCode":"  public void testTransactionalAnnounceFailDbNotNullWantDifferent() throws IOException\n  {\n    final SegmentPublishResult result1 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(SegmentPublishResult.ok(ImmutableSet.of(defaultSegment)), result1);\n\n    final SegmentPublishResult result2 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment2),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"qux\")),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(SegmentPublishResult.fail(\"java.lang.RuntimeException: Aborting transaction!\"), result2);\n\n    \r\n    Assert.assertEquals(2, metadataUpdateCounter.get());\n  }\n","date":"2019-02-14 03:22:48","endLine":478,"groupId":"20770","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTransactionalAnnounceFailDbNotNullWantDifferent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/87/9ddfb13b4ce6d0f2bcea290ce3b833b0cd0191.src","preCode":"  public void testTransactionalAnnounceFailDbNotNullWantDifferent() throws IOException\n  {\n    final SegmentPublishResult result1 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(new SegmentPublishResult(ImmutableSet.of(defaultSegment), true), result1);\n\n    final SegmentPublishResult result2 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment2),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"qux\")),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(new SegmentPublishResult(ImmutableSet.of(), false), result2);\n\n    \r\n    Assert.assertEquals(2, metadataUpdateCounter.get());\n  }\n","realPath":"server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":460,"status":"M"}],"commitId":"1701fbcad3430a3e6e19134e870a6059864c8a80","commitMessage":"@@@Improve error message for revoked locks (#7035)\n\n* Improve error message for revoked locks\n\n* fix test\n\n* fix test\n\n* fix test\n\n* fix toString\n","date":"2019-02-14 03:22:48","modifiedFileCount":"11","status":"M","submitter":"Jihoon Son"},{"authorTime":"2021-04-02 03:29:36","codes":[{"authorDate":"2021-04-02 03:29:36","commitOrder":3,"curCode":"  public void testTransactionalAnnounceFailDbNotNullWantNull() throws IOException\n  {\n    final SegmentPublishResult result1 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment),\n        ImmutableSet.of(),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(SegmentPublishResult.ok(ImmutableSet.of(defaultSegment)), result1);\n\n    final SegmentPublishResult result2 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment2),\n        ImmutableSet.of(),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(SegmentPublishResult.fail(\"java.lang.RuntimeException: Aborting transaction!\"), result2);\n\n    \r\n    Assert.assertEquals(2, metadataUpdateCounter.get());\n  }\n","date":"2021-04-02 03:29:36","endLine":718,"groupId":"10242","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testTransactionalAnnounceFailDbNotNullWantNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/92/4ad92bdcd40f6e446914fc091458adcaf0948f.src","preCode":"  public void testTransactionalAnnounceFailDbNotNullWantNull() throws IOException\n  {\n    final SegmentPublishResult result1 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(SegmentPublishResult.ok(ImmutableSet.of(defaultSegment)), result1);\n\n    final SegmentPublishResult result2 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment2),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(SegmentPublishResult.fail(\"java.lang.RuntimeException: Aborting transaction!\"), result2);\n\n    \r\n    Assert.assertEquals(2, metadataUpdateCounter.get());\n  }\n","realPath":"server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":698,"status":"M"},{"authorDate":"2021-04-02 03:29:36","commitOrder":3,"curCode":"  public void testTransactionalAnnounceFailDbNotNullWantDifferent() throws IOException\n  {\n    final SegmentPublishResult result1 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment),\n        ImmutableSet.of(),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(SegmentPublishResult.ok(ImmutableSet.of(defaultSegment)), result1);\n\n    final SegmentPublishResult result2 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment2),\n        ImmutableSet.of(),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"qux\")),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(SegmentPublishResult.fail(\"java.lang.RuntimeException: Aborting transaction!\"), result2);\n\n    \r\n    Assert.assertEquals(2, metadataUpdateCounter.get());\n  }\n","date":"2021-04-02 03:29:36","endLine":741,"groupId":"10242","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testTransactionalAnnounceFailDbNotNullWantDifferent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/92/4ad92bdcd40f6e446914fc091458adcaf0948f.src","preCode":"  public void testTransactionalAnnounceFailDbNotNullWantDifferent() throws IOException\n  {\n    final SegmentPublishResult result1 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment),\n        new ObjectMetadata(null),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(SegmentPublishResult.ok(ImmutableSet.of(defaultSegment)), result1);\n\n    final SegmentPublishResult result2 = coordinator.announceHistoricalSegments(\n        ImmutableSet.of(defaultSegment2),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"qux\")),\n        new ObjectMetadata(ImmutableMap.of(\"foo\", \"baz\"))\n    );\n    Assert.assertEquals(SegmentPublishResult.fail(\"java.lang.RuntimeException: Aborting transaction!\"), result2);\n\n    \r\n    Assert.assertEquals(2, metadataUpdateCounter.get());\n  }\n","realPath":"server/src/test/java/org/apache/druid/metadata/IndexerSQLMetadataStorageCoordinatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":721,"status":"M"}],"commitId":"d7f529336463dad273a742808b49d524bdc4ae11","commitMessage":"@@@Add an option for ingestion task to drop (mark unused) all existing segments that are contained by interval in the ingestionSpec (#11025)\n\n* Auto-Compaction can run indefinitely when segmentGranularity is changed from coarser to finer.\n\n* Add option to drop segments after ingestion\n\n* fix checkstyle\n\n* add tests\n\n* add tests\n\n* add tests\n\n* fix test\n\n* add tests\n\n* fix checkstyle\n\n* fix checkstyle\n\n* add docs\n\n* fix docs\n\n* address comments\n\n* address comments\n\n* fix spelling","date":"2021-04-02 03:29:36","modifiedFileCount":"44","status":"M","submitter":"Maytas Monsereenusorn"}]
