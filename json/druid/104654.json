[{"authorTime":"2018-12-22 03:49:24","codes":[{"authorDate":"2018-12-22 03:49:24","commitOrder":1,"curCode":"  public Map<PartitionIdType, SequenceOffsetType> getCurrentOffsets(final String id, final boolean retry)\n  {\n    log.debug(\"GetCurrentOffsets task[%s] retry[%s]\", id, retry);\n\n    try {\n      final FullResponseHolder response = submitRequestWithEmptyContent(\n          id,\n          HttpMethod.GET,\n          \"offsets/current\",\n          null,\n          retry\n      );\n      return deserializeMap(response.getContent(), Map.class, getPartitionType(), getSequenceType());\n    }\n    catch (NoTaskLocationException e) {\n      return ImmutableMap.of();\n    }\n    catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2018-12-22 03:49:24","endLine":247,"groupId":"1451","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getCurrentOffsets","params":"(finalStringid@finalbooleanretry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bd/946cc6e9c7ea6e2d789454da694a5fab2cdcb9.src","preCode":"  public Map<PartitionIdType, SequenceOffsetType> getCurrentOffsets(final String id, final boolean retry)\n  {\n    log.debug(\"GetCurrentOffsets task[%s] retry[%s]\", id, retry);\n\n    try {\n      final FullResponseHolder response = submitRequestWithEmptyContent(\n          id,\n          HttpMethod.GET,\n          \"offsets/current\",\n          null,\n          retry\n      );\n      return deserializeMap(response.getContent(), Map.class, getPartitionType(), getSequenceType());\n    }\n    catch (NoTaskLocationException e) {\n      return ImmutableMap.of();\n    }\n    catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTaskClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"B"},{"authorDate":"2018-12-22 03:49:24","commitOrder":1,"curCode":"  public Map<PartitionIdType, SequenceOffsetType> getEndOffsets(final String id)\n  {\n    log.debug(\"GetEndOffsets task[%s]\", id);\n\n    try {\n      final FullResponseHolder response = submitRequestWithEmptyContent(id, HttpMethod.GET, \"offsets/end\", null, true);\n      return deserializeMap(response.getContent(), Map.class, getPartitionType(), getSequenceType());\n    }\n    catch (NoTaskLocationException e) {\n      return ImmutableMap.of();\n    }\n    catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2018-12-22 03:49:24","endLine":293,"groupId":"1454","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndOffsets","params":"(finalStringid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bd/946cc6e9c7ea6e2d789454da694a5fab2cdcb9.src","preCode":"  public Map<PartitionIdType, SequenceOffsetType> getEndOffsets(final String id)\n  {\n    log.debug(\"GetEndOffsets task[%s]\", id);\n\n    try {\n      final FullResponseHolder response = submitRequestWithEmptyContent(id, HttpMethod.GET, \"offsets/end\", null, true);\n      return deserializeMap(response.getContent(), Map.class, getPartitionType(), getSequenceType());\n    }\n    catch (NoTaskLocationException e) {\n      return ImmutableMap.of();\n    }\n    catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTaskClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"B"}],"commitId":"7c7997e8a1183a7bffad731ca94e8b4c381e8665","commitMessage":"@@@Add Kinesis Indexing Service to core Druid (#6431)\n\n* created seekablestream classes\n\n* created seekablestreamsupervisor class\n\n* first attempt to integrate kafa indexing service to use SeekableStream\n\n* seekablestream bug fixes\n\n* kafkarecordsupplier\n\n* integrated kafka indexing service with seekablestream\n\n* implemented resume/suspend and refactored some package names\n\n* moved kinesis indexing service into core druid extensions\n\n* merged some changes from kafka supervisor race condition\n\n* integrated kinesis-indexing-service with seekablestream\n\n* unite tests for kinesis-indexing-service\n\n* various bug fixes for kinesis-indexing-service\n\n* refactored kinesisindexingtask\n\n* finished up more kinesis unit tests\n\n* more bug fixes for kinesis-indexing-service\n\n* finsihed refactoring kinesis unit tests\n\n* removed KinesisParititons and KafkaPartitions to use SeekableStreamPartitions\n\n* kinesis-indexing-service code cleanup and docs\n\n* merge #6291\n\nmerge #6337\n\nmerge #6383\n\n* added more docs and reordered methods\n\n* fixd kinesis tests after merging master and added docs in seekablestream\n\n* fix various things from pr comment\n\n* improve recordsupplier and add unit tests\n\n* migrated to aws-java-sdk-kinesis\n\n* merge changes from master\n\n* fix pom files and forbiddenapi checks\n\n* checkpoint JavaType bug fix\n\n* fix pom and stuff\n\n* disable checkpointing in kinesis\n\n* fix kinesis sequence number null in closed shard\n\n* merge changes from master\n\n* fixes for kinesis tasks\n\n* capitalized <partitionType.  sequenceType>\n\n* removed abstract class loggers\n\n* conform to guava api restrictions\n\n* add docker for travis other modules test\n\n* address comments\n\n* improve RecordSupplier to supply records in batch\n\n* fix strict compile issue\n\n* add test scope for localstack dependency\n\n* kinesis indexing task refactoring\n\n* comments\n\n* github comments\n\n* minor fix\n\n* removed unneeded readme\n\n* fix deserialization bug\n\n* fix various bugs\n\n* KinesisRecordSupplier unable to catch up to earliest position in stream bug fix\n\n* minor changes to kinesis\n\n* implement deaggregate for kinesis\n\n* Merge remote-tracking branch 'upstream/master' into seekablestream\n\n* fix kinesis offset discrepancy with kafka\n\n* kinesis record supplier disable getPosition\n\n* pr comments\n\n* mock for kinesis tests and remove docker dependency for unit tests\n\n* PR comments\n\n* avg lag in kafkasupervisor #6587\n\n* refacotred SequenceMetadata in taskRunners\n\n* small fix\n\n* more small fix\n\n* recordsupplier resource leak\n\n* revert .travis.yml formatting\n\n* fix style\n\n* kinesis docs\n\n* doc part2\n\n* more docs\n\n* comments\n\n* comments*2\n\n* revert string replace changes\n\n* comments\n\n* teamcity\n\n* comments part 1\n\n* comments part 2\n\n* comments part 3\n\n* merge #6754\n\n* fix injection binding\n\n* comments\n\n* KinesisRegion refactor\n\n* comments part idk lol\n\n* can't think of a commit msg anymore\n\n* remove possiblyResetDataSourceMetadata() for IncrementalPublishingTaskRunner\n\n* commmmmmmmmmments\n\n* extra error handling in KinesisRecordSupplier getRecords\n\n* comments\n\n* quickfix\n\n* typo\n\n* oof\n","date":"2018-12-22 03:49:24","modifiedFileCount":"22","status":"B","submitter":"Joshua Sun"},{"authorTime":"2019-08-27 10:27:41","codes":[{"authorDate":"2019-08-27 10:27:41","commitOrder":2,"curCode":"  public Map<PartitionIdType, SequenceOffsetType> getCurrentOffsets(final String id, final boolean retry)\n  {\n    log.debug(\"GetCurrentOffsets task[%s] retry[%s]\", id, retry);\n\n    try {\n      final StringFullResponseHolder response = submitRequestWithEmptyContent(\n          id,\n          HttpMethod.GET,\n          \"offsets/current\",\n          null,\n          retry\n      );\n      return deserializeMap(response.getContent(), Map.class, getPartitionType(), getSequenceType());\n    }\n    catch (NoTaskLocationException e) {\n      return ImmutableMap.of();\n    }\n    catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-08-27 10:27:41","endLine":247,"groupId":"104654","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getCurrentOffsets","params":"(finalStringid@finalbooleanretry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8e/a6321d1bdb6a143a03db58c552dbdad26244b8.src","preCode":"  public Map<PartitionIdType, SequenceOffsetType> getCurrentOffsets(final String id, final boolean retry)\n  {\n    log.debug(\"GetCurrentOffsets task[%s] retry[%s]\", id, retry);\n\n    try {\n      final FullResponseHolder response = submitRequestWithEmptyContent(\n          id,\n          HttpMethod.GET,\n          \"offsets/current\",\n          null,\n          retry\n      );\n      return deserializeMap(response.getContent(), Map.class, getPartitionType(), getSequenceType());\n    }\n    catch (NoTaskLocationException e) {\n      return ImmutableMap.of();\n    }\n    catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTaskClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"},{"authorDate":"2019-08-27 10:27:41","commitOrder":2,"curCode":"  public Map<PartitionIdType, SequenceOffsetType> getEndOffsets(final String id)\n  {\n    log.debug(\"GetEndOffsets task[%s]\", id);\n\n    try {\n      final StringFullResponseHolder response = submitRequestWithEmptyContent(id, HttpMethod.GET, \"offsets/end\", null, true);\n      return deserializeMap(response.getContent(), Map.class, getPartitionType(), getSequenceType());\n    }\n    catch (NoTaskLocationException e) {\n      return ImmutableMap.of();\n    }\n    catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-08-27 10:27:41","endLine":293,"groupId":"104654","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getEndOffsets","params":"(finalStringid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8e/a6321d1bdb6a143a03db58c552dbdad26244b8.src","preCode":"  public Map<PartitionIdType, SequenceOffsetType> getEndOffsets(final String id)\n  {\n    log.debug(\"GetEndOffsets task[%s]\", id);\n\n    try {\n      final FullResponseHolder response = submitRequestWithEmptyContent(id, HttpMethod.GET, \"offsets/end\", null, true);\n      return deserializeMap(response.getContent(), Map.class, getPartitionType(), getSequenceType());\n    }\n    catch (NoTaskLocationException e) {\n      return ImmutableMap.of();\n    }\n    catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTaskClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"M"}],"commitId":"e5ef5ddafa632256fe8a387a117557c415bee7df","commitMessage":"@@@Fix the shuffle with TLS enabled for parallel indexing; add an integration test; improve unit tests (#8350)\n\n* Fix shuffle with tls enabled; add an integration test; improve unit tests\n\n* remove debug log\n\n* fix tests\n\n* unused import\n\n* add javadoc\n\n* rename to getContent\n","date":"2019-08-27 10:27:41","modifiedFileCount":"37","status":"M","submitter":"Jihoon Son"}]
