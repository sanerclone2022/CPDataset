[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private Iterable<Result<TopNResultValue>> makeTopNResults(List<String> names, Object... objects)\n  {\n    Preconditions.checkArgument(names.size() == 7);\n    List<Result<TopNResultValue>> retVal = Lists.newArrayList();\n    int index = 0;\n    while (index < objects.length) {\n      DateTime timestamp = (DateTime) objects[index++];\n\n      List<Map<String, Object>> values = Lists.newArrayList();\n      while (index < objects.length && !(objects[index] instanceof DateTime)) {\n        if (objects.length - index < 3) {\n          throw new ISE(\n              \"expect 3 values for each entry in the top list, had %d values left.\", objects.length - index\n          );\n        }\n        final double imps = ((Number) objects[index + 2]).doubleValue();\n        final double rows = ((Number) objects[index + 1]).doubleValue();\n        values.add(\n            ImmutableMap.<String, Object>builder()\n                .put(names.get(0), objects[index])\n                .put(names.get(1), rows)\n                .put(names.get(2), imps)\n                .put(names.get(3), imps)\n                .put(names.get(4), imps / rows)\n                .put(names.get(5), ((imps * 2) / rows))\n                .put(names.get(6), (imps / (rows * 2)))\n                .build()\n        );\n        index += 3;\n      }\n\n      retVal.add(new Result<>(timestamp, new TopNResultValue(values)));\n    }\n    return retVal;\n  }\n","date":"2018-08-31 00:56:26","endLine":2530,"groupId":"18246","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"makeTopNResults","params":"(List<String>names@Object...objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/6dfd0a7ba50835713564aebc5ab8650ac4b7a1.src","preCode":"  private Iterable<Result<TopNResultValue>> makeTopNResults(List<String> names, Object... objects)\n  {\n    Preconditions.checkArgument(names.size() == 7);\n    List<Result<TopNResultValue>> retVal = Lists.newArrayList();\n    int index = 0;\n    while (index < objects.length) {\n      DateTime timestamp = (DateTime) objects[index++];\n\n      List<Map<String, Object>> values = Lists.newArrayList();\n      while (index < objects.length && !(objects[index] instanceof DateTime)) {\n        if (objects.length - index < 3) {\n          throw new ISE(\n              \"expect 3 values for each entry in the top list, had %d values left.\", objects.length - index\n          );\n        }\n        final double imps = ((Number) objects[index + 2]).doubleValue();\n        final double rows = ((Number) objects[index + 1]).doubleValue();\n        values.add(\n            ImmutableMap.<String, Object>builder()\n                .put(names.get(0), objects[index])\n                .put(names.get(1), rows)\n                .put(names.get(2), imps)\n                .put(names.get(3), imps)\n                .put(names.get(4), imps / rows)\n                .put(names.get(5), ((imps * 2) / rows))\n                .put(names.get(6), (imps / (rows * 2)))\n                .build()\n        );\n        index += 3;\n      }\n\n      retVal.add(new Result<>(timestamp, new TopNResultValue(values)));\n    }\n    return retVal;\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2496,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private Iterable<Result<SearchResultValue>> makeSearchResults(String dim, Object... objects)\n  {\n    List<Result<SearchResultValue>> retVal = Lists.newArrayList();\n    int index = 0;\n    while (index < objects.length) {\n      DateTime timestamp = (DateTime) objects[index++];\n\n      List<SearchHit> values = Lists.newArrayList();\n      while (index < objects.length && !(objects[index] instanceof DateTime)) {\n        values.add(new SearchHit(dim, objects[index++].toString(), (Integer) objects[index++]));\n      }\n\n      retVal.add(new Result<>(timestamp, new SearchResultValue(values)));\n    }\n    return retVal;\n  }\n","date":"2018-08-31 00:56:26","endLine":2563,"groupId":"17360","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSearchResults","params":"(Stringdim@Object...objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/6dfd0a7ba50835713564aebc5ab8650ac4b7a1.src","preCode":"  private Iterable<Result<SearchResultValue>> makeSearchResults(String dim, Object... objects)\n  {\n    List<Result<SearchResultValue>> retVal = Lists.newArrayList();\n    int index = 0;\n    while (index < objects.length) {\n      DateTime timestamp = (DateTime) objects[index++];\n\n      List<SearchHit> values = Lists.newArrayList();\n      while (index < objects.length && !(objects[index] instanceof DateTime)) {\n        values.add(new SearchHit(dim, objects[index++].toString(), (Integer) objects[index++]));\n      }\n\n      retVal.add(new Result<>(timestamp, new SearchResultValue(values)));\n    }\n    return retVal;\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2548,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-10-29 20:02:43","codes":[{"authorDate":"2018-10-29 20:02:43","commitOrder":2,"curCode":"  private Iterable<Result<TopNResultValue>> makeTopNResults(List<String> names, Object... objects)\n  {\n    Preconditions.checkArgument(names.size() == 7);\n    List<Result<TopNResultValue>> retVal = new ArrayList<>();\n    int index = 0;\n    while (index < objects.length) {\n      DateTime timestamp = (DateTime) objects[index++];\n\n      List<Map<String, Object>> values = new ArrayList<>();\n      while (index < objects.length && !(objects[index] instanceof DateTime)) {\n        if (objects.length - index < 3) {\n          throw new ISE(\n              \"expect 3 values for each entry in the top list, had %d values left.\", objects.length - index\n          );\n        }\n        final double imps = ((Number) objects[index + 2]).doubleValue();\n        final double rows = ((Number) objects[index + 1]).doubleValue();\n        values.add(\n            ImmutableMap.<String, Object>builder()\n                .put(names.get(0), objects[index])\n                .put(names.get(1), rows)\n                .put(names.get(2), imps)\n                .put(names.get(3), imps)\n                .put(names.get(4), imps / rows)\n                .put(names.get(5), ((imps * 2) / rows))\n                .put(names.get(6), (imps / (rows * 2)))\n                .build()\n        );\n        index += 3;\n      }\n\n      retVal.add(new Result<>(timestamp, new TopNResultValue(values)));\n    }\n    return retVal;\n  }\n","date":"2018-10-29 20:02:43","endLine":2557,"groupId":"10891","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"makeTopNResults","params":"(List<String>names@Object...objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d5/bd504191a623447e6f85270523a40d18046616.src","preCode":"  private Iterable<Result<TopNResultValue>> makeTopNResults(List<String> names, Object... objects)\n  {\n    Preconditions.checkArgument(names.size() == 7);\n    List<Result<TopNResultValue>> retVal = Lists.newArrayList();\n    int index = 0;\n    while (index < objects.length) {\n      DateTime timestamp = (DateTime) objects[index++];\n\n      List<Map<String, Object>> values = Lists.newArrayList();\n      while (index < objects.length && !(objects[index] instanceof DateTime)) {\n        if (objects.length - index < 3) {\n          throw new ISE(\n              \"expect 3 values for each entry in the top list, had %d values left.\", objects.length - index\n          );\n        }\n        final double imps = ((Number) objects[index + 2]).doubleValue();\n        final double rows = ((Number) objects[index + 1]).doubleValue();\n        values.add(\n            ImmutableMap.<String, Object>builder()\n                .put(names.get(0), objects[index])\n                .put(names.get(1), rows)\n                .put(names.get(2), imps)\n                .put(names.get(3), imps)\n                .put(names.get(4), imps / rows)\n                .put(names.get(5), ((imps * 2) / rows))\n                .put(names.get(6), (imps / (rows * 2)))\n                .build()\n        );\n        index += 3;\n      }\n\n      retVal.add(new Result<>(timestamp, new TopNResultValue(values)));\n    }\n    return retVal;\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2523,"status":"M"},{"authorDate":"2018-10-29 20:02:43","commitOrder":2,"curCode":"  private Iterable<Result<SearchResultValue>> makeSearchResults(String dim, Object... objects)\n  {\n    List<Result<SearchResultValue>> retVal = new ArrayList<>();\n    int index = 0;\n    while (index < objects.length) {\n      DateTime timestamp = (DateTime) objects[index++];\n\n      List<SearchHit> values = new ArrayList<>();\n      while (index < objects.length && !(objects[index] instanceof DateTime)) {\n        values.add(new SearchHit(dim, objects[index++].toString(), (Integer) objects[index++]));\n      }\n\n      retVal.add(new Result<>(timestamp, new SearchResultValue(values)));\n    }\n    return retVal;\n  }\n","date":"2018-10-29 20:02:43","endLine":2590,"groupId":"10891","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSearchResults","params":"(Stringdim@Object...objects)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d5/bd504191a623447e6f85270523a40d18046616.src","preCode":"  private Iterable<Result<SearchResultValue>> makeSearchResults(String dim, Object... objects)\n  {\n    List<Result<SearchResultValue>> retVal = Lists.newArrayList();\n    int index = 0;\n    while (index < objects.length) {\n      DateTime timestamp = (DateTime) objects[index++];\n\n      List<SearchHit> values = Lists.newArrayList();\n      while (index < objects.length && !(objects[index] instanceof DateTime)) {\n        values.add(new SearchHit(dim, objects[index++].toString(), (Integer) objects[index++]));\n      }\n\n      retVal.add(new Result<>(timestamp, new SearchResultValue(values)));\n    }\n    return retVal;\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2575,"status":"M"}],"commitId":"676f5e6d7f184101b8763e4249b18b237bbe0ec7","commitMessage":"@@@Prohibit some guava collection APIs and use JDK collection APIs directly (#6511)\n\n* Prohibit some guava collection APIs and use JDK APIs directly\n\n* reset files that changed by accident\n\n* sort codestyle/druid-forbidden-apis.txt alphabetically\n","date":"2018-10-29 20:02:43","modifiedFileCount":"427","status":"M","submitter":"QiuMM"}]
