[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null, new SegmentLoaderFactory(\n                new SegmentLoaderLocalCacheManager(\n                    null,\n                    new SegmentLoaderConfig()\n                    {\n                      @Override\n                      public List<StorageLocationConfig> getLocations()\n                      {\n                        return Lists.newArrayList();\n                      }\n                    },\n                    jsonMapper\n                )\n            ),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":208,"groupId":"7591","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ea/c46c5729206d26c70edcc1870244366f8b656e.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null, new SegmentLoaderFactory(\n                new SegmentLoaderLocalCacheManager(\n                    null,\n                    new SegmentLoaderConfig()\n                    {\n                      @Override\n                      public List<StorageLocationConfig> getLocations()\n                      {\n                        return Lists.newArrayList();\n                      }\n                    },\n                    jsonMapper\n                )\n            ),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(new SegmentLoaderLocalCacheManager(null, loaderConfig, jsonMapper)),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2018-08-31 00:56:26","endLine":153,"groupId":"3531","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5c/aa70b1cabee09ac4cc2f1de0a8a2ade300abe1.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(new SegmentLoaderLocalCacheManager(null, loaderConfig, jsonMapper)),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-10-29 20:02:43","commitOrder":2,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null, new SegmentLoaderFactory(\n                new SegmentLoaderLocalCacheManager(\n                    null,\n                    new SegmentLoaderConfig()\n                    {\n                      @Override\n                      public List<StorageLocationConfig> getLocations()\n                      {\n                        return new ArrayList<>();\n                      }\n                    },\n                    jsonMapper\n                )\n            ),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2018-10-29 20:02:43","endLine":208,"groupId":"7591","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/20/eb5fc3d6758ac688568e33afc8bef3d646f3ec.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null, new SegmentLoaderFactory(\n                new SegmentLoaderLocalCacheManager(\n                    null,\n                    new SegmentLoaderConfig()\n                    {\n                      @Override\n                      public List<StorageLocationConfig> getLocations()\n                      {\n                        return Lists.newArrayList();\n                      }\n                    },\n                    jsonMapper\n                )\n            ),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(new SegmentLoaderLocalCacheManager(null, loaderConfig, jsonMapper)),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2018-08-31 00:56:26","endLine":153,"groupId":"3531","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5c/aa70b1cabee09ac4cc2f1de0a8a2ade300abe1.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(new SegmentLoaderLocalCacheManager(null, loaderConfig, jsonMapper)),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"N"}],"commitId":"676f5e6d7f184101b8763e4249b18b237bbe0ec7","commitMessage":"@@@Prohibit some guava collection APIs and use JDK collection APIs directly (#6511)\n\n* Prohibit some guava collection APIs and use JDK APIs directly\n\n* reset files that changed by accident\n\n* sort codestyle/druid-forbidden-apis.txt alphabetically\n","date":"2018-10-29 20:02:43","modifiedFileCount":"427","status":"M","submitter":"QiuMM"},{"authorTime":"2019-02-24 09:02:56","codes":[{"authorDate":"2019-02-24 09:02:56","commitOrder":3,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2019-02-24 09:02:56","endLine":193,"groupId":"7591","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/fdd3cf9d5e492566d9b5e10fc815946c9906f7.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null, new SegmentLoaderFactory(\n                new SegmentLoaderLocalCacheManager(\n                    null,\n                    new SegmentLoaderConfig()\n                    {\n                      @Override\n                      public List<StorageLocationConfig> getLocations()\n                      {\n                        return new ArrayList<>();\n                      }\n                    },\n                    jsonMapper\n                )\n            ),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2019-02-24 09:02:56","commitOrder":3,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2019-02-24 09:02:56","endLine":152,"groupId":"3531","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b8/6b654847a4b980511f2e15047fdc57963d367c.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(new SegmentLoaderLocalCacheManager(null, loaderConfig, jsonMapper)),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"1c2753ab9033ff0c785d6e80f5f7c07dc34c3889","commitMessage":"@@@ParallelIndexSubTask: support ingestSegment in delegating factories (#7089)\n\nIndexTask had special-cased code to properly send a TaskToolbox to a\nIngestSegmentFirehoseFactory that's nested inside a CombiningFirehoseFactory. \nbut ParallelIndexSubTask didn't.\n\nThis change refactors IngestSegmentFirehoseFactory so that it doesn't need a\nTaskToolbox; it instead gets a CoordinatorClient and a SegmentLoaderFactory\ndirectly injected into it.\n\nThis also refactors SegmentLoaderFactory so it doesn't depend on\nan injectable SegmentLoaderConfig.  since its only method always\nreplaces the preconfigured SegmentLoaderConfig anyway.\nThis makes it possible to use SegmentLoaderFactory without setting\ndruid.segmentCaches.locations to some dummy value.\n\nAnother goal of this PR is to make it possible for IngestSegmentFirehoseFactory\nto list data segments outside of connect() --- specifically.  to make it a\nFiniteFirehoseFactory which can query the coordinator in order to calculate its\nsplits. See #7048.\n\nThis also adds missing datasource name URL-encoding to an API used by\nCoordinatorBasedSegmentHandoffNotifier.","date":"2019-02-24 09:02:56","modifiedFileCount":"21","status":"M","submitter":"David Glasser"},{"authorTime":"2019-07-19 05:46:47","codes":[{"authorDate":"2019-07-19 05:46:47","commitOrder":4,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2019-07-19 05:46:47","endLine":194,"groupId":"7591","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8c/22aaa85a21f2f49160a036ad4b8e4efdadb2db.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2019-07-19 05:46:47","commitOrder":4,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2019-07-19 05:46:47","endLine":153,"groupId":"3531","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/63/5bf4ad6b525bf3608c3ba3462284f78ef7f785.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"c7eb7cd01837c48914ba284d08b6096b47c957b0","commitMessage":"@@@Add intermediary data server for shuffle (#8088)\n\n* Add intermediary data server for shuffle\n\n* javadoc\n\n* adjust timeout\n\n* resolved todo\n\n* fix test\n\n* style\n\n* address comments\n\n* rename to shuffleDataLocations\n\n* Address comments\n\n* bit adjustment StorageLocation\n\n* fix test\n\n* address comment & fix test\n\n* handle interrupted exception\n","date":"2019-07-19 05:46:47","modifiedFileCount":"29","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-07-30 08:06:33","codes":[{"authorDate":"2019-07-30 08:06:33","commitOrder":5,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2019-07-30 08:06:33","endLine":194,"groupId":"7591","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c5/9859706352c2fc29a08e713a36b60a49bcbd5d.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2019-07-30 08:06:33","commitOrder":5,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2019-07-30 08:06:33","endLine":153,"groupId":"3531","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5e/a1ffd8283b81e5cf12e35fe61c6d9b2e6fab1c.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"640b7afc1cee911a27de7bf938dda24a85ba1510","commitMessage":"@@@Add CliIndexer process type and initial task runner implementation (#8107)\n\n* Add CliIndexer process type and initial task runner implementation\n\n* Fix HttpRemoteTaskRunnerTest\n\n* Remove batch sanity check on PeonAppenderatorsManager\n\n* Fix paralle index tests\n\n* PR comments\n\n* Adjust Jersey resource logging\n\n* Additional cleanup\n\n* Fix SystemSchemaTest\n\n* Add comment to LocalDataSegmentPusherTest absolute path test\n\n* More PR comments\n\n* Use Server annotated with RemoteChatHandler\n\n* More PR comments\n\n* Checkstyle\n\n* PR comments\n\n* Add task shutdown to stopGracefully\n\n* Small cleanup\n\n* Compile fix\n\n* Address PR comments\n\n* Adjust TaskReportFileWriter and fix nits\n\n* Remove unnecessary closer\n\n* More PR comments\n\n* Minor adjustments\n\n* PR comments\n\n* ThreadingTaskRunner: cancel  task run future not shutdownFuture and remove thread from workitem\n","date":"2019-07-30 08:06:33","modifiedFileCount":"64","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2019-08-03 06:34:44","codes":[{"authorDate":"2019-08-03 06:34:44","commitOrder":6,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2019-08-03 06:34:44","endLine":195,"groupId":"8646","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/02/2830ec8264c65d2071a6fda3c1110a56a1cff5.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2019-08-03 06:34:44","commitOrder":6,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2019-08-03 06:34:44","endLine":154,"groupId":"16867","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c4/ff006005a9fab4b3b8b5c956b61796fcf6cf5a.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"8a16a8e97ff3c80907451bc11c4cd0ea8a421650","commitMessage":"@@@Teach tasks what machine they are running on (#8190)\n\n* Teach the middleManager port to tasks\n\n* parent annotation\n\n* Bind parent for indexer\n","date":"2019-08-03 06:34:44","modifiedFileCount":"19","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-08-16 08:43:35","codes":[{"authorDate":"2019-08-16 08:43:35","commitOrder":7,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2019-08-16 08:43:35","endLine":196,"groupId":"8646","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/02/3251d1e15a817e01d8e6459e8b777c19e02338.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter()\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2019-08-16 08:43:35","commitOrder":7,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2019-08-16 08:43:35","endLine":155,"groupId":"16867","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/88/a8dd00517bb80a2c7556350abe319f7ecc731c.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter()\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"5dac6375f382ba485ec000802ff0e922929df95d","commitMessage":"@@@Add support for parallel native indexing with shuffle for perfect rollup (#8257)\n\n* Add TaskResourceCleaner; fix a couple of concurrency bugs in batch tasks\n\n* kill runner when it's ready\n\n* add comment\n\n* kill run thread\n\n* fix test\n\n* Take closeable out of Appenderator\n\n* add javadoc\n\n* fix test\n\n* fix test\n\n* update javadoc\n\n* add javadoc about killed task\n\n* address comment\n\n* Add support for parallel native indexing with shuffle for perfect rollup.\n\n* Add comment about volatiles\n\n* fix test\n\n* fix test\n\n* handling missing exceptions\n\n* more clear javadoc for stopGracefully\n\n* unused import\n\n* update javadoc\n\n* Add missing statement in javadoc\n\n* address comments; fix doc\n\n* add javadoc for isGuaranteedRollup\n\n* Rename confusing variable name and fix typos\n\n* fix typos; move fetch() to a better home; fix the expiration time\n\n* add support https\n","date":"2019-08-16 08:43:35","modifiedFileCount":"49","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-11-23 11:48:49","codes":[{"authorDate":"2019-11-23 11:48:49","commitOrder":8,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2019-11-23 11:48:49","endLine":198,"groupId":"8646","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/84/12eb0f693d8980cb8b9167c43842c510b22b69.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2019-11-23 11:48:49","commitOrder":8,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2019-11-23 11:48:49","endLine":155,"groupId":"16867","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c3/1b0b64bc013e28b933e1469c053ba4522e601f.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        Files.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"e0eb85ace72322c80a7f2f0555d411f2067f83ea","commitMessage":"@@@Add FileUtils.createTempDir() and enforce its usage. (#8932)\n\n* Add FileUtils.createTempDir() and enforce its usage.\n\nThe purpose of this is to improve error messages. Previously.  the error\nmessage on a nonexistent or unwritable temp directory would be\n\"Failed to create directory within 10. 000 attempts\".\n\n* Further updates.\n\n* Another update.\n\n* Remove commons-io from benchmark.\n\n* Fix tests.\n","date":"2019-11-23 11:48:49","modifiedFileCount":"71","status":"M","submitter":"Gian Merlino"},{"authorTime":"2020-01-25 05:10:01","codes":[{"authorDate":"2020-01-25 05:10:01","commitOrder":9,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2020-01-25 05:10:01","endLine":210,"groupId":"8646","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2f/dca5f2c3350bd7cb0d7c079c7973ba7e6995bc.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null, null, null, null, null, null, null, notifierFactory, null, null, null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2020-01-25 05:10:01","commitOrder":9,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2020-01-25 05:10:01","endLine":157,"groupId":"16867","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3a/e7d96e5da35e491454c6f1108d789b076892ee.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"19b427e8f371bed0b0100272ac890b3775471654","commitMessage":"@@@Add JoinableFactory interface and use it in the query stack. (#9247)\n\n* Add JoinableFactory interface and use it in the query stack.\n\nAlso includes InlineJoinableFactory.  which enables joining against\ninline datasources. This is the first patch where a basic join query\nactually works. It includes integration tests.\n\n* Fix test issues.\n\n* Adjustments from code review.\n","date":"2020-01-25 05:10:01","modifiedFileCount":"51","status":"M","submitter":"Gian Merlino"},{"authorTime":"2020-08-27 08:08:12","codes":[{"authorDate":"2020-08-27 08:08:12","commitOrder":10,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2020-08-27 08:08:12","endLine":223,"groupId":"8646","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b0/bdbc89cc073c3f378bff41c9006634bf1ae6dc.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2020-08-27 08:08:12","commitOrder":10,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2020-08-27 08:08:12","endLine":157,"groupId":"8646","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8e/5984c37183e40a7ee17ad0b99529b3bff6d93f.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig()\n    {\n      @Override\n      public List<StorageLocationConfig> getLocations()\n      {\n        return Collections.emptyList();\n      }\n    };\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"f82fd22fa7de175200b7127c34c2eb2900bf7317","commitMessage":"@@@Move tools for indexing to TaskToolbox instead of injecting them in constructor (#10308)\n\n* Move tools for indexing to TaskToolbox instead of injecting them in constructor\n\n* oops.  other changes\n\n* fix test\n\n* unnecessary new file\n\n* fix test\n\n* fix build","date":"2020-08-27 08:08:12","modifiedFileCount":"67","status":"M","submitter":"Jihoon Son"},{"authorTime":"2021-03-26 01:32:21","codes":[{"authorDate":"2021-03-26 01:32:21","commitOrder":11,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2021-03-26 01:32:21","endLine":224,"groupId":"8646","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/fd/f7aa44c2f231c0a7d156549a822077470c4584.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2021-03-26 01:32:21","commitOrder":11,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2021-03-26 01:32:21","endLine":158,"groupId":"8646","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/db/c223394c568c0d6cd49e818c2d6933bfa59c94.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"bf20f9e9798417c9293a195690b6adcb48f44d3f","commitMessage":"@@@DruidInputSource: Fix issues in column projection.  timestamp handling. (#10267)\n\n* DruidInputSource: Fix issues in column projection.  timestamp handling.\n\nDruidInputSource.  DruidSegmentReader changes:\n\n1) Remove \"dimensions\" and \"metrics\". They are not necessary.  because we\n   can compute which columns we need to read based on what is going to\n   be used by the timestamp.  transform.  dimensions.  and metrics.\n2) Start using ColumnsFilter (see below) to decide which columns we need\n   to read.\n3) Actually respect the \"timestampSpec\". Previously.  it was ignored.  and\n   the timestamp of the returned InputRows was set to the `__time` column\n   of the input datasource.\n\n(1) and (2) together fix a bug in which the DruidInputSource would not\nproperly read columns that are used as inputs to a transformSpec.\n\n(3) fixes a bug where the timestampSpec would be ignored if you attempted\nto set the column to something other than `__time`.\n\n(1) and (3) are breaking changes.\n\nWeb console changes:\n\n1) Remove \"Dimensions\" and \"Metrics\" from the Druid input source.\n2) Set timestampSpec to `{\"column\": \"__time\".  \"format\": \"millis\"}` for\n   compatibility with the new behavior.\n\nOther changes:\n\n1) Add ColumnsFilter.  a new class that allows input readers to determine\n   which columns they need to read. Currently.  it's only used by the\n   DruidInputSource.  but it could be used by other columnar input sources\n   in the future.\n2) Add a ColumnsFilter to InputRowSchema.\n3) Remove the metric names from InputRowSchema (they were unused).\n4) Add InputRowSchemas.fromDataSchema method that computes the proper\n   ColumnsFilter for given timestamp.  dimensions.  transform.  and metrics.\n5) Add \"getRequiredColumns\" method to TransformSpec to support the above.\n\n* Various fixups.\n\n* Uncomment incorrectly commented lines.\n\n* Move TransformSpecTest to the proper module.\n\n* Add druid.indexer.task.ignoreTimestampSpecForDruidInputSource setting.\n\n* Fix.\n\n* Fix build.\n\n* Checkstyle.\n\n* Misc fixes.\n\n* Fix test.\n\n* Move config.\n\n* Fix imports.\n\n* Fixup.\n\n* Fix ShuffleResourceTest.\n\n* Add import.\n\n* Smarter exclusions.\n\n* Fixes based on tests.\n\nAlso.  add TIME_COLUMN constant in the web console.\n\n* Adjustments for tests.\n\n* Reorder test data.\n\n* Update docs.\n\n* Update docs to say Druid 0.22.0 instead of 0.21.0.\n\n* Fix test.\n\n* Fix ITAutoCompactionTest.\n\n* Changes from review & from merging.","date":"2021-03-26 01:32:21","modifiedFileCount":"60","status":"M","submitter":"Gian Merlino"},{"authorTime":"2021-05-12 05:34:26","codes":[{"authorDate":"2021-05-12 05:34:26","commitOrder":12,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false,\n        false\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2021-05-12 05:34:26","endLine":225,"groupId":"8646","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c1/845097996df43ea74f8c1d3007988a4797464c.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2021-05-12 05:34:26","commitOrder":12,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false,\n        false\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2021-05-12 05:34:26","endLine":159,"groupId":"8646","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2d/d94e8c287569052ba8f5344937dfd1b856d1f9.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"8e5048e643f95c25cc95be91317475fecbdce456","commitMessage":"@@@Avoid memory mapping hydrants after they are persisted & after they are merged for native batch ingestion (#11123)\n\n* Avoid mapping hydrants in create segments phase for native ingestion\n\n* Drop queriable indices after a given sink is fully merged\n\n* Do not drop memory mappings for realtime ingestion\n\n* Style fixes\n\n* Renamed to match use case better\n\n* Rollback memoization code and use the real time flag instead\n\n* Null ptr fix in FireHydrant toString plus adjustments to memory pressure tracking calculations\n\n* Style\n\n* Log some count stats\n\n* Make sure sinks size is obtained at the right time\n\n* BatchAppenderator unit test\n\n* Fix comment typos\n\n* Renamed methods to make them more readable\n\n* Move persisted metadata from FireHydrant class to AppenderatorImpl. Removed superfluous differences and fix comment typo. Removed custom comparator\n\n* Missing dependency\n\n* Make persisted hydrant metadata map concurrent and better reflect the fact that keys are Java references. Maintain persisted metadata when dropping/closing segments.\n\n* Replaced concurrent variables with normal ones\n\n* Added   batchMemoryMappedIndex \"fallback\" flag with default \"false\". Set this to \"true\" make code fallback to previous code path.\n\n* Style fix.\n\n* Added note to new setting in doc.  using Iterables.size (and removing a dependency).  and fixing a typo in a comment.\n\n* Forgot to commit this edited documentation message","date":"2021-05-12 05:34:26","modifiedFileCount":"33","status":"M","submitter":"Agustin Gonzalez"},{"authorTime":"2021-07-21 02:44:19","codes":[{"authorDate":"2021-07-21 02:44:19","commitOrder":13,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false,\n        false\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentCacheManagerFactory(jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2021-07-21 02:44:19","endLine":225,"groupId":"8646","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/db/c44f069279f2c32f5ef5ef5211c5e5936d4edd.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false,\n        false\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2021-07-21 02:44:19","commitOrder":13,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false,\n        false\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentCacheManagerFactory(jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2021-07-21 02:44:19","endLine":159,"groupId":"8646","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b7/a489f4903e308e4a759d17f1b557cea38f4953.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false,\n        false\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentLoaderFactory(null, jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"94c1671eaf7b050972602fdedcb1971cdbde692d","commitMessage":"@@@Split SegmentLoader into SegmentLoader and SegmentCacheManager (#11466)\n\nThis PR splits current SegmentLoader into SegmentLoader and SegmentCacheManager.\n\nSegmentLoader - this class is responsible for building the segment object but does not expose any methods for downloading.  cache space management.  etc. Default implementation delegates the download operations to SegmentCacheManager and only contains the logic for building segments once downloaded. . This class will be used in SegmentManager to construct Segment objects.\n\nSegmentCacheManager - this class manages the segment cache on the local disk. It fetches the segment files to the local disk.  can clean up the cache.  and in the future.  support reserve and release on cache space. [See https://github.com/Make SegmentLoader extensible and customizable #11398]. This class will be used in ingestion tasks such as compaction.  re-indexing where segment files need to be downloaded locally.","date":"2021-07-21 02:44:19","modifiedFileCount":"41","status":"M","submitter":"Abhishek Agarwal"},{"authorTime":"2021-09-09 04:31:52","codes":[{"authorDate":"2021-09-09 04:31:52","commitOrder":14,"curCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false,\n        false,\n        TaskConfig.BATCH_PROCESSING_MODE_DEFAULT.name()\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentCacheManagerFactory(jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","date":"2021-09-09 04:31:52","endLine":226,"groupId":"104637","id":27,"instanceNumber":1,"isCurCommit":1,"methodName":"createTaskMonitor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/27/ca68cd8ccf55d1a79c68f4013eaa82051b9328.src","preCode":"  private WorkerTaskMonitor createTaskMonitor()\n  {\n    final TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false,\n        false\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n    return new WorkerTaskMonitor(\n        jsonMapper,\n        new SingleTaskBackgroundRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentCacheManagerFactory(jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            new NoopServiceEmitter(),\n            DUMMY_NODE,\n            new ServerConfig()\n        ),\n        taskConfig,\n        cf,\n        workerCuratorCoordinator,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2021-09-09 04:31:52","commitOrder":14,"curCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false,\n        false,\n        TaskConfig.BATCH_PROCESSING_MODE_DEFAULT.name()\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentCacheManagerFactory(jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","date":"2021-09-09 04:31:52","endLine":163,"groupId":"104637","id":28,"instanceNumber":2,"isCurCommit":1,"methodName":"createWorkerTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1f/e3acb482efeefac54e4da15f097d3317f1046a.src","preCode":"  private WorkerTaskManager createWorkerTaskManager()\n  {\n    TaskConfig taskConfig = new TaskConfig(\n        FileUtils.createTempDir().toString(),\n        null,\n        null,\n        0,\n        null,\n        false,\n        null,\n        null,\n        null,\n        false,\n        false\n    );\n    TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock(TaskActionClientFactory.class);\n    TaskActionClient taskActionClient = EasyMock.createNiceMock(TaskActionClient.class);\n    EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes();\n    SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n    EasyMock.replay(taskActionClientFactory, taskActionClient, notifierFactory);\n\n    return new WorkerTaskManager(\n        jsonMapper,\n        new TestTaskRunner(\n            new TaskToolboxFactory(\n                taskConfig,\n                null,\n                taskActionClientFactory,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                notifierFactory,\n                null,\n                null,\n                NoopJoinableFactory.INSTANCE,\n                null,\n                new SegmentCacheManagerFactory(jsonMapper),\n                jsonMapper,\n                indexIO,\n                null,\n                null,\n                null,\n                indexMergerV9,\n                null,\n                null,\n                null,\n                null,\n                new NoopTestTaskReportFileWriter(),\n                null,\n                AuthTestUtils.TEST_AUTHORIZER_MAPPER,\n                new NoopChatHandlerProvider(),\n                testUtils.getRowIngestionMetersFactory(),\n                new TestAppenderatorsManager(),\n                new NoopIndexingServiceClient(),\n                null,\n                null,\n                null\n            ),\n            taskConfig,\n            location\n        ),\n        taskConfig,\n        EasyMock.createNiceMock(DruidLeaderClient.class)\n    )\n    {\n      @Override\n      protected void taskStarted(String taskId)\n      {\n      }\n\n      @Override\n      protected void taskAnnouncementChanged(TaskAnnouncement announcement)\n      {\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"9efa6cc9c85aab66b325e9f37f7bad13826aea39","commitMessage":"@@@Make persists concurrent with adding rows in batch ingestion (#11536)\n\n* Make persists concurrent with ingestion\n\n* Remove semaphore but keep concurrent persists (with add) and add push in the backround as well\n\n* Go back to documented default persists (zero)\n\n* Move to debug\n\n* Remove unnecessary Atomics\n\n* Comments on synchronization (or not) for sinks & sinkMetadata\n\n* Some cleanup for unit tests but they still need further work\n\n* Shutdown & wait for persists and push on close\n\n* Provide support for three existing batch appenderators using batchProcessingMode flag\n\n* Fix reference to wrong appenderator\n\n* Fix doc typos\n\n* Add BatchAppenderators class test coverage\n\n* Add log message to batchProcessingMode final value.  fix typo in enum name\n\n* Another typo and minor fix to log message\n\n* LEGACY->OPEN_SEGMENTS.  Edit docs\n\n* Minor update legacy->open segments log message\n\n* More code comments.  mostly small adjustments to naming etc\n\n* fix spelling\n\n* Exclude BtachAppenderators from Jacoco since it is fully tested but Jacoco still refuses to ack coverage\n\n* Coverage for Appenderators & BatchAppenderators.  name change of a method that was still using \"legacy\" rather than \"openSegments\"\n\nCo-authored-by: Clint Wylie <cjwylie@gmail.com>","date":"2021-09-09 04:31:52","modifiedFileCount":"33","status":"M","submitter":"Agustin Gonzalez"}]
