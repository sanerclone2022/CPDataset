[{"authorTime":"2021-05-07 13:25:23","codes":[{"authorDate":"2021-05-07 13:25:23","commitOrder":1,"curCode":"  public void testRunSkipIfLastRunLessThanPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(Long.MAX_VALUE),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killSupervisors = new KillSupervisors(druidCoordinatorConfig, mockMetadataSupervisorManager);\n    killSupervisors.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verifyZeroInteractions(mockMetadataSupervisorManager);\n  }\n","date":"2021-05-07 13:25:23","endLine":77,"groupId":"9102","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRunSkipIfLastRunLessThanPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/9a/eb992f9b14db334074234b2b1c75a2289ed781.src","preCode":"  public void testRunSkipIfLastRunLessThanPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(Long.MAX_VALUE),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killSupervisors = new KillSupervisors(druidCoordinatorConfig, mockMetadataSupervisorManager);\n    killSupervisors.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verifyZeroInteractions(mockMetadataSupervisorManager);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillSupervisorsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"},{"authorDate":"2021-05-07 13:25:23","commitOrder":1,"curCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killSupervisors = new KillSupervisors(druidCoordinatorConfig, mockMetadataSupervisorManager);\n    killSupervisors.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockMetadataSupervisorManager).removeTerminatedSupervisorsOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","date":"2021-05-07 13:25:23","endLine":104,"groupId":"14135","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRunNotSkipIfLastRunMoreThanPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/9a/eb992f9b14db334074234b2b1c75a2289ed781.src","preCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killSupervisors = new KillSupervisors(druidCoordinatorConfig, mockMetadataSupervisorManager);\n    killSupervisors.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockMetadataSupervisorManager).removeTerminatedSupervisorsOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillSupervisorsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"d73f72e50892fe0b7450d8d4bf5678c3f8270cfe","commitMessage":"@@@Add feature to automatically remove supervisor based on retention period (#11200)\n\n* add auto clean up\n\n* add test\n\n* add test\n\n* fix test\n\n* Address comments\n\n* Address comments","date":"2021-05-07 13:25:23","modifiedFileCount":"14","status":"B","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-05-11 16:22:33","codes":[{"authorDate":"2021-05-11 16:22:33","commitOrder":2,"curCode":"  public void testRunSkipIfLastRunLessThanPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(Long.MAX_VALUE),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killSupervisors = new KillSupervisors(druidCoordinatorConfig, mockMetadataSupervisorManager);\n    killSupervisors.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verifyZeroInteractions(mockMetadataSupervisorManager);\n  }\n","date":"2021-05-11 16:22:33","endLine":79,"groupId":"9102","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRunSkipIfLastRunLessThanPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/9a/b3fb6b3084e551eb0c69862c5ff58d43bf028b.src","preCode":"  public void testRunSkipIfLastRunLessThanPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(Long.MAX_VALUE),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killSupervisors = new KillSupervisors(druidCoordinatorConfig, mockMetadataSupervisorManager);\n    killSupervisors.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verifyZeroInteractions(mockMetadataSupervisorManager);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillSupervisorsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2021-05-11 16:22:33","commitOrder":2,"curCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killSupervisors = new KillSupervisors(druidCoordinatorConfig, mockMetadataSupervisorManager);\n    killSupervisors.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockMetadataSupervisorManager).removeTerminatedSupervisorsOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","date":"2021-05-11 16:22:33","endLine":108,"groupId":"14135","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRunNotSkipIfLastRunMoreThanPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/9a/b3fb6b3084e551eb0c69862c5ff58d43bf028b.src","preCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killSupervisors = new KillSupervisors(druidCoordinatorConfig, mockMetadataSupervisorManager);\n    killSupervisors.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockMetadataSupervisorManager).removeTerminatedSupervisorsOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillSupervisorsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"4326e699bd3e146e1899f014e8765c52241f3cd3","commitMessage":"@@@Add feature to automatically remove datasource metadata based on retention period (#11227)\n\n* add auto clean up datasource metadata\n\n* add test\n\n* fix checkstyle\n\n* add comments\n\n* fix error\n\n* address comments\n\n* Address comments\n\n* fix test\n\n* fix test\n\n* fix typo\n\n* add comment\n\n* fix test\n\n* fix test","date":"2021-05-11 16:22:33","modifiedFileCount":"22","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-05-12 09:49:18","codes":[{"authorDate":"2021-05-12 09:49:18","commitOrder":3,"curCode":"  public void testRunSkipIfLastRunLessThanPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(Long.MAX_VALUE),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killSupervisors = new KillSupervisors(druidCoordinatorConfig, mockMetadataSupervisorManager);\n    killSupervisors.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verifyZeroInteractions(mockMetadataSupervisorManager);\n  }\n","date":"2021-05-12 09:49:18","endLine":80,"groupId":"10483","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testRunSkipIfLastRunLessThanPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bd/88bb9b0295089f4a814f7f2cf93a1b95c550df.src","preCode":"  public void testRunSkipIfLastRunLessThanPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(Long.MAX_VALUE),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killSupervisors = new KillSupervisors(druidCoordinatorConfig, mockMetadataSupervisorManager);\n    killSupervisors.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verifyZeroInteractions(mockMetadataSupervisorManager);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillSupervisorsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2021-05-12 09:49:18","commitOrder":3,"curCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killSupervisors = new KillSupervisors(druidCoordinatorConfig, mockMetadataSupervisorManager);\n    killSupervisors.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockMetadataSupervisorManager).removeTerminatedSupervisorsOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","date":"2021-05-12 09:49:18","endLine":110,"groupId":"10483","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testRunNotSkipIfLastRunMoreThanPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bd/88bb9b0295089f4a814f7f2cf93a1b95c550df.src","preCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killSupervisors = new KillSupervisors(druidCoordinatorConfig, mockMetadataSupervisorManager);\n    killSupervisors.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockMetadataSupervisorManager).removeTerminatedSupervisorsOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillSupervisorsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"3455352241f774cfc581de7cf7b328d5cf061e3d","commitMessage":"@@@Add feature to automatically remove compaction configurations for inactive datasources (#11232)\n\n* add auto cleanup\n\n* add auto cleanup\n\n* add auto cleanup\n\n* add tests\n\n* add tests\n\n* use retryutils\n\n* use retryutils\n\n* use retryutils\n\n* address comments","date":"2021-05-12 09:49:18","modifiedFileCount":"14","status":"M","submitter":"Maytas Monsereenusorn"}]
