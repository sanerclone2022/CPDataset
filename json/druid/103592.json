[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void aggregate()\n  {\n    final IndexedInts keys = keySelector.getRow();\n    for (int i = 0; i < valueSelectors.length; i++) {\n      values[i] = valueSelectors[i].getDouble();\n    }\n    synchronized (this) {\n      for (int i = 0, keysSize = keys.size(); i < keysSize; i++) {\n        final String key = keySelector.lookupName(keys.get(i));\n        sketch.update(key, values);\n      }\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":75,"groupId":"10829","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"aggregate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/11/a3061483402105bfdc6fc2e295d636c84f5a12.src","preCode":"  public void aggregate()\n  {\n    final IndexedInts keys = keySelector.getRow();\n    for (int i = 0; i < valueSelectors.length; i++) {\n      values[i] = valueSelectors[i].getDouble();\n    }\n    synchronized (this) {\n      for (int i = 0, keysSize = keys.size(); i < keysSize; i++) {\n        final String key = keySelector.lookupName(keys.get(i));\n        sketch.update(key, values);\n      }\n    }\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchBuildAggregator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void aggregate(final ByteBuffer buf, final int position)\n  {\n    for (int i = 0; i < valueSelectors.length; i++) {\n      values[i] = valueSelectors[i].getDouble();\n    }\n    final IndexedInts keys = keySelector.getRow();\n    \r\n    \r\n    \r\n    final WritableMemory mem = WritableMemory.wrap(buf);\n    final WritableMemory region = mem.writableRegion(position, maxIntermediateSize);\n    final Lock lock = stripedLock.getAt(lockIndex(position)).writeLock();\n    lock.lock();\n    try {\n      final ArrayOfDoublesUpdatableSketch sketch = ArrayOfDoublesSketches.wrapUpdatableSketch(region);\n      for (int i = 0, keysSize = keys.size(); i < keysSize; i++) {\n        final String key = keySelector.lookupName(keys.get(i));\n        sketch.update(key, values);\n      }\n    }\n    finally {\n      lock.unlock();\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":108,"groupId":"4445","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"aggregate","params":"(finalByteBufferbuf@finalintposition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/aa/0cf3927907e3c01afbac4ca66a177affd95844.src","preCode":"  public void aggregate(final ByteBuffer buf, final int position)\n  {\n    for (int i = 0; i < valueSelectors.length; i++) {\n      values[i] = valueSelectors[i].getDouble();\n    }\n    final IndexedInts keys = keySelector.getRow();\n    \r\n    \r\n    \r\n    final WritableMemory mem = WritableMemory.wrap(buf);\n    final WritableMemory region = mem.writableRegion(position, maxIntermediateSize);\n    final Lock lock = stripedLock.getAt(lockIndex(position)).writeLock();\n    lock.lock();\n    try {\n      final ArrayOfDoublesUpdatableSketch sketch = ArrayOfDoublesSketches.wrapUpdatableSketch(region);\n      for (int i = 0, keysSize = keys.size(); i < keysSize; i++) {\n        final String key = keySelector.lookupName(keys.get(i));\n        sketch.update(key, values);\n      }\n    }\n    finally {\n      lock.unlock();\n    }\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchBuildBufferAggregator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-10-24 02:20:19","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void aggregate()\n  {\n    final IndexedInts keys = keySelector.getRow();\n    for (int i = 0; i < valueSelectors.length; i++) {\n      values[i] = valueSelectors[i].getDouble();\n    }\n    synchronized (this) {\n      for (int i = 0, keysSize = keys.size(); i < keysSize; i++) {\n        final String key = keySelector.lookupName(keys.get(i));\n        sketch.update(key, values);\n      }\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":75,"groupId":"10829","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"aggregate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/11/a3061483402105bfdc6fc2e295d636c84f5a12.src","preCode":"  public void aggregate()\n  {\n    final IndexedInts keys = keySelector.getRow();\n    for (int i = 0; i < valueSelectors.length; i++) {\n      values[i] = valueSelectors[i].getDouble();\n    }\n    synchronized (this) {\n      for (int i = 0, keysSize = keys.size(); i < keysSize; i++) {\n        final String key = keySelector.lookupName(keys.get(i));\n        sketch.update(key, values);\n      }\n    }\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchBuildAggregator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"},{"authorDate":"2018-10-24 02:20:19","commitOrder":2,"curCode":"  public void aggregate(final ByteBuffer buf, final int position)\n  {\n    for (int i = 0; i < valueSelectors.length; i++) {\n      values[i] = valueSelectors[i].getDouble();\n    }\n    final IndexedInts keys = keySelector.getRow();\n    \r\n    \r\n    \r\n    final WritableMemory mem = WritableMemory.wrap(buf, ByteOrder.LITTLE_ENDIAN);\n    final WritableMemory region = mem.writableRegion(position, maxIntermediateSize);\n    final Lock lock = stripedLock.getAt(lockIndex(position)).writeLock();\n    lock.lock();\n    try {\n      final ArrayOfDoublesUpdatableSketch sketch = ArrayOfDoublesSketches.wrapUpdatableSketch(region);\n      for (int i = 0, keysSize = keys.size(); i < keysSize; i++) {\n        final String key = keySelector.lookupName(keys.get(i));\n        sketch.update(key, values);\n      }\n    }\n    finally {\n      lock.unlock();\n    }\n  }\n","date":"2018-10-24 02:20:19","endLine":109,"groupId":"4445","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"aggregate","params":"(finalByteBufferbuf@finalintposition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/05/1d59fca692431bd5db83ff12e4445d7fe9b7b9.src","preCode":"  public void aggregate(final ByteBuffer buf, final int position)\n  {\n    for (int i = 0; i < valueSelectors.length; i++) {\n      values[i] = valueSelectors[i].getDouble();\n    }\n    final IndexedInts keys = keySelector.getRow();\n    \r\n    \r\n    \r\n    final WritableMemory mem = WritableMemory.wrap(buf);\n    final WritableMemory region = mem.writableRegion(position, maxIntermediateSize);\n    final Lock lock = stripedLock.getAt(lockIndex(position)).writeLock();\n    lock.lock();\n    try {\n      final ArrayOfDoublesUpdatableSketch sketch = ArrayOfDoublesSketches.wrapUpdatableSketch(region);\n      for (int i = 0, keysSize = keys.size(); i < keysSize; i++) {\n        final String key = keySelector.lookupName(keys.get(i));\n        sketch.update(key, values);\n      }\n    }\n    finally {\n      lock.unlock();\n    }\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchBuildBufferAggregator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"ec9d1827a05f4179f2189eac32287e14287d6126","commitMessage":"@@@updated to use the latest sketches-core-0.12.0 (#6381)\n\n","date":"2018-10-24 02:20:19","modifiedFileCount":"13","status":"M","submitter":"Alexander Saydakov"},{"authorTime":"2020-01-08 04:15:32","codes":[{"authorDate":"2020-01-08 04:15:32","commitOrder":3,"curCode":"  public void aggregate()\n  {\n    final IndexedInts keys = keySelector.getRow();\n    for (int i = 0; i < valueSelectors.length; i++) {\n      if (valueSelectors[i].isNull()) {\n        return;\n      } else {\n        values[i] = valueSelectors[i].getDouble();\n      }\n    }\n    synchronized (this) {\n      for (int i = 0, keysSize = keys.size(); i < keysSize; i++) {\n        final String key = keySelector.lookupName(keys.get(i));\n        sketch.update(key, values);\n      }\n    }\n  }\n","date":"2020-01-08 04:15:32","endLine":83,"groupId":"103592","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"aggregate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/79/73a755f0e91ccef6eab3ac42bd2965e9e14a26.src","preCode":"  public void aggregate()\n  {\n    final IndexedInts keys = keySelector.getRow();\n    for (int i = 0; i < valueSelectors.length; i++) {\n      values[i] = valueSelectors[i].getDouble();\n    }\n    synchronized (this) {\n      for (int i = 0, keysSize = keys.size(); i < keysSize; i++) {\n        final String key = keySelector.lookupName(keys.get(i));\n        sketch.update(key, values);\n      }\n    }\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchBuildAggregator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2020-01-08 04:15:32","commitOrder":3,"curCode":"  public void aggregate(final ByteBuffer buf, final int position)\n  {\n    for (int i = 0; i < valueSelectors.length; i++) {\n      if (valueSelectors[i].isNull()) {\n        return;\n      } else {\n        values[i] = valueSelectors[i].getDouble();\n      }\n    }\n    final IndexedInts keys = keySelector.getRow();\n    \r\n    \r\n    \r\n    final WritableMemory mem = WritableMemory.wrap(buf, ByteOrder.LITTLE_ENDIAN);\n    final WritableMemory region = mem.writableRegion(position, maxIntermediateSize);\n    final Lock lock = stripedLock.getAt(lockIndex(position)).writeLock();\n    lock.lock();\n    try {\n      final ArrayOfDoublesUpdatableSketch sketch = ArrayOfDoublesSketches.wrapUpdatableSketch(region);\n      for (int i = 0, keysSize = keys.size(); i < keysSize; i++) {\n        final String key = keySelector.lookupName(keys.get(i));\n        sketch.update(key, values);\n      }\n    }\n    finally {\n      lock.unlock();\n    }\n  }\n","date":"2020-01-08 04:15:32","endLine":116,"groupId":"103592","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"aggregate","params":"(finalByteBufferbuf@finalintposition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6a/366dbfbc2673942a6dbf804ae7ef9c64419d3f.src","preCode":"  public void aggregate(final ByteBuffer buf, final int position)\n  {\n    for (int i = 0; i < valueSelectors.length; i++) {\n      values[i] = valueSelectors[i].getDouble();\n    }\n    final IndexedInts keys = keySelector.getRow();\n    \r\n    \r\n    \r\n    final WritableMemory mem = WritableMemory.wrap(buf, ByteOrder.LITTLE_ENDIAN);\n    final WritableMemory region = mem.writableRegion(position, maxIntermediateSize);\n    final Lock lock = stripedLock.getAt(lockIndex(position)).writeLock();\n    lock.lock();\n    try {\n      final ArrayOfDoublesUpdatableSketch sketch = ArrayOfDoublesSketches.wrapUpdatableSketch(region);\n      for (int i = 0, keysSize = keys.size(); i < keysSize; i++) {\n        final String key = keySelector.lookupName(keys.get(i));\n        sketch.update(key, values);\n      }\n    }\n    finally {\n      lock.unlock();\n    }\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/tuple/ArrayOfDoublesSketchBuildBufferAggregator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"7af85250cb3e3b27752136e13c4d385ce448913b","commitMessage":"@@@null handling for doubles sketch and array of doubles sketch aggs (#9112)\n\n* doubles sketch and array of doubles sketch aggs now skip rows with nulls in sql compatible null handling mode\n\n* formatting\n","date":"2020-01-08 04:15:32","modifiedFileCount":"6","status":"M","submitter":"Clint Wylie"}]
