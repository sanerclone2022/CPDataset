[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public String submitTask(final String task)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            StatusResponseHolder response = httpClient.go(\n                new Request(HttpMethod.POST, new URL(getIndexerURL() + \"task\"))\n                    .setContent(\n                        \"application/json\",\n                        StringUtils.toUtf8(task)\n                    ),\n                responseHandler\n            ).get();\n            if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n              throw new ISE(\n                  \"Error while submitting task to indexer response [%s %s]\",\n                  response.getStatus(),\n                  response.getContent()\n              );\n            }\n            Map<String, String> responseData = jsonMapper.readValue(\n                response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n            );\n            String taskID = responseData.get(\"task\");\n            LOG.info(\"Submitted task with TaskID[%s]\", taskID);\n            return taskID;\n          },\n          Predicates.alwaysTrue(),\n          5\n      );\n    }\n    catch (Exception e) {\n      throw Throwables.propagate(e);\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":114,"groupId":"9364","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"submitTask","params":"(finalStringtask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1f/5d8888032f9d900e167741efcff158e494567c.src","preCode":"  public String submitTask(final String task)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            StatusResponseHolder response = httpClient.go(\n                new Request(HttpMethod.POST, new URL(getIndexerURL() + \"task\"))\n                    .setContent(\n                        \"application/json\",\n                        StringUtils.toUtf8(task)\n                    ),\n                responseHandler\n            ).get();\n            if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n              throw new ISE(\n                  \"Error while submitting task to indexer response [%s %s]\",\n                  response.getStatus(),\n                  response.getContent()\n              );\n            }\n            Map<String, String> responseData = jsonMapper.readValue(\n                response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n            );\n            String taskID = responseData.get(\"task\");\n            LOG.info(\"Submitted task with TaskID[%s]\", taskID);\n            return taskID;\n          },\n          Predicates.alwaysTrue(),\n          5\n      );\n    }\n    catch (Exception e) {\n      throw Throwables.propagate(e);\n    }\n  }\n","realPath":"integration-tests/src/main/java/org/apache/druid/testing/clients/OverlordResourceTestClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public String submitSupervisor(String spec)\n  {\n    try {\n      StatusResponseHolder response = httpClient.go(\n          new Request(HttpMethod.POST, new URL(getIndexerURL() + \"supervisor\"))\n              .setContent(\n                  \"application/json\",\n                  StringUtils.toUtf8(spec)\n              ),\n          responseHandler\n      ).get();\n      if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n        throw new ISE(\n            \"Error while submitting supervisor to overlord, response [%s %s]\",\n            response.getStatus(),\n            response.getContent()\n        );\n      }\n      Map<String, String> responseData = jsonMapper.readValue(\n          response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n      );\n      String id = responseData.get(\"id\");\n      LOG.info(\"Submitted supervisor with id[%s]\", id);\n      return id;\n    }\n    catch (Exception e) {\n      throw Throwables.propagate(e);\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":231,"groupId":"22767","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"submitSupervisor","params":"(Stringspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1f/5d8888032f9d900e167741efcff158e494567c.src","preCode":"  public String submitSupervisor(String spec)\n  {\n    try {\n      StatusResponseHolder response = httpClient.go(\n          new Request(HttpMethod.POST, new URL(getIndexerURL() + \"supervisor\"))\n              .setContent(\n                  \"application/json\",\n                  StringUtils.toUtf8(spec)\n              ),\n          responseHandler\n      ).get();\n      if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n        throw new ISE(\n            \"Error while submitting supervisor to overlord, response [%s %s]\",\n            response.getStatus(),\n            response.getContent()\n        );\n      }\n      Map<String, String> responseData = jsonMapper.readValue(\n          response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n      );\n      String id = responseData.get(\"id\");\n      LOG.info(\"Submitted supervisor with id[%s]\", id);\n      return id;\n    }\n    catch (Exception e) {\n      throw Throwables.propagate(e);\n    }\n  }\n","realPath":"integration-tests/src/main/java/org/apache/druid/testing/clients/OverlordResourceTestClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-03-15 05:28:33","codes":[{"authorDate":"2019-03-15 05:28:33","commitOrder":2,"curCode":"  public String submitTask(final String task)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            StatusResponseHolder response = httpClient.go(\n                new Request(HttpMethod.POST, new URL(getIndexerURL() + \"task\"))\n                    .setContent(\n                        \"application/json\",\n                        StringUtils.toUtf8(task)\n                    ),\n                responseHandler\n            ).get();\n            if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n              throw new ISE(\n                  \"Error while submitting task to indexer response [%s %s]\",\n                  response.getStatus(),\n                  response.getContent()\n              );\n            }\n            Map<String, String> responseData = jsonMapper.readValue(\n                response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n            );\n            String taskID = responseData.get(\"task\");\n            LOG.info(\"Submitted task with TaskID[%s]\", taskID);\n            return taskID;\n          },\n          Predicates.alwaysTrue(),\n          5\n      );\n    }\n    catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-03-15 05:28:33","endLine":112,"groupId":"9364","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"submitTask","params":"(finalStringtask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/57/8f8c50689ee4ef1dee48616b296bf7552d645d.src","preCode":"  public String submitTask(final String task)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            StatusResponseHolder response = httpClient.go(\n                new Request(HttpMethod.POST, new URL(getIndexerURL() + \"task\"))\n                    .setContent(\n                        \"application/json\",\n                        StringUtils.toUtf8(task)\n                    ),\n                responseHandler\n            ).get();\n            if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n              throw new ISE(\n                  \"Error while submitting task to indexer response [%s %s]\",\n                  response.getStatus(),\n                  response.getContent()\n              );\n            }\n            Map<String, String> responseData = jsonMapper.readValue(\n                response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n            );\n            String taskID = responseData.get(\"task\");\n            LOG.info(\"Submitted task with TaskID[%s]\", taskID);\n            return taskID;\n          },\n          Predicates.alwaysTrue(),\n          5\n      );\n    }\n    catch (Exception e) {\n      throw Throwables.propagate(e);\n    }\n  }\n","realPath":"integration-tests/src/main/java/org/apache/druid/testing/clients/OverlordResourceTestClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2019-03-15 05:28:33","commitOrder":2,"curCode":"  public String submitSupervisor(String spec)\n  {\n    try {\n      StatusResponseHolder response = httpClient.go(\n          new Request(HttpMethod.POST, new URL(getIndexerURL() + \"supervisor\"))\n              .setContent(\n                  \"application/json\",\n                  StringUtils.toUtf8(spec)\n              ),\n          responseHandler\n      ).get();\n      if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n        throw new ISE(\n            \"Error while submitting supervisor to overlord, response [%s %s]\",\n            response.getStatus(),\n            response.getContent()\n        );\n      }\n      Map<String, String> responseData = jsonMapper.readValue(\n          response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n      );\n      String id = responseData.get(\"id\");\n      LOG.info(\"Submitted supervisor with id[%s]\", id);\n      return id;\n    }\n    catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-03-15 05:28:33","endLine":234,"groupId":"22767","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"submitSupervisor","params":"(Stringspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/57/8f8c50689ee4ef1dee48616b296bf7552d645d.src","preCode":"  public String submitSupervisor(String spec)\n  {\n    try {\n      StatusResponseHolder response = httpClient.go(\n          new Request(HttpMethod.POST, new URL(getIndexerURL() + \"supervisor\"))\n              .setContent(\n                  \"application/json\",\n                  StringUtils.toUtf8(spec)\n              ),\n          responseHandler\n      ).get();\n      if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n        throw new ISE(\n            \"Error while submitting supervisor to overlord, response [%s %s]\",\n            response.getStatus(),\n            response.getContent()\n        );\n      }\n      Map<String, String> responseData = jsonMapper.readValue(\n          response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n      );\n      String id = responseData.get(\"id\");\n      LOG.info(\"Submitted supervisor with id[%s]\", id);\n      return id;\n    }\n    catch (Exception e) {\n      throw Throwables.propagate(e);\n    }\n  }\n","realPath":"integration-tests/src/main/java/org/apache/druid/testing/clients/OverlordResourceTestClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"}],"commitId":"7ada1c49f9735a37808f3ed7656d93ae88b8b925","commitMessage":"@@@Prohibit Throwables.propagate() (#7121)\n\n* Throw caught exception.\n\n* Throw caught exceptions.\n\n* Related checkstyle rule is added to prevent further bugs.\n\n* RuntimeException() is used instead of Throwables.propagate().\n\n* Missing import is added.\n\n* Throwables are propogated if possible.\n\n* Throwables are propogated if possible.\n\n* Throwables are propogated if possible.\n\n* Throwables are propogated if possible.\n\n* * Checkstyle definition is improved.\n* Throwables.propagate() usages are removed.\n\n* Checkstyle pattern is changed for only scanning \"Throwables.propagate(\" instead of checking lookbehind.\n\n* Throwable is kept before firing a Runtime Exception.\n\n* Fix unused assignments.\n","date":"2019-03-15 05:28:33","modifiedFileCount":"228","status":"M","submitter":"Furkan KAMACI"},{"authorTime":"2019-07-08 16:03:00","codes":[{"authorDate":"2019-07-08 16:03:00","commitOrder":3,"curCode":"  public String submitTask(final String task)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            StatusResponseHolder response = httpClient.go(\n                new Request(HttpMethod.POST, new URL(getIndexerURL() + \"task\"))\n                    .setContent(\n                        \"application/json\",\n                        StringUtils.toUtf8(task)\n                    ),\n                StatusResponseHandler.getInstance()\n            ).get();\n            if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n              throw new ISE(\n                  \"Error while submitting task to indexer response [%s %s]\",\n                  response.getStatus(),\n                  response.getContent()\n              );\n            }\n            Map<String, String> responseData = jsonMapper.readValue(\n                response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n            );\n            String taskID = responseData.get(\"task\");\n            LOG.info(\"Submitted task with TaskID[%s]\", taskID);\n            return taskID;\n          },\n          Predicates.alwaysTrue(),\n          5\n      );\n    }\n    catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-07-08 16:03:00","endLine":109,"groupId":"7699","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"submitTask","params":"(finalStringtask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1f/24236577cc24a2b73e1054ad189c660362f03b.src","preCode":"  public String submitTask(final String task)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            StatusResponseHolder response = httpClient.go(\n                new Request(HttpMethod.POST, new URL(getIndexerURL() + \"task\"))\n                    .setContent(\n                        \"application/json\",\n                        StringUtils.toUtf8(task)\n                    ),\n                responseHandler\n            ).get();\n            if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n              throw new ISE(\n                  \"Error while submitting task to indexer response [%s %s]\",\n                  response.getStatus(),\n                  response.getContent()\n              );\n            }\n            Map<String, String> responseData = jsonMapper.readValue(\n                response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n            );\n            String taskID = responseData.get(\"task\");\n            LOG.info(\"Submitted task with TaskID[%s]\", taskID);\n            return taskID;\n          },\n          Predicates.alwaysTrue(),\n          5\n      );\n    }\n    catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"integration-tests/src/main/java/org/apache/druid/testing/clients/OverlordResourceTestClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2019-07-08 16:03:00","commitOrder":3,"curCode":"  public String submitSupervisor(String spec)\n  {\n    try {\n      StatusResponseHolder response = httpClient.go(\n          new Request(HttpMethod.POST, new URL(getIndexerURL() + \"supervisor\"))\n              .setContent(\n                  \"application/json\",\n                  StringUtils.toUtf8(spec)\n              ),\n          StatusResponseHandler.getInstance()\n      ).get();\n      if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n        throw new ISE(\n            \"Error while submitting supervisor to overlord, response [%s %s]\",\n            response.getStatus(),\n            response.getContent()\n        );\n      }\n      Map<String, String> responseData = jsonMapper.readValue(\n          response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n      );\n      String id = responseData.get(\"id\");\n      LOG.info(\"Submitted supervisor with id[%s]\", id);\n      return id;\n    }\n    catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-07-08 16:03:00","endLine":231,"groupId":"22767","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"submitSupervisor","params":"(Stringspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1f/24236577cc24a2b73e1054ad189c660362f03b.src","preCode":"  public String submitSupervisor(String spec)\n  {\n    try {\n      StatusResponseHolder response = httpClient.go(\n          new Request(HttpMethod.POST, new URL(getIndexerURL() + \"supervisor\"))\n              .setContent(\n                  \"application/json\",\n                  StringUtils.toUtf8(spec)\n              ),\n          responseHandler\n      ).get();\n      if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n        throw new ISE(\n            \"Error while submitting supervisor to overlord, response [%s %s]\",\n            response.getStatus(),\n            response.getContent()\n        );\n      }\n      Map<String, String> responseData = jsonMapper.readValue(\n          response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n      );\n      String id = responseData.get(\"id\");\n      LOG.info(\"Submitted supervisor with id[%s]\", id);\n      return id;\n    }\n    catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"integration-tests/src/main/java/org/apache/druid/testing/clients/OverlordResourceTestClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"}],"commitId":"6701dc08fe96e32edf49645a8f07cb17ee6038a3","commitMessage":"@@@Making StatusResponseHandler singleton and fixing all its instantiation invocations (#7969)\n\n* Making StatusResponseHandler singleton and fixing all its instantiation invocations\n\n* Using StatusResponseHandler.getInstance() where applicable\n","date":"2019-07-08 16:03:00","modifiedFileCount":"18","status":"M","submitter":"Sashidhar Thallam"},{"authorTime":"2020-04-30 04:18:01","codes":[{"authorDate":"2019-07-08 16:03:00","commitOrder":4,"curCode":"  public String submitTask(final String task)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            StatusResponseHolder response = httpClient.go(\n                new Request(HttpMethod.POST, new URL(getIndexerURL() + \"task\"))\n                    .setContent(\n                        \"application/json\",\n                        StringUtils.toUtf8(task)\n                    ),\n                StatusResponseHandler.getInstance()\n            ).get();\n            if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n              throw new ISE(\n                  \"Error while submitting task to indexer response [%s %s]\",\n                  response.getStatus(),\n                  response.getContent()\n              );\n            }\n            Map<String, String> responseData = jsonMapper.readValue(\n                response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n            );\n            String taskID = responseData.get(\"task\");\n            LOG.info(\"Submitted task with TaskID[%s]\", taskID);\n            return taskID;\n          },\n          Predicates.alwaysTrue(),\n          5\n      );\n    }\n    catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-07-08 16:03:00","endLine":109,"groupId":"103713","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"submitTask","params":"(finalStringtask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1f/24236577cc24a2b73e1054ad189c660362f03b.src","preCode":"  public String submitTask(final String task)\n  {\n    try {\n      return RetryUtils.retry(\n          () -> {\n            StatusResponseHolder response = httpClient.go(\n                new Request(HttpMethod.POST, new URL(getIndexerURL() + \"task\"))\n                    .setContent(\n                        \"application/json\",\n                        StringUtils.toUtf8(task)\n                    ),\n                StatusResponseHandler.getInstance()\n            ).get();\n            if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n              throw new ISE(\n                  \"Error while submitting task to indexer response [%s %s]\",\n                  response.getStatus(),\n                  response.getContent()\n              );\n            }\n            Map<String, String> responseData = jsonMapper.readValue(\n                response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n            );\n            String taskID = responseData.get(\"task\");\n            LOG.info(\"Submitted task with TaskID[%s]\", taskID);\n            return taskID;\n          },\n          Predicates.alwaysTrue(),\n          5\n      );\n    }\n    catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"integration-tests/src/main/java/org/apache/druid/testing/clients/OverlordResourceTestClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"},{"authorDate":"2020-04-30 04:18:01","commitOrder":4,"curCode":"  public String submitSupervisor(String spec)\n  {\n    try {\n      StatusResponseHolder response = httpClient.go(\n          new Request(HttpMethod.POST, new URL(getIndexerURL() + \"supervisor\"))\n              .setContent(\n                  \"application/json\",\n                  StringUtils.toUtf8(spec)\n              ),\n          StatusResponseHandler.getInstance()\n      ).get();\n      if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n        throw new ISE(\n            \"Error while submitting supervisor to overlord, response [%s: %s]\",\n            response.getStatus(),\n            response.getContent()\n        );\n      }\n      Map<String, String> responseData = jsonMapper.readValue(\n          response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n      );\n      String id = responseData.get(\"id\");\n      LOG.info(\"Submitted supervisor with id[%s]\", id);\n      return id;\n    }\n    catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2020-04-30 04:18:01","endLine":271,"groupId":"103713","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"submitSupervisor","params":"(Stringspec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2b/06ba5e06f72f3b8872cd82d1a5df049410c54f.src","preCode":"  public String submitSupervisor(String spec)\n  {\n    try {\n      StatusResponseHolder response = httpClient.go(\n          new Request(HttpMethod.POST, new URL(getIndexerURL() + \"supervisor\"))\n              .setContent(\n                  \"application/json\",\n                  StringUtils.toUtf8(spec)\n              ),\n          StatusResponseHandler.getInstance()\n      ).get();\n      if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n        throw new ISE(\n            \"Error while submitting supervisor to overlord, response [%s %s]\",\n            response.getStatus(),\n            response.getContent()\n        );\n      }\n      Map<String, String> responseData = jsonMapper.readValue(\n          response.getContent(), JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING\n      );\n      String id = responseData.get(\"id\");\n      LOG.info(\"Submitted supervisor with id[%s]\", id);\n      return id;\n    }\n    catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"integration-tests/src/main/java/org/apache/druid/testing/clients/OverlordResourceTestClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"M"}],"commitId":"39722bd0646464ca67d1a0bf6966c0b7e4aedaf9","commitMessage":"@@@Integration tests for stream ingestion with various data formats (#9783)\n\n* Integration tests for stream ingestion with various data formats\n\n* fix npe\n\n* better logging; fix tsv\n\n* fix tsv\n\n* exclude kinesis from travis\n\n* some readme","date":"2020-04-30 04:18:01","modifiedFileCount":"19","status":"M","submitter":"Jihoon Son"}]
