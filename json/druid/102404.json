[{"authorTime":"2018-12-22 03:49:24","codes":[{"authorDate":"2018-12-22 03:49:24","commitOrder":1,"curCode":"  protected SeekableStreamSupervisorReportPayload<String, String> createReportPayload(\n      int numPartitions,\n      boolean includeOffsets\n  )\n  {\n    KinesisSupervisorIOConfig ioConfig = spec.getIoConfig();\n    return new KinesisSupervisorReportPayload(\n        spec.getDataSchema().getDataSource(),\n        ioConfig.getStream(),\n        numPartitions,\n        ioConfig.getReplicas(),\n        ioConfig.getTaskDuration().getMillis() / 1000,\n        spec.isSuspended()\n    );\n  }\n","date":"2018-12-22 03:49:24","endLine":254,"groupId":"16410","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createReportPayload","params":"(intnumPartitions@booleanincludeOffsets)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f5/3bdf2ad12970fca7c4f4134ea66a25cd1f1ad2.src","preCode":"  protected SeekableStreamSupervisorReportPayload<String, String> createReportPayload(\n      int numPartitions,\n      boolean includeOffsets\n  )\n  {\n    KinesisSupervisorIOConfig ioConfig = spec.getIoConfig();\n    return new KinesisSupervisorReportPayload(\n        spec.getDataSchema().getDataSource(),\n        ioConfig.getStream(),\n        numPartitions,\n        ioConfig.getReplicas(),\n        ioConfig.getTaskDuration().getMillis() / 1000,\n        spec.isSuspended()\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisor.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"B"},{"authorDate":"2018-12-22 03:49:24","commitOrder":1,"curCode":"  protected SeekableStreamSupervisorReportPayload<Integer, Long> createReportPayload(\n      int numPartitions,\n      boolean includeOffsets\n  )\n  {\n    KafkaSupervisorIOConfig ioConfig = spec.getIoConfig();\n    Map<Integer, Long> partitionLag = getLagPerPartition(getHighestCurrentOffsets());\n    return new KafkaSupervisorReportPayload(\n        spec.getDataSchema().getDataSource(),\n        ioConfig.getTopic(),\n        numPartitions,\n        ioConfig.getReplicas(),\n        ioConfig.getTaskDuration().getMillis() / 1000,\n        includeOffsets ? latestSequenceFromStream : null,\n        includeOffsets ? partitionLag : null,\n        includeOffsets ? partitionLag.values().stream().mapToLong(x -> Math.max(x, 0)).sum() : null,\n        includeOffsets ? sequenceLastUpdated : null,\n        spec.isSuspended()\n    );\n  }\n","date":"2018-12-22 03:49:24","endLine":190,"groupId":"1847","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createReportPayload","params":"(intnumPartitions@booleanincludeOffsets)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6f/4434ea3e957879b81e01236e6d6820a4e1a378.src","preCode":"  protected SeekableStreamSupervisorReportPayload<Integer, Long> createReportPayload(\n      int numPartitions,\n      boolean includeOffsets\n  )\n  {\n    KafkaSupervisorIOConfig ioConfig = spec.getIoConfig();\n    Map<Integer, Long> partitionLag = getLagPerPartition(getHighestCurrentOffsets());\n    return new KafkaSupervisorReportPayload(\n        spec.getDataSchema().getDataSource(),\n        ioConfig.getTopic(),\n        numPartitions,\n        ioConfig.getReplicas(),\n        ioConfig.getTaskDuration().getMillis() / 1000,\n        includeOffsets ? latestSequenceFromStream : null,\n        includeOffsets ? partitionLag : null,\n        includeOffsets ? partitionLag.values().stream().mapToLong(x -> Math.max(x, 0)).sum() : null,\n        includeOffsets ? sequenceLastUpdated : null,\n        spec.isSuspended()\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisor.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"B"}],"commitId":"7c7997e8a1183a7bffad731ca94e8b4c381e8665","commitMessage":"@@@Add Kinesis Indexing Service to core Druid (#6431)\n\n* created seekablestream classes\n\n* created seekablestreamsupervisor class\n\n* first attempt to integrate kafa indexing service to use SeekableStream\n\n* seekablestream bug fixes\n\n* kafkarecordsupplier\n\n* integrated kafka indexing service with seekablestream\n\n* implemented resume/suspend and refactored some package names\n\n* moved kinesis indexing service into core druid extensions\n\n* merged some changes from kafka supervisor race condition\n\n* integrated kinesis-indexing-service with seekablestream\n\n* unite tests for kinesis-indexing-service\n\n* various bug fixes for kinesis-indexing-service\n\n* refactored kinesisindexingtask\n\n* finished up more kinesis unit tests\n\n* more bug fixes for kinesis-indexing-service\n\n* finsihed refactoring kinesis unit tests\n\n* removed KinesisParititons and KafkaPartitions to use SeekableStreamPartitions\n\n* kinesis-indexing-service code cleanup and docs\n\n* merge #6291\n\nmerge #6337\n\nmerge #6383\n\n* added more docs and reordered methods\n\n* fixd kinesis tests after merging master and added docs in seekablestream\n\n* fix various things from pr comment\n\n* improve recordsupplier and add unit tests\n\n* migrated to aws-java-sdk-kinesis\n\n* merge changes from master\n\n* fix pom files and forbiddenapi checks\n\n* checkpoint JavaType bug fix\n\n* fix pom and stuff\n\n* disable checkpointing in kinesis\n\n* fix kinesis sequence number null in closed shard\n\n* merge changes from master\n\n* fixes for kinesis tasks\n\n* capitalized <partitionType.  sequenceType>\n\n* removed abstract class loggers\n\n* conform to guava api restrictions\n\n* add docker for travis other modules test\n\n* address comments\n\n* improve RecordSupplier to supply records in batch\n\n* fix strict compile issue\n\n* add test scope for localstack dependency\n\n* kinesis indexing task refactoring\n\n* comments\n\n* github comments\n\n* minor fix\n\n* removed unneeded readme\n\n* fix deserialization bug\n\n* fix various bugs\n\n* KinesisRecordSupplier unable to catch up to earliest position in stream bug fix\n\n* minor changes to kinesis\n\n* implement deaggregate for kinesis\n\n* Merge remote-tracking branch 'upstream/master' into seekablestream\n\n* fix kinesis offset discrepancy with kafka\n\n* kinesis record supplier disable getPosition\n\n* pr comments\n\n* mock for kinesis tests and remove docker dependency for unit tests\n\n* PR comments\n\n* avg lag in kafkasupervisor #6587\n\n* refacotred SequenceMetadata in taskRunners\n\n* small fix\n\n* more small fix\n\n* recordsupplier resource leak\n\n* revert .travis.yml formatting\n\n* fix style\n\n* kinesis docs\n\n* doc part2\n\n* more docs\n\n* comments\n\n* comments*2\n\n* revert string replace changes\n\n* comments\n\n* teamcity\n\n* comments part 1\n\n* comments part 2\n\n* comments part 3\n\n* merge #6754\n\n* fix injection binding\n\n* comments\n\n* KinesisRegion refactor\n\n* comments part idk lol\n\n* can't think of a commit msg anymore\n\n* remove possiblyResetDataSourceMetadata() for IncrementalPublishingTaskRunner\n\n* commmmmmmmmmments\n\n* extra error handling in KinesisRecordSupplier getRecords\n\n* comments\n\n* quickfix\n\n* typo\n\n* oof\n","date":"2018-12-22 03:49:24","modifiedFileCount":"22","status":"B","submitter":"Joshua Sun"},{"authorTime":"2019-06-01 08:16:01","codes":[{"authorDate":"2019-06-01 08:16:01","commitOrder":2,"curCode":"  protected SeekableStreamSupervisorReportPayload<String, String> createReportPayload(\n      int numPartitions,\n      boolean includeOffsets\n  )\n  {\n    KinesisSupervisorIOConfig ioConfig = spec.getIoConfig();\n    return new KinesisSupervisorReportPayload(\n        spec.getDataSchema().getDataSource(),\n        ioConfig.getStream(),\n        numPartitions,\n        ioConfig.getReplicas(),\n        ioConfig.getTaskDuration().getMillis() / 1000,\n        spec.isSuspended(),\n        stateManager.isHealthy(),\n        stateManager.getSupervisorState().getBasicState(),\n        stateManager.getSupervisorState(),\n        stateManager.getExceptionEvents()\n    );\n  }\n","date":"2019-06-01 08:16:01","endLine":256,"groupId":"16410","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createReportPayload","params":"(intnumPartitions@booleanincludeOffsets)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/39/619a268630b5b44cd6b0b11705fb5d29185f1a.src","preCode":"  protected SeekableStreamSupervisorReportPayload<String, String> createReportPayload(\n      int numPartitions,\n      boolean includeOffsets\n  )\n  {\n    KinesisSupervisorIOConfig ioConfig = spec.getIoConfig();\n    return new KinesisSupervisorReportPayload(\n        spec.getDataSchema().getDataSource(),\n        ioConfig.getStream(),\n        numPartitions,\n        ioConfig.getReplicas(),\n        ioConfig.getTaskDuration().getMillis() / 1000,\n        spec.isSuspended()\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisor.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"},{"authorDate":"2019-06-01 08:16:01","commitOrder":2,"curCode":"  protected SeekableStreamSupervisorReportPayload<Integer, Long> createReportPayload(\n      int numPartitions,\n      boolean includeOffsets\n  )\n  {\n    KafkaSupervisorIOConfig ioConfig = spec.getIoConfig();\n    Map<Integer, Long> partitionLag = getLagPerPartition(getHighestCurrentOffsets());\n    return new KafkaSupervisorReportPayload(\n        spec.getDataSchema().getDataSource(),\n        ioConfig.getTopic(),\n        numPartitions,\n        ioConfig.getReplicas(),\n        ioConfig.getTaskDuration().getMillis() / 1000,\n        includeOffsets ? latestSequenceFromStream : null,\n        includeOffsets ? partitionLag : null,\n        includeOffsets ? partitionLag.values().stream().mapToLong(x -> Math.max(x, 0)).sum() : null,\n        includeOffsets ? sequenceLastUpdated : null,\n        spec.isSuspended(),\n        stateManager.isHealthy(),\n        stateManager.getSupervisorState().getBasicState(),\n        stateManager.getSupervisorState(),\n        stateManager.getExceptionEvents()\n    );\n  }\n","date":"2019-06-01 08:16:01","endLine":200,"groupId":"1847","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createReportPayload","params":"(intnumPartitions@booleanincludeOffsets)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5d/419a4497f37566fe8791554bda4fab22f932c3.src","preCode":"  protected SeekableStreamSupervisorReportPayload<Integer, Long> createReportPayload(\n      int numPartitions,\n      boolean includeOffsets\n  )\n  {\n    KafkaSupervisorIOConfig ioConfig = spec.getIoConfig();\n    Map<Integer, Long> partitionLag = getLagPerPartition(getHighestCurrentOffsets());\n    return new KafkaSupervisorReportPayload(\n        spec.getDataSchema().getDataSource(),\n        ioConfig.getTopic(),\n        numPartitions,\n        ioConfig.getReplicas(),\n        ioConfig.getTaskDuration().getMillis() / 1000,\n        includeOffsets ? latestSequenceFromStream : null,\n        includeOffsets ? partitionLag : null,\n        includeOffsets ? partitionLag.values().stream().mapToLong(x -> Math.max(x, 0)).sum() : null,\n        includeOffsets ? sequenceLastUpdated : null,\n        spec.isSuspended()\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisor.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"8032c4add8f78d0c15044d0847201c618e27dc25","commitMessage":"@@@Add errors and state to stream supervisor status API endpoint (#7428)\n\n* Add state and error tracking for seekable stream supervisors\n\n* Fixed nits in docs\n\n* Made inner class static and updated spec test with jackson inject\n\n* Review changes\n\n* Remove redundant config param in supervisor\n\n* Style\n\n* Applied some of Jon's recommendations\n\n* Add transience field\n\n* write test\n\n* implement code review changes except for reconsidering logic of markRunFinishedAndEvaluateHealth()\n\n* remove transience reporting and fix SeekableStreamSupervisorStateManager impl\n\n* move call to stateManager.markRunFinished() from RunNotice to runInternal() for tests\n\n* remove stateHistory because it wasn't adding much value.  some fixes.  and add more tests\n\n* fix tests\n\n* code review changes and add HTTP health check status\n\n* fix test failure\n\n* refactor to split into a generic SupervisorStateManager and a specific SeekableStreamSupervisorStateManager\n\n* fixup after merge\n\n* code review changes - add additional docs\n\n* cleanup KafkaIndexTaskTest\n\n* add additional documentation for Kinesis indexing\n\n* remove unused throws class\n","date":"2019-06-01 08:16:01","modifiedFileCount":"32","status":"M","submitter":"Justin Borromeo"},{"authorTime":"2020-03-17 12:39:53","codes":[{"authorDate":"2020-03-17 12:39:53","commitOrder":3,"curCode":"  protected SeekableStreamSupervisorReportPayload<String, String> createReportPayload(\n      int numPartitions,\n      boolean includeOffsets\n  )\n  {\n    KinesisSupervisorIOConfig ioConfig = spec.getIoConfig();\n    Map<String, Long> partitionLag = getTimeLagPerPartition(getHighestCurrentOffsets());\n    return new KinesisSupervisorReportPayload(\n        spec.getDataSchema().getDataSource(),\n        ioConfig.getStream(),\n        numPartitions,\n        ioConfig.getReplicas(),\n        ioConfig.getTaskDuration().getMillis() / 1000,\n        spec.isSuspended(),\n        stateManager.isHealthy(),\n        stateManager.getSupervisorState().getBasicState(),\n        stateManager.getSupervisorState(),\n        stateManager.getExceptionEvents(),\n        includeOffsets ? partitionLag : null,\n        includeOffsets ? partitionLag.values().stream().mapToLong(x -> Math.max(x, 0)).sum() : null\n    );\n  }\n","date":"2020-03-17 12:39:53","endLine":288,"groupId":"102404","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createReportPayload","params":"(intnumPartitions@booleanincludeOffsets)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/13/f94a5d345c31a42941b312760ad5b2fd80ca59.src","preCode":"  protected SeekableStreamSupervisorReportPayload<String, String> createReportPayload(\n      int numPartitions,\n      boolean includeOffsets\n  )\n  {\n    KinesisSupervisorIOConfig ioConfig = spec.getIoConfig();\n    return new KinesisSupervisorReportPayload(\n        spec.getDataSchema().getDataSource(),\n        ioConfig.getStream(),\n        numPartitions,\n        ioConfig.getReplicas(),\n        ioConfig.getTaskDuration().getMillis() / 1000,\n        spec.isSuspended(),\n        stateManager.isHealthy(),\n        stateManager.getSupervisorState().getBasicState(),\n        stateManager.getSupervisorState(),\n        stateManager.getExceptionEvents()\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisor.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":267,"status":"M"},{"authorDate":"2020-03-17 12:39:53","commitOrder":3,"curCode":"  protected SeekableStreamSupervisorReportPayload<Integer, Long> createReportPayload(\n      int numPartitions,\n      boolean includeOffsets\n  )\n  {\n    KafkaSupervisorIOConfig ioConfig = spec.getIoConfig();\n    Map<Integer, Long> partitionLag = getRecordLagPerPartition(getHighestCurrentOffsets());\n    return new KafkaSupervisorReportPayload(\n        spec.getDataSchema().getDataSource(),\n        ioConfig.getTopic(),\n        numPartitions,\n        ioConfig.getReplicas(),\n        ioConfig.getTaskDuration().getMillis() / 1000,\n        includeOffsets ? latestSequenceFromStream : null,\n        includeOffsets ? partitionLag : null,\n        includeOffsets ? partitionLag.values().stream().mapToLong(x -> Math.max(x, 0)).sum() : null,\n        includeOffsets ? sequenceLastUpdated : null,\n        spec.isSuspended(),\n        stateManager.isHealthy(),\n        stateManager.getSupervisorState().getBasicState(),\n        stateManager.getSupervisorState(),\n        stateManager.getExceptionEvents()\n    );\n  }\n","date":"2020-03-17 12:39:53","endLine":171,"groupId":"102404","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createReportPayload","params":"(intnumPartitions@booleanincludeOffsets)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f5/cec3d9147cfa298c2c51582a9d07c4cbc2593f.src","preCode":"  protected SeekableStreamSupervisorReportPayload<Integer, Long> createReportPayload(\n      int numPartitions,\n      boolean includeOffsets\n  )\n  {\n    KafkaSupervisorIOConfig ioConfig = spec.getIoConfig();\n    Map<Integer, Long> partitionLag = getLagPerPartition(getHighestCurrentOffsets());\n    return new KafkaSupervisorReportPayload(\n        spec.getDataSchema().getDataSource(),\n        ioConfig.getTopic(),\n        numPartitions,\n        ioConfig.getReplicas(),\n        ioConfig.getTaskDuration().getMillis() / 1000,\n        includeOffsets ? latestSequenceFromStream : null,\n        includeOffsets ? partitionLag : null,\n        includeOffsets ? partitionLag.values().stream().mapToLong(x -> Math.max(x, 0)).sum() : null,\n        includeOffsets ? sequenceLastUpdated : null,\n        spec.isSuspended(),\n        stateManager.isHealthy(),\n        stateManager.getSupervisorState().getBasicState(),\n        stateManager.getSupervisorState(),\n        stateManager.getExceptionEvents()\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisor.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"142742f291daaf1ac9afea319cacbbe2a3077952","commitMessage":"@@@add kinesis lag metric (#9509)\n\n* add kinesis lag metric\n\n* fixes\n\n* heh\n\n* do it right this time\n\n* more test\n\n* split out supervisor report lags into lagMillis.  remove latest offsets from kinesis supervisor report since always null.  review stuffs","date":"2020-03-17 12:39:53","modifiedFileCount":"17","status":"M","submitter":"Clint Wylie"}]
