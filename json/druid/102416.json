[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testStartFailsOnMissingConnect()\n  {\n    expectedException.expectMessage(\"zookeeper.connect required property\");\n    PowerMock.replay(cacheManager);\n    final KafkaLookupExtractorFactory factory = new KafkaLookupExtractorFactory(\n        cacheManager,\n        TOPIC,\n        ImmutableMap.of()\n    );\n    Assert.assertTrue(factory.start());\n    Assert.assertTrue(factory.close());\n    PowerMock.verify(cacheManager);\n  }\n","date":"2018-08-31 00:56:26","endLine":471,"groupId":"20322","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testStartFailsOnMissingConnect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a5/d1dd205110a55f1e26746f638f83947f93bfdf.src","preCode":"  public void testStartFailsOnMissingConnect()\n  {\n    expectedException.expectMessage(\"zookeeper.connect required property\");\n    PowerMock.replay(cacheManager);\n    final KafkaLookupExtractorFactory factory = new KafkaLookupExtractorFactory(\n        cacheManager,\n        TOPIC,\n        ImmutableMap.of()\n    );\n    Assert.assertTrue(factory.start());\n    Assert.assertTrue(factory.close());\n    PowerMock.verify(cacheManager);\n  }\n","realPath":"extensions-core/kafka-extraction-namespace/src/test/java/org/apache/druid/query/lookup/KafkaLookupExtractorFactoryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":459,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testStartFailsOnGroupID()\n  {\n    expectedException.expectMessage(\n        \"Cannot set kafka property [group.id]. Property is randomly generated for you. Found\");\n    PowerMock.replay(cacheManager);\n    final KafkaLookupExtractorFactory factory = new KafkaLookupExtractorFactory(\n        cacheManager,\n        TOPIC,\n        ImmutableMap.of(\"group.id\", \"make me fail\")\n    );\n    Assert.assertTrue(factory.start());\n    Assert.assertTrue(factory.close());\n    PowerMock.verify(cacheManager);\n  }\n","date":"2018-08-31 00:56:26","endLine":487,"groupId":"11617","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testStartFailsOnGroupID","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a5/d1dd205110a55f1e26746f638f83947f93bfdf.src","preCode":"  public void testStartFailsOnGroupID()\n  {\n    expectedException.expectMessage(\n        \"Cannot set kafka property [group.id]. Property is randomly generated for you. Found\");\n    PowerMock.replay(cacheManager);\n    final KafkaLookupExtractorFactory factory = new KafkaLookupExtractorFactory(\n        cacheManager,\n        TOPIC,\n        ImmutableMap.of(\"group.id\", \"make me fail\")\n    );\n    Assert.assertTrue(factory.start());\n    Assert.assertTrue(factory.close());\n    PowerMock.verify(cacheManager);\n  }\n","realPath":"extensions-core/kafka-extraction-namespace/src/test/java/org/apache/druid/query/lookup/KafkaLookupExtractorFactoryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":474,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-08-15 04:46:25","codes":[{"authorDate":"2019-08-15 04:46:25","commitOrder":2,"curCode":"  public void testStartFailsOnMissingConnect()\n  {\n    expectedException.expectMessage(\"bootstrap.servers required property\");\n    EasyMock.expect(cacheManager.createCache())\n            .andReturn(cacheHandler)\n            .once();\n    EasyMock.expect(cacheHandler.getCache()).andReturn(new ConcurrentHashMap<>()).once();\n    cacheHandler.close();\n    PowerMock.replay(cacheManager);\n    final KafkaLookupExtractorFactory factory = new KafkaLookupExtractorFactory(\n        cacheManager,\n        TOPIC,\n        ImmutableMap.of()\n    );\n    Assert.assertTrue(factory.start());\n    Assert.assertTrue(factory.close());\n    PowerMock.verify(cacheManager);\n  }\n","date":"2019-08-15 04:46:25","endLine":424,"groupId":"102416","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testStartFailsOnMissingConnect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/50/fcca0403a6e136be9979673e17a93b8b184e71.src","preCode":"  public void testStartFailsOnMissingConnect()\n  {\n    expectedException.expectMessage(\"zookeeper.connect required property\");\n    PowerMock.replay(cacheManager);\n    final KafkaLookupExtractorFactory factory = new KafkaLookupExtractorFactory(\n        cacheManager,\n        TOPIC,\n        ImmutableMap.of()\n    );\n    Assert.assertTrue(factory.start());\n    Assert.assertTrue(factory.close());\n    PowerMock.verify(cacheManager);\n  }\n","realPath":"extensions-core/kafka-extraction-namespace/src/test/java/org/apache/druid/query/lookup/KafkaLookupExtractorFactoryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":407,"status":"M"},{"authorDate":"2019-08-15 04:46:25","commitOrder":2,"curCode":"  public void testStartFailsOnGroupID()\n  {\n    expectedException.expectMessage(\n        \"Cannot set kafka property [group.id]. Property is randomly generated for you. Found\");\n    EasyMock.expect(cacheManager.createCache())\n            .andReturn(cacheHandler)\n            .once();\n    EasyMock.expect(cacheHandler.getCache()).andReturn(new ConcurrentHashMap<>());\n    cacheHandler.close();\n    PowerMock.replay(cacheManager, cacheHandler);\n    final KafkaLookupExtractorFactory factory = new KafkaLookupExtractorFactory(\n        cacheManager,\n        TOPIC,\n        ImmutableMap.of(\"group.id\", \"make me fail\")\n    );\n    Assert.assertTrue(factory.start());\n    Assert.assertTrue(factory.close());\n    PowerMock.verify(cacheManager);\n  }\n","date":"2019-08-15 04:46:25","endLine":445,"groupId":"102416","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testStartFailsOnGroupID","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/50/fcca0403a6e136be9979673e17a93b8b184e71.src","preCode":"  public void testStartFailsOnGroupID()\n  {\n    expectedException.expectMessage(\n        \"Cannot set kafka property [group.id]. Property is randomly generated for you. Found\");\n    PowerMock.replay(cacheManager);\n    final KafkaLookupExtractorFactory factory = new KafkaLookupExtractorFactory(\n        cacheManager,\n        TOPIC,\n        ImmutableMap.of(\"group.id\", \"make me fail\")\n    );\n    Assert.assertTrue(factory.start());\n    Assert.assertTrue(factory.close());\n    PowerMock.verify(cacheManager);\n  }\n","realPath":"extensions-core/kafka-extraction-namespace/src/test/java/org/apache/druid/query/lookup/KafkaLookupExtractorFactoryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":427,"status":"M"}],"commitId":"1f3a99616d06a0131f4ae1b66ef37442f1b7c796","commitMessage":"@@@Upgrade Kafka library for kafka-lookup module (#8078)\n\n* Upgrade Kafka library for kafka-lookup module\n\n* Update licenes.yaml\n\n* Adopt class workaround from KafkaRecordSupplier#getKafkaConsumer\n\n* Update lisences for kafka clients\n","date":"2019-08-15 04:46:25","modifiedFileCount":"3","status":"M","submitter":"Sayat"}]
