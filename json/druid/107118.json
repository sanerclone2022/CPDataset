[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testNumChildrenSize()\n  {\n    BitmapFactory bf = new ConciseBitmapFactory();\n    RTree tree = new RTree(2, new LinearGutmanSplitStrategy(0, 50, bf), bf);\n    Random rand = new Random();\n    for (int i = 0; i < 100; i++) {\n      tree.insert(new float[]{rand.nextFloat(), rand.nextFloat()}, i);\n    }\n\n    Assert.assertTrue(getNumPoints(tree.getRoot()) >= tree.getSize());\n  }\n","date":"2018-08-31 00:56:26","endLine":91,"groupId":"14436","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNumChildrenSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/df/6b63329719e06a84a585aa29e6615680b57977.src","preCode":"  public void testNumChildrenSize()\n  {\n    BitmapFactory bf = new ConciseBitmapFactory();\n    RTree tree = new RTree(2, new LinearGutmanSplitStrategy(0, 50, bf), bf);\n    Random rand = new Random();\n    for (int i = 0; i < 100; i++) {\n      tree.insert(new float[]{rand.nextFloat(), rand.nextFloat()}, i);\n    }\n\n    Assert.assertTrue(getNumPoints(tree.getRoot()) >= tree.getSize());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/collections/spatial/split/LinearGutmanSplitStrategyTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testSplitOccurs()\n  {\n    Random rand = new Random();\n    for (int i = 0; i < 100; i++) {\n      tree.insert(new float[]{rand.nextFloat(), rand.nextFloat()}, i);\n    }\n\n    Assert.assertTrue(tree.getRoot().getChildren().size() > 1);\n  }\n","date":"2018-08-31 00:56:26","endLine":103,"groupId":"14436","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSplitOccurs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/79/d0daa81bcc2e38446583ac4da4f2f51f2a6cfe.src","preCode":"  public void testSplitOccurs()\n  {\n    Random rand = new Random();\n    for (int i = 0; i < 100; i++) {\n      tree.insert(new float[]{rand.nextFloat(), rand.nextFloat()}, i);\n    }\n\n    Assert.assertTrue(tree.getRoot().getChildren().size() > 1);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/collections/spatial/RTreeTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-09-15 04:35:51","codes":[{"authorDate":"2018-09-15 04:35:51","commitOrder":2,"curCode":"  public void testNumChildrenSize()\n  {\n    BitmapFactory bf = new ConciseBitmapFactory();\n    RTree tree = new RTree(2, new LinearGutmanSplitStrategy(0, 50, bf), bf);\n    Random rand = ThreadLocalRandom.current();\n    for (int i = 0; i < 100; i++) {\n      tree.insert(new float[]{rand.nextFloat(), rand.nextFloat()}, i);\n    }\n\n    Assert.assertTrue(getNumPoints(tree.getRoot()) >= tree.getSize());\n  }\n","date":"2018-09-15 04:35:51","endLine":92,"groupId":"107118","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNumChildrenSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/23/2ba8a86cc9a9f1d71ab85e995dc2c60c2464e9.src","preCode":"  public void testNumChildrenSize()\n  {\n    BitmapFactory bf = new ConciseBitmapFactory();\n    RTree tree = new RTree(2, new LinearGutmanSplitStrategy(0, 50, bf), bf);\n    Random rand = new Random();\n    for (int i = 0; i < 100; i++) {\n      tree.insert(new float[]{rand.nextFloat(), rand.nextFloat()}, i);\n    }\n\n    Assert.assertTrue(getNumPoints(tree.getRoot()) >= tree.getSize());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/collections/spatial/split/LinearGutmanSplitStrategyTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2018-09-15 04:35:51","commitOrder":2,"curCode":"  public void testSplitOccurs()\n  {\n    Random rand = ThreadLocalRandom.current();\n    for (int i = 0; i < 100; i++) {\n      tree.insert(new float[]{rand.nextFloat(), rand.nextFloat()}, i);\n    }\n\n    Assert.assertTrue(tree.getRoot().getChildren().size() > 1);\n  }\n","date":"2018-09-15 04:35:51","endLine":104,"groupId":"107118","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSplitOccurs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/24/e47ed96b9e935f4c97b9d717cfb903d5650c0b.src","preCode":"  public void testSplitOccurs()\n  {\n    Random rand = new Random();\n    for (int i = 0; i < 100; i++) {\n      tree.insert(new float[]{rand.nextFloat(), rand.nextFloat()}, i);\n    }\n\n    Assert.assertTrue(tree.getRoot().getChildren().size() > 1);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/collections/spatial/RTreeTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"0c4bd2b57b19bcbd9a275fad412960aa0a39ca5f","commitMessage":"@@@Prohibit some Random usage patterns (#6226)\n\n* Prohibit Random usage patterns\n\n* Fix FlattenJSONBenchmarkUtil\n","date":"2018-09-15 04:35:51","modifiedFileCount":"44","status":"M","submitter":"Roman Leventov"}]
