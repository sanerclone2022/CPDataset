[{"authorTime":"2019-01-18 06:51:16","codes":[{"authorDate":"2019-01-18 06:51:16","commitOrder":1,"curCode":"  public void testOffer()\n  {\n    FixedBucketsHistogram h = buildHistogram(\n        0,\n        200,\n        200,\n        FixedBucketsHistogram.OutlierHandlingMode.OVERFLOW,\n        VALUES2\n    );\n\n    float[] quantiles = h.percentilesFloat(new double[]{12.5f, 50.0f, 98f});\n    double[] doubles = new double[VALUES2.length];\n\n    for (int i = 0; i < doubles.length; i++) {\n      doubles[i] = VALUES2[i];\n    }\n\n    Assert.assertArrayEquals(\n        new float[]{2.5f, 20.0f, 46.76f},\n        quantiles,\n        0.01f\n    );\n  }\n","date":"2019-01-18 06:51:16","endLine":97,"groupId":"13543","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testOffer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f8/9167d107110aa4f54a73c91605482692789ed8.src","preCode":"  public void testOffer()\n  {\n    FixedBucketsHistogram h = buildHistogram(\n        0,\n        200,\n        200,\n        FixedBucketsHistogram.OutlierHandlingMode.OVERFLOW,\n        VALUES2\n    );\n\n    float[] quantiles = h.percentilesFloat(new double[]{12.5f, 50.0f, 98f});\n    double[] doubles = new double[VALUES2.length];\n\n    for (int i = 0; i < doubles.length; i++) {\n      doubles[i] = VALUES2[i];\n    }\n\n    Assert.assertArrayEquals(\n        new float[]{2.5f, 20.0f, 46.76f},\n        quantiles,\n        0.01f\n    );\n  }\n","realPath":"extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"},{"authorDate":"2019-01-18 06:51:16","commitOrder":1,"curCode":"  public void testOfferValues3()\n  {\n    FixedBucketsHistogram h = buildHistogram(\n        0,\n        200,\n        100,\n        FixedBucketsHistogram.OutlierHandlingMode.OVERFLOW,\n        VALUES3\n    );\n\n    float[] quantiles = h.percentilesFloat(new double[]{12.5f, 50.0f, 98f});\n    double[] doubles = new double[VALUES3.length];\n\n    for (int i = 0; i < doubles.length; i++) {\n      doubles[i] = VALUES3[i];\n    }\n\n    Assert.assertArrayEquals(\n        new float[]{14.857142f, 20.0f, 28.4f},\n        quantiles,\n        0.01f\n    );\n  }\n","date":"2019-01-18 06:51:16","endLine":203,"groupId":"13543","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOfferValues3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f8/9167d107110aa4f54a73c91605482692789ed8.src","preCode":"  public void testOfferValues3()\n  {\n    FixedBucketsHistogram h = buildHistogram(\n        0,\n        200,\n        100,\n        FixedBucketsHistogram.OutlierHandlingMode.OVERFLOW,\n        VALUES3\n    );\n\n    float[] quantiles = h.percentilesFloat(new double[]{12.5f, 50.0f, 98f});\n    double[] doubles = new double[VALUES3.length];\n\n    for (int i = 0; i < doubles.length; i++) {\n      doubles[i] = VALUES3[i];\n    }\n\n    Assert.assertArrayEquals(\n        new float[]{14.857142f, 20.0f, 28.4f},\n        quantiles,\n        0.01f\n    );\n  }\n","realPath":"extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"B"}],"commitId":"68f744ec0ae573f17fc140f2e468869605e77fb6","commitMessage":"@@@Fixed buckets histogram aggregator (#6638)\n\n* Fixed buckets histogram aggregator\n\n* PR comments\n\n* More PR comments\n\n* Checkstyle\n\n* TeamCity\n\n* More TeamCity\n\n* PR comment\n\n* PR comment\n\n* Fix doc formatting\n","date":"2019-01-18 06:51:16","modifiedFileCount":"9","status":"B","submitter":"Jonathan Wei"},{"authorTime":"2020-04-11 01:04:40","codes":[{"authorDate":"2020-04-11 01:04:40","commitOrder":2,"curCode":"  public void testOffer()\n  {\n    FixedBucketsHistogram h = buildHistogram(\n        0,\n        200,\n        200,\n        FixedBucketsHistogram.OutlierHandlingMode.OVERFLOW,\n        VALUES2\n    );\n\n    float[] quantiles = h.percentilesFloat(new double[]{12.5f, 50.0f, 98f});\n\n    Assert.assertArrayEquals(\n        new float[]{2.5f, 20.0f, 46.76f},\n        quantiles,\n        0.01f\n    );\n  }\n","date":"2020-04-11 01:04:40","endLine":92,"groupId":"103313","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testOffer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bf/929741863b6756f291aaaaef45094f3dfd04b9.src","preCode":"  public void testOffer()\n  {\n    FixedBucketsHistogram h = buildHistogram(\n        0,\n        200,\n        200,\n        FixedBucketsHistogram.OutlierHandlingMode.OVERFLOW,\n        VALUES2\n    );\n\n    float[] quantiles = h.percentilesFloat(new double[]{12.5f, 50.0f, 98f});\n    double[] doubles = new double[VALUES2.length];\n\n    for (int i = 0; i < doubles.length; i++) {\n      doubles[i] = VALUES2[i];\n    }\n\n    Assert.assertArrayEquals(\n        new float[]{2.5f, 20.0f, 46.76f},\n        quantiles,\n        0.01f\n    );\n  }\n","realPath":"extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2020-04-11 01:04:40","commitOrder":2,"curCode":"  public void testOfferValues3()\n  {\n    FixedBucketsHistogram h = buildHistogram(\n        0,\n        200,\n        100,\n        FixedBucketsHistogram.OutlierHandlingMode.OVERFLOW,\n        VALUES3\n    );\n\n    float[] quantiles = h.percentilesFloat(new double[]{12.5f, 50.0f, 98f});\n\n    Assert.assertArrayEquals(\n        new float[]{14.857142f, 20.0f, 28.4f},\n        quantiles,\n        0.01f\n    );\n  }\n","date":"2020-04-11 01:04:40","endLine":188,"groupId":"103313","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testOfferValues3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bf/929741863b6756f291aaaaef45094f3dfd04b9.src","preCode":"  public void testOfferValues3()\n  {\n    FixedBucketsHistogram h = buildHistogram(\n        0,\n        200,\n        100,\n        FixedBucketsHistogram.OutlierHandlingMode.OVERFLOW,\n        VALUES3\n    );\n\n    float[] quantiles = h.percentilesFloat(new double[]{12.5f, 50.0f, 98f});\n    double[] doubles = new double[VALUES3.length];\n\n    for (int i = 0; i < doubles.length; i++) {\n      doubles[i] = VALUES3[i];\n    }\n\n    Assert.assertArrayEquals(\n        new float[]{14.857142f, 20.0f, 28.4f},\n        quantiles,\n        0.01f\n    );\n  }\n","realPath":"extensions-core/histogram/src/test/java/org/apache/druid/query/aggregation/histogram/FixedBucketsHistogramTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"}],"commitId":"1ced3b33fb1642ee71e542940e4e2a4840e7a48c","commitMessage":"@@@IntelliJ inspections cleanup (#9339)\n\n* IntelliJ inspections cleanup\n\n* Standard Charset object can be used\n* Redundant Collection.addAll() call\n* String literal concatenation missing whitespace\n* Statement with empty body\n* Redundant Collection operation\n* StringBuilder can be replaced with String\n* Type parameter hides visible type\n\n* fix warnings in test code\n\n* more test fixes\n\n* remove string concatenation inspection error\n\n* fix extra curly brace\n\n* cleanup AzureTestUtils\n\n* fix charsets for RangerAdminClient\n\n* review comments","date":"2020-04-11 01:04:40","modifiedFileCount":"33","status":"M","submitter":"Suneet Saldanha"}]
