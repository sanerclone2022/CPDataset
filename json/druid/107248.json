[{"authorTime":"2018-10-03 01:50:22","codes":[{"authorDate":"2018-10-03 01:50:22","commitOrder":1,"curCode":"  public Deserializer getDeserializer()\n  {\n    return (buffer, builder, columnConfig) -> {\n      int offset = buffer.getInt();\n      int initialPos = buffer.position();\n      final CompressedColumnarLongsSupplier column = CompressedColumnarLongsSupplier.fromByteBuffer(\n          buffer,\n          byteOrder\n      );\n      buffer.position(initialPos + offset);\n      final ImmutableBitmap bitmap;\n      if (buffer.hasRemaining()) {\n        bitmap = bitmapSerdeFactory.getObjectStrategy().fromByteBufferWithSize(buffer);\n      } else {\n        bitmap = bitmapSerdeFactory.getBitmapFactory().makeEmptyImmutableBitmap();\n      }\n      builder.setType(ValueType.LONG)\n             .setHasMultipleValues(false)\n             .setNumericColumnSupplier(new LongNumericColumnSupplier(column, bitmap));\n    };\n  }\n","date":"2018-10-03 01:50:22","endLine":158,"groupId":"4010","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getDeserializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ad/27d81260f88b8f7c66b2431a11d52ad747d123.src","preCode":"  public Deserializer getDeserializer()\n  {\n    return (buffer, builder, columnConfig) -> {\n      int offset = buffer.getInt();\n      int initialPos = buffer.position();\n      final CompressedColumnarLongsSupplier column = CompressedColumnarLongsSupplier.fromByteBuffer(\n          buffer,\n          byteOrder\n      );\n      buffer.position(initialPos + offset);\n      final ImmutableBitmap bitmap;\n      if (buffer.hasRemaining()) {\n        bitmap = bitmapSerdeFactory.getObjectStrategy().fromByteBufferWithSize(buffer);\n      } else {\n        bitmap = bitmapSerdeFactory.getBitmapFactory().makeEmptyImmutableBitmap();\n      }\n      builder.setType(ValueType.LONG)\n             .setHasMultipleValues(false)\n             .setNumericColumnSupplier(new LongNumericColumnSupplier(column, bitmap));\n    };\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/serde/LongNumericColumnPartSerdeV2.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"},{"authorDate":"2018-10-03 01:50:22","commitOrder":1,"curCode":"  public Deserializer getDeserializer()\n  {\n    return (buffer, builder, columnConfig) -> {\n      int offset = buffer.getInt();\n      int initialPos = buffer.position();\n      final CompressedColumnarFloatsSupplier column = CompressedColumnarFloatsSupplier.fromByteBuffer(\n          buffer,\n          byteOrder\n      );\n      buffer.position(initialPos + offset);\n      final ImmutableBitmap bitmap;\n      if (buffer.hasRemaining()) {\n        bitmap = bitmapSerdeFactory.getObjectStrategy().fromByteBufferWithSize(buffer);\n      } else {\n        bitmap = bitmapSerdeFactory.getBitmapFactory().makeEmptyImmutableBitmap();\n      }\n      builder.setType(ValueType.FLOAT)\n             .setHasMultipleValues(false)\n             .setNumericColumnSupplier(new FloatNumericColumnSupplier(column, bitmap));\n    };\n  }\n","date":"2018-10-03 01:50:22","endLine":158,"groupId":"4010","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getDeserializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cc/c748a210a48ed234d411247e488f2456cc717a.src","preCode":"  public Deserializer getDeserializer()\n  {\n    return (buffer, builder, columnConfig) -> {\n      int offset = buffer.getInt();\n      int initialPos = buffer.position();\n      final CompressedColumnarFloatsSupplier column = CompressedColumnarFloatsSupplier.fromByteBuffer(\n          buffer,\n          byteOrder\n      );\n      buffer.position(initialPos + offset);\n      final ImmutableBitmap bitmap;\n      if (buffer.hasRemaining()) {\n        bitmap = bitmapSerdeFactory.getObjectStrategy().fromByteBufferWithSize(buffer);\n      } else {\n        bitmap = bitmapSerdeFactory.getBitmapFactory().makeEmptyImmutableBitmap();\n      }\n      builder.setType(ValueType.FLOAT)\n             .setHasMultipleValues(false)\n             .setNumericColumnSupplier(new FloatNumericColumnSupplier(column, bitmap));\n    };\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/serde/FloatNumericColumnPartSerdeV2.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"}],"commitId":"3ae563263a23000560749071d262727d47296856","commitMessage":"@@@Renamed 'Generic Column' -> 'Numeric Column'; Fixed a few resource leaks in processing; misc refinements (#5957)\n\nThis PR accumulates many refactorings and small improvements that I did while preparing the next change set of https://github.com/druid-io/druid/projects/2. I finally decided to make them a separate PR to minimize the volume of the main PR.\n\nSome of the changes:\n - Renamed confusing \"Generic Column\" term to \"Numeric Column\" (what it actually implies) in many class names.\n - Generified `ComplexMetricExtractor`","date":"2018-10-03 01:50:22","modifiedFileCount":"776","status":"B","submitter":"Roman Leventov"},{"authorTime":"2020-08-14 05:55:32","codes":[{"authorDate":"2020-08-14 05:55:32","commitOrder":2,"curCode":"  public Deserializer getDeserializer()\n  {\n    return (buffer, builder, columnConfig) -> {\n      int offset = buffer.getInt();\n      int initialPos = buffer.position();\n      final CompressedColumnarLongsSupplier column = CompressedColumnarLongsSupplier.fromByteBuffer(\n          buffer,\n          byteOrder\n      );\n      buffer.position(initialPos + offset);\n      final ImmutableBitmap bitmap;\n      final boolean hasNulls;\n      if (buffer.hasRemaining()) {\n        bitmap = bitmapSerdeFactory.getObjectStrategy().fromByteBufferWithSize(buffer);\n        hasNulls = !bitmap.isEmpty();\n      } else {\n        bitmap = bitmapSerdeFactory.getBitmapFactory().makeEmptyImmutableBitmap();\n        hasNulls = false;\n      }\n      builder.setType(ValueType.LONG)\n             .setHasMultipleValues(false)\n             .setHasNulls(hasNulls)\n             .setNumericColumnSupplier(new LongNumericColumnSupplier(column, bitmap));\n    };\n  }\n","date":"2020-08-14 05:55:32","endLine":167,"groupId":"107248","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getDeserializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ed/7ecbf6a9c1e422423ccd1f0649b6eb8386bbb5.src","preCode":"  public Deserializer getDeserializer()\n  {\n    return (buffer, builder, columnConfig) -> {\n      int offset = buffer.getInt();\n      int initialPos = buffer.position();\n      final CompressedColumnarLongsSupplier column = CompressedColumnarLongsSupplier.fromByteBuffer(\n          buffer,\n          byteOrder\n      );\n      buffer.position(initialPos + offset);\n      final ImmutableBitmap bitmap;\n      if (buffer.hasRemaining()) {\n        bitmap = bitmapSerdeFactory.getObjectStrategy().fromByteBufferWithSize(buffer);\n      } else {\n        bitmap = bitmapSerdeFactory.getBitmapFactory().makeEmptyImmutableBitmap();\n      }\n      builder.setType(ValueType.LONG)\n             .setHasMultipleValues(false)\n             .setNumericColumnSupplier(new LongNumericColumnSupplier(column, bitmap));\n    };\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/serde/LongNumericColumnPartSerdeV2.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"},{"authorDate":"2020-08-14 05:55:32","commitOrder":2,"curCode":"  public Deserializer getDeserializer()\n  {\n    return (buffer, builder, columnConfig) -> {\n      int offset = buffer.getInt();\n      int initialPos = buffer.position();\n      final CompressedColumnarFloatsSupplier column = CompressedColumnarFloatsSupplier.fromByteBuffer(\n          buffer,\n          byteOrder\n      );\n      buffer.position(initialPos + offset);\n      final ImmutableBitmap bitmap;\n      final boolean hasNulls;\n      if (buffer.hasRemaining()) {\n        bitmap = bitmapSerdeFactory.getObjectStrategy().fromByteBufferWithSize(buffer);\n        hasNulls = !bitmap.isEmpty();\n      } else {\n        bitmap = bitmapSerdeFactory.getBitmapFactory().makeEmptyImmutableBitmap();\n        hasNulls = false;\n      }\n      builder.setType(ValueType.FLOAT)\n             .setHasMultipleValues(false)\n             .setHasNulls(hasNulls)\n             .setNumericColumnSupplier(new FloatNumericColumnSupplier(column, bitmap));\n    };\n  }\n","date":"2020-08-14 05:55:32","endLine":165,"groupId":"107248","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getDeserializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6e/33f73cad6650d6e70012d62585c2a385135977.src","preCode":"  public Deserializer getDeserializer()\n  {\n    return (buffer, builder, columnConfig) -> {\n      int offset = buffer.getInt();\n      int initialPos = buffer.position();\n      final CompressedColumnarFloatsSupplier column = CompressedColumnarFloatsSupplier.fromByteBuffer(\n          buffer,\n          byteOrder\n      );\n      buffer.position(initialPos + offset);\n      final ImmutableBitmap bitmap;\n      if (buffer.hasRemaining()) {\n        bitmap = bitmapSerdeFactory.getObjectStrategy().fromByteBufferWithSize(buffer);\n      } else {\n        bitmap = bitmapSerdeFactory.getBitmapFactory().makeEmptyImmutableBitmap();\n      }\n      builder.setType(ValueType.FLOAT)\n             .setHasMultipleValues(false)\n             .setNumericColumnSupplier(new FloatNumericColumnSupplier(column, bitmap));\n    };\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/serde/FloatNumericColumnPartSerdeV2.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"}],"commitId":"e053348f747f6428e14362e4844e916f8790b726","commitMessage":"@@@add hasNulls to ColumnCapabilities.  ColumnAnalysis (#10219)\n\n* add isNullable to ColumnCapabilities.  ColumnAnalysis\n\n* better builder\n\n* fix segment metadata queries in integration tests\n\n* adjustments\n\n* cleanup\n\n* fix spotbugs\n\n* treat unknown as true in segmentmetadata\n\n* rename to hasNulls.  add docs\n\n* fixup\n\n* test the dim indexer selector isNull fix for numeric columns\n\n* fixes\n\n* oof","date":"2020-08-14 05:55:32","modifiedFileCount":"29","status":"M","submitter":"Clint Wylie"}]
