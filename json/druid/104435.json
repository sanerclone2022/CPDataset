[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2019-03-02 03:28:03","commitOrder":2,"curCode":"    ParallelIndexSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      return new TestParallelIndexSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n    }\n","date":"2019-03-02 03:28:03","endLine":343,"groupId":"15308","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6e/71656fe2b9b219a2dc1505c7939095ee720c2b.src","preCode":"    ParallelIndexSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      return new TestParallelIndexSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n    }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":323,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"    ParallelIndexSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      final TestSubTaskSpec spec = new TestSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          this,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n      subTaskSpecs.put(spec.getId(), spec);\n      return spec;\n    }\n","date":"2018-08-31 00:56:26","endLine":563,"groupId":"15308","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8a/7503b837b9413da2ff49d9ce22dc2a287edd8c.src","preCode":"    ParallelIndexSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      final TestSubTaskSpec spec = new TestSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          this,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n      subTaskSpecs.put(spec.getId(), spec);\n      return spec;\n    }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"NB"}],"commitId":"06c8229c0803314929318c718c5ee8099110b9c0","commitMessage":"@@@Kill all running tasks when the supervisor task is killed (#7041)\n\n* Kill all running tasks when the supervisor task is killed\n\n* add some docs and simplify\n\n* address comment\n","date":"2019-03-02 03:28:03","modifiedFileCount":"4","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-07-25 08:35:46","codes":[{"authorDate":"2019-03-02 03:28:03","commitOrder":3,"curCode":"    ParallelIndexSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      return new TestParallelIndexSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n    }\n","date":"2019-03-02 03:28:03","endLine":343,"groupId":"15308","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6e/71656fe2b9b219a2dc1505c7939095ee720c2b.src","preCode":"    ParallelIndexSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      return new TestParallelIndexSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n    }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":323,"status":"N"},{"authorDate":"2019-07-25 08:35:46","commitOrder":3,"curCode":"    ParallelIndexSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      final TestSubTaskSpec spec = new TestSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n      subTaskSpecs.put(spec.getId(), spec);\n      return spec;\n    }\n","date":"2019-07-25 08:35:46","endLine":559,"groupId":"15308","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c0/a38c54db6b593500ae2aa8fc95129c261081c4.src","preCode":"    ParallelIndexSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      final TestSubTaskSpec spec = new TestSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          this,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n      subTaskSpecs.put(spec.getId(), spec);\n      return spec;\n    }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":537,"status":"M"}],"commitId":"db149462073d59e7563f0d3834e69d44a2bb4011","commitMessage":"@@@Add support minor compaction with segment locking (#7547)\n\n* Segment locking\n\n* Allow both timeChunk and segment lock in the same gruop\n\n* fix it test\n\n* Fix adding same chunk to atomicUpdateGroup\n\n* resolving todos\n\n* Fix segments to lock\n\n* fix segments to lock\n\n* fix kill task\n\n* resolving todos\n\n* resolving todos\n\n* fix teamcity\n\n* remove unused class\n\n* fix single map\n\n* resolving todos\n\n* fix build\n\n* fix SQLMetadataSegmentManager\n\n* fix findInputSegments\n\n* adding more tests\n\n* fixing task lock checks\n\n* add SegmentTransactionalOverwriteAction\n\n* changing publisher\n\n* fixing something\n\n* fix for perfect rollup\n\n* fix test\n\n* adjust package-lock.json\n\n* fix test\n\n* fix style\n\n* adding javadocs\n\n* remove unused classes\n\n* add more javadocs\n\n* unused import\n\n* fix test\n\n* fix test\n\n* Support forceTimeChunk context and force timeChunk lock for parallel index task if intervals are missing\n\n* fix travis\n\n* fix travis\n\n* unused import\n\n* spotbug\n\n* revert getMaxVersion\n\n* address comments\n\n* fix tc\n\n* add missing error handling\n\n* fix backward compatibility\n\n* unused import\n\n* Fix perf of versionedIntervalTimeline\n\n* fix timeline\n\n* fix tc\n\n* remove remaining todos\n\n* add comment for parallel index\n\n* fix javadoc and typos\n\n* typo\n\n* address comments\n","date":"2019-07-25 08:35:46","modifiedFileCount":"130","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-08-16 08:43:35","codes":[{"authorDate":"2019-08-16 08:43:35","commitOrder":4,"curCode":"    SinglePhaseSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      return new TestSinglePhaseSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n    }\n","date":"2019-08-16 08:43:35","endLine":349,"groupId":"15308","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3f/2e4970ae71214fa398ef2118cd7045fcd72934.src","preCode":"    ParallelIndexSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      return new TestParallelIndexSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n    }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"M"},{"authorDate":"2019-08-16 08:43:35","commitOrder":4,"curCode":"    SinglePhaseSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      final TestSubTaskSpec spec = new TestSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n      subTaskSpecs.put(spec.getId(), spec);\n      return spec;\n    }\n","date":"2019-08-16 08:43:35","endLine":559,"groupId":"15308","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/16/ab8b105186537f8e755276340f4b4c22d681a7.src","preCode":"    ParallelIndexSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      final TestSubTaskSpec spec = new TestSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n      subTaskSpecs.put(spec.getId(), spec);\n      return spec;\n    }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":537,"status":"M"}],"commitId":"5dac6375f382ba485ec000802ff0e922929df95d","commitMessage":"@@@Add support for parallel native indexing with shuffle for perfect rollup (#8257)\n\n* Add TaskResourceCleaner; fix a couple of concurrency bugs in batch tasks\n\n* kill runner when it's ready\n\n* add comment\n\n* kill run thread\n\n* fix test\n\n* Take closeable out of Appenderator\n\n* add javadoc\n\n* fix test\n\n* fix test\n\n* update javadoc\n\n* add javadoc about killed task\n\n* address comment\n\n* Add support for parallel native indexing with shuffle for perfect rollup.\n\n* Add comment about volatiles\n\n* fix test\n\n* fix test\n\n* handling missing exceptions\n\n* more clear javadoc for stopGracefully\n\n* unused import\n\n* update javadoc\n\n* Add missing statement in javadoc\n\n* address comments; fix doc\n\n* add javadoc for isGuaranteedRollup\n\n* Rename confusing variable name and fix typos\n\n* fix typos; move fetch() to a better home; fix the expiration time\n\n* add support https\n","date":"2019-08-16 08:43:35","modifiedFileCount":"49","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-11-16 01:22:09","codes":[{"authorDate":"2019-11-16 01:22:09","commitOrder":5,"curCode":"    SinglePhaseSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final SplittableInputSource baseInputSource = (SplittableInputSource) getIngestionSchema()\n          .getIOConfig()\n          .getInputSource();\n      return new TestSinglePhaseSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  null,\n                  baseInputSource.withSplit(split),\n                  getIngestionSchema().getIOConfig().getInputFormat(),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n    }\n","date":"2019-11-16 01:22:09","endLine":360,"groupId":"2941","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/9c/87b5d8970bc375aac1d1f91f1ec7874b3bb53c.src","preCode":"    SinglePhaseSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      return new TestSinglePhaseSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n    }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":338,"status":"M"},{"authorDate":"2019-11-16 01:22:09","commitOrder":5,"curCode":"    SinglePhaseSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final TestInputSource baseInputSource = (TestInputSource) getIngestionSchema()\n          .getIOConfig()\n          .getInputSource();\n      final TestSubTaskSpec spec = new TestSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  null,\n                  baseInputSource.withSplit(split),\n                  getIngestionSchema().getIOConfig().getInputFormat(),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n      subTaskSpecs.put(spec.getId(), spec);\n      return spec;\n    }\n","date":"2019-11-16 01:22:09","endLine":583,"groupId":"2941","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/41/3e99a39a50999a2afdeba9cd3e5d9a929f4d08.src","preCode":"    SinglePhaseSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final FiniteFirehoseFactory baseFirehoseFactory = (FiniteFirehoseFactory) getIngestionSchema()\n          .getIOConfig()\n          .getFirehoseFactory();\n      final TestSubTaskSpec spec = new TestSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  baseFirehoseFactory.withSplit(split),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n      subTaskSpecs.put(spec.getId(), spec);\n      return spec;\n    }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":559,"status":"M"}],"commitId":"1611792855ad9def8b6f5b1375862d05d1acca0a","commitMessage":"@@@Add InputSource and InputFormat interfaces (#8823)\n\n* Add InputSource and InputFormat interfaces\n\n* revert orc dependency\n\n* fix dimension exclusions and failing unit tests\n\n* fix tests\n\n* fix test\n\n* fix test\n\n* fix firehose and inputSource for parallel indexing task\n\n* fix tc\n\n* fix tc: remove unused method\n\n* Formattable\n\n* add needsFormat(); renamed to ObjectSource; pass metricsName for reader\n\n* address comments\n\n* fix closing resource\n\n* fix checkstyle\n\n* fix tests\n\n* remove verify from csv\n\n* Revert \"remove verify from csv\"\n\nThis reverts commit 1ea7758489cc8c9d708bd691fd48e62085fd9455.\n\n* address comments\n\n* fix import order and javadoc\n\n* flatMap\n\n* sampleLine\n\n* Add IntermediateRowParsingReader\n\n* Address comments\n\n* move csv reader test\n\n* remove test for verify\n\n* adjust comments\n\n* Fix InputEntityIteratingReader\n\n* rename source -> entity\n\n* address comments\n","date":"2019-11-16 01:22:09","modifiedFileCount":"72","status":"M","submitter":"Jihoon Son"},{"authorTime":"2021-04-02 03:29:36","codes":[{"authorDate":"2021-04-02 03:29:36","commitOrder":6,"curCode":"    SinglePhaseSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final SplittableInputSource baseInputSource = (SplittableInputSource) getIngestionSchema()\n          .getIOConfig()\n          .getInputSource();\n      return new TestSinglePhaseSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  null,\n                  baseInputSource.withSplit(split),\n                  getIngestionSchema().getIOConfig().getInputFormat(),\n                  getIngestionSchema().getIOConfig().isAppendToExisting(),\n                  getIngestionSchema().getIOConfig().isDropExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n    }\n","date":"2021-04-02 03:29:36","endLine":332,"groupId":"104435","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/84/3ca4cca3cbe375f69a7dca8934ea9afaa6212b.src","preCode":"    SinglePhaseSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final SplittableInputSource baseInputSource = (SplittableInputSource) getIngestionSchema()\n          .getIOConfig()\n          .getInputSource();\n      return new TestSinglePhaseSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  null,\n                  baseInputSource.withSplit(split),\n                  getIngestionSchema().getIOConfig().getInputFormat(),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n    }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"M"},{"authorDate":"2021-04-02 03:29:36","commitOrder":6,"curCode":"    SinglePhaseSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final TestInputSource baseInputSource = (TestInputSource) getIngestionSchema()\n          .getIOConfig()\n          .getInputSource();\n      final TestSubTaskSpec spec = new TestSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  null,\n                  baseInputSource.withSplit(split),\n                  getIngestionSchema().getIOConfig().getInputFormat(),\n                  getIngestionSchema().getIOConfig().isAppendToExisting(),\n                  null\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n      subTaskSpecs.put(spec.getId(), spec);\n      return spec;\n    }\n","date":"2021-04-02 03:29:36","endLine":562,"groupId":"104435","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"newTaskSpec","params":"(InputSplitsplit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/22/4b034a0faad2b072c5dec8301b9e204793f279.src","preCode":"    SinglePhaseSubTaskSpec newTaskSpec(InputSplit split)\n    {\n      final TestInputSource baseInputSource = (TestInputSource) getIngestionSchema()\n          .getIOConfig()\n          .getInputSource();\n      final TestSubTaskSpec spec = new TestSubTaskSpec(\n          supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),\n          supervisorTask.getGroupId(),\n          supervisorTask,\n          new ParallelIndexIngestionSpec(\n              getIngestionSchema().getDataSchema(),\n              new ParallelIndexIOConfig(\n                  null,\n                  baseInputSource.withSplit(split),\n                  getIngestionSchema().getIOConfig().getInputFormat(),\n                  getIngestionSchema().getIOConfig().isAppendToExisting()\n              ),\n              getIngestionSchema().getTuningConfig()\n          ),\n          supervisorTask.getContext(),\n          split\n      );\n      subTaskSpecs.put(spec.getId(), spec);\n      return spec;\n    }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":537,"status":"M"}],"commitId":"d7f529336463dad273a742808b49d524bdc4ae11","commitMessage":"@@@Add an option for ingestion task to drop (mark unused) all existing segments that are contained by interval in the ingestionSpec (#11025)\n\n* Auto-Compaction can run indefinitely when segmentGranularity is changed from coarser to finer.\n\n* Add option to drop segments after ingestion\n\n* fix checkstyle\n\n* add tests\n\n* add tests\n\n* add tests\n\n* fix test\n\n* add tests\n\n* fix checkstyle\n\n* fix checkstyle\n\n* add docs\n\n* fix docs\n\n* address comments\n\n* address comments\n\n* fix spelling","date":"2021-04-02 03:29:36","modifiedFileCount":"44","status":"M","submitter":"Maytas Monsereenusorn"}]
