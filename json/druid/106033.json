[{"authorTime":"2020-02-08 08:23:37","codes":[{"authorDate":"2020-02-08 08:23:37","commitOrder":1,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[][]{new Object[]{\"Orange Soda\", null, null}}\n        )\n    );\n  }\n","date":"2020-02-08 08:23:37","endLine":103,"groupId":"14342","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/16/ee7173c4a42306526783d9c9f9b64b1401e274.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[][]{new Object[]{\"Orange Soda\", null, null}}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"},{"authorDate":"2020-02-08 08:23:37","commitOrder":1,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.create(\n                ImmutableList.of(\n                    new ExpressionVirtualColumn(\n                        \"v1\",\n                        \"concat('virtual-column-', \\\"channel\\\")\",\n                        ValueType.STRING,\n                        TestExprMacroTable.INSTANCE\n                    )\n                )\n            ),\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[][]{new Object[]{\"Orange Soda\", null, null}}\n        )\n    );\n  }\n","date":"2020-02-08 08:23:37","endLine":400,"groupId":"17059","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/16/ee7173c4a42306526783d9c9f9b64b1401e274.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.create(\n                ImmutableList.of(\n                    new ExpressionVirtualColumn(\n                        \"v1\",\n                        \"concat('virtual-column-', \\\"channel\\\")\",\n                        ValueType.STRING,\n                        TestExprMacroTable.INSTANCE\n                    )\n                )\n            ),\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[][]{new Object[]{\"Orange Soda\", null, null}}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":335,"status":"B"}],"commitId":"ad8afc565c631c826bb1db0ebac611398a7ec9f3","commitMessage":"@@@Join filter pushdown initial implementation (#9301)\n\n* Join filter pushdown initial implementation\n\n* Fix test and spotbugs check\n\n* Address PR comments\n\n* More PR comments\n\n* Address some PR comments\n\n* Address more PR comments\n\n* Fix TC failures and address PR comments\n","date":"2020-02-08 08:23:37","modifiedFileCount":"18","status":"B","submitter":"Jonathan Wei"},{"authorTime":"2020-02-12 07:31:34","codes":[{"authorDate":"2020-02-12 07:31:34","commitOrder":2,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[][]{new Object[]{\"Orange Soda\", null, null}}\n        )\n    );\n  }\n","date":"2020-02-12 07:31:34","endLine":104,"groupId":"14342","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/78/c057fcbd0ec20954ed0e52321f0d0511ffc669.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[][]{new Object[]{\"Orange Soda\", null, null}}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2020-02-12 07:31:34","commitOrder":2,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.create(\n                ImmutableList.of(\n                    new ExpressionVirtualColumn(\n                        \"v1\",\n                        \"concat('virtual-column-', \\\"channel\\\")\",\n                        ValueType.STRING,\n                        TestExprMacroTable.INSTANCE\n                    )\n                )\n            ),\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[][]{new Object[]{\"Orange Soda\", null, null}}\n        )\n    );\n  }\n","date":"2020-02-12 07:31:34","endLine":406,"groupId":"17059","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/78/c057fcbd0ec20954ed0e52321f0d0511ffc669.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.create(\n                ImmutableList.of(\n                    new ExpressionVirtualColumn(\n                        \"v1\",\n                        \"concat('virtual-column-', \\\"channel\\\")\",\n                        ValueType.STRING,\n                        TestExprMacroTable.INSTANCE\n                    )\n                )\n            ),\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[][]{new Object[]{\"Orange Soda\", null, null}}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":340,"status":"M"}],"commitId":"b2c00b3a791555e35d2ac92d35e02aafe5c09721","commitMessage":"@@@Add query context option to disable join filter push down (#9335)\n\n","date":"2020-02-12 07:31:34","modifiedFileCount":"12","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2020-02-18 02:54:04","codes":[{"authorDate":"2020-02-18 02:54:04","commitOrder":3,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","date":"2020-02-18 02:54:04","endLine":105,"groupId":"14342","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3a/9e37b13554e36137133973acd2bba1dc7308b3.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[][]{new Object[]{\"Orange Soda\", null, null}}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2020-02-18 02:54:04","commitOrder":3,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.create(\n                ImmutableList.of(\n                    new ExpressionVirtualColumn(\n                        \"v1\",\n                        \"concat('virtual-column-', \\\"channel\\\")\",\n                        ValueType.STRING,\n                        TestExprMacroTable.INSTANCE\n                    )\n                )\n            ),\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","date":"2020-02-18 02:54:04","endLine":408,"groupId":"17059","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3a/9e37b13554e36137133973acd2bba1dc7308b3.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.create(\n                ImmutableList.of(\n                    new ExpressionVirtualColumn(\n                        \"v1\",\n                        \"concat('virtual-column-', \\\"channel\\\")\",\n                        ValueType.STRING,\n                        TestExprMacroTable.INSTANCE\n                    )\n                )\n            ),\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[][]{new Object[]{\"Orange Soda\", null, null}}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":341,"status":"M"}],"commitId":"73a0181e34f1e0816011b778bc1d3ecbe9d7ad97","commitMessage":"@@@Fix handling for columns that appear multiple times in join conditions (#9362)\n\n* Fix handling for columns that appear multiple times in join conditions\n\n* Remove unneeded comment\n\n* Fix test\n","date":"2020-02-18 02:54:04","modifiedFileCount":"7","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2020-02-20 07:51:05","codes":[{"authorDate":"2020-02-20 07:51:05","commitOrder":4,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(VirtualColumns.EMPTY, null, null),\n        originalFilter,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","date":"2020-02-20 07:51:05","endLine":106,"groupId":"14342","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/05/b93de68929ee0591ef0aee2b43359781aaa864.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2020-02-20 07:51:05","commitOrder":4,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n    VirtualColumns virtualColumns = VirtualColumns.create(\n        ImmutableList.of(\n            new ExpressionVirtualColumn(\n                \"v1\",\n                \"concat('virtual-column-', \\\"channel\\\")\",\n                ValueType.STRING,\n                TestExprMacroTable.INSTANCE\n            )\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(virtualColumns, null, null),\n        originalFilter,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            virtualColumns,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","date":"2020-02-20 07:51:05","endLine":410,"groupId":"20136","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/05/b93de68929ee0591ef0aee2b43359781aaa864.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        originalFilter,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.create(\n                ImmutableList.of(\n                    new ExpressionVirtualColumn(\n                        \"v1\",\n                        \"concat('virtual-column-', \\\"channel\\\")\",\n                        ValueType.STRING,\n                        TestExprMacroTable.INSTANCE\n                    )\n                )\n            ),\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":341,"status":"M"}],"commitId":"cab08f941d28266a65a39bd62e7e9487067573b1","commitMessage":"@@@Fix join filter push down post-join virtual column handling (#9373)\n\n* Fix join filter push down post-join virtual column handling\n\n* Remove unused adapter param.  update javadocs\n\n* Fix TC\n\n* Update processing/src/main/java/org/apache/druid/segment/join/filter/JoinFilterAnalyzer.java\n\nCo-Authored-By: Suneet Saldanha <44787917+suneet-s@users.noreply.github.com>\n\n* Address PR comments\n\nCo-authored-by: Suneet Saldanha <44787917+suneet-s@users.noreply.github.com>\n","date":"2020-02-20 07:51:05","modifiedFileCount":"3","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2020-03-10 08:36:07","codes":[{"authorDate":"2020-03-10 08:36:07","commitOrder":5,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(VirtualColumns.EMPTY, null, null),\n        originalFilter,\n        true,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","date":"2020-03-10 08:36:07","endLine":107,"groupId":"14342","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/22/41452f8c9fe4adfc64ba3f9e3a025c417d5679.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(VirtualColumns.EMPTY, null, null),\n        originalFilter,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2020-03-10 08:36:07","commitOrder":5,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n    VirtualColumns virtualColumns = VirtualColumns.create(\n        ImmutableList.of(\n            new ExpressionVirtualColumn(\n                \"v1\",\n                \"concat('virtual-column-', \\\"channel\\\")\",\n                ValueType.STRING,\n                TestExprMacroTable.INSTANCE\n            )\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(virtualColumns, null, null),\n        originalFilter,\n        true,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            virtualColumns,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","date":"2020-03-10 08:36:07","endLine":416,"groupId":"20136","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/22/41452f8c9fe4adfc64ba3f9e3a025c417d5679.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n    VirtualColumns virtualColumns = VirtualColumns.create(\n        ImmutableList.of(\n            new ExpressionVirtualColumn(\n                \"v1\",\n                \"concat('virtual-column-', \\\"channel\\\")\",\n                ValueType.STRING,\n                TestExprMacroTable.INSTANCE\n            )\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(virtualColumns, null, null),\n        originalFilter,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            virtualColumns,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"M"}],"commitId":"0136dba95d5271027b2ee0d0266a8a66fe88d4ca","commitMessage":"@@@Add option to control join filter rewrites (#9472)\n\n* Add option to control join filter rewrites\n\n* Fix inspections","date":"2020-03-10 08:36:07","modifiedFileCount":"12","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2020-03-17 13:16:14","codes":[{"authorDate":"2020-03-17 13:16:14","commitOrder":6,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(\n        joinableClauses,\n        originalFilter\n    );\n\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysis\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","date":"2020-03-17 13:16:14","endLine":112,"groupId":"14342","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/eb/3b6fc64a8d7143ea5e7b6827a43d9f20fdbd80.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(VirtualColumns.EMPTY, null, null),\n        originalFilter,\n        true,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2020-03-17 13:16:14","commitOrder":6,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(\n        joinableClauses,\n        originalFilter\n    );\n\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysis\n    );\n\n    VirtualColumns virtualColumns = VirtualColumns.create(\n        ImmutableList.of(\n            new ExpressionVirtualColumn(\n                \"v1\",\n                \"concat('virtual-column-', \\\"channel\\\")\",\n                ValueType.STRING,\n                TestExprMacroTable.INSTANCE\n            )\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            virtualColumns,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","date":"2020-03-17 13:16:14","endLine":444,"groupId":"9250","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/eb/3b6fc64a8d7143ea5e7b6827a43d9f20fdbd80.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        ImmutableList.of(\n            factToRegion(JoinType.LEFT),\n            regionToCountry(JoinType.LEFT)\n        )\n    );\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n    VirtualColumns virtualColumns = VirtualColumns.create(\n        ImmutableList.of(\n            new ExpressionVirtualColumn(\n                \"v1\",\n                \"concat('virtual-column-', \\\"channel\\\")\",\n                ValueType.STRING,\n                TestExprMacroTable.INSTANCE\n            )\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(\n        adapter,\n        adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(virtualColumns, null, null),\n        originalFilter,\n        true,\n        true\n    );\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            virtualColumns,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"M"}],"commitId":"b1847364b0816cfc3c2ac376cd888033a06fb93f","commitMessage":"@@@More efficient join filter rewrites (#9516)\n\n* More efficient join filter rewrites\n\n* Rebase\n\n* Remove unused functions\n\n* PR comments.  fix compile\n\n* Adjust comment\n\n* Allow filter rewrite when join condition has LHS expression\n\n* Fix inspections\n\n* Fix tests","date":"2020-03-17 13:16:14","modifiedFileCount":"24","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2020-05-09 14:45:35","codes":[{"authorDate":"2020-05-09 14:45:35","commitOrder":7,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(\n        joinableClauses,\n        originalFilter\n    );\n\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysis\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableSet.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","date":"2020-05-09 14:45:35","endLine":117,"groupId":"14342","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/75/3b35937891c8ecc8e93ccba7c7ac9803bcb8dd.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(\n        joinableClauses,\n        originalFilter\n    );\n\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysis\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2020-05-09 14:45:35","commitOrder":7,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(\n        joinableClauses,\n        originalFilter\n    );\n\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysis\n    );\n\n    VirtualColumns virtualColumns = VirtualColumns.create(\n        ImmutableList.of(\n            new ExpressionVirtualColumn(\n                \"v1\",\n                \"concat('virtual-column-', \\\"channel\\\")\",\n                ValueType.STRING,\n                TestExprMacroTable.INSTANCE\n            )\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableSet.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            virtualColumns,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","date":"2020-05-09 14:45:35","endLine":450,"groupId":"9250","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/75/3b35937891c8ecc8e93ccba7c7ac9803bcb8dd.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(\n        joinableClauses,\n        originalFilter\n    );\n\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysis\n    );\n\n    VirtualColumns virtualColumns = VirtualColumns.create(\n        ImmutableList.of(\n            new ExpressionVirtualColumn(\n                \"v1\",\n                \"concat('virtual-column-', \\\"channel\\\")\",\n                ValueType.STRING,\n                TestExprMacroTable.INSTANCE\n            )\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableList.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            virtualColumns,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":376,"status":"M"}],"commitId":"16d293d6e0d81963af3b3d468efd658317d91052","commitMessage":"@@@Directly rewrite filters on RHS join columns into LHS equivalents (#9818)\n\n* Directly rewrite filters on RHS join columns into LHS equivalents\n\n* PR comments\n\n* Fix inspection\n\n* Revert unnecessary ExprMacroTable change\n\n* Fix build after merge\n\n* Address PR comments","date":"2020-05-09 14:45:35","modifiedFileCount":"30","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2020-06-19 12:32:29","codes":[{"authorDate":"2020-06-19 12:32:29","commitOrder":8,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    JoinFilterPreAnalysisGroup joinFilterPreAnalysisGroup = makeDefaultConfigPreAnalysisGroup(\n        originalFilter,\n        joinableClauses,\n        VirtualColumns.EMPTY\n    );\n\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysisGroup\n    );\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableSet.of()\n    );\n    JoinFilterPreAnalysis joinFilterPreAnalysis = joinFilterPreAnalysisGroup.getPreAnalysisForSingleLevelMode();\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n  }\n","date":"2020-06-19 12:32:29","endLine":123,"groupId":"7777","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/89/3e0542b8ceeadecc91f82ca360b687e72b148e.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(\n        joinableClauses,\n        originalFilter\n    );\n\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysis\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableSet.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-06-19 12:32:29","commitOrder":8,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterPreAnalysisGroup joinFilterPreAnalysisGroup = makeDefaultConfigPreAnalysisGroup(\n        originalFilter,\n        joinableClauses,\n        VirtualColumns.EMPTY\n    );\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysisGroup\n    );\n\n    VirtualColumns virtualColumns = VirtualColumns.create(\n        ImmutableList.of(\n            new ExpressionVirtualColumn(\n                \"v1\",\n                \"concat('virtual-column-', \\\"channel\\\")\",\n                ValueType.STRING,\n                TestExprMacroTable.INSTANCE\n            )\n        )\n    );\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            virtualColumns,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableSet.of()\n    );\n    JoinFilterPreAnalysis joinFilterPreAnalysis = joinFilterPreAnalysisGroup.getPreAnalysisForSingleLevelMode();\n\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n  }\n","date":"2020-06-19 12:32:29","endLine":470,"groupId":"0","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/89/3e0542b8ceeadecc91f82ca360b687e72b148e.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(\n        joinableClauses,\n        originalFilter\n    );\n\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysis\n    );\n\n    VirtualColumns virtualColumns = VirtualColumns.create(\n        ImmutableList.of(\n            new ExpressionVirtualColumn(\n                \"v1\",\n                \"concat('virtual-column-', \\\"channel\\\")\",\n                ValueType.STRING,\n                TestExprMacroTable.INSTANCE\n            )\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableSet.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            virtualColumns,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"M"}],"commitId":"37e150c0755c0efba609601b1122cd6bc8a271fb","commitMessage":"@@@Fix join filter rewrites with nested queries (#10015)\n\n* Fix join filter rewrites with nested queries\n\n* Fix test.  inspection.  coverage\n\n* Remove clauses from group key\n\n* Fix import order\n\nCo-authored-by: Gian Merlino <gianmerlino@gmail.com>","date":"2020-06-19 12:32:29","modifiedFileCount":"20","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2020-07-01 10:14:22","codes":[{"authorDate":"2020-07-01 10:14:22","commitOrder":9,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    JoinFilterPreAnalysis joinFilterPreAnalysis = makeDefaultConfigPreAnalysis(\n        originalFilter,\n        joinableClauses,\n        VirtualColumns.EMPTY\n    );\n\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysis\n    );\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableSet.of()\n    );\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n  }\n","date":"2020-07-01 10:14:22","endLine":122,"groupId":"106033","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ed/7e7c7759887a1bbaadcc28b4d41944a1e6078b.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannel()\n  {\n    Filter originalFilter = new SelectorFilter(\"channel\", \"#en.wikipedia\");\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    JoinFilterPreAnalysisGroup joinFilterPreAnalysisGroup = makeDefaultConfigPreAnalysisGroup(\n        originalFilter,\n        joinableClauses,\n        VirtualColumns.EMPTY\n    );\n\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysisGroup\n    );\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            VirtualColumns.EMPTY,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"channel\", \"#en.wikipedia\"),\n        null,\n        ImmutableSet.of()\n    );\n    JoinFilterPreAnalysis joinFilterPreAnalysis = joinFilterPreAnalysisGroup.getPreAnalysisForSingleLevelMode();\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-07-01 10:14:22","commitOrder":9,"curCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    VirtualColumns virtualColumns = VirtualColumns.create(\n        ImmutableList.of(\n            new ExpressionVirtualColumn(\n                \"v1\",\n                \"concat('virtual-column-', \\\"channel\\\")\",\n                ValueType.STRING,\n                TestExprMacroTable.INSTANCE\n            )\n        )\n    );\n\n    JoinFilterPreAnalysis joinFilterPreAnalysis = makeDefaultConfigPreAnalysis(\n        originalFilter,\n        joinableClauses,\n        virtualColumns\n    );\n\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysis\n    );\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            virtualColumns,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableSet.of()\n    );\n\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n  }\n","date":"2020-07-01 10:14:22","endLine":464,"groupId":"106033","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ed/7e7c7759887a1bbaadcc28b4d41944a1e6078b.src","preCode":"  public void test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn()\n  {\n    List<JoinableClause> joinableClauses = ImmutableList.of(\n        factToRegion(JoinType.LEFT),\n        regionToCountry(JoinType.LEFT)\n    );\n\n    Filter originalFilter = new AndFilter(\n        ImmutableList.of(\n            new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\")\n        )\n    );\n\n    JoinFilterPreAnalysisGroup joinFilterPreAnalysisGroup = makeDefaultConfigPreAnalysisGroup(\n        originalFilter,\n        joinableClauses,\n        VirtualColumns.EMPTY\n    );\n    HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(\n        factSegment.asStorageAdapter(),\n        joinableClauses,\n        joinFilterPreAnalysisGroup\n    );\n\n    VirtualColumns virtualColumns = VirtualColumns.create(\n        ImmutableList.of(\n            new ExpressionVirtualColumn(\n                \"v1\",\n                \"concat('virtual-column-', \\\"channel\\\")\",\n                ValueType.STRING,\n                TestExprMacroTable.INSTANCE\n            )\n        )\n    );\n\n    JoinTestHelper.verifyCursors(\n        adapter.makeCursors(\n            originalFilter,\n            Intervals.ETERNITY,\n            virtualColumns,\n            Granularities.ALL,\n            false,\n            null\n        ),\n        ImmutableList.of(\n            \"page\",\n            FACT_TO_REGION_PREFIX + \"regionName\",\n            REGION_TO_COUNTRY_PREFIX + \"countryName\"\n        ),\n        ImmutableList.of(\n            new Object[]{\"Talk:Oswald Tilghman\", null, null},\n            new Object[]{\"Peremptory norm\", \"New South Wales\", \"Australia\"},\n            new Object[]{\"President of India\", \"California\", \"United States\"},\n            new Object[]{\"Glasgow\", \"Kingston upon Hull\", \"United Kingdom\"},\n            new Object[]{\"Otjiwarongo Airport\", \"California\", \"United States\"},\n            new Object[]{\"Sarah Michelle Gellar\", \"Ontario\", \"Canada\"},\n            new Object[]{\"DirecTV\", \"North Carolina\", \"United States\"},\n            new Object[]{\"Carlo Curti\", \"California\", \"United States\"},\n            new Object[]{\"Giusy Ferreri discography\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Roma-Bangkok\", \"Provincia di Varese\", \"Italy\"},\n            new Object[]{\"Old Anatolian Turkish\", \"Virginia\", \"United States\"},\n            new Object[]{\"Cream Soda\", \"Ainigriv\", \"States United\"},\n            new Object[]{\"Orange Soda\", null, null},\n            new Object[]{\"History of Fourems\", \"Fourems Province\", \"Fourems\"}\n        )\n    );\n\n    JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(\n        new SelectorFilter(\"v1\", \"virtual-column-#en.wikipedia\"),\n        null,\n        ImmutableSet.of()\n    );\n    JoinFilterPreAnalysis joinFilterPreAnalysis = joinFilterPreAnalysisGroup.getPreAnalysisForSingleLevelMode();\n\n    JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis);\n    Assert.assertEquals(expectedFilterSplit, actualFilterSplit);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/JoinFilterAnalyzerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":388,"status":"M"}],"commitId":"5faa897a342096b2ac88587ad62e6e15022b01dd","commitMessage":"@@@Join filter pre-analysis simplifications and sanity checks. (#10104)\n\n* Join filter pre-analysis simplifications and sanity checks.\n\n- At pre-analysis time.  only compute pre-analysis for the innermost\n  root query.  since this is the one that will run on the join that involves\n  the base datasource. Previously.  pre-analyses were computed for multiple\n  levels of the query.  some of which were unnecessary.\n- Remove JoinFilterPreAnalysisGroup and join query level gathering code. \n  since they existed to support precomputation of multiple pre-analyses.\n- Embed JoinFilterPreAnalysisKey into JoinFilterPreAnalysis and use it to\n  sanity check?at processing time that the correct pre-analysis was done.\n\nTangentially related changes:\n\n- Remove prioritizeAndLaneQuery functionality from LocalQuerySegmentWalker.\n  The computed priority and lanes were not being used.\n- Add \"getBaseQuery\" method to DataSourceAnalysis to support identification\n  of the proper subquery for filter pre-analysis.\n\n* Fix compilation errors.\n\n* Adjust tests.","date":"2020-07-01 10:14:22","modifiedFileCount":"20","status":"M","submitter":"Gian Merlino"}]
