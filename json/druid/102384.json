[{"authorTime":"2019-07-30 08:06:33","codes":[{"authorDate":"2019-07-30 08:06:33","commitOrder":1,"curCode":"  public static void bindRowIngestionMeters(Binder binder)\n  {\n    PolyBind.createChoice(\n        binder,\n        \"druid.indexer.task.rowIngestionMeters.type\",\n        Key.get(RowIngestionMetersFactory.class),\n        Key.get(DropwizardRowIngestionMetersFactory.class)\n    );\n    final MapBinder<String, RowIngestionMetersFactory> rowIngestionMetersHandlerProviderBinder =\n        PolyBind.optionBinder(binder, Key.get(RowIngestionMetersFactory.class));\n    rowIngestionMetersHandlerProviderBinder\n        .addBinding(\"dropwizard\")\n        .to(DropwizardRowIngestionMetersFactory.class)\n        .in(LazySingleton.class);\n    binder.bind(DropwizardRowIngestionMetersFactory.class).in(LazySingleton.class);\n  }\n","date":"2019-07-30 08:06:33","endLine":323,"groupId":"13764","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"bindRowIngestionMeters","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/6c2d8ace771e49d2b06fd4d3927f33fd08ba22.src","preCode":"  public static void bindRowIngestionMeters(Binder binder)\n  {\n    PolyBind.createChoice(\n        binder,\n        \"druid.indexer.task.rowIngestionMeters.type\",\n        Key.get(RowIngestionMetersFactory.class),\n        Key.get(DropwizardRowIngestionMetersFactory.class)\n    );\n    final MapBinder<String, RowIngestionMetersFactory> rowIngestionMetersHandlerProviderBinder =\n        PolyBind.optionBinder(binder, Key.get(RowIngestionMetersFactory.class));\n    rowIngestionMetersHandlerProviderBinder\n        .addBinding(\"dropwizard\")\n        .to(DropwizardRowIngestionMetersFactory.class)\n        .in(LazySingleton.class);\n    binder.bind(DropwizardRowIngestionMetersFactory.class).in(LazySingleton.class);\n  }\n","realPath":"services/src/main/java/org/apache/druid/cli/CliPeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"B"},{"authorDate":"2019-07-30 08:06:33","commitOrder":1,"curCode":"  public static void bindTaskConfigAndClients(Binder binder)\n  {\n    binder.bind(TaskToolboxFactory.class).in(LazySingleton.class);\n\n    JsonConfigProvider.bind(binder, \"druid.indexer.task\", TaskConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.indexer.auditlog\", TaskAuditLogConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.peon.taskActionClient.retry\", RetryPolicyConfig.class);\n\n    configureTaskActionClient(binder);\n    binder.bind(IndexingServiceClient.class).to(HttpIndexingServiceClient.class).in(LazySingleton.class);\n\n    binder.bind(new TypeLiteral<IndexTaskClientFactory<ParallelIndexTaskClient>>(){})\n          .to(ParallelIndexTaskClientFactory.class)\n          .in(LazySingleton.class);\n\n    binder.bind(RetryPolicyFactory.class).in(LazySingleton.class);\n  }\n","date":"2019-07-30 08:06:33","endLine":401,"groupId":"6046","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bindTaskConfigAndClients","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/6c2d8ace771e49d2b06fd4d3927f33fd08ba22.src","preCode":"  public static void bindTaskConfigAndClients(Binder binder)\n  {\n    binder.bind(TaskToolboxFactory.class).in(LazySingleton.class);\n\n    JsonConfigProvider.bind(binder, \"druid.indexer.task\", TaskConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.indexer.auditlog\", TaskAuditLogConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.peon.taskActionClient.retry\", RetryPolicyConfig.class);\n\n    configureTaskActionClient(binder);\n    binder.bind(IndexingServiceClient.class).to(HttpIndexingServiceClient.class).in(LazySingleton.class);\n\n    binder.bind(new TypeLiteral<IndexTaskClientFactory<ParallelIndexTaskClient>>(){})\n          .to(ParallelIndexTaskClientFactory.class)\n          .in(LazySingleton.class);\n\n    binder.bind(RetryPolicyFactory.class).in(LazySingleton.class);\n  }\n","realPath":"services/src/main/java/org/apache/druid/cli/CliPeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":385,"status":"B"}],"commitId":"640b7afc1cee911a27de7bf938dda24a85ba1510","commitMessage":"@@@Add CliIndexer process type and initial task runner implementation (#8107)\n\n* Add CliIndexer process type and initial task runner implementation\n\n* Fix HttpRemoteTaskRunnerTest\n\n* Remove batch sanity check on PeonAppenderatorsManager\n\n* Fix paralle index tests\n\n* PR comments\n\n* Adjust Jersey resource logging\n\n* Additional cleanup\n\n* Fix SystemSchemaTest\n\n* Add comment to LocalDataSegmentPusherTest absolute path test\n\n* More PR comments\n\n* Use Server annotated with RemoteChatHandler\n\n* More PR comments\n\n* Checkstyle\n\n* PR comments\n\n* Add task shutdown to stopGracefully\n\n* Small cleanup\n\n* Compile fix\n\n* Address PR comments\n\n* Adjust TaskReportFileWriter and fix nits\n\n* Remove unnecessary closer\n\n* More PR comments\n\n* Minor adjustments\n\n* PR comments\n\n* ThreadingTaskRunner: cancel  task run future not shutdownFuture and remove thread from workitem\n","date":"2019-07-30 08:06:33","modifiedFileCount":"64","status":"B","submitter":"Jonathan Wei"},{"authorTime":"2019-08-27 10:27:41","codes":[{"authorDate":"2019-07-30 08:06:33","commitOrder":2,"curCode":"  public static void bindRowIngestionMeters(Binder binder)\n  {\n    PolyBind.createChoice(\n        binder,\n        \"druid.indexer.task.rowIngestionMeters.type\",\n        Key.get(RowIngestionMetersFactory.class),\n        Key.get(DropwizardRowIngestionMetersFactory.class)\n    );\n    final MapBinder<String, RowIngestionMetersFactory> rowIngestionMetersHandlerProviderBinder =\n        PolyBind.optionBinder(binder, Key.get(RowIngestionMetersFactory.class));\n    rowIngestionMetersHandlerProviderBinder\n        .addBinding(\"dropwizard\")\n        .to(DropwizardRowIngestionMetersFactory.class)\n        .in(LazySingleton.class);\n    binder.bind(DropwizardRowIngestionMetersFactory.class).in(LazySingleton.class);\n  }\n","date":"2019-07-30 08:06:33","endLine":323,"groupId":"13764","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"bindRowIngestionMeters","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/6c2d8ace771e49d2b06fd4d3927f33fd08ba22.src","preCode":"  public static void bindRowIngestionMeters(Binder binder)\n  {\n    PolyBind.createChoice(\n        binder,\n        \"druid.indexer.task.rowIngestionMeters.type\",\n        Key.get(RowIngestionMetersFactory.class),\n        Key.get(DropwizardRowIngestionMetersFactory.class)\n    );\n    final MapBinder<String, RowIngestionMetersFactory> rowIngestionMetersHandlerProviderBinder =\n        PolyBind.optionBinder(binder, Key.get(RowIngestionMetersFactory.class));\n    rowIngestionMetersHandlerProviderBinder\n        .addBinding(\"dropwizard\")\n        .to(DropwizardRowIngestionMetersFactory.class)\n        .in(LazySingleton.class);\n    binder.bind(DropwizardRowIngestionMetersFactory.class).in(LazySingleton.class);\n  }\n","realPath":"services/src/main/java/org/apache/druid/cli/CliPeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"N"},{"authorDate":"2019-08-27 10:27:41","commitOrder":2,"curCode":"  public static void bindTaskConfigAndClients(Binder binder)\n  {\n    binder.bind(TaskToolboxFactory.class).in(LazySingleton.class);\n\n    JsonConfigProvider.bind(binder, \"druid.indexer.task\", TaskConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.indexer.auditlog\", TaskAuditLogConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.peon.taskActionClient.retry\", RetryPolicyConfig.class);\n\n    configureTaskActionClient(binder);\n    binder.bind(IndexingServiceClient.class).to(HttpIndexingServiceClient.class).in(LazySingleton.class);\n\n    binder.bind(new TypeLiteral<IndexTaskClientFactory<ParallelIndexSupervisorTaskClient>>(){})\n          .to(ParallelIndexTaskClientFactory.class)\n          .in(LazySingleton.class);\n\n    binder.bind(RetryPolicyFactory.class).in(LazySingleton.class);\n  }\n","date":"2019-08-27 10:27:41","endLine":405,"groupId":"6046","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"bindTaskConfigAndClients","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/df/e5f1049304f862fcc5b955d63599cc83dad650.src","preCode":"  public static void bindTaskConfigAndClients(Binder binder)\n  {\n    binder.bind(TaskToolboxFactory.class).in(LazySingleton.class);\n\n    JsonConfigProvider.bind(binder, \"druid.indexer.task\", TaskConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.indexer.auditlog\", TaskAuditLogConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.peon.taskActionClient.retry\", RetryPolicyConfig.class);\n\n    configureTaskActionClient(binder);\n    binder.bind(IndexingServiceClient.class).to(HttpIndexingServiceClient.class).in(LazySingleton.class);\n\n    binder.bind(new TypeLiteral<IndexTaskClientFactory<ParallelIndexTaskClient>>(){})\n          .to(ParallelIndexTaskClientFactory.class)\n          .in(LazySingleton.class);\n\n    binder.bind(RetryPolicyFactory.class).in(LazySingleton.class);\n  }\n","realPath":"services/src/main/java/org/apache/druid/cli/CliPeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"M"}],"commitId":"e5ef5ddafa632256fe8a387a117557c415bee7df","commitMessage":"@@@Fix the shuffle with TLS enabled for parallel indexing; add an integration test; improve unit tests (#8350)\n\n* Fix shuffle with tls enabled; add an integration test; improve unit tests\n\n* remove debug log\n\n* fix tests\n\n* unused import\n\n* add javadoc\n\n* rename to getContent\n","date":"2019-08-27 10:27:41","modifiedFileCount":"37","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-12-08 23:47:58","codes":[{"authorDate":"2019-12-08 23:47:58","commitOrder":3,"curCode":"  static void bindRowIngestionMeters(Binder binder)\n  {\n    PolyBind.createChoice(\n        binder,\n        \"druid.indexer.task.rowIngestionMeters.type\",\n        Key.get(RowIngestionMetersFactory.class),\n        Key.get(DropwizardRowIngestionMetersFactory.class)\n    );\n    final MapBinder<String, RowIngestionMetersFactory> rowIngestionMetersHandlerProviderBinder =\n        PolyBind.optionBinder(binder, Key.get(RowIngestionMetersFactory.class));\n    rowIngestionMetersHandlerProviderBinder\n        .addBinding(\"dropwizard\")\n        .to(DropwizardRowIngestionMetersFactory.class)\n        .in(LazySingleton.class);\n    binder.bind(DropwizardRowIngestionMetersFactory.class).in(LazySingleton.class);\n  }\n","date":"2019-12-08 23:47:58","endLine":332,"groupId":"13764","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"bindRowIngestionMeters","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/82c6ded5ee8eed6bc2b593c26600d985d757a0.src","preCode":"  public static void bindRowIngestionMeters(Binder binder)\n  {\n    PolyBind.createChoice(\n        binder,\n        \"druid.indexer.task.rowIngestionMeters.type\",\n        Key.get(RowIngestionMetersFactory.class),\n        Key.get(DropwizardRowIngestionMetersFactory.class)\n    );\n    final MapBinder<String, RowIngestionMetersFactory> rowIngestionMetersHandlerProviderBinder =\n        PolyBind.optionBinder(binder, Key.get(RowIngestionMetersFactory.class));\n    rowIngestionMetersHandlerProviderBinder\n        .addBinding(\"dropwizard\")\n        .to(DropwizardRowIngestionMetersFactory.class)\n        .in(LazySingleton.class);\n    binder.bind(DropwizardRowIngestionMetersFactory.class).in(LazySingleton.class);\n  }\n","realPath":"services/src/main/java/org/apache/druid/cli/CliPeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"M"},{"authorDate":"2019-12-08 23:47:58","commitOrder":3,"curCode":"  static void bindTaskConfigAndClients(Binder binder)\n  {\n    binder.bind(TaskToolboxFactory.class).in(LazySingleton.class);\n\n    JsonConfigProvider.bind(binder, \"druid.indexer.task\", TaskConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.indexer.auditlog\", TaskAuditLogConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.peon.taskActionClient.retry\", RetryPolicyConfig.class);\n\n    configureTaskActionClient(binder);\n    binder.bind(IndexingServiceClient.class).to(HttpIndexingServiceClient.class).in(LazySingleton.class);\n\n    binder.bind(new TypeLiteral<IndexTaskClientFactory<ParallelIndexSupervisorTaskClient>>(){})\n          .to(ParallelIndexTaskClientFactory.class)\n          .in(LazySingleton.class);\n\n    binder.bind(RetryPolicyFactory.class).in(LazySingleton.class);\n  }\n","date":"2019-12-08 23:47:58","endLine":412,"groupId":"6046","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"bindTaskConfigAndClients","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/82c6ded5ee8eed6bc2b593c26600d985d757a0.src","preCode":"  public static void bindTaskConfigAndClients(Binder binder)\n  {\n    binder.bind(TaskToolboxFactory.class).in(LazySingleton.class);\n\n    JsonConfigProvider.bind(binder, \"druid.indexer.task\", TaskConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.indexer.auditlog\", TaskAuditLogConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.peon.taskActionClient.retry\", RetryPolicyConfig.class);\n\n    configureTaskActionClient(binder);\n    binder.bind(IndexingServiceClient.class).to(HttpIndexingServiceClient.class).in(LazySingleton.class);\n\n    binder.bind(new TypeLiteral<IndexTaskClientFactory<ParallelIndexSupervisorTaskClient>>(){})\n          .to(ParallelIndexTaskClientFactory.class)\n          .in(LazySingleton.class);\n\n    binder.bind(RetryPolicyFactory.class).in(LazySingleton.class);\n  }\n","realPath":"services/src/main/java/org/apache/druid/cli/CliPeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":396,"status":"M"}],"commitId":"1c62987783e85867856f567b04aad807a26bb2e3","commitMessage":"@@@Add SelfDiscoveryResource; rename org.apache.druid.discovery.No? (#6702)\n\n* Add SelfDiscoveryResource\n\n* Rename org.apache.druid.discovery.NodeType to NodeRole. Refactor CuratorDruidNodeDiscoveryProvider. Make SelfDiscoveryResource to listen to updates only about a single node (itself).\n\n* Extended docs\n\n* Fix brace\n\n* Remove redundant throws in Lifecycle.Handler.stop()\n\n* Import order\n\n* Remove unresolvable link\n\n* Address comments\n\n* tmp\n\n* tmp\n\n* Rollback docker changes\n\n* Remove extra .sh files\n\n* Move filter\n\n* Fix SecurityResourceFilterTest\n","date":"2019-12-08 23:47:58","modifiedFileCount":"54","status":"M","submitter":"Roman Leventov"},{"authorTime":"2020-02-17 05:00:12","codes":[{"authorDate":"2019-12-08 23:47:58","commitOrder":4,"curCode":"  static void bindRowIngestionMeters(Binder binder)\n  {\n    PolyBind.createChoice(\n        binder,\n        \"druid.indexer.task.rowIngestionMeters.type\",\n        Key.get(RowIngestionMetersFactory.class),\n        Key.get(DropwizardRowIngestionMetersFactory.class)\n    );\n    final MapBinder<String, RowIngestionMetersFactory> rowIngestionMetersHandlerProviderBinder =\n        PolyBind.optionBinder(binder, Key.get(RowIngestionMetersFactory.class));\n    rowIngestionMetersHandlerProviderBinder\n        .addBinding(\"dropwizard\")\n        .to(DropwizardRowIngestionMetersFactory.class)\n        .in(LazySingleton.class);\n    binder.bind(DropwizardRowIngestionMetersFactory.class).in(LazySingleton.class);\n  }\n","date":"2019-12-08 23:47:58","endLine":332,"groupId":"13764","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"bindRowIngestionMeters","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/82c6ded5ee8eed6bc2b593c26600d985d757a0.src","preCode":"  static void bindRowIngestionMeters(Binder binder)\n  {\n    PolyBind.createChoice(\n        binder,\n        \"druid.indexer.task.rowIngestionMeters.type\",\n        Key.get(RowIngestionMetersFactory.class),\n        Key.get(DropwizardRowIngestionMetersFactory.class)\n    );\n    final MapBinder<String, RowIngestionMetersFactory> rowIngestionMetersHandlerProviderBinder =\n        PolyBind.optionBinder(binder, Key.get(RowIngestionMetersFactory.class));\n    rowIngestionMetersHandlerProviderBinder\n        .addBinding(\"dropwizard\")\n        .to(DropwizardRowIngestionMetersFactory.class)\n        .in(LazySingleton.class);\n    binder.bind(DropwizardRowIngestionMetersFactory.class).in(LazySingleton.class);\n  }\n","realPath":"services/src/main/java/org/apache/druid/cli/CliPeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"N"},{"authorDate":"2020-02-17 05:00:12","commitOrder":4,"curCode":"  static void bindTaskConfigAndClients(Binder binder)\n  {\n    binder.bind(TaskToolboxFactory.class).in(LazySingleton.class);\n\n    JsonConfigProvider.bind(binder, \"druid.indexer.task\", TaskConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.indexer.auditlog\", TaskAuditLogConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.peon.taskActionClient.retry\", RetryPolicyConfig.class);\n\n    configureTaskActionClient(binder);\n    binder.bind(IndexingServiceClient.class).to(HttpIndexingServiceClient.class).in(LazySingleton.class);\n    binder.bind(ShuffleClient.class).to(HttpShuffleClient.class).in(LazySingleton.class);\n\n    binder.bind(new TypeLiteral<IndexTaskClientFactory<ParallelIndexSupervisorTaskClient>>(){})\n          .to(ParallelIndexTaskClientFactory.class)\n          .in(LazySingleton.class);\n\n    binder.bind(RetryPolicyFactory.class).in(LazySingleton.class);\n  }\n","date":"2020-02-17 05:00:12","endLine":412,"groupId":"3621","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"bindTaskConfigAndClients","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/11/60eb9240c14c0a43c8f1705a5a4567089cea1f.src","preCode":"  static void bindTaskConfigAndClients(Binder binder)\n  {\n    binder.bind(TaskToolboxFactory.class).in(LazySingleton.class);\n\n    JsonConfigProvider.bind(binder, \"druid.indexer.task\", TaskConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.indexer.auditlog\", TaskAuditLogConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.peon.taskActionClient.retry\", RetryPolicyConfig.class);\n\n    configureTaskActionClient(binder);\n    binder.bind(IndexingServiceClient.class).to(HttpIndexingServiceClient.class).in(LazySingleton.class);\n\n    binder.bind(new TypeLiteral<IndexTaskClientFactory<ParallelIndexSupervisorTaskClient>>(){})\n          .to(ParallelIndexTaskClientFactory.class)\n          .in(LazySingleton.class);\n\n    binder.bind(RetryPolicyFactory.class).in(LazySingleton.class);\n  }\n","realPath":"services/src/main/java/org/apache/druid/cli/CliPeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":395,"status":"M"}],"commitId":"3bb9e7e53af4d5926995931e05294f83f756d85c","commitMessage":"@@@Inject things instead of subclassing everything for parallel task testing (#9353)\n\n* Inject things instead of subclassing everything for parallel task\ntesting\n\n* javadoc\n\n* fix compilation\n\n* fix wrong merge\n\n* Address comments\n","date":"2020-02-17 05:00:12","modifiedFileCount":"33","status":"M","submitter":"Jihoon Son"},{"authorTime":"2021-07-27 12:29:43","codes":[{"authorDate":"2019-12-08 23:47:58","commitOrder":5,"curCode":"  static void bindRowIngestionMeters(Binder binder)\n  {\n    PolyBind.createChoice(\n        binder,\n        \"druid.indexer.task.rowIngestionMeters.type\",\n        Key.get(RowIngestionMetersFactory.class),\n        Key.get(DropwizardRowIngestionMetersFactory.class)\n    );\n    final MapBinder<String, RowIngestionMetersFactory> rowIngestionMetersHandlerProviderBinder =\n        PolyBind.optionBinder(binder, Key.get(RowIngestionMetersFactory.class));\n    rowIngestionMetersHandlerProviderBinder\n        .addBinding(\"dropwizard\")\n        .to(DropwizardRowIngestionMetersFactory.class)\n        .in(LazySingleton.class);\n    binder.bind(DropwizardRowIngestionMetersFactory.class).in(LazySingleton.class);\n  }\n","date":"2019-12-08 23:47:58","endLine":332,"groupId":"102384","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"bindRowIngestionMeters","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/82c6ded5ee8eed6bc2b593c26600d985d757a0.src","preCode":"  static void bindRowIngestionMeters(Binder binder)\n  {\n    PolyBind.createChoice(\n        binder,\n        \"druid.indexer.task.rowIngestionMeters.type\",\n        Key.get(RowIngestionMetersFactory.class),\n        Key.get(DropwizardRowIngestionMetersFactory.class)\n    );\n    final MapBinder<String, RowIngestionMetersFactory> rowIngestionMetersHandlerProviderBinder =\n        PolyBind.optionBinder(binder, Key.get(RowIngestionMetersFactory.class));\n    rowIngestionMetersHandlerProviderBinder\n        .addBinding(\"dropwizard\")\n        .to(DropwizardRowIngestionMetersFactory.class)\n        .in(LazySingleton.class);\n    binder.bind(DropwizardRowIngestionMetersFactory.class).in(LazySingleton.class);\n  }\n","realPath":"services/src/main/java/org/apache/druid/cli/CliPeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"N"},{"authorDate":"2021-07-27 12:29:43","commitOrder":5,"curCode":"  static void bindTaskConfigAndClients(Binder binder)\n  {\n    binder.bind(TaskToolboxFactory.class).in(LazySingleton.class);\n\n    JsonConfigProvider.bind(binder, \"druid.indexer.task\", TaskConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.indexer.auditlog\", TaskAuditLogConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.peon.taskActionClient.retry\", RetryPolicyConfig.class);\n\n    configureTaskActionClient(binder);\n    binder.bind(IndexingServiceClient.class).to(HttpIndexingServiceClient.class).in(LazySingleton.class);\n\n    binder.bind(new TypeLiteral<IndexTaskClientFactory<ParallelIndexSupervisorTaskClient>>(){})\n          .to(ParallelIndexTaskClientFactory.class)\n          .in(LazySingleton.class);\n\n    binder.bind(RetryPolicyFactory.class).in(LazySingleton.class);\n  }\n","date":"2021-07-27 12:29:43","endLine":435,"groupId":"102384","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"bindTaskConfigAndClients","params":"(Binderbinder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8c/1fb005b61b87c45f4651db002eee552777ddd0.src","preCode":"  static void bindTaskConfigAndClients(Binder binder)\n  {\n    binder.bind(TaskToolboxFactory.class).in(LazySingleton.class);\n\n    JsonConfigProvider.bind(binder, \"druid.indexer.task\", TaskConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.indexer.auditlog\", TaskAuditLogConfig.class);\n    JsonConfigProvider.bind(binder, \"druid.peon.taskActionClient.retry\", RetryPolicyConfig.class);\n\n    configureTaskActionClient(binder);\n    binder.bind(IndexingServiceClient.class).to(HttpIndexingServiceClient.class).in(LazySingleton.class);\n    binder.bind(ShuffleClient.class).to(HttpShuffleClient.class).in(LazySingleton.class);\n\n    binder.bind(new TypeLiteral<IndexTaskClientFactory<ParallelIndexSupervisorTaskClient>>(){})\n          .to(ParallelIndexTaskClientFactory.class)\n          .in(LazySingleton.class);\n\n    binder.bind(RetryPolicyFactory.class).in(LazySingleton.class);\n  }\n","realPath":"services/src/main/java/org/apache/druid/cli/CliPeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":419,"status":"M"}],"commitId":"c068906fca4082737e059418d369eb0711500c07","commitMessage":"@@@Make intermediate store for shuffle tasks an extension point (#11492)\n\n* add interface\n\n* add docs\n\n* fix errors\n\n* fix injection\n\n* fix injection\n\n* update javadoc","date":"2021-07-27 12:29:43","modifiedFileCount":"9","status":"M","submitter":"Maytas Monsereenusorn"}]
