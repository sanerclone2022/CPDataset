[{"authorTime":"2020-06-25 10:58:34","codes":[{"authorDate":"2020-02-20 05:09:20","commitOrder":3,"curCode":"  public void testCountStar() throws Exception\n  {\n    final List<Map<String, Object>> rows = doPost(\n        new SqlQuery(\"SELECT COUNT(*) AS cnt, 'foo' AS TheFoo FROM druid.foo\", null, false, null, null)\n    ).rhs;\n\n    Assert.assertEquals(\n        ImmutableList.of(\n            ImmutableMap.of(\"cnt\", 6, \"TheFoo\", \"foo\")\n        ),\n        rows\n    );\n    checkSqlRequestLog(true);\n  }\n","date":"2020-02-20 05:09:20","endLine":218,"groupId":"17915","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCountStar","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ce/925902a575cbbf2589ae93ea4af3f1938c97e0.src","preCode":"  public void testCountStar() throws Exception\n  {\n    final List<Map<String, Object>> rows = doPost(\n        new SqlQuery(\"SELECT COUNT(*) AS cnt, 'foo' AS TheFoo FROM druid.foo\", null, false, null, null)\n    ).rhs;\n\n    Assert.assertEquals(\n        ImmutableList.of(\n            ImmutableMap.of(\"cnt\", 6, \"TheFoo\", \"foo\")\n        ),\n        rows\n    );\n    checkSqlRequestLog(true);\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"NB"},{"authorDate":"2020-06-25 10:58:34","commitOrder":3,"curCode":"  public void testCountStarExtendedCharacters() throws Exception\n  {\n    final List<Map<String, Object>> rows = doPost(\n        new SqlQuery(\"SELECT COUNT(*) AS cnt FROM druid.lotsocolumns WHERE dimMultivalEnumerated = '��������� ��������� ��������� ��������� ��������� ��������� ��������� ��������� ���������'\", null, false, null, null)\n    ).rhs;\n\n    Assert.assertEquals(\n        ImmutableList.of(\n            ImmutableMap.of(\"cnt\", 1)\n        ),\n        rows\n    );\n    checkSqlRequestLog(true);\n  }\n","date":"2020-06-25 10:58:34","endLine":261,"groupId":"1701","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountStarExtendedCharacters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cc/3bce3f6b26238d4fef3927667b22006197e72f.src","preCode":"  public void testCountStarExtendedCharacters() throws Exception\n  {\n    final List<Map<String, Object>> rows = doPost(\n        new SqlQuery(\"SELECT COUNT(*) AS cnt FROM druid.lotsocolumns WHERE dimMultivalEnumerated = '��������� ��������� ��������� ��������� ��������� ��������� ��������� ��������� ���������'\", null, false, null, null)\n    ).rhs;\n\n    Assert.assertEquals(\n        ImmutableList.of(\n            ImmutableMap.of(\"cnt\", 1)\n        ),\n        rows\n    );\n    checkSqlRequestLog(true);\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"B"}],"commitId":"ec1f443a5ccd8db08f2003385b814d9947d2725e","commitMessage":"@@@update avatica to handle additional character sets over jdbc (#10074)\n\n* update avatica to handle additional character sets over jdbc\n\n* update license yaml.  fix test\n\n* oops","date":"2020-06-25 10:58:34","modifiedFileCount":"4","status":"M","submitter":"Clint Wylie"},{"authorTime":"2021-09-06 01:57:45","codes":[{"authorDate":"2021-09-06 01:57:45","commitOrder":4,"curCode":"  public void testCountStar() throws Exception\n  {\n    final List<Map<String, Object>> rows = doPost(\n        createSimpleQueryWithId(\"id\", \"SELECT COUNT(*) AS cnt, 'foo' AS TheFoo FROM druid.foo\")\n    ).rhs;\n\n    Assert.assertEquals(\n        ImmutableList.of(\n            ImmutableMap.of(\"cnt\", 6, \"TheFoo\", \"foo\")\n        ),\n        rows\n    );\n    checkSqlRequestLog(true);\n    Assert.assertTrue(lifecycleManager.getAll(\"id\").isEmpty());\n  }\n","date":"2021-09-06 01:57:45","endLine":322,"groupId":"101540","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCountStar","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/02/f596adbdaab2d96bcd83e41fc1de166d07cb8a.src","preCode":"  public void testCountStar() throws Exception\n  {\n    final List<Map<String, Object>> rows = doPost(\n        new SqlQuery(\"SELECT COUNT(*) AS cnt, 'foo' AS TheFoo FROM druid.foo\", null, false, null, null)\n    ).rhs;\n\n    Assert.assertEquals(\n        ImmutableList.of(\n            ImmutableMap.of(\"cnt\", 6, \"TheFoo\", \"foo\")\n        ),\n        rows\n    );\n    checkSqlRequestLog(true);\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"M"},{"authorDate":"2021-09-06 01:57:45","commitOrder":4,"curCode":"  public void testCountStarExtendedCharacters() throws Exception\n  {\n    final List<Map<String, Object>> rows = doPost(\n        createSimpleQueryWithId(\n            \"id\",\n            \"SELECT COUNT(*) AS cnt FROM druid.lotsocolumns WHERE dimMultivalEnumerated = '��������� ��������� ��������� ��������� ��������� ��������� ��������� ��������� ���������'\"\n        )\n    ).rhs;\n\n    Assert.assertEquals(\n        ImmutableList.of(\n            ImmutableMap.of(\"cnt\", 1)\n        ),\n        rows\n    );\n    checkSqlRequestLog(true);\n    Assert.assertTrue(lifecycleManager.getAll(\"id\").isEmpty());\n  }\n","date":"2021-09-06 01:57:45","endLine":343,"groupId":"101540","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountStarExtendedCharacters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/02/f596adbdaab2d96bcd83e41fc1de166d07cb8a.src","preCode":"  public void testCountStarExtendedCharacters() throws Exception\n  {\n    final List<Map<String, Object>> rows = doPost(\n        new SqlQuery(\"SELECT COUNT(*) AS cnt FROM druid.lotsocolumns WHERE dimMultivalEnumerated = '��������� ��������� ��������� ��������� ��������� ��������� ��������� ��������� ���������'\", null, false, null, null)\n    ).rhs;\n\n    Assert.assertEquals(\n        ImmutableList.of(\n            ImmutableMap.of(\"cnt\", 1)\n        ),\n        rows\n    );\n    checkSqlRequestLog(true);\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/http/SqlResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"M"}],"commitId":"82049bbf0a6409c09889ba9b3ea6131c9da86705","commitMessage":"@@@Cancel API for sqls (#11643)\n\n* initial work\n\n* reduce lock in sqlLifecycle\n\n* Integration test for sql canceling\n\n* javadoc.  cleanup.  more tests\n\n* log level to debug\n\n* fix test\n\n* checkstyle\n\n* fix flaky test; address comments\n\n* rowTransformer\n\n* cancelled state\n\n* use lock\n\n* explode instead of noop\n\n* oops\n\n* unused import\n\n* less aggressive with state\n\n* fix calcite charset\n\n* don't emit metrics when you are not authorized","date":"2021-09-06 01:57:45","modifiedFileCount":"17","status":"M","submitter":"Jihoon Son"}]
