[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testSimpleGet()\n  {\n    final LookupCoordinatorManager lookupCoordinatorManager = EasyMock.createStrictMock(\n        LookupCoordinatorManager.class);\n    final Map<String, Map<String, LookupExtractorFactoryMapContainer>> retVal = new HashMap<>();\n    EasyMock.expect(lookupCoordinatorManager.getKnownLookups()).andReturn(retVal).once();\n    EasyMock.replay(lookupCoordinatorManager);\n    final LookupCoordinatorResource lookupCoordinatorResource = new LookupCoordinatorResource(\n        lookupCoordinatorManager,\n        mapper,\n        mapper\n    );\n    final Response response = lookupCoordinatorResource.getTiers(false);\n    Assert.assertEquals(200, response.getStatus());\n    Assert.assertEquals(retVal.keySet(), response.getEntity());\n    EasyMock.verify(lookupCoordinatorManager);\n  }\n","date":"2018-08-31 00:56:26","endLine":111,"groupId":"1694","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimpleGet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2e/0819c048046e34c2442951d1b3bcc3f2a387fa.src","preCode":"  public void testSimpleGet()\n  {\n    final LookupCoordinatorManager lookupCoordinatorManager = EasyMock.createStrictMock(\n        LookupCoordinatorManager.class);\n    final Map<String, Map<String, LookupExtractorFactoryMapContainer>> retVal = new HashMap<>();\n    EasyMock.expect(lookupCoordinatorManager.getKnownLookups()).andReturn(retVal).once();\n    EasyMock.replay(lookupCoordinatorManager);\n    final LookupCoordinatorResource lookupCoordinatorResource = new LookupCoordinatorResource(\n        lookupCoordinatorManager,\n        mapper,\n        mapper\n    );\n    final Response response = lookupCoordinatorResource.getTiers(false);\n    Assert.assertEquals(200, response.getStatus());\n    Assert.assertEquals(retVal.keySet(), response.getEntity());\n    EasyMock.verify(lookupCoordinatorManager);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/http/LookupCoordinatorResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testMissingGet()\n  {\n    final LookupCoordinatorManager lookupCoordinatorManager = EasyMock.createStrictMock(\n        LookupCoordinatorManager.class);\n    EasyMock.expect(lookupCoordinatorManager.getKnownLookups()).andReturn(null).once();\n    EasyMock.replay(lookupCoordinatorManager);\n    final LookupCoordinatorResource lookupCoordinatorResource = new LookupCoordinatorResource(\n        lookupCoordinatorManager,\n        mapper,\n        mapper\n    );\n    final Response response = lookupCoordinatorResource.getTiers(false);\n    Assert.assertEquals(404, response.getStatus());\n    EasyMock.verify(lookupCoordinatorManager);\n  }\n","date":"2018-08-31 00:56:26","endLine":128,"groupId":"970","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMissingGet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2e/0819c048046e34c2442951d1b3bcc3f2a387fa.src","preCode":"  public void testMissingGet()\n  {\n    final LookupCoordinatorManager lookupCoordinatorManager = EasyMock.createStrictMock(\n        LookupCoordinatorManager.class);\n    EasyMock.expect(lookupCoordinatorManager.getKnownLookups()).andReturn(null).once();\n    EasyMock.replay(lookupCoordinatorManager);\n    final LookupCoordinatorResource lookupCoordinatorResource = new LookupCoordinatorResource(\n        lookupCoordinatorManager,\n        mapper,\n        mapper\n    );\n    final Response response = lookupCoordinatorResource.getTiers(false);\n    Assert.assertEquals(404, response.getStatus());\n    EasyMock.verify(lookupCoordinatorManager);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/http/LookupCoordinatorResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testSimpleGet()\n  {\n    final LookupCoordinatorManager lookupCoordinatorManager = EasyMock.createStrictMock(\n        LookupCoordinatorManager.class);\n    final Map<String, Map<String, LookupExtractorFactoryMapContainer>> retVal = new HashMap<>();\n    EasyMock.expect(lookupCoordinatorManager.getKnownLookups()).andReturn(retVal).once();\n    EasyMock.replay(lookupCoordinatorManager);\n    final LookupCoordinatorResource lookupCoordinatorResource = new LookupCoordinatorResource(\n        lookupCoordinatorManager,\n        MAPPER,\n        MAPPER\n    );\n    final Response response = lookupCoordinatorResource.getTiers(false);\n    Assert.assertEquals(200, response.getStatus());\n    Assert.assertEquals(retVal.keySet(), response.getEntity());\n    EasyMock.verify(lookupCoordinatorManager);\n  }\n","date":"2019-08-23 18:13:54","endLine":110,"groupId":"10588","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimpleGet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8c/5a7b91c9130f8afbe71a71bb6ce52983a3cdd6.src","preCode":"  public void testSimpleGet()\n  {\n    final LookupCoordinatorManager lookupCoordinatorManager = EasyMock.createStrictMock(\n        LookupCoordinatorManager.class);\n    final Map<String, Map<String, LookupExtractorFactoryMapContainer>> retVal = new HashMap<>();\n    EasyMock.expect(lookupCoordinatorManager.getKnownLookups()).andReturn(retVal).once();\n    EasyMock.replay(lookupCoordinatorManager);\n    final LookupCoordinatorResource lookupCoordinatorResource = new LookupCoordinatorResource(\n        lookupCoordinatorManager,\n        mapper,\n        mapper\n    );\n    final Response response = lookupCoordinatorResource.getTiers(false);\n    Assert.assertEquals(200, response.getStatus());\n    Assert.assertEquals(retVal.keySet(), response.getEntity());\n    EasyMock.verify(lookupCoordinatorManager);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/http/LookupCoordinatorResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testMissingGet()\n  {\n    final LookupCoordinatorManager lookupCoordinatorManager = EasyMock.createStrictMock(\n        LookupCoordinatorManager.class);\n    EasyMock.expect(lookupCoordinatorManager.getKnownLookups()).andReturn(null).once();\n    EasyMock.replay(lookupCoordinatorManager);\n    final LookupCoordinatorResource lookupCoordinatorResource = new LookupCoordinatorResource(\n        lookupCoordinatorManager,\n        MAPPER,\n        MAPPER\n    );\n    final Response response = lookupCoordinatorResource.getTiers(false);\n    Assert.assertEquals(404, response.getStatus());\n    EasyMock.verify(lookupCoordinatorManager);\n  }\n","date":"2019-08-23 18:13:54","endLine":127,"groupId":"10588","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMissingGet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8c/5a7b91c9130f8afbe71a71bb6ce52983a3cdd6.src","preCode":"  public void testMissingGet()\n  {\n    final LookupCoordinatorManager lookupCoordinatorManager = EasyMock.createStrictMock(\n        LookupCoordinatorManager.class);\n    EasyMock.expect(lookupCoordinatorManager.getKnownLookups()).andReturn(null).once();\n    EasyMock.replay(lookupCoordinatorManager);\n    final LookupCoordinatorResource lookupCoordinatorResource = new LookupCoordinatorResource(\n        lookupCoordinatorManager,\n        mapper,\n        mapper\n    );\n    final Response response = lookupCoordinatorResource.getTiers(false);\n    Assert.assertEquals(404, response.getStatus());\n    EasyMock.verify(lookupCoordinatorManager);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/http/LookupCoordinatorResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
