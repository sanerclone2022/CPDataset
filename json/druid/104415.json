[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testStopBeforeStarting() throws Exception\n  {\n    final File directory = tempFolder.newFolder();\n    final RealtimeIndexTask task1 = makeRealtimeTask(null);\n\n    task1.stopGracefully();\n    final TestIndexerMetadataStorageCoordinator mdc = new TestIndexerMetadataStorageCoordinator();\n    final TaskToolbox taskToolbox = makeToolbox(task1, mdc, directory);\n    final ListenableFuture<TaskStatus> statusFuture = runTask(task1, taskToolbox);\n\n    \r\n    final TaskStatus taskStatus = statusFuture.get();\n    Assert.assertEquals(TaskState.SUCCESS, taskStatus.getStatusCode());\n  }\n","date":"2018-08-31 00:56:26","endLine":845,"groupId":"13632","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testStopBeforeStarting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/88/a5a43ac6348dcc06d166c7ecd82fe32df01520.src","preCode":"  public void testStopBeforeStarting() throws Exception\n  {\n    final File directory = tempFolder.newFolder();\n    final RealtimeIndexTask task1 = makeRealtimeTask(null);\n\n    task1.stopGracefully();\n    final TestIndexerMetadataStorageCoordinator mdc = new TestIndexerMetadataStorageCoordinator();\n    final TaskToolbox taskToolbox = makeToolbox(task1, mdc, directory);\n    final ListenableFuture<TaskStatus> statusFuture = runTask(task1, taskToolbox);\n\n    \r\n    final TaskStatus taskStatus = statusFuture.get();\n    Assert.assertEquals(TaskState.SUCCESS, taskStatus.getStatusCode());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/RealtimeIndexTaskTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":832,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testStopBeforeStarting() throws Exception\n  {\n    expectPublishedSegments(0);\n\n    final AppenderatorDriverRealtimeIndexTask task1 = makeRealtimeTask(null);\n\n    task1.stopGracefully();\n    final ListenableFuture<TaskStatus> statusFuture = runTask(task1);\n\n    \r\n    final TaskStatus taskStatus = statusFuture.get();\n    Assert.assertEquals(TaskState.SUCCESS, taskStatus.getStatusCode());\n  }\n","date":"2018-08-31 00:56:26","endLine":1199,"groupId":"18453","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testStopBeforeStarting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/fcd94da19dd9f05cce3027a3abada825548097.src","preCode":"  public void testStopBeforeStarting() throws Exception\n  {\n    expectPublishedSegments(0);\n\n    final AppenderatorDriverRealtimeIndexTask task1 = makeRealtimeTask(null);\n\n    task1.stopGracefully();\n    final ListenableFuture<TaskStatus> statusFuture = runTask(task1);\n\n    \r\n    final TaskStatus taskStatus = statusFuture.get();\n    Assert.assertEquals(TaskState.SUCCESS, taskStatus.getStatusCode());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1187,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-01-26 07:43:06","codes":[{"authorDate":"2019-01-26 07:43:06","commitOrder":2,"curCode":"  public void testStopBeforeStarting() throws Exception\n  {\n    final File directory = tempFolder.newFolder();\n    final RealtimeIndexTask task1 = makeRealtimeTask(null);\n\n    final TestIndexerMetadataStorageCoordinator mdc = new TestIndexerMetadataStorageCoordinator();\n    final TaskToolbox taskToolbox = makeToolbox(task1, mdc, directory);\n    task1.stopGracefully(taskToolbox.getConfig());\n    final ListenableFuture<TaskStatus> statusFuture = runTask(task1, taskToolbox);\n\n    \r\n    final TaskStatus taskStatus = statusFuture.get();\n    Assert.assertEquals(TaskState.SUCCESS, taskStatus.getStatusCode());\n  }\n","date":"2019-01-26 07:43:06","endLine":848,"groupId":"104415","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testStopBeforeStarting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/9a/6a8e98e6e2d6b9d0607f383c1d2c481109ac4c.src","preCode":"  public void testStopBeforeStarting() throws Exception\n  {\n    final File directory = tempFolder.newFolder();\n    final RealtimeIndexTask task1 = makeRealtimeTask(null);\n\n    task1.stopGracefully();\n    final TestIndexerMetadataStorageCoordinator mdc = new TestIndexerMetadataStorageCoordinator();\n    final TaskToolbox taskToolbox = makeToolbox(task1, mdc, directory);\n    final ListenableFuture<TaskStatus> statusFuture = runTask(task1, taskToolbox);\n\n    \r\n    final TaskStatus taskStatus = statusFuture.get();\n    Assert.assertEquals(TaskState.SUCCESS, taskStatus.getStatusCode());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/RealtimeIndexTaskTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":835,"status":"M"},{"authorDate":"2019-01-26 07:43:06","commitOrder":2,"curCode":"  public void testStopBeforeStarting() throws Exception\n  {\n    expectPublishedSegments(0);\n\n    final AppenderatorDriverRealtimeIndexTask task1 = makeRealtimeTask(null);\n\n    task1.stopGracefully(taskToolboxFactory.build(task1).getConfig());\n    final ListenableFuture<TaskStatus> statusFuture = runTask(task1);\n\n    \r\n    final TaskStatus taskStatus = statusFuture.get();\n    Assert.assertEquals(TaskState.SUCCESS, taskStatus.getStatusCode());\n  }\n","date":"2019-01-26 07:43:06","endLine":1266,"groupId":"104415","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testStopBeforeStarting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/0a/dd56bd6b5b12100372c250cd925182fdf3c67c.src","preCode":"  public void testStopBeforeStarting() throws Exception\n  {\n    expectPublishedSegments(0);\n\n    final AppenderatorDriverRealtimeIndexTask task1 = makeRealtimeTask(null);\n\n    task1.stopGracefully();\n    final ListenableFuture<TaskStatus> statusFuture = runTask(task1);\n\n    \r\n    final TaskStatus taskStatus = statusFuture.get();\n    Assert.assertEquals(TaskState.SUCCESS, taskStatus.getStatusCode());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1254,"status":"M"}],"commitId":"8492d94f599da1f7851add2a0e7500515abd881d","commitMessage":"@@@Kill Hadoop MR task on kill of Hadoop ingestion task  (#6828)\n\n* KillTask from overlord UI now makes sure that it terminates the underlying MR job.  thus saving unnecessary compute\n\nRun in jobby is now split into 2\n 1. submitAndGetHadoopJobId followed by 2. run\n  submitAndGetHadoopJobId is responsible for submitting the job and returning the jobId as a string.  run monitors this job for completion\n\nJobHelper writes this jobId in the path provided by HadoopIndexTask which in turn is provided by the ForkingTaskRunner\n\nHadoopIndexTask reads this path when kill task is clicked to get hte jobId and fire the kill command via the yarn api. This is taken care in the stopGracefully method which is called in SingleTaskBackgroundRunner. Have enabled `canRestore` method to return `true` for HadoopIndexTask in order for the stopGracefully method to be called\n\nHadoop*Job files have been changed to incorporate the changes to jobby\n\n* Addressing PR comments\n\n* Addressing PR comments - Fix taskDir\n\n* Addressing PR comments - For changing the contract of Task.stopGracefully()\n`SingleTaskBackgroundRunner` calls stopGracefully in stop() and then checks for canRestore condition to return the status of the task\n\n* Addressing PR comments\n 1. Formatting\n 2. Removing `submitAndGetHadoopJobId` from `Jobby` and calling writeJobIdToFile in the job itself\n\n* Addressing PR comments\n 1. POM change. Moving hadoop dependency to indexing-hadoop\n\n* Addressing PR comments\n 1. stopGracefully now accepts TaskConfig as a param\n     Handling isRestoreOnRestart in stopGracefully for `AppenderatorDriverRealtimeIndexTask.  RealtimeIndexTask.  SeekableStreamIndexTask`\n     Changing tests to make TaskConfig param isRestoreOnRestart to true\n","date":"2019-01-26 07:43:06","modifiedFileCount":"20","status":"M","submitter":"Ankit Kothari"}]
