[{"authorTime":"2019-11-21 06:51:25","codes":[{"authorDate":"2019-11-16 01:22:09","commitOrder":2,"curCode":"  default <R> CloseableIterator<R> map(Function<T, R> mapFunction)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      @Override\n      public boolean hasNext()\n      {\n        return delegate.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        return mapFunction.apply(delegate.next());\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","date":"2019-11-16 01:22:09","endLine":60,"groupId":"22422","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"map","params":"(Function<T@R>mapFunction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4c/f5addb6428a887768348c35fd392f8d637f402.src","preCode":"  default <R> CloseableIterator<R> map(Function<T, R> mapFunction)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      @Override\n      public boolean hasNext()\n      {\n        return delegate.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        return mapFunction.apply(delegate.next());\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/java/util/common/parsers/CloseableIterator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"NB"},{"authorDate":"2019-11-21 06:51:25","commitOrder":2,"curCode":"  default <R> CloseableIterator<R> flatMap(Function<T, CloseableIterator<R>> function)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      CloseableIterator<R> iterator = findNextIeteratorIfNecessary();\n\n      @Nullable\n      private CloseableIterator<R> findNextIeteratorIfNecessary()\n      {\n        while ((iterator == null || !iterator.hasNext()) && delegate.hasNext()) {\n          if (iterator != null) {\n            try {\n              iterator.close();\n            }\n            catch (IOException e) {\n              throw new UncheckedIOException(e);\n            }\n          }\n          try {\n            iterator = function.apply(delegate.next());\n            if (iterator.hasNext()) {\n              return iterator;\n            }\n          }\n          catch (Exception e) {\n            iterator = new ExceptionThrowingIterator<>(e);\n            return iterator;\n          }\n        }\n        return null;\n      }\n\n      @Override\n      public boolean hasNext()\n      {\n        return iterator != null && iterator.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        try {\n          return iterator.next();\n        }\n        finally {\n          findNextIeteratorIfNecessary();\n        }\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","date":"2019-11-21 06:51:25","endLine":123,"groupId":"1891","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"flatMap","params":"(Function<T@CloseableIterator<R>>function)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/37/53b3fda4d1716a98afbfe0f7716cb315588f56.src","preCode":"  default <R> CloseableIterator<R> flatMap(Function<T, CloseableIterator<R>> function)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      CloseableIterator<R> iterator = findNextIeteratorIfNecessary();\n\n      @Nullable\n      private CloseableIterator<R> findNextIeteratorIfNecessary()\n      {\n        while ((iterator == null || !iterator.hasNext()) && delegate.hasNext()) {\n          if (iterator != null) {\n            try {\n              iterator.close();\n            }\n            catch (IOException e) {\n              throw new UncheckedIOException(e);\n            }\n          }\n          try {\n            iterator = function.apply(delegate.next());\n            if (iterator.hasNext()) {\n              return iterator;\n            }\n          }\n          catch (Exception e) {\n            iterator = new ExceptionThrowingIterator<>(e);\n            return iterator;\n          }\n        }\n        return null;\n      }\n\n      @Override\n      public boolean hasNext()\n      {\n        return iterator != null && iterator.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        try {\n          return iterator.next();\n        }\n        finally {\n          findNextIeteratorIfNecessary();\n        }\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/java/util/common/parsers/CloseableIterator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"MB"}],"commitId":"ac6d703814ccb5b258c586b63e0bc33d669e0f57","commitMessage":"@@@Support inputFormat and inputSource for sampler (#8901)\n\n* Support inputFormat and inputSource for sampler\n\n* Cleanup javadocs and names\n\n* fix style\n\n* fix timed shutoff input source reader\n\n* fix timed shutoff input source reader again\n\n* tidy up timed shutoff reader\n\n* unused imports\n\n* fix tc\n","date":"2019-11-21 06:51:25","modifiedFileCount":"66","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-11-29 04:45:24","codes":[{"authorDate":"2019-11-16 01:22:09","commitOrder":3,"curCode":"  default <R> CloseableIterator<R> map(Function<T, R> mapFunction)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      @Override\n      public boolean hasNext()\n      {\n        return delegate.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        return mapFunction.apply(delegate.next());\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","date":"2019-11-16 01:22:09","endLine":60,"groupId":"22422","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"map","params":"(Function<T@R>mapFunction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4c/f5addb6428a887768348c35fd392f8d637f402.src","preCode":"  default <R> CloseableIterator<R> map(Function<T, R> mapFunction)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      @Override\n      public boolean hasNext()\n      {\n        return delegate.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        return mapFunction.apply(delegate.next());\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/java/util/common/parsers/CloseableIterator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"N"},{"authorDate":"2019-11-29 04:45:24","commitOrder":3,"curCode":"  default <R> CloseableIterator<R> flatMap(Function<T, CloseableIterator<R>> function)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      CloseableIterator<R> iterator = findNextIeteratorIfNecessary();\n\n      @Nullable\n      private CloseableIterator<R> findNextIeteratorIfNecessary()\n      {\n        while ((iterator == null || !iterator.hasNext()) && delegate.hasNext()) {\n          if (iterator != null) {\n            try {\n              iterator.close();\n            }\n            catch (IOException e) {\n              throw new UncheckedIOException(e);\n            }\n          }\n          iterator = function.apply(delegate.next());\n          if (iterator.hasNext()) {\n            return iterator;\n          }\n        }\n        return null;\n      }\n\n      @Override\n      public boolean hasNext()\n      {\n        return iterator != null && iterator.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        try {\n          return iterator.next();\n        }\n        finally {\n          findNextIeteratorIfNecessary();\n        }\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","date":"2019-11-29 04:45:24","endLine":117,"groupId":"1891","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"flatMap","params":"(Function<T@CloseableIterator<R>>function)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/45/cda5cbc452fada1183fb805e34e328d0400f9b.src","preCode":"  default <R> CloseableIterator<R> flatMap(Function<T, CloseableIterator<R>> function)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      CloseableIterator<R> iterator = findNextIeteratorIfNecessary();\n\n      @Nullable\n      private CloseableIterator<R> findNextIeteratorIfNecessary()\n      {\n        while ((iterator == null || !iterator.hasNext()) && delegate.hasNext()) {\n          if (iterator != null) {\n            try {\n              iterator.close();\n            }\n            catch (IOException e) {\n              throw new UncheckedIOException(e);\n            }\n          }\n          try {\n            iterator = function.apply(delegate.next());\n            if (iterator.hasNext()) {\n              return iterator;\n            }\n          }\n          catch (Exception e) {\n            iterator = new ExceptionThrowingIterator<>(e);\n            return iterator;\n          }\n        }\n        return null;\n      }\n\n      @Override\n      public boolean hasNext()\n      {\n        return iterator != null && iterator.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        try {\n          return iterator.next();\n        }\n        finally {\n          findNextIeteratorIfNecessary();\n        }\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/java/util/common/parsers/CloseableIterator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"86e8903523fc3d2d177963d2f95fd56441605102","commitMessage":"@@@Support orc format for native batch ingestion (#8950)\n\n* Support orc format for native batch ingestion\n\n* fix pom and remove wrong comment\n\n* fix unnecessary condition check\n\n* use flatMap back to handle exception properly\n\n* move exceptionThrowingIterator to intermediateRowParsingReader\n\n* runtime\n","date":"2019-11-29 04:45:24","modifiedFileCount":"5","status":"M","submitter":"Jihoon Son"},{"authorTime":"2020-04-25 04:52:50","codes":[{"authorDate":"2019-11-16 01:22:09","commitOrder":4,"curCode":"  default <R> CloseableIterator<R> map(Function<T, R> mapFunction)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      @Override\n      public boolean hasNext()\n      {\n        return delegate.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        return mapFunction.apply(delegate.next());\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","date":"2019-11-16 01:22:09","endLine":60,"groupId":"22422","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"map","params":"(Function<T@R>mapFunction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4c/f5addb6428a887768348c35fd392f8d637f402.src","preCode":"  default <R> CloseableIterator<R> map(Function<T, R> mapFunction)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      @Override\n      public boolean hasNext()\n      {\n        return delegate.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        return mapFunction.apply(delegate.next());\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/java/util/common/parsers/CloseableIterator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"N"},{"authorDate":"2020-04-25 04:52:50","commitOrder":4,"curCode":"  default <R> CloseableIterator<R> flatMap(Function<T, CloseableIterator<R>> function)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      CloseableIterator<R> iterator = findNextIeteratorIfNecessary();\n\n      @Nullable\n      private CloseableIterator<R> findNextIeteratorIfNecessary()\n      {\n        while ((iterator == null || !iterator.hasNext()) && delegate.hasNext()) {\n          if (iterator != null) {\n            try {\n              iterator.close();\n              iterator = null;\n            }\n            catch (IOException e) {\n              throw new UncheckedIOException(e);\n            }\n          }\n          iterator = function.apply(delegate.next());\n          if (iterator.hasNext()) {\n            return iterator;\n          }\n        }\n        return null;\n      }\n\n      @Override\n      public boolean hasNext()\n      {\n        return iterator != null && iterator.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        try {\n          return iterator.next();\n        }\n        finally {\n          findNextIeteratorIfNecessary();\n        }\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n        if (iterator != null) {\n          iterator.close();\n          iterator = null;\n        }\n      }\n    };\n  }\n","date":"2020-04-25 04:52:50","endLine":122,"groupId":"11562","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"flatMap","params":"(Function<T@CloseableIterator<R>>function)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d5/915369eada75426da887edc831161a19fe0dae.src","preCode":"  default <R> CloseableIterator<R> flatMap(Function<T, CloseableIterator<R>> function)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      CloseableIterator<R> iterator = findNextIeteratorIfNecessary();\n\n      @Nullable\n      private CloseableIterator<R> findNextIeteratorIfNecessary()\n      {\n        while ((iterator == null || !iterator.hasNext()) && delegate.hasNext()) {\n          if (iterator != null) {\n            try {\n              iterator.close();\n            }\n            catch (IOException e) {\n              throw new UncheckedIOException(e);\n            }\n          }\n          iterator = function.apply(delegate.next());\n          if (iterator.hasNext()) {\n            return iterator;\n          }\n        }\n        return null;\n      }\n\n      @Override\n      public boolean hasNext()\n      {\n        return iterator != null && iterator.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        try {\n          return iterator.next();\n        }\n        finally {\n          findNextIeteratorIfNecessary();\n        }\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/java/util/common/parsers/CloseableIterator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"7711f776a033806acf307f82181e5c3926d2bb43","commitMessage":"@@@fix issue where CloseableIterator.flatMap does not close inner CloseableIterator (#9761)\n\n* fix issue where CloseableIterator.flatMap does not close inner CloseableIterator\n\n* more test\n\n* style\n\n* clarify test","date":"2020-04-25 04:52:50","modifiedFileCount":"2","status":"M","submitter":"Clint Wylie"},{"authorTime":"2020-06-10 03:55:20","codes":[{"authorDate":"2019-11-16 01:22:09","commitOrder":5,"curCode":"  default <R> CloseableIterator<R> map(Function<T, R> mapFunction)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      @Override\n      public boolean hasNext()\n      {\n        return delegate.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        return mapFunction.apply(delegate.next());\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","date":"2019-11-16 01:22:09","endLine":60,"groupId":"105515","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"map","params":"(Function<T@R>mapFunction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4c/f5addb6428a887768348c35fd392f8d637f402.src","preCode":"  default <R> CloseableIterator<R> map(Function<T, R> mapFunction)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      @Override\n      public boolean hasNext()\n      {\n        return delegate.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        return mapFunction.apply(delegate.next());\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/java/util/common/parsers/CloseableIterator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"N"},{"authorDate":"2020-06-10 03:55:20","commitOrder":5,"curCode":"  default <R> CloseableIterator<R> flatMap(Function<T, CloseableIterator<R>> function)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      CloseableIterator<R> iterator = findNextIteratorIfNecessary();\n\n      @Nullable\n      private CloseableIterator<R> findNextIteratorIfNecessary()\n      {\n        while ((iterator == null || !iterator.hasNext()) && delegate.hasNext()) {\n          if (iterator != null) {\n            try {\n              iterator.close();\n              iterator = null;\n            }\n            catch (IOException e) {\n              throw new UncheckedIOException(e);\n            }\n          }\n          iterator = function.apply(delegate.next());\n          if (iterator.hasNext()) {\n            return iterator;\n          }\n        }\n        return null;\n      }\n\n      @Override\n      public boolean hasNext()\n      {\n        return iterator != null && iterator.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        try {\n          return iterator.next();\n        }\n        finally {\n          findNextIteratorIfNecessary();\n        }\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n        if (iterator != null) {\n          iterator.close();\n          iterator = null;\n        }\n      }\n    };\n  }\n","date":"2020-06-10 03:55:20","endLine":122,"groupId":"105515","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"flatMap","params":"(Function<T@CloseableIterator<R>>function)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/af/1baafe41983da8b9366a2921c8d8ad746aca86.src","preCode":"  default <R> CloseableIterator<R> flatMap(Function<T, CloseableIterator<R>> function)\n  {\n    final CloseableIterator<T> delegate = this;\n\n    return new CloseableIterator<R>()\n    {\n      CloseableIterator<R> iterator = findNextIeteratorIfNecessary();\n\n      @Nullable\n      private CloseableIterator<R> findNextIeteratorIfNecessary()\n      {\n        while ((iterator == null || !iterator.hasNext()) && delegate.hasNext()) {\n          if (iterator != null) {\n            try {\n              iterator.close();\n              iterator = null;\n            }\n            catch (IOException e) {\n              throw new UncheckedIOException(e);\n            }\n          }\n          iterator = function.apply(delegate.next());\n          if (iterator.hasNext()) {\n            return iterator;\n          }\n        }\n        return null;\n      }\n\n      @Override\n      public boolean hasNext()\n      {\n        return iterator != null && iterator.hasNext();\n      }\n\n      @Override\n      public R next()\n      {\n        if (!hasNext()) {\n          throw new NoSuchElementException();\n        }\n        try {\n          return iterator.next();\n        }\n        finally {\n          findNextIeteratorIfNecessary();\n        }\n      }\n\n      @Override\n      public void close() throws IOException\n      {\n        delegate.close();\n        if (iterator != null) {\n          iterator.close();\n          iterator = null;\n        }\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/java/util/common/parsers/CloseableIterator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"17cf8ea8f2cc6a4fe8e2c6e29e3b9f066a6ccc2b","commitMessage":"@@@Add Sql InputSource (#9449)\n\n* Add Sql InputSource\n\n* Add spelling\n\n* Use separate DruidModule\n\n* Change module name\n\n* Fix docs\n\n* Use sqltestutils for tests\n\n* Add additional tests\n\n* Fix inspection\n\n* Add module test\n\n* Fix md in docs\n\n* Remove annotation\n\nCo-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>","date":"2020-06-10 03:55:20","modifiedFileCount":"9","status":"M","submitter":"Atul Mohan"}]
