[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testFullOnTopNFloatColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityFloat\", \"qf_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<TopNResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"14000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"16000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"10000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"12000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2018-08-31 00:56:26","endLine":4571,"groupId":"7791","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFullOnTopNFloatColumnAsString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d8/05065b1a763d6958ac6c554b91a76be76340a5.src","preCode":"  public void testFullOnTopNFloatColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityFloat\", \"qf_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<TopNResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"14000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"16000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"10000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"12000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4502,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testFullOnTopNLongColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityLong\", \"ql_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<TopNResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1400\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1600\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1000\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1200\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2018-08-31 00:56:26","endLine":4918,"groupId":"7791","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFullOnTopNLongColumnAsString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d8/05065b1a763d6958ac6c554b91a76be76340a5.src","preCode":"  public void testFullOnTopNLongColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityLong\", \"ql_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<TopNResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1400\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1600\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1000\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1200\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4849,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-01-22 03:11:10","codes":[{"authorDate":"2019-01-22 03:11:10","commitOrder":2,"curCode":"  public void testFullOnTopNFloatColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityFloat\", \"qf_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<TopNResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"14000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"16000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"10000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"12000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2019-01-22 03:11:10","endLine":4566,"groupId":"7791","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFullOnTopNFloatColumnAsString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/da/23ca673a73841a537a373894cd2e3a58281cc4.src","preCode":"  public void testFullOnTopNFloatColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityFloat\", \"qf_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<TopNResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"14000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"16000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"10000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"12000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4497,"status":"M"},{"authorDate":"2019-01-22 03:11:10","commitOrder":2,"curCode":"  public void testFullOnTopNLongColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityLong\", \"ql_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<TopNResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1400\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1600\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1000\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1200\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2019-01-22 03:11:10","endLine":4913,"groupId":"7791","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFullOnTopNLongColumnAsString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/da/23ca673a73841a537a373894cd2e3a58281cc4.src","preCode":"  public void testFullOnTopNLongColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityLong\", \"ql_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<TopNResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1400\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1600\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1000\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1200\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4844,"status":"M"}],"commitId":"8eae26fd4e7572060d112864dd3d5f6a865b9c89","commitMessage":"@@@Introduce SegmentId class (#6370)\n\n* Introduce SegmentId class\n\n* tmp\n\n* Fix SelectQueryRunnerTest\n\n* Fix indentation\n\n* Fixes\n\n* Remove Comparators.inverse() tests\n\n* Refinements\n\n* Fix tests\n\n* Fix more tests\n\n* Remove duplicate DataSegmentTest.  fixes #6064\n\n* SegmentDescriptor doc\n\n* Fix SQLMetadataStorageUpdaterJobHandler\n\n* Fix DataSegment deserialization for ignoring id\n\n* Add comments\n\n* More comments\n\n* Address more comments\n\n* Fix compilation\n\n* Restore segment2 in SystemSchemaTest according to a comment\n\n* Fix style\n\n* fix testServerSegmentsTable\n\n* Fix compilation\n\n* Add comments about why SegmentId and SegmentIdWithShardSpec are separate classes\n\n* Fix SystemSchemaTest\n\n* Fix style\n\n* Compare SegmentDescriptor with SegmentId in Javadoc and comments rather than with DataSegment\n\n* Remove a link.  see https://youtrack.jetbrains.com/issue/IDEA-205164\n\n* Fix compilation\n","date":"2019-01-22 03:11:10","modifiedFileCount":"308","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-07-19 04:16:28","codes":[{"authorDate":"2019-07-19 04:16:28","commitOrder":3,"curCode":"  public void testFullOnTopNFloatColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityFloat\", \"qf_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"14000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"16000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"10000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"12000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2019-07-19 04:16:28","endLine":4593,"groupId":"7791","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFullOnTopNFloatColumnAsString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4b/9fb51afb036dca9148a4c39b6dbecbf810868c.src","preCode":"  public void testFullOnTopNFloatColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityFloat\", \"qf_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<TopNResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"14000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"16000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"10000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"12000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4524,"status":"M"},{"authorDate":"2019-07-19 04:16:28","commitOrder":3,"curCode":"  public void testFullOnTopNLongColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityLong\", \"ql_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1400\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1600\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1000\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1200\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2019-07-19 04:16:28","endLine":4940,"groupId":"7791","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFullOnTopNLongColumnAsString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4b/9fb51afb036dca9148a4c39b6dbecbf810868c.src","preCode":"  public void testFullOnTopNLongColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityLong\", \"ql_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<TopNResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1400\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1600\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1000\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1200\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4871,"status":"M"}],"commitId":"03e55d30ebcac9ec97edb1a638a5a99886c41374","commitMessage":"@@@add CachingClusteredClient benchmark.  refactor some stuff (#8089)\n\n* add CachingClusteredClient benchmark.  refactor some stuff\n\n* revert WeightedServerSelectorStrategy to ConnectionCountServerSelectorStrategy and remove getWeight since felt artificial.  default mergeResults in toolchest implementation for topn.  search.  select\n\n* adjust javadoc\n\n* adjustments\n\n* oops\n\n* use it\n\n* use BinaryOperator.  remove CombiningFunction.  use Comparator instead of Ordering.  other review adjustments\n\n* rename createComparator to createResultComparator.  fix typo.  firstNonNull nullable parameters\n","date":"2019-07-19 04:16:28","modifiedFileCount":"50","status":"M","submitter":"Clint Wylie"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":4,"curCode":"  public void testFullOnTopNFloatColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.DATA_SOURCE)\n        .granularity(QueryRunnerTestHelper.ALL_GRAN)\n        .dimension(new DefaultDimensionSpec(\"qualityFloat\", \"qf_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(QueryRunnerTestHelper.ADD_ROWS_INDEX_CONSTANT)\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"14000.0\")\n                        .put(QueryRunnerTestHelper.INDEX_METRIC, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"16000.0\")\n                        .put(QueryRunnerTestHelper.INDEX_METRIC, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"10000.0\")\n                        .put(QueryRunnerTestHelper.INDEX_METRIC, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"12000.0\")\n                        .put(QueryRunnerTestHelper.INDEX_METRIC, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2019-08-23 18:13:54","endLine":4590,"groupId":"106384","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testFullOnTopNFloatColumnAsString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c6/f894ad5ddd5fccc9520230d8961edd721a636c.src","preCode":"  public void testFullOnTopNFloatColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityFloat\", \"qf_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"14000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"16000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"10000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"qf_alias\", \"12000.0\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4521,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":4,"curCode":"  public void testFullOnTopNLongColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.DATA_SOURCE)\n        .granularity(QueryRunnerTestHelper.ALL_GRAN)\n        .dimension(new DefaultDimensionSpec(\"qualityLong\", \"ql_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(QueryRunnerTestHelper.ADD_ROWS_INDEX_CONSTANT)\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1400\")\n                        .put(QueryRunnerTestHelper.INDEX_METRIC, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1600\")\n                        .put(QueryRunnerTestHelper.INDEX_METRIC, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1000\")\n                        .put(QueryRunnerTestHelper.INDEX_METRIC, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1200\")\n                        .put(QueryRunnerTestHelper.INDEX_METRIC, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2019-08-23 18:13:54","endLine":4937,"groupId":"106384","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testFullOnTopNLongColumnAsString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c6/f894ad5ddd5fccc9520230d8961edd721a636c.src","preCode":"  public void testFullOnTopNLongColumnAsString()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(new DefaultDimensionSpec(\"qualityLong\", \"ql_alias\"))\n        .metric(\"maxIndex\")\n        .threshold(4)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Lists.newArrayList(\n                Iterables.concat(\n                    commonAggregators,\n                    Lists.newArrayList(\n                        new DoubleMaxAggregatorFactory(\"maxIndex\", \"index\"),\n                        new DoubleMinAggregatorFactory(\"minIndex\", \"index\")\n                    )\n                )\n            )\n        )\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1400\")\n                        .put(QueryRunnerTestHelper.indexMetric, 217725.41940800005D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 218005.41940800005D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1870.061029D)\n                        .put(\"minIndex\", 91.270553D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1600\")\n                        .put(QueryRunnerTestHelper.indexMetric, 210865.67977600006D)\n                        .put(\"rows\", 279L)\n                        .put(\"addRowsIndexConstant\", 211145.67977600006D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 1862.737933D)\n                        .put(\"minIndex\", 99.284525D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1000\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12270.807093D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12364.807093D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 277.273533D)\n                        .put(\"minIndex\", 71.315931D)\n                        .build(),\n                    ImmutableMap.<String, Object>builder()\n                        .put(\"ql_alias\", \"1200\")\n                        .put(QueryRunnerTestHelper.indexMetric, 12086.472791D)\n                        .put(\"rows\", 93L)\n                        .put(\"addRowsIndexConstant\", 12180.472791D)\n                        .put(\"uniques\", QueryRunnerTestHelper.UNIQUES_1)\n                        .put(\"maxIndex\", 193.787574D)\n                        .put(\"minIndex\", 84.710523D)\n                        .build()\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4868,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
