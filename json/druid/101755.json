[{"authorTime":"2020-05-15 07:56:40","codes":[{"authorDate":"2020-05-15 07:56:40","commitOrder":1,"curCode":"  public void testInnerJoinTableLookupLookupWithFilterWithOuterLimitWithAllColumns() throws Exception\n  {\n    testQuery(\n        \"SELECT __time, cnt, dim1, dim2, dim3, m1, m2, unique_dim1\\n\"\n        + \"FROM foo\\n\"\n        + \"INNER JOIN lookup.lookyloo l ON foo.dim2 = l.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\\n\"\n        + \"WHERE l.v = 'xa'\\n\"\n        + \"LIMIT 100\\n\",\n        ImmutableList.of(\n            newScanQueryBuilder()\n                .dataSource(\n                    join(\n                        join(\n                            new TableDataSource(CalciteTests.DATASOURCE1),\n                            new LookupDataSource(\"lookyloo\"),\n                            \"j0.\",\n                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"j0.k\")),\n                            JoinType.INNER\n                        ),\n                        new LookupDataSource(\"lookyloo\"),\n                        \"_j0.\",\n                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_j0.k\")),\n                        JoinType.INNER\n                    )\n                )\n                .intervals(querySegmentSpec(Filtration.eternity()))\n                .limit(100)\n                .filters(selector(\"j0.v\", \"xa\", null))\n                .columns(\"__time\", \"cnt\", \"dim1\", \"dim2\", \"dim3\", \"m1\", \"m2\", \"unique_dim1\")\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        ImmutableList.of(\n            new Object[]{946684800000L, 1L, \"\", \"a\", \"[\\\"a\\\",\\\"b\\\"]\", 1.0F, 1.0, \"\\\"AQAAAEAAAA==\\\"\"},\n            new Object[]{978307200000L, 1L, \"1\", \"a\", \"\", 4.0F, 4.0, \"\\\"AQAAAQAAAAFREA==\\\"\"}\n        )\n    );\n  }\n","date":"2020-05-15 07:56:40","endLine":8508,"groupId":"12248","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInnerJoinTableLookupLookupWithFilterWithOuterLimitWithAllColumns","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/81/cf68d68927ee53682c4cfa29b922bf1897d9de.src","preCode":"  public void testInnerJoinTableLookupLookupWithFilterWithOuterLimitWithAllColumns() throws Exception\n  {\n    testQuery(\n        \"SELECT __time, cnt, dim1, dim2, dim3, m1, m2, unique_dim1\\n\"\n        + \"FROM foo\\n\"\n        + \"INNER JOIN lookup.lookyloo l ON foo.dim2 = l.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\\n\"\n        + \"WHERE l.v = 'xa'\\n\"\n        + \"LIMIT 100\\n\",\n        ImmutableList.of(\n            newScanQueryBuilder()\n                .dataSource(\n                    join(\n                        join(\n                            new TableDataSource(CalciteTests.DATASOURCE1),\n                            new LookupDataSource(\"lookyloo\"),\n                            \"j0.\",\n                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"j0.k\")),\n                            JoinType.INNER\n                        ),\n                        new LookupDataSource(\"lookyloo\"),\n                        \"_j0.\",\n                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_j0.k\")),\n                        JoinType.INNER\n                    )\n                )\n                .intervals(querySegmentSpec(Filtration.eternity()))\n                .limit(100)\n                .filters(selector(\"j0.v\", \"xa\", null))\n                .columns(\"__time\", \"cnt\", \"dim1\", \"dim2\", \"dim3\", \"m1\", \"m2\", \"unique_dim1\")\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        ImmutableList.of(\n            new Object[]{946684800000L, 1L, \"\", \"a\", \"[\\\"a\\\",\\\"b\\\"]\", 1.0F, 1.0, \"\\\"AQAAAEAAAA==\\\"\"},\n            new Object[]{978307200000L, 1L, \"1\", \"a\", \"\", 4.0F, 4.0, \"\\\"AQAAAQAAAAFREA==\\\"\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":8470,"status":"B"},{"authorDate":"2020-05-15 07:56:40","commitOrder":1,"curCode":"  public void testManyManyInnerJoinOnManyManyLookup() throws Exception\n  {\n    testQuery(\n        \"SELECT dim1\\n\"\n        + \"FROM foo\\n\"\n        + \"INNER JOIN lookup.lookyloo l ON foo.dim2 = l.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l3 ON foo.dim2 = l3.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l4 ON foo.dim2 = l4.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l5 ON foo.dim2 = l5.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l6 ON foo.dim2 = l6.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l7 ON foo.dim2 = l7.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l8 ON foo.dim2 = l8.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l9 ON foo.dim2 = l9.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l10 ON foo.dim2 = l10.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l11 ON foo.dim2 = l11.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l12 ON foo.dim2 = l12.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l13 ON foo.dim2 = l13.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l14 ON foo.dim2 = l14.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l15 ON foo.dim2 = l15.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l16 ON foo.dim2 = l16.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l17 ON foo.dim2 = l17.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l18 ON foo.dim2 = l18.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l19 ON foo.dim2 = l19.k\\n\"\n        + \"WHERE l.v = 'xa'\\n\",\n        ImmutableList.of(\n            newScanQueryBuilder()\n                .dataSource(\n                    join(\n                        join(\n                            join(\n                                join(\n                                    join(\n                                        join(\n                                            join(\n                                                join(\n                                                    join(\n                                                        join(\n                                                            join(\n                                                                join(\n                                                                    join(\n                                                                        join(\n                                                                            join(\n                                                                                join(\n                                                                                    join(\n                                                                                        join(\n                                                                                            join(\n                                                                                                new TableDataSource(CalciteTests.DATASOURCE1),\n                                                                                                new LookupDataSource(\"lookyloo\"),\n                                                                                                \"j0.\",\n                                                                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"j0.k\")),\n                                                                                                JoinType.INNER\n                                                                                                ),\n                                                                                            new LookupDataSource(\"lookyloo\"),\n                                                                                            \"_j0.\",\n                                                                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_j0.k\")),\n                                                                                            JoinType.INNER\n                                                                                        ),\n                                                                                        new LookupDataSource(\"lookyloo\"),\n                                                                                        \"__j0.\",\n                                                                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"__j0.k\")),\n                                                                                        JoinType.INNER\n                                                                                    ),\n                                                                                    new LookupDataSource(\"lookyloo\"),\n                                                                                    \"___j0.\",\n                                                                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"___j0.k\")),\n                                                                                    JoinType.INNER\n                                                                                ),\n                                                                                new LookupDataSource(\"lookyloo\"),\n                                                                                \"____j0.\",\n                                                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"____j0.k\")),\n                                                                                JoinType.INNER\n                                                                            ),\n                                                                            new LookupDataSource(\"lookyloo\"),\n                                                                            \"_____j0.\",\n                                                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_____j0.k\")),\n                                                                            JoinType.INNER\n                                                                        ),\n                                                                        new LookupDataSource(\"lookyloo\"),\n                                                                        \"______j0.\",\n                                                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"______j0.k\")),\n                                                                        JoinType.INNER\n                                                                    ),\n                                                                    new LookupDataSource(\"lookyloo\"),\n                                                                    \"_______j0.\",\n                                                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_______j0.k\")),\n                                                                    JoinType.INNER\n                                                                ),\n                                                                new LookupDataSource(\"lookyloo\"),\n                                                                \"________j0.\",\n                                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"________j0.k\")),\n                                                                JoinType.INNER\n                                                            ),\n                                                            new LookupDataSource(\"lookyloo\"),\n                                                            \"_________j0.\",\n                                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_________j0.k\")),\n                                                            JoinType.INNER\n                                                        ),\n                                                        new LookupDataSource(\"lookyloo\"),\n                                                        \"__________j0.\",\n                                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"__________j0.k\")),\n                                                        JoinType.INNER\n                                                    ),\n                                                    new LookupDataSource(\"lookyloo\"),\n                                                    \"___________j0.\",\n                                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"___________j0.k\")),\n                                                    JoinType.INNER\n                                                ),\n                                                new LookupDataSource(\"lookyloo\"),\n                                                \"____________j0.\",\n                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"____________j0.k\")),\n                                                JoinType.INNER\n                                            ),\n                                            new LookupDataSource(\"lookyloo\"),\n                                            \"_____________j0.\",\n                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_____________j0.k\")),\n                                            JoinType.INNER\n                                        ),\n                                        new LookupDataSource(\"lookyloo\"),\n                                        \"______________j0.\",\n                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"______________j0.k\")),\n                                        JoinType.INNER\n                                    ),\n                                    new LookupDataSource(\"lookyloo\"),\n                                    \"_______________j0.\",\n                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_______________j0.k\")),\n                                    JoinType.INNER\n                                ),\n                                new LookupDataSource(\"lookyloo\"),\n                                \"________________j0.\",\n                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"________________j0.k\")),\n                                JoinType.INNER\n                            ),\n                            new LookupDataSource(\"lookyloo\"),\n                            \"_________________j0.\",\n                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_________________j0.k\")),\n                            JoinType.INNER\n                        ),\n                        new LookupDataSource(\"lookyloo\"),\n                        \"__________________j0.\",\n                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"__________________j0.k\")),\n                        JoinType.INNER\n                    )\n                )\n                .intervals(querySegmentSpec(Filtration.eternity()))\n                .filters(selector(\"j0.v\", \"xa\", null))\n                .columns(\"dim1\")\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        ImmutableList.of(\n            new Object[]{\"\"},\n            new Object[]{\"1\"}\n        )\n    );\n  }\n","date":"2020-05-15 07:56:40","endLine":8705,"groupId":"7766","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testManyManyInnerJoinOnManyManyLookup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/81/cf68d68927ee53682c4cfa29b922bf1897d9de.src","preCode":"  public void testManyManyInnerJoinOnManyManyLookup() throws Exception\n  {\n    testQuery(\n        \"SELECT dim1\\n\"\n        + \"FROM foo\\n\"\n        + \"INNER JOIN lookup.lookyloo l ON foo.dim2 = l.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l3 ON foo.dim2 = l3.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l4 ON foo.dim2 = l4.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l5 ON foo.dim2 = l5.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l6 ON foo.dim2 = l6.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l7 ON foo.dim2 = l7.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l8 ON foo.dim2 = l8.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l9 ON foo.dim2 = l9.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l10 ON foo.dim2 = l10.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l11 ON foo.dim2 = l11.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l12 ON foo.dim2 = l12.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l13 ON foo.dim2 = l13.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l14 ON foo.dim2 = l14.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l15 ON foo.dim2 = l15.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l16 ON foo.dim2 = l16.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l17 ON foo.dim2 = l17.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l18 ON foo.dim2 = l18.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l19 ON foo.dim2 = l19.k\\n\"\n        + \"WHERE l.v = 'xa'\\n\",\n        ImmutableList.of(\n            newScanQueryBuilder()\n                .dataSource(\n                    join(\n                        join(\n                            join(\n                                join(\n                                    join(\n                                        join(\n                                            join(\n                                                join(\n                                                    join(\n                                                        join(\n                                                            join(\n                                                                join(\n                                                                    join(\n                                                                        join(\n                                                                            join(\n                                                                                join(\n                                                                                    join(\n                                                                                        join(\n                                                                                            join(\n                                                                                                new TableDataSource(CalciteTests.DATASOURCE1),\n                                                                                                new LookupDataSource(\"lookyloo\"),\n                                                                                                \"j0.\",\n                                                                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"j0.k\")),\n                                                                                                JoinType.INNER\n                                                                                                ),\n                                                                                            new LookupDataSource(\"lookyloo\"),\n                                                                                            \"_j0.\",\n                                                                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_j0.k\")),\n                                                                                            JoinType.INNER\n                                                                                        ),\n                                                                                        new LookupDataSource(\"lookyloo\"),\n                                                                                        \"__j0.\",\n                                                                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"__j0.k\")),\n                                                                                        JoinType.INNER\n                                                                                    ),\n                                                                                    new LookupDataSource(\"lookyloo\"),\n                                                                                    \"___j0.\",\n                                                                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"___j0.k\")),\n                                                                                    JoinType.INNER\n                                                                                ),\n                                                                                new LookupDataSource(\"lookyloo\"),\n                                                                                \"____j0.\",\n                                                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"____j0.k\")),\n                                                                                JoinType.INNER\n                                                                            ),\n                                                                            new LookupDataSource(\"lookyloo\"),\n                                                                            \"_____j0.\",\n                                                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_____j0.k\")),\n                                                                            JoinType.INNER\n                                                                        ),\n                                                                        new LookupDataSource(\"lookyloo\"),\n                                                                        \"______j0.\",\n                                                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"______j0.k\")),\n                                                                        JoinType.INNER\n                                                                    ),\n                                                                    new LookupDataSource(\"lookyloo\"),\n                                                                    \"_______j0.\",\n                                                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_______j0.k\")),\n                                                                    JoinType.INNER\n                                                                ),\n                                                                new LookupDataSource(\"lookyloo\"),\n                                                                \"________j0.\",\n                                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"________j0.k\")),\n                                                                JoinType.INNER\n                                                            ),\n                                                            new LookupDataSource(\"lookyloo\"),\n                                                            \"_________j0.\",\n                                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_________j0.k\")),\n                                                            JoinType.INNER\n                                                        ),\n                                                        new LookupDataSource(\"lookyloo\"),\n                                                        \"__________j0.\",\n                                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"__________j0.k\")),\n                                                        JoinType.INNER\n                                                    ),\n                                                    new LookupDataSource(\"lookyloo\"),\n                                                    \"___________j0.\",\n                                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"___________j0.k\")),\n                                                    JoinType.INNER\n                                                ),\n                                                new LookupDataSource(\"lookyloo\"),\n                                                \"____________j0.\",\n                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"____________j0.k\")),\n                                                JoinType.INNER\n                                            ),\n                                            new LookupDataSource(\"lookyloo\"),\n                                            \"_____________j0.\",\n                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_____________j0.k\")),\n                                            JoinType.INNER\n                                        ),\n                                        new LookupDataSource(\"lookyloo\"),\n                                        \"______________j0.\",\n                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"______________j0.k\")),\n                                        JoinType.INNER\n                                    ),\n                                    new LookupDataSource(\"lookyloo\"),\n                                    \"_______________j0.\",\n                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_______________j0.k\")),\n                                    JoinType.INNER\n                                ),\n                                new LookupDataSource(\"lookyloo\"),\n                                \"________________j0.\",\n                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"________________j0.k\")),\n                                JoinType.INNER\n                            ),\n                            new LookupDataSource(\"lookyloo\"),\n                            \"_________________j0.\",\n                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_________________j0.k\")),\n                            JoinType.INNER\n                        ),\n                        new LookupDataSource(\"lookyloo\"),\n                        \"__________________j0.\",\n                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"__________________j0.k\")),\n                        JoinType.INNER\n                    )\n                )\n                .intervals(querySegmentSpec(Filtration.eternity()))\n                .filters(selector(\"j0.v\", \"xa\", null))\n                .columns(\"dim1\")\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        ImmutableList.of(\n            new Object[]{\"\"},\n            new Object[]{\"1\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":8550,"status":"B"}],"commitId":"0a8bf83bc589fb899a7d96e426682708c636f0eb","commitMessage":"@@@Bad plan for table-lookup-lookup join with filter on first lookup and outer limit (#9773)\n\n* Bad plan for table-lookup-lookup join with filter on first lookup and outer limit\n\n* Bad plan for table-lookup-lookup join with filter on first lookup and outer limit\n\n* Bad plan for table-lookup-lookup join with filter on first lookup and outer limit\n\n* Bad plan for table-lookup-lookup join with filter on first lookup and outer limit\n\n* Bad plan for table-lookup-lookup join with filter on first lookup and outer limit\n\n* Bad plan for table-lookup-lookup join with filter on first lookup and outer limit\n\n* address comments\n\n* address comments\n\n* fix checkstyle\n\n* address comments\n\n* address comments","date":"2020-05-15 07:56:40","modifiedFileCount":"3","status":"B","submitter":"Maytas Monsereenusorn"},{"authorTime":"2020-05-29 10:10:26","codes":[{"authorDate":"2020-05-29 10:10:26","commitOrder":2,"curCode":"  public void testInnerJoinTableLookupLookupWithFilterWithOuterLimitWithAllColumns(Map<String, Object> queryContext) throws Exception\n  {\n    testQuery(\n        \"SELECT __time, cnt, dim1, dim2, dim3, m1, m2, unique_dim1\\n\"\n        + \"FROM foo\\n\"\n        + \"INNER JOIN lookup.lookyloo l ON foo.dim2 = l.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\\n\"\n        + \"WHERE l.v = 'xa'\\n\"\n        + \"LIMIT 100\\n\",\n        queryContext,\n        ImmutableList.of(\n            newScanQueryBuilder()\n                .dataSource(\n                    join(\n                        join(\n                            new TableDataSource(CalciteTests.DATASOURCE1),\n                            new LookupDataSource(\"lookyloo\"),\n                            \"j0.\",\n                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"j0.k\")),\n                            JoinType.INNER\n                        ),\n                        new LookupDataSource(\"lookyloo\"),\n                        \"_j0.\",\n                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_j0.k\")),\n                        JoinType.INNER\n                    )\n                )\n                .intervals(querySegmentSpec(Filtration.eternity()))\n                .limit(100)\n                .filters(selector(\"j0.v\", \"xa\", null))\n                .columns(\"__time\", \"cnt\", \"dim1\", \"dim2\", \"dim3\", \"m1\", \"m2\", \"unique_dim1\")\n                .context(queryContext)\n                .build()\n        ),\n        ImmutableList.of(\n            new Object[]{946684800000L, 1L, \"\", \"a\", \"[\\\"a\\\",\\\"b\\\"]\", 1.0F, 1.0, \"\\\"AQAAAEAAAA==\\\"\"},\n            new Object[]{978307200000L, 1L, \"1\", \"a\", \"\", 4.0F, 4.0, \"\\\"AQAAAQAAAAFREA==\\\"\"}\n        )\n    );\n  }\n","date":"2020-05-29 10:10:26","endLine":8537,"groupId":"101755","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInnerJoinTableLookupLookupWithFilterWithOuterLimitWithAllColumns","params":"(Map<String@Object>queryContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/80/330453aa846b49e23c181b6395fcd75bea46f5.src","preCode":"  public void testInnerJoinTableLookupLookupWithFilterWithOuterLimitWithAllColumns() throws Exception\n  {\n    testQuery(\n        \"SELECT __time, cnt, dim1, dim2, dim3, m1, m2, unique_dim1\\n\"\n        + \"FROM foo\\n\"\n        + \"INNER JOIN lookup.lookyloo l ON foo.dim2 = l.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\\n\"\n        + \"WHERE l.v = 'xa'\\n\"\n        + \"LIMIT 100\\n\",\n        ImmutableList.of(\n            newScanQueryBuilder()\n                .dataSource(\n                    join(\n                        join(\n                            new TableDataSource(CalciteTests.DATASOURCE1),\n                            new LookupDataSource(\"lookyloo\"),\n                            \"j0.\",\n                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"j0.k\")),\n                            JoinType.INNER\n                        ),\n                        new LookupDataSource(\"lookyloo\"),\n                        \"_j0.\",\n                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_j0.k\")),\n                        JoinType.INNER\n                    )\n                )\n                .intervals(querySegmentSpec(Filtration.eternity()))\n                .limit(100)\n                .filters(selector(\"j0.v\", \"xa\", null))\n                .columns(\"__time\", \"cnt\", \"dim1\", \"dim2\", \"dim3\", \"m1\", \"m2\", \"unique_dim1\")\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        ImmutableList.of(\n            new Object[]{946684800000L, 1L, \"\", \"a\", \"[\\\"a\\\",\\\"b\\\"]\", 1.0F, 1.0, \"\\\"AQAAAEAAAA==\\\"\"},\n            new Object[]{978307200000L, 1L, \"1\", \"a\", \"\", 4.0F, 4.0, \"\\\"AQAAAQAAAAFREA==\\\"\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":8498,"status":"M"},{"authorDate":"2020-05-29 10:10:26","commitOrder":2,"curCode":"  public void testManyManyInnerJoinOnManyManyLookup(Map<String, Object> queryContext) throws Exception\n  {\n    testQuery(\n        \"SELECT dim1\\n\"\n        + \"FROM foo\\n\"\n        + \"INNER JOIN lookup.lookyloo l ON foo.dim2 = l.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l3 ON foo.dim2 = l3.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l4 ON foo.dim2 = l4.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l5 ON foo.dim2 = l5.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l6 ON foo.dim2 = l6.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l7 ON foo.dim2 = l7.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l8 ON foo.dim2 = l8.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l9 ON foo.dim2 = l9.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l10 ON foo.dim2 = l10.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l11 ON foo.dim2 = l11.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l12 ON foo.dim2 = l12.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l13 ON foo.dim2 = l13.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l14 ON foo.dim2 = l14.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l15 ON foo.dim2 = l15.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l16 ON foo.dim2 = l16.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l17 ON foo.dim2 = l17.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l18 ON foo.dim2 = l18.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l19 ON foo.dim2 = l19.k\\n\"\n        + \"WHERE l.v = 'xa'\\n\",\n        queryContext,\n        ImmutableList.of(\n            newScanQueryBuilder()\n                .dataSource(\n                    join(\n                        join(\n                            join(\n                                join(\n                                    join(\n                                        join(\n                                            join(\n                                                join(\n                                                    join(\n                                                        join(\n                                                            join(\n                                                                join(\n                                                                    join(\n                                                                        join(\n                                                                            join(\n                                                                                join(\n                                                                                    join(\n                                                                                        join(\n                                                                                            join(\n                                                                                                new TableDataSource(CalciteTests.DATASOURCE1),\n                                                                                                new LookupDataSource(\"lookyloo\"),\n                                                                                                \"j0.\",\n                                                                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"j0.k\")),\n                                                                                                JoinType.INNER\n                                                                                                ),\n                                                                                            new LookupDataSource(\"lookyloo\"),\n                                                                                            \"_j0.\",\n                                                                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_j0.k\")),\n                                                                                            JoinType.INNER\n                                                                                        ),\n                                                                                        new LookupDataSource(\"lookyloo\"),\n                                                                                        \"__j0.\",\n                                                                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"__j0.k\")),\n                                                                                        JoinType.INNER\n                                                                                    ),\n                                                                                    new LookupDataSource(\"lookyloo\"),\n                                                                                    \"___j0.\",\n                                                                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"___j0.k\")),\n                                                                                    JoinType.INNER\n                                                                                ),\n                                                                                new LookupDataSource(\"lookyloo\"),\n                                                                                \"____j0.\",\n                                                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"____j0.k\")),\n                                                                                JoinType.INNER\n                                                                            ),\n                                                                            new LookupDataSource(\"lookyloo\"),\n                                                                            \"_____j0.\",\n                                                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_____j0.k\")),\n                                                                            JoinType.INNER\n                                                                        ),\n                                                                        new LookupDataSource(\"lookyloo\"),\n                                                                        \"______j0.\",\n                                                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"______j0.k\")),\n                                                                        JoinType.INNER\n                                                                    ),\n                                                                    new LookupDataSource(\"lookyloo\"),\n                                                                    \"_______j0.\",\n                                                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_______j0.k\")),\n                                                                    JoinType.INNER\n                                                                ),\n                                                                new LookupDataSource(\"lookyloo\"),\n                                                                \"________j0.\",\n                                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"________j0.k\")),\n                                                                JoinType.INNER\n                                                            ),\n                                                            new LookupDataSource(\"lookyloo\"),\n                                                            \"_________j0.\",\n                                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_________j0.k\")),\n                                                            JoinType.INNER\n                                                        ),\n                                                        new LookupDataSource(\"lookyloo\"),\n                                                        \"__________j0.\",\n                                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"__________j0.k\")),\n                                                        JoinType.INNER\n                                                    ),\n                                                    new LookupDataSource(\"lookyloo\"),\n                                                    \"___________j0.\",\n                                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"___________j0.k\")),\n                                                    JoinType.INNER\n                                                ),\n                                                new LookupDataSource(\"lookyloo\"),\n                                                \"____________j0.\",\n                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"____________j0.k\")),\n                                                JoinType.INNER\n                                            ),\n                                            new LookupDataSource(\"lookyloo\"),\n                                            \"_____________j0.\",\n                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_____________j0.k\")),\n                                            JoinType.INNER\n                                        ),\n                                        new LookupDataSource(\"lookyloo\"),\n                                        \"______________j0.\",\n                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"______________j0.k\")),\n                                        JoinType.INNER\n                                    ),\n                                    new LookupDataSource(\"lookyloo\"),\n                                    \"_______________j0.\",\n                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_______________j0.k\")),\n                                    JoinType.INNER\n                                ),\n                                new LookupDataSource(\"lookyloo\"),\n                                \"________________j0.\",\n                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"________________j0.k\")),\n                                JoinType.INNER\n                            ),\n                            new LookupDataSource(\"lookyloo\"),\n                            \"_________________j0.\",\n                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_________________j0.k\")),\n                            JoinType.INNER\n                        ),\n                        new LookupDataSource(\"lookyloo\"),\n                        \"__________________j0.\",\n                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"__________________j0.k\")),\n                        JoinType.INNER\n                    )\n                )\n                .intervals(querySegmentSpec(Filtration.eternity()))\n                .filters(selector(\"j0.v\", \"xa\", null))\n                .columns(\"dim1\")\n                .context(queryContext)\n                .build()\n        ),\n        ImmutableList.of(\n            new Object[]{\"\"},\n            new Object[]{\"1\"}\n        )\n    );\n  }\n","date":"2020-05-29 10:10:26","endLine":8738,"groupId":"101755","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testManyManyInnerJoinOnManyManyLookup","params":"(Map<String@Object>queryContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/80/330453aa846b49e23c181b6395fcd75bea46f5.src","preCode":"  public void testManyManyInnerJoinOnManyManyLookup() throws Exception\n  {\n    testQuery(\n        \"SELECT dim1\\n\"\n        + \"FROM foo\\n\"\n        + \"INNER JOIN lookup.lookyloo l ON foo.dim2 = l.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l3 ON foo.dim2 = l3.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l4 ON foo.dim2 = l4.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l5 ON foo.dim2 = l5.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l6 ON foo.dim2 = l6.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l7 ON foo.dim2 = l7.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l8 ON foo.dim2 = l8.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l9 ON foo.dim2 = l9.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l10 ON foo.dim2 = l10.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l11 ON foo.dim2 = l11.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l12 ON foo.dim2 = l12.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l13 ON foo.dim2 = l13.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l14 ON foo.dim2 = l14.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l15 ON foo.dim2 = l15.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l16 ON foo.dim2 = l16.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l17 ON foo.dim2 = l17.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l18 ON foo.dim2 = l18.k\\n\"\n        + \"INNER JOIN lookup.lookyloo l19 ON foo.dim2 = l19.k\\n\"\n        + \"WHERE l.v = 'xa'\\n\",\n        ImmutableList.of(\n            newScanQueryBuilder()\n                .dataSource(\n                    join(\n                        join(\n                            join(\n                                join(\n                                    join(\n                                        join(\n                                            join(\n                                                join(\n                                                    join(\n                                                        join(\n                                                            join(\n                                                                join(\n                                                                    join(\n                                                                        join(\n                                                                            join(\n                                                                                join(\n                                                                                    join(\n                                                                                        join(\n                                                                                            join(\n                                                                                                new TableDataSource(CalciteTests.DATASOURCE1),\n                                                                                                new LookupDataSource(\"lookyloo\"),\n                                                                                                \"j0.\",\n                                                                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"j0.k\")),\n                                                                                                JoinType.INNER\n                                                                                                ),\n                                                                                            new LookupDataSource(\"lookyloo\"),\n                                                                                            \"_j0.\",\n                                                                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_j0.k\")),\n                                                                                            JoinType.INNER\n                                                                                        ),\n                                                                                        new LookupDataSource(\"lookyloo\"),\n                                                                                        \"__j0.\",\n                                                                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"__j0.k\")),\n                                                                                        JoinType.INNER\n                                                                                    ),\n                                                                                    new LookupDataSource(\"lookyloo\"),\n                                                                                    \"___j0.\",\n                                                                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"___j0.k\")),\n                                                                                    JoinType.INNER\n                                                                                ),\n                                                                                new LookupDataSource(\"lookyloo\"),\n                                                                                \"____j0.\",\n                                                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"____j0.k\")),\n                                                                                JoinType.INNER\n                                                                            ),\n                                                                            new LookupDataSource(\"lookyloo\"),\n                                                                            \"_____j0.\",\n                                                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_____j0.k\")),\n                                                                            JoinType.INNER\n                                                                        ),\n                                                                        new LookupDataSource(\"lookyloo\"),\n                                                                        \"______j0.\",\n                                                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"______j0.k\")),\n                                                                        JoinType.INNER\n                                                                    ),\n                                                                    new LookupDataSource(\"lookyloo\"),\n                                                                    \"_______j0.\",\n                                                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_______j0.k\")),\n                                                                    JoinType.INNER\n                                                                ),\n                                                                new LookupDataSource(\"lookyloo\"),\n                                                                \"________j0.\",\n                                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"________j0.k\")),\n                                                                JoinType.INNER\n                                                            ),\n                                                            new LookupDataSource(\"lookyloo\"),\n                                                            \"_________j0.\",\n                                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_________j0.k\")),\n                                                            JoinType.INNER\n                                                        ),\n                                                        new LookupDataSource(\"lookyloo\"),\n                                                        \"__________j0.\",\n                                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"__________j0.k\")),\n                                                        JoinType.INNER\n                                                    ),\n                                                    new LookupDataSource(\"lookyloo\"),\n                                                    \"___________j0.\",\n                                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"___________j0.k\")),\n                                                    JoinType.INNER\n                                                ),\n                                                new LookupDataSource(\"lookyloo\"),\n                                                \"____________j0.\",\n                                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"____________j0.k\")),\n                                                JoinType.INNER\n                                            ),\n                                            new LookupDataSource(\"lookyloo\"),\n                                            \"_____________j0.\",\n                                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_____________j0.k\")),\n                                            JoinType.INNER\n                                        ),\n                                        new LookupDataSource(\"lookyloo\"),\n                                        \"______________j0.\",\n                                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"______________j0.k\")),\n                                        JoinType.INNER\n                                    ),\n                                    new LookupDataSource(\"lookyloo\"),\n                                    \"_______________j0.\",\n                                    equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_______________j0.k\")),\n                                    JoinType.INNER\n                                ),\n                                new LookupDataSource(\"lookyloo\"),\n                                \"________________j0.\",\n                                equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"________________j0.k\")),\n                                JoinType.INNER\n                            ),\n                            new LookupDataSource(\"lookyloo\"),\n                            \"_________________j0.\",\n                            equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"_________________j0.k\")),\n                            JoinType.INNER\n                        ),\n                        new LookupDataSource(\"lookyloo\"),\n                        \"__________________j0.\",\n                        equalsCondition(DruidExpression.fromColumn(\"dim2\"), DruidExpression.fromColumn(\"__________________j0.k\")),\n                        JoinType.INNER\n                    )\n                )\n                .intervals(querySegmentSpec(Filtration.eternity()))\n                .filters(selector(\"j0.v\", \"xa\", null))\n                .columns(\"dim1\")\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        ImmutableList.of(\n            new Object[]{\"\"},\n            new Object[]{\"1\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":8582,"status":"M"}],"commitId":"cbd587dbd64ea7e5b1a316d19752786f01e50dec","commitMessage":"@@@Add parameterized Calcite tests for join queries (#9923)\n\n* Add parameterized Calcite tests for join queries\n\n* new tests\n\n* review comments","date":"2020-05-29 10:10:26","modifiedFileCount":"2","status":"M","submitter":"Suneet Saldanha"}]
