[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testSelectDistinctWithLimit() throws Exception\n  {\n    \r\n\n    testQuery(\n        \"SELECT DISTINCT dim2 FROM druid.foo LIMIT 10\",\n        ImmutableList.of(\n            new TopNQueryBuilder()\n                .dataSource(CalciteTests.DATASOURCE1)\n                .intervals(QSS(Filtration.eternity()))\n                .granularity(Granularities.ALL)\n                .dimension(new DefaultDimensionSpec(\"dim2\", \"d0\"))\n                .metric(new DimensionTopNMetricSpec(null, StringComparators.LEXICOGRAPHIC))\n                .threshold(10)\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        NullHandling.replaceWithDefault() ?\n        ImmutableList.of(\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        ) :\n        ImmutableList.of(\n            new Object[]{null},\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":3818,"groupId":"4553","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelectDistinctWithLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d7/379ded006b366f1ea8ef06ae925a08ff61040e.src","preCode":"  public void testSelectDistinctWithLimit() throws Exception\n  {\n    \r\n\n    testQuery(\n        \"SELECT DISTINCT dim2 FROM druid.foo LIMIT 10\",\n        ImmutableList.of(\n            new TopNQueryBuilder()\n                .dataSource(CalciteTests.DATASOURCE1)\n                .intervals(QSS(Filtration.eternity()))\n                .granularity(Granularities.ALL)\n                .dimension(new DefaultDimensionSpec(\"dim2\", \"d0\"))\n                .metric(new DimensionTopNMetricSpec(null, StringComparators.LEXICOGRAPHIC))\n                .threshold(10)\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        NullHandling.replaceWithDefault() ?\n        ImmutableList.of(\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        ) :\n        ImmutableList.of(\n            new Object[]{null},\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3788,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testSelectDistinctWithSortAsOuterQuery2() throws Exception\n  {\n    testQuery(\n        \"SELECT * FROM (SELECT DISTINCT dim2 FROM druid.foo ORDER BY dim2 LIMIT 5) LIMIT 10\",\n        ImmutableList.of(\n            new TopNQueryBuilder()\n                .dataSource(CalciteTests.DATASOURCE1)\n                .intervals(QSS(Filtration.eternity()))\n                .granularity(Granularities.ALL)\n                .dimension(new DefaultDimensionSpec(\"dim2\", \"d0\"))\n                .metric(new DimensionTopNMetricSpec(null, StringComparators.LEXICOGRAPHIC))\n                .threshold(5)\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        NullHandling.replaceWithDefault() ?\n        ImmutableList.of(\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        ) :\n        ImmutableList.of(\n            new Object[]{null},\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":3880,"groupId":"4553","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelectDistinctWithSortAsOuterQuery2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d7/379ded006b366f1ea8ef06ae925a08ff61040e.src","preCode":"  public void testSelectDistinctWithSortAsOuterQuery2() throws Exception\n  {\n    testQuery(\n        \"SELECT * FROM (SELECT DISTINCT dim2 FROM druid.foo ORDER BY dim2 LIMIT 5) LIMIT 10\",\n        ImmutableList.of(\n            new TopNQueryBuilder()\n                .dataSource(CalciteTests.DATASOURCE1)\n                .intervals(QSS(Filtration.eternity()))\n                .granularity(Granularities.ALL)\n                .dimension(new DefaultDimensionSpec(\"dim2\", \"d0\"))\n                .metric(new DimensionTopNMetricSpec(null, StringComparators.LEXICOGRAPHIC))\n                .threshold(5)\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        NullHandling.replaceWithDefault() ?\n        ImmutableList.of(\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        ) :\n        ImmutableList.of(\n            new Object[]{null},\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3852,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-02-24 12:10:31","codes":[{"authorDate":"2019-02-24 12:10:31","commitOrder":2,"curCode":"  public void testSelectDistinctWithLimit() throws Exception\n  {\n    \r\n\n    testQuery(\n        \"SELECT DISTINCT dim2 FROM druid.foo LIMIT 10\",\n        ImmutableList.of(\n            new TopNQueryBuilder()\n                .dataSource(CalciteTests.DATASOURCE1)\n                .intervals(querySegmentSpec(Filtration.eternity()))\n                .granularity(Granularities.ALL)\n                .dimension(new DefaultDimensionSpec(\"dim2\", \"d0\"))\n                .metric(new DimensionTopNMetricSpec(null, StringComparators.LEXICOGRAPHIC))\n                .threshold(10)\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        NullHandling.replaceWithDefault() ?\n        ImmutableList.of(\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        ) :\n        ImmutableList.of(\n            new Object[]{null},\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        )\n    );\n  }\n","date":"2019-02-24 12:10:31","endLine":3678,"groupId":"101720","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelectDistinctWithLimit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ad/6030fb8d73521776662c2a97e0f873c4ad7d0f.src","preCode":"  public void testSelectDistinctWithLimit() throws Exception\n  {\n    \r\n\n    testQuery(\n        \"SELECT DISTINCT dim2 FROM druid.foo LIMIT 10\",\n        ImmutableList.of(\n            new TopNQueryBuilder()\n                .dataSource(CalciteTests.DATASOURCE1)\n                .intervals(QSS(Filtration.eternity()))\n                .granularity(Granularities.ALL)\n                .dimension(new DefaultDimensionSpec(\"dim2\", \"d0\"))\n                .metric(new DimensionTopNMetricSpec(null, StringComparators.LEXICOGRAPHIC))\n                .threshold(10)\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        NullHandling.replaceWithDefault() ?\n        ImmutableList.of(\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        ) :\n        ImmutableList.of(\n            new Object[]{null},\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3648,"status":"M"},{"authorDate":"2019-02-24 12:10:31","commitOrder":2,"curCode":"  public void testSelectDistinctWithSortAsOuterQuery2() throws Exception\n  {\n    testQuery(\n        \"SELECT * FROM (SELECT DISTINCT dim2 FROM druid.foo ORDER BY dim2 LIMIT 5) LIMIT 10\",\n        ImmutableList.of(\n            new TopNQueryBuilder()\n                .dataSource(CalciteTests.DATASOURCE1)\n                .intervals(querySegmentSpec(Filtration.eternity()))\n                .granularity(Granularities.ALL)\n                .dimension(new DefaultDimensionSpec(\"dim2\", \"d0\"))\n                .metric(new DimensionTopNMetricSpec(null, StringComparators.LEXICOGRAPHIC))\n                .threshold(5)\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        NullHandling.replaceWithDefault() ?\n        ImmutableList.of(\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        ) :\n        ImmutableList.of(\n            new Object[]{null},\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        )\n    );\n  }\n","date":"2019-02-24 12:10:31","endLine":3740,"groupId":"101720","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelectDistinctWithSortAsOuterQuery2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ad/6030fb8d73521776662c2a97e0f873c4ad7d0f.src","preCode":"  public void testSelectDistinctWithSortAsOuterQuery2() throws Exception\n  {\n    testQuery(\n        \"SELECT * FROM (SELECT DISTINCT dim2 FROM druid.foo ORDER BY dim2 LIMIT 5) LIMIT 10\",\n        ImmutableList.of(\n            new TopNQueryBuilder()\n                .dataSource(CalciteTests.DATASOURCE1)\n                .intervals(QSS(Filtration.eternity()))\n                .granularity(Granularities.ALL)\n                .dimension(new DefaultDimensionSpec(\"dim2\", \"d0\"))\n                .metric(new DimensionTopNMetricSpec(null, StringComparators.LEXICOGRAPHIC))\n                .threshold(5)\n                .context(QUERY_CONTEXT_DEFAULT)\n                .build()\n        ),\n        NullHandling.replaceWithDefault() ?\n        ImmutableList.of(\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        ) :\n        ImmutableList.of(\n            new Object[]{null},\n            new Object[]{\"\"},\n            new Object[]{\"a\"},\n            new Object[]{\"abc\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3712,"status":"M"}],"commitId":"8b803cbc22b15799fd0526de8d6d0eea155ad733","commitMessage":"@@@Added checkstyle for \"Methods starting with Capital Letters\"  (#7118)\n\n* Added checkstyle for \"Methods starting with Capital Letters\" and changed the method names violating this.\n\n* Un-abbreviate the method names in the calcite tests\n\n* Fixed checkstyle errors\n\n* Changed asserts position in the code\n","date":"2019-02-24 12:10:31","modifiedFileCount":"24","status":"M","submitter":"Himanshu Pandey"}]
