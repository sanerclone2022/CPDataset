[{"authorTime":"2021-02-12 19:03:20","codes":[{"authorDate":"2021-02-12 19:03:20","commitOrder":2,"curCode":"  public void testFindPartitionsSpecFromConfigWithNonNullMaxRowsPerSegmentReturnGivenValue()\n  {\n    final DataSourceCompactionConfig config = new DataSourceCompactionConfig(\n        \"datasource\",\n        null,\n        null,\n        null,\n        null,\n        new UserCompactionTaskQueryTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            new DynamicPartitionsSpec(100, 1000L),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        ),\n        null,\n        null\n    );\n    Assert.assertEquals(\n        new DynamicPartitionsSpec(100, 1000L),\n        NewestSegmentFirstIterator.findPartitinosSpecFromConfig(\n            ClientCompactionTaskQueryTuningConfig.from(config.getTuningConfig(), config.getMaxRowsPerSegment())\n        )\n    );\n  }\n","date":"2021-02-12 19:03:20","endLine":220,"groupId":"4174","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindPartitionsSpecFromConfigWithNonNullMaxRowsPerSegmentReturnGivenValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b3/2a7b7eb818b1fc7ded56df412333e4f19eef86.src","preCode":"  public void testFindPartitionsSpecFromConfigWithNonNullMaxRowsPerSegmentReturnGivenValue()\n  {\n    final DataSourceCompactionConfig config = new DataSourceCompactionConfig(\n        \"datasource\",\n        null,\n        null,\n        null,\n        null,\n        new UserCompactionTaskQueryTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            new DynamicPartitionsSpec(100, 1000L),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        ),\n        null,\n        null\n    );\n    Assert.assertEquals(\n        new DynamicPartitionsSpec(100, 1000L),\n        NewestSegmentFirstIterator.findPartitinosSpecFromConfig(\n            ClientCompactionTaskQueryTuningConfig.from(config.getTuningConfig(), config.getMaxRowsPerSegment())\n        )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstIteratorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"MB"},{"authorDate":"2021-02-12 19:03:20","commitOrder":2,"curCode":"  public void testFindPartitionsSpecFromConfigWithRangePartitionsSpec()\n  {\n    final DataSourceCompactionConfig config = new DataSourceCompactionConfig(\n        \"datasource\",\n        null,\n        null,\n        null,\n        null,\n        new UserCompactionTaskQueryTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            new SingleDimensionPartitionsSpec(10000, null, \"dim\", false),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        ),\n        null,\n        null\n    );\n    Assert.assertEquals(\n        new SingleDimensionPartitionsSpec(10000, null, \"dim\", false),\n        NewestSegmentFirstIterator.findPartitinosSpecFromConfig(\n            ClientCompactionTaskQueryTuningConfig.from(config.getTuningConfig(), config.getMaxRowsPerSegment())\n        )\n    );\n  }\n","date":"2021-02-12 19:03:20","endLine":415,"groupId":"4178","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindPartitionsSpecFromConfigWithRangePartitionsSpec","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b3/2a7b7eb818b1fc7ded56df412333e4f19eef86.src","preCode":"  public void testFindPartitionsSpecFromConfigWithRangePartitionsSpec()\n  {\n    final DataSourceCompactionConfig config = new DataSourceCompactionConfig(\n        \"datasource\",\n        null,\n        null,\n        null,\n        null,\n        new UserCompactionTaskQueryTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            new SingleDimensionPartitionsSpec(10000, null, \"dim\", false),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        ),\n        null,\n        null\n    );\n    Assert.assertEquals(\n        new SingleDimensionPartitionsSpec(10000, null, \"dim\", false),\n        NewestSegmentFirstIterator.findPartitinosSpecFromConfig(\n            ClientCompactionTaskQueryTuningConfig.from(config.getTuningConfig(), config.getMaxRowsPerSegment())\n        )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstIteratorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":379,"status":"MB"}],"commitId":"6541178c21839530a42af4b4675a9bc680bffca6","commitMessage":"@@@Support segmentGranularity for auto-compaction (#10843)\n\n* Support segmentGranularity for auto-compaction\n\n* Support segmentGranularity for auto-compaction\n\n* Support segmentGranularity for auto-compaction\n\n* Support segmentGranularity for auto-compaction\n\n* resolve conflict\n\n* Support segmentGranularity for auto-compaction\n\n* Support segmentGranularity for auto-compaction\n\n* fix tests\n\n* fix more tests\n\n* fix checkstyle\n\n* add unit tests\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix checkstyle\n\n* add unit tests\n\n* add integration tests\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix failing tests\n\n* address comments\n\n* address comments\n\n* fix tests\n\n* fix tests\n\n* fix test\n\n* fix test\n\n* fix test\n\n* fix test\n\n* fix test\n\n* fix test\n\n* fix test\n\n* fix test","date":"2021-02-12 19:03:20","modifiedFileCount":"32","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-04-09 15:12:28","codes":[{"authorDate":"2021-04-09 15:12:28","commitOrder":3,"curCode":"  public void testFindPartitionsSpecFromConfigWithNonNullMaxRowsPerSegmentReturnGivenValue()\n  {\n    final DataSourceCompactionConfig config = new DataSourceCompactionConfig(\n        \"datasource\",\n        null,\n        null,\n        null,\n        null,\n        new UserCompactionTaskQueryTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            new DynamicPartitionsSpec(100, 1000L),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        ),\n        null,\n        null,\n        null\n    );\n    Assert.assertEquals(\n        new DynamicPartitionsSpec(100, 1000L),\n        NewestSegmentFirstIterator.findPartitinosSpecFromConfig(\n            ClientCompactionTaskQueryTuningConfig.from(config.getTuningConfig(), config.getMaxRowsPerSegment())\n        )\n    );\n  }\n","date":"2021-04-09 15:12:28","endLine":224,"groupId":"10482","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testFindPartitionsSpecFromConfigWithNonNullMaxRowsPerSegmentReturnGivenValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/0c/f0dededce19f93b3570b90440b2b5bc479c55e.src","preCode":"  public void testFindPartitionsSpecFromConfigWithNonNullMaxRowsPerSegmentReturnGivenValue()\n  {\n    final DataSourceCompactionConfig config = new DataSourceCompactionConfig(\n        \"datasource\",\n        null,\n        null,\n        null,\n        null,\n        new UserCompactionTaskQueryTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            new DynamicPartitionsSpec(100, 1000L),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        ),\n        null,\n        null\n    );\n    Assert.assertEquals(\n        new DynamicPartitionsSpec(100, 1000L),\n        NewestSegmentFirstIterator.findPartitinosSpecFromConfig(\n            ClientCompactionTaskQueryTuningConfig.from(config.getTuningConfig(), config.getMaxRowsPerSegment())\n        )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstIteratorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"},{"authorDate":"2021-04-09 15:12:28","commitOrder":3,"curCode":"  public void testFindPartitionsSpecFromConfigWithRangePartitionsSpec()\n  {\n    final DataSourceCompactionConfig config = new DataSourceCompactionConfig(\n        \"datasource\",\n        null,\n        null,\n        null,\n        null,\n        new UserCompactionTaskQueryTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            new SingleDimensionPartitionsSpec(10000, null, \"dim\", false),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        ),\n        null,\n        null,\n        null\n    );\n    Assert.assertEquals(\n        new SingleDimensionPartitionsSpec(10000, null, \"dim\", false),\n        NewestSegmentFirstIterator.findPartitinosSpecFromConfig(\n            ClientCompactionTaskQueryTuningConfig.from(config.getTuningConfig(), config.getMaxRowsPerSegment())\n        )\n    );\n  }\n","date":"2021-04-09 15:12:28","endLine":424,"groupId":"10482","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testFindPartitionsSpecFromConfigWithRangePartitionsSpec","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/0c/f0dededce19f93b3570b90440b2b5bc479c55e.src","preCode":"  public void testFindPartitionsSpecFromConfigWithRangePartitionsSpec()\n  {\n    final DataSourceCompactionConfig config = new DataSourceCompactionConfig(\n        \"datasource\",\n        null,\n        null,\n        null,\n        null,\n        new UserCompactionTaskQueryTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            new SingleDimensionPartitionsSpec(10000, null, \"dim\", false),\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        ),\n        null,\n        null\n    );\n    Assert.assertEquals(\n        new SingleDimensionPartitionsSpec(10000, null, \"dim\", false),\n        NewestSegmentFirstIterator.findPartitinosSpecFromConfig(\n            ClientCompactionTaskQueryTuningConfig.from(config.getTuningConfig(), config.getMaxRowsPerSegment())\n        )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstIteratorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":387,"status":"M"}],"commitId":"4576152e4a0213d17048a330e7089aa9d89f3972","commitMessage":"@@@Make dropExisting flag for Compaction configurable and add warning documentations (#11070)\n\n* Make dropExisting flag for Compaction configurable\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix test\n\n* add tests\n\n* fix spelling\n\n* fix docs\n\n* add IT\n\n* fix test\n\n* fix doc\n\n* fix doc","date":"2021-04-09 15:12:28","modifiedFileCount":"20","status":"M","submitter":"Maytas Monsereenusorn"}]
