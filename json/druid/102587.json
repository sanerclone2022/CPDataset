[{"authorTime":"2019-07-31 08:24:39","codes":[{"authorDate":"2019-07-11 03:22:24","commitOrder":3,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2019-07-11 03:22:24","endLine":682,"groupId":"10170","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/63/81d0fb1f5c3a8073d2e7d276eac515a2208642.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":609,"status":"NB"},{"authorDate":"2019-07-31 08:24:39","commitOrder":3,"curCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2019-07-31 08:24:39","endLine":80,"groupId":"14068","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/86/f1e3fdcff4559ab846319d0f566e491e111a57.src","preCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"385f492a555add279a8c6dd368954fde18c41dcb","commitMessage":"@@@Use PartitionsSpec for all task types (#8141)\n\n* Use partitionsSpec for all task types\n\n* fix doc\n\n* fix typos and revert to use isPushRequired\n\n* address comments\n\n* move partitionsSpec to core\n\n* remove hadoopPartitionsSpec\n","date":"2019-07-31 08:24:39","modifiedFileCount":"29","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-08-16 08:43:35","codes":[{"authorDate":"2019-07-11 03:22:24","commitOrder":4,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2019-07-11 03:22:24","endLine":682,"groupId":"10170","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/63/81d0fb1f5c3a8073d2e7d276eac515a2208642.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":609,"status":"N"},{"authorDate":"2019-08-16 08:43:35","commitOrder":4,"curCode":"  static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2019-08-16 08:43:35","endLine":97,"groupId":"14068","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4e/c7198a7671e9ed14faacaa028f8542ea14d722.src","preCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"5dac6375f382ba485ec000802ff0e922929df95d","commitMessage":"@@@Add support for parallel native indexing with shuffle for perfect rollup (#8257)\n\n* Add TaskResourceCleaner; fix a couple of concurrency bugs in batch tasks\n\n* kill runner when it's ready\n\n* add comment\n\n* kill run thread\n\n* fix test\n\n* Take closeable out of Appenderator\n\n* add javadoc\n\n* fix test\n\n* fix test\n\n* update javadoc\n\n* add javadoc about killed task\n\n* address comment\n\n* Add support for parallel native indexing with shuffle for perfect rollup.\n\n* Add comment about volatiles\n\n* fix test\n\n* fix test\n\n* handling missing exceptions\n\n* more clear javadoc for stopGracefully\n\n* unused import\n\n* update javadoc\n\n* Add missing statement in javadoc\n\n* address comments; fix doc\n\n* add javadoc for isGuaranteedRollup\n\n* Rename confusing variable name and fix typos\n\n* fix typos; move fetch() to a better home; fix the expiration time\n\n* add support https\n","date":"2019-08-16 08:43:35","modifiedFileCount":"49","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-08-17 06:57:13","codes":[{"authorDate":"2019-07-11 03:22:24","commitOrder":5,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2019-07-11 03:22:24","endLine":682,"groupId":"10170","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/63/81d0fb1f5c3a8073d2e7d276eac515a2208642.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":609,"status":"N"},{"authorDate":"2019-08-17 06:57:13","commitOrder":5,"curCode":"  static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2019-08-17 06:57:13","endLine":99,"groupId":"14068","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8b/9b9db54b5874fc4cee7835fdcb5b9475195e75.src","preCode":"  static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"31af4eb9adf3e158208bf82bde959157d3ca8629","commitMessage":"@@@Rename maxNumSubTasks to maxNumConcurrentSubTasks for native parallel index task (#8324)\n\n","date":"2019-08-17 06:57:13","modifiedFileCount":"9","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-08-17 06:57:13","codes":[{"authorDate":"2019-10-16 14:19:17","commitOrder":6,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2019-10-16 14:19:17","endLine":688,"groupId":"932","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ef/31cb395ccd2bf3c0188c846da8286c54d4baa0.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":609,"status":"M"},{"authorDate":"2019-08-17 06:57:13","commitOrder":6,"curCode":"  static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2019-08-17 06:57:13","endLine":99,"groupId":"14068","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8b/9b9db54b5874fc4cee7835fdcb5b9475195e75.src","preCode":"  static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"N"}],"commitId":"89ce6384f57cb13c776cfcc9fc7b97126b834fac","commitMessage":"@@@More Kinesis resharding adjustments (#8671)\n\n* More Kinesis resharding adjustments\n\n* Fix TC inspection\n\n* Fix comment'\n\n* Adjust comment.  small refactor\n\n* Make repartition transition time configurable\n\n* Add spellcheck exclusion\n\n* Spelling fix\n","date":"2019-10-16 14:19:17","modifiedFileCount":"13","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2019-10-19 04:24:14","codes":[{"authorDate":"2019-10-16 14:19:17","commitOrder":7,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2019-10-16 14:19:17","endLine":688,"groupId":"932","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ef/31cb395ccd2bf3c0188c846da8286c54d4baa0.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":609,"status":"N"},{"authorDate":"2019-10-19 04:24:14","commitOrder":7,"curCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2019-10-19 04:24:14","endLine":103,"groupId":"14068","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/55/2c4048a80d40f6a0ae39e8482d33ba403e6d5d.src","preCode":"  static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"30c15900bec7f4df7a72088ec076223839da258f","commitMessage":"@@@Auto compaction based on parallel indexing (#8570)\n\n* Auto compaction based on parallel indexing\n\n* javadoc and doc\n\n* typo\n\n* update spell\n\n* addressing comments\n\n* address comments\n\n* fix log\n\n* fix build\n\n* fix test\n\n* increase default max input segment bytes per task\n\n* fix test\n","date":"2019-10-19 04:24:14","modifiedFileCount":"28","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-10-19 04:24:14","codes":[{"authorDate":"2020-03-17 12:39:53","commitOrder":8,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2020-03-17 12:39:53","endLine":861,"groupId":"14068","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2e/5d74af439e9ff1dba8d9cf6751b905eef23ef6.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":776,"status":"M"},{"authorDate":"2019-10-19 04:24:14","commitOrder":8,"curCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2019-10-19 04:24:14","endLine":103,"groupId":"14068","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/55/2c4048a80d40f6a0ae39e8482d33ba403e6d5d.src","preCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"N"}],"commitId":"142742f291daaf1ac9afea319cacbbe2a3077952","commitMessage":"@@@add kinesis lag metric (#9509)\n\n* add kinesis lag metric\n\n* fixes\n\n* heh\n\n* do it right this time\n\n* more test\n\n* split out supervisor report lags into lagMillis.  remove latest offsets from kinesis supervisor report since always null.  review stuffs","date":"2020-03-17 12:39:53","modifiedFileCount":"17","status":"M","submitter":"Clint Wylie"},{"authorTime":"2020-10-24 09:34:26","codes":[{"authorDate":"2020-10-24 09:34:26","commitOrder":9,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2020-10-24 09:34:26","endLine":919,"groupId":"14068","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2c/efebd6a22761186d5550af4e0a0f27e5f345b1.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":833,"status":"M"},{"authorDate":"2020-10-24 09:34:26","commitOrder":9,"curCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2020-10-24 09:34:26","endLine":104,"groupId":"14068","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ca/7fdf13ffed58df44adbb90a342006a0dc27f05.src","preCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"f3a2903218573f5d336b082b1c9b8a60a19e8c54","commitMessage":"@@@Configurable Index Type (#10335)\n\n* Introduce a Configurable Index Type\n\n* Change to @UnstableApi\n\n* Add AppendableIndexSpecTest\n\n* Update doc\n\n* Add spelling exception\n\n* Add tests coverage\n\n* Revert some of the changes to reduce diff\n\n* Minor fixes\n\n* Update getMaxBytesInMemoryOrDefault() comment\n\n* Fix typo.  remove redundant interface\n\n* Remove off-heap spec (postponed to a later PR)\n\n* Add javadocs to AppendableIndexSpec\n\n* Describe testCreateTask()\n\n* Add tests for AppendableIndexSpec within TuningConfig\n\n* Modify hashCode() to conform with equals()\n\n* Add comment where building incremental-index\n\n* Add \"EqualsVerifier\" tests\n\n* Revert some of the API back to AppenderatorConfig\n\n* Don't use multi-line comments\n\n* Remove knob documentation (deferred)","date":"2020-10-24 09:34:26","modifiedFileCount":"72","status":"M","submitter":"Liran Funaro"},{"authorTime":"2021-01-06 14:19:09","codes":[{"authorDate":"2020-10-24 09:34:26","commitOrder":10,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2020-10-24 09:34:26","endLine":919,"groupId":"14068","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2c/efebd6a22761186d5550af4e0a0f27e5f345b1.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":833,"status":"N"},{"authorDate":"2021-01-06 14:19:09","commitOrder":10,"curCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2021-01-06 14:19:09","endLine":105,"groupId":"14068","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8e/2cd8aa2653e0ac009052f8f956aea330e8e2ae.src","preCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"68bb038b314c26bcc57aa96e1078c22d2f24fd35","commitMessage":"@@@Multiphase segment merge for IndexMergerV9 (#10689)\n\n* Multiphase merge for IndexMergerV9\n\n* JSON fix\n\n* Cleanup temp files\n\n* Docs\n\n* Address logging and add IT\n\n* Fix spelling and test unloader datasource name","date":"2021-01-06 14:19:09","modifiedFileCount":"40","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2021-01-27 16:34:56","codes":[{"authorDate":"2021-01-27 16:34:56","commitOrder":11,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2021-01-27 16:34:56","endLine":921,"groupId":"14068","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6a/df4c8eea8a0c3ebba3c24132346189e7a60d95.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":834,"status":"M"},{"authorDate":"2021-01-27 16:34:56","commitOrder":11,"curCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2021-01-27 16:34:56","endLine":106,"groupId":"14068","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/06/5504eb7e495dbb4cb521e82797baec0f58d3cb.src","preCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"a46d561bd7e2b045a08a2e475847d4a7505a1c93","commitMessage":"@@@Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead (#10740)\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* fix checkstyle\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* fix test\n\n* fix test\n\n* add log\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* address comments\n\n* fix checkstyle\n\n* fix checkstyle\n\n* add config to skip overhead memory calculation\n\n* add test for the skipBytesInMemoryOverheadCheck config\n\n* add docs\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix spelling\n\n* address comments\n\n* fix travis\n\n* address comments","date":"2021-01-27 16:34:56","modifiedFileCount":"50","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-04-09 12:03:00","codes":[{"authorDate":"2021-01-27 16:34:56","commitOrder":12,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2021-01-27 16:34:56","endLine":921,"groupId":"14068","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6a/df4c8eea8a0c3ebba3c24132346189e7a60d95.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":834,"status":"N"},{"authorDate":"2021-04-09 12:03:00","commitOrder":12,"curCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2021-04-09 12:03:00","endLine":107,"groupId":"14068","id":20,"instanceNumber":2,"isCurCommit":1,"methodName":"defaultConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f4/74c1efca9b0b8644fb88a3945d2538eb190647.src","preCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"8264203cee688607091232897749e959e7706010","commitMessage":"@@@Allow client to configure batch ingestion task to wait to complete until segments are confirmed to be available by other (#10676)\n\n* Add ability to wait for segment availability for batch jobs\n\n* IT updates\n\n* fix queries in legacy hadoop IT\n\n* Fix broken indexing integration tests\n\n* address an lgtm flag\n\n* spell checker still flagging for hadoop doc. adding under that file header too\n\n* fix compaction IT\n\n* Updates to wait for availability method\n\n* improve unit testing for patch\n\n* fix bad indentation\n\n* refactor waitForSegmentAvailability\n\n* Fixes based off of review comments\n\n* cleanup to get compile after merging with master\n\n* fix failing test after previous logic update\n\n* add back code that must have gotten deleted during conflict resolution\n\n* update some logging code\n\n* fixes to get compilation working after merge with master\n\n* reset interrupt flag in catch block after code review pointed it out\n\n* small changes following self-review\n\n* fixup some issues brought on by merge with master\n\n* small changes after review\n\n* cleanup a little bit after merge with master\n\n* Fix potential resource leak in AbstractBatchIndexTask\n\n* syntax fix\n\n* Add a Compcation TuningConfig type\n\n* add docs stipulating the lack of support by Compaction tasks for the new config\n\n* Fixup compilation errors after merge with master\n\n* Remove erreneous newline","date":"2021-04-09 12:03:00","modifiedFileCount":"106","status":"M","submitter":"Lucas Capistrant"},{"authorTime":"2021-04-09 12:03:00","codes":[{"authorDate":"2021-06-24 07:36:46","commitOrder":13,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2021-06-24 07:36:46","endLine":945,"groupId":"102587","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/91/dd10af41fe1e780a0aa0952e1b3685daa10da4.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":859,"status":"M"},{"authorDate":"2021-04-09 12:03:00","commitOrder":13,"curCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2021-04-09 12:03:00","endLine":107,"groupId":"102587","id":22,"instanceNumber":2,"isCurCommit":1,"methodName":"defaultConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f4/74c1efca9b0b8644fb88a3945d2538eb190647.src","preCode":"  public static ParallelIndexTuningConfig defaultConfig()\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"N"}],"commitId":"de8daf8139dcb8a497f1191587dcd5e7ea992092","commitMessage":"@@@Delete buildV9Directly in Kafka and Kinesis Indexing Service (#11351)\n\n* delete_buildV9Directly_in_kafka_and_kinesis_indexing_service\n\n* delete\n\n* delete them from server\n\n* delete buildV9Directly from hadoop indexing\n\n* bug fixed\n\nCo-authored-by: yuanyi <yuanyi@freewheel.tv>","date":"2021-06-24 07:36:46","modifiedFileCount":"38","status":"M","submitter":"Yi Yuan"}]
