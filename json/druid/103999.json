[{"authorTime":"2019-04-27 08:07:48","codes":[{"authorDate":"2019-04-27 08:07:48","commitOrder":1,"curCode":"  public void testComputeResult()\n  {\n    BaseAverager<Number, Long> avg = new LongMaxAverager(3, \"test\", \"field\", 1);\n\n    assertEquals(Long.MIN_VALUE, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", -1000000L), new HashMap<>());\n    assertEquals(-1000000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 1L), new HashMap<>());\n    assertEquals(1, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", new Integer(1)), new HashMap<>());\n    assertEquals(1, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 5L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 3L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 2L), new HashMap<>());\n    assertEquals(5, (long) avg.computeResult());\n\n    avg.skip();\n    assertEquals(3, (long) avg.computeResult());\n  }\n","date":"2019-04-27 08:07:48","endLine":55,"groupId":"20524","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testComputeResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c7/99a1ad60b7780cbe9ef395d043d642d99638e8.src","preCode":"  public void testComputeResult()\n  {\n    BaseAverager<Number, Long> avg = new LongMaxAverager(3, \"test\", \"field\", 1);\n\n    assertEquals(Long.MIN_VALUE, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", -1000000L), new HashMap<>());\n    assertEquals(-1000000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 1L), new HashMap<>());\n    assertEquals(1, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", new Integer(1)), new HashMap<>());\n    assertEquals(1, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 5L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 3L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 2L), new HashMap<>());\n    assertEquals(5, (long) avg.computeResult());\n\n    avg.skip();\n    assertEquals(3, (long) avg.computeResult());\n  }\n","realPath":"extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/LongMaxAveragerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"},{"authorDate":"2019-04-27 08:07:48","commitOrder":1,"curCode":"  public void testComputeResult()\n  {\n    BaseAverager<Number, Long> avg = new LongMinAverager(3, \"test\", \"field\", 1);\n\n    assertEquals(Long.MAX_VALUE, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", -10000L), new HashMap<>());\n    assertEquals(-10000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 1L), new HashMap<>());\n    assertEquals(-10000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", new Integer(1000)), new HashMap<>());\n    assertEquals(-10000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 5L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 2L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 3L), new HashMap<>());\n    assertEquals(2, (long) avg.computeResult());\n\n    avg.skip();\n    avg.skip();\n    assertEquals(3, (long) avg.computeResult());\n  }\n","date":"2019-04-27 08:07:48","endLine":56,"groupId":"20524","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testComputeResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4c/bcdaed4c0dc7c3f0c5939f6260b77328e31a39.src","preCode":"  public void testComputeResult()\n  {\n    BaseAverager<Number, Long> avg = new LongMinAverager(3, \"test\", \"field\", 1);\n\n    assertEquals(Long.MAX_VALUE, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", -10000L), new HashMap<>());\n    assertEquals(-10000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 1L), new HashMap<>());\n    assertEquals(-10000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", new Integer(1000)), new HashMap<>());\n    assertEquals(-10000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 5L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 2L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 3L), new HashMap<>());\n    assertEquals(2, (long) avg.computeResult());\n\n    avg.skip();\n    avg.skip();\n    assertEquals(3, (long) avg.computeResult());\n  }\n","realPath":"extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/LongMinAveragerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"}],"commitId":"f02251ab2d6e1b4d13bf78415c9c7528a7a9c063","commitMessage":"@@@Contributing Moving-Average Query to open source. (#6430)\n\n* Contributing Moving-Average Query to open source.\n\n* Fix failing code inspections.\n\n* See if explicit types will invoke the correct comparison function.\n\n* Explicitly remove support for druid.generic.useDefaultValueForNull configuration parameter.\n\n* Update styling and headers for complience.\n\n* Refresh code with latest master changes:\n\n* Remove NullDimensionSelector.\n* Apply changes of RequestLogger.\n* Apply changes of TimelineServerView.\n\n* Small checkstyle fix.\n\n* Checkstyle fixes.\n\n* Fixing rat errors; Teamcity errors.\n\n* Removing support theta sketches. Will be added back in this pr or a following once DI conflicts with datasketches are resolved.\n\n* Implements some of the review fixes.\n\n* Contributing Moving-Average Query to open source.\n\n* Fix failing code inspections.\n\n* See if explicit types will invoke the correct comparison function.\n\n* Explicitly remove support for druid.generic.useDefaultValueForNull configuration parameter.\n\n* Update styling and headers for complience.\n\n* Refresh code with latest master changes:\n\n* Remove NullDimensionSelector.\n* Apply changes of RequestLogger.\n* Apply changes of TimelineServerView.\n\n* Small checkstyle fix.\n\n* Checkstyle fixes.\n\n* Fixing rat errors; Teamcity errors.\n\n* Removing support theta sketches. Will be added back in this pr or a following once DI conflicts with datasketches are resolved.\n\n* Implements some of the review fixes.\n\n* More fixes for review.\n\n* More fixes from review.\n\n* MapBasedRow is Unmodifiable. Create new rows instead of modifying existing ones.\n\n* Remove more changes related to datasketches support.\n\n* Refactor BaseAverager startFrom field and add a comment.\n\n* fakeEvents field: Refactor initialization and add comment.\n\n* Rename parameters (tiny change).\n\n* Fix variable name typo in test (JAN_4).\n\n* Fix styling of non camelCase fields.\n\n* Fix Preconditions.checkArgument for cycleSize.\n\n* Add more documentation to RowBucketIterable and other classes.\n\n* key/value comment on in MovingAverageIterable.\n\n* Fix anonymous makeColumnValueSelector returning null.\n\n* Replace IdentityYieldingAccumolator with Yielders.each().\n\n* * internalNext() should return null instead of throwing exception.\n* Remove unused variables/prarameters.\n\n* Harden MovingAverageIterableTest (Switch anyOf to exact match).\n\n* Change internalNext() from recursion to iteration; Simplify next() and hasNext().\n\n* Remove unused imports.\n\n* Address review comments.\n\n* Rename fakeEvents to emptyEvents.\n\n* Remove redundant parameter key from computeMovingAverage.\n\n* Check yielder as well in RowBucketIterable#hasNext()\n\n* Fix javadoc.\n","date":"2019-04-27 08:07:48","modifiedFileCount":"0","status":"B","submitter":"Eyal Yurman"},{"authorTime":"2019-07-07 00:33:12","codes":[{"authorDate":"2019-07-07 00:33:12","commitOrder":2,"curCode":"  public void testComputeResult()\n  {\n    BaseAverager<Number, Long> avg = new LongMaxAverager(3, \"test\", \"field\", 1);\n\n    Assert.assertEquals(Long.MIN_VALUE, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", -1000000L), new HashMap<>());\n    Assert.assertEquals(-1000000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 1L), new HashMap<>());\n    Assert.assertEquals(1, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 1), new HashMap<>());\n    Assert.assertEquals(1, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 5L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 3L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 2L), new HashMap<>());\n    Assert.assertEquals(5, (long) avg.computeResult());\n\n    avg.skip();\n    Assert.assertEquals(3, (long) avg.computeResult());\n  }\n","date":"2019-07-07 00:33:12","endLine":53,"groupId":"103999","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testComputeResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/82/5d1c1cac2ba2ff2495455fbe4451973f540636.src","preCode":"  public void testComputeResult()\n  {\n    BaseAverager<Number, Long> avg = new LongMaxAverager(3, \"test\", \"field\", 1);\n\n    assertEquals(Long.MIN_VALUE, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", -1000000L), new HashMap<>());\n    assertEquals(-1000000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 1L), new HashMap<>());\n    assertEquals(1, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", new Integer(1)), new HashMap<>());\n    assertEquals(1, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 5L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 3L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 2L), new HashMap<>());\n    assertEquals(5, (long) avg.computeResult());\n\n    avg.skip();\n    assertEquals(3, (long) avg.computeResult());\n  }\n","realPath":"extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/LongMaxAveragerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"M"},{"authorDate":"2019-07-07 00:33:12","commitOrder":2,"curCode":"  public void testComputeResult()\n  {\n    BaseAverager<Number, Long> avg = new LongMinAverager(3, \"test\", \"field\", 1);\n\n    Assert.assertEquals(Long.MAX_VALUE, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", -10000L), new HashMap<>());\n    Assert.assertEquals(-10000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 1L), new HashMap<>());\n    Assert.assertEquals(-10000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 1000), new HashMap<>());\n    Assert.assertEquals(-10000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 5L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 2L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 3L), new HashMap<>());\n    Assert.assertEquals(2, (long) avg.computeResult());\n\n    avg.skip();\n    avg.skip();\n    Assert.assertEquals(3, (long) avg.computeResult());\n  }\n","date":"2019-07-07 00:33:12","endLine":54,"groupId":"103999","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testComputeResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cd/f80d76ea859d1aedf07a18bff20e77670c4b9b.src","preCode":"  public void testComputeResult()\n  {\n    BaseAverager<Number, Long> avg = new LongMinAverager(3, \"test\", \"field\", 1);\n\n    assertEquals(Long.MAX_VALUE, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", -10000L), new HashMap<>());\n    assertEquals(-10000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 1L), new HashMap<>());\n    assertEquals(-10000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", new Integer(1000)), new HashMap<>());\n    assertEquals(-10000, (long) avg.computeResult());\n\n    avg.addElement(Collections.singletonMap(\"field\", 5L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 2L), new HashMap<>());\n    avg.addElement(Collections.singletonMap(\"field\", 3L), new HashMap<>());\n    assertEquals(2, (long) avg.computeResult());\n\n    avg.skip();\n    avg.skip();\n    assertEquals(3, (long) avg.computeResult());\n  }\n","realPath":"extensions-contrib/moving-average-query/src/test/java/org/apache/druid/query/movingaverage/averagers/LongMinAveragerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"M"}],"commitId":"1166bbcb75d432817715fdd429737f86730b5591","commitMessage":"@@@Remove static imports from tests (#8036)\n\nMake static imports forbidden in tests and remove all occurrences to be\nconsistent with the non-test code.\n\nAlso.  various changes to files affected by above:\n- Reformat to adhere to druid style guide\n- Fix various IntelliJ warnings\n- Fix various SonarLint warnings (e.g..  the expected/actual args to\n  Assert.assertEquals() were flipped)","date":"2019-07-07 00:33:12","modifiedFileCount":"98","status":"M","submitter":"Chi Cao Minh"}]
