[{"authorTime":"2019-04-11 09:16:38","codes":[{"authorDate":"2019-04-11 09:16:38","commitOrder":1,"curCode":"  public void testSerdeWithModifiedTuningConfigRemovedField() throws IOException\n  {\n    KinesisIndexTaskTuningConfig base = new KinesisIndexTaskTuningConfig(\n        1,\n        3L,\n        2,\n        100L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        true,\n        false,\n        1000,\n        1000,\n        500,\n        null,\n        42,\n        null,\n        false,\n        500,\n        500,\n        6000,\n        new Period(\"P3D\")\n    );\n\n    String serialized = mapper.writeValueAsString(new TestModifiedKinesisIndexTaskTuningConfig(base, \"loool\"));\n    KinesisIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, KinesisIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n    Assert.assertEquals(base.getRecordBufferFullWait(), deserialized.getRecordBufferFullWait());\n    Assert.assertEquals(base.getRecordBufferOfferTimeout(), deserialized.getRecordBufferOfferTimeout());\n    Assert.assertEquals(base.getRecordBufferSize(), deserialized.getRecordBufferSize());\n    Assert.assertEquals(base.getMaxRecordsPerPoll(), deserialized.getMaxRecordsPerPoll());\n  }\n","date":"2019-04-11 09:16:38","endLine":248,"groupId":"12513","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerdeWithModifiedTuningConfigRemovedField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/57/ffebcb676e424c0abba2a3fa9eb454a7b875e0.src","preCode":"  public void testSerdeWithModifiedTuningConfigRemovedField() throws IOException\n  {\n    KinesisIndexTaskTuningConfig base = new KinesisIndexTaskTuningConfig(\n        1,\n        3L,\n        2,\n        100L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        true,\n        false,\n        1000,\n        1000,\n        500,\n        null,\n        42,\n        null,\n        false,\n        500,\n        500,\n        6000,\n        new Period(\"P3D\")\n    );\n\n    String serialized = mapper.writeValueAsString(new TestModifiedKinesisIndexTaskTuningConfig(base, \"loool\"));\n    KinesisIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, KinesisIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n    Assert.assertEquals(base.getRecordBufferFullWait(), deserialized.getRecordBufferFullWait());\n    Assert.assertEquals(base.getRecordBufferOfferTimeout(), deserialized.getRecordBufferOfferTimeout());\n    Assert.assertEquals(base.getRecordBufferSize(), deserialized.getRecordBufferSize());\n    Assert.assertEquals(base.getMaxRecordsPerPoll(), deserialized.getMaxRecordsPerPoll());\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"B"},{"authorDate":"2019-04-11 09:16:38","commitOrder":1,"curCode":"  public void testSerdeWithModifiedTuningConfigAddedField() throws IOException\n  {\n    KafkaIndexTaskTuningConfig base = new KafkaIndexTaskTuningConfig(\n        1,\n        null,\n        2,\n        10L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        null,\n        null,\n        null,\n        true,\n        42,\n        42\n    );\n\n    String serialized = mapper.writeValueAsString(base);\n    TestModifiedKafkaIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, TestModifiedKafkaIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(null, deserialized.getExtra());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n  }\n","date":"2019-04-11 09:16:38","endLine":195,"groupId":"12513","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerdeWithModifiedTuningConfigAddedField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/63/b0e985e0b76ee0245b572b9ab0e74a6860871b.src","preCode":"  public void testSerdeWithModifiedTuningConfigAddedField() throws IOException\n  {\n    KafkaIndexTaskTuningConfig base = new KafkaIndexTaskTuningConfig(\n        1,\n        null,\n        2,\n        10L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        null,\n        null,\n        null,\n        true,\n        42,\n        42\n    );\n\n    String serialized = mapper.writeValueAsString(base);\n    TestModifiedKafkaIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, TestModifiedKafkaIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(null, deserialized.getExtra());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"B"}],"commitId":"2771ed50b0f07b0ee519da72ed9f4877466f8be4","commitMessage":"@@@Support Kafka supervisor adopting running tasks between versions  (#7212)\n\n* Recompute hash in isTaskCurrent() and added tests\n\n* Fixed checkstyle stuff\n\n* Fixed failing tests\n\n* Make TestableKafkaSupervisorWithCustomIsTaskCurrent static\n\n* Add doc\n\n* baseSequenceName change\n\n* Added comment\n\n* WIP\n\n* Fixed imports\n\n* Undid lambda change for diff sake\n\n* Cleanup\n\n* Added comment\n\n* Reinsert Kafka tests\n\n* Readded kinesis test\n\n* Readd bad partition assignment in kinesis supervisor test\n\n* Nit\n\n* Misnamed var\n","date":"2019-04-11 09:16:38","modifiedFileCount":"6","status":"B","submitter":"Justin Borromeo"},{"authorTime":"2019-07-11 03:22:24","codes":[{"authorDate":"2019-07-11 03:22:24","commitOrder":2,"curCode":"  public void testSerdeWithModifiedTuningConfigRemovedField() throws IOException\n  {\n    KinesisIndexTaskTuningConfig base = new KinesisIndexTaskTuningConfig(\n        1,\n        3L,\n        2,\n        100L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        true,\n        false,\n        1000,\n        1000,\n        500,\n        null,\n        42,\n        null,\n        false,\n        500,\n        500,\n        6000,\n        new Period(\"P3D\")\n    );\n\n    String serialized = mapper.writeValueAsString(new TestModifiedKinesisIndexTaskTuningConfig(base, \"loool\"));\n    KinesisIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, KinesisIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n    Assert.assertEquals(base.getRecordBufferFullWait(), deserialized.getRecordBufferFullWait());\n    Assert.assertEquals(base.getRecordBufferOfferTimeout(), deserialized.getRecordBufferOfferTimeout());\n    Assert.assertEquals(base.getRecordBufferSize(), deserialized.getRecordBufferSize());\n    Assert.assertEquals(base.getMaxRecordsPerPoll(), deserialized.getMaxRecordsPerPoll());\n  }\n","date":"2019-07-11 03:22:24","endLine":250,"groupId":"12513","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerdeWithModifiedTuningConfigRemovedField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/91/8cc2dd3b157df651aad89e2788b05767f8fc3f.src","preCode":"  public void testSerdeWithModifiedTuningConfigRemovedField() throws IOException\n  {\n    KinesisIndexTaskTuningConfig base = new KinesisIndexTaskTuningConfig(\n        1,\n        3L,\n        2,\n        100L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        true,\n        false,\n        1000,\n        1000,\n        500,\n        null,\n        42,\n        null,\n        false,\n        500,\n        500,\n        6000,\n        new Period(\"P3D\")\n    );\n\n    String serialized = mapper.writeValueAsString(new TestModifiedKinesisIndexTaskTuningConfig(base, \"loool\"));\n    KinesisIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, KinesisIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n    Assert.assertEquals(base.getRecordBufferFullWait(), deserialized.getRecordBufferFullWait());\n    Assert.assertEquals(base.getRecordBufferOfferTimeout(), deserialized.getRecordBufferOfferTimeout());\n    Assert.assertEquals(base.getRecordBufferSize(), deserialized.getRecordBufferSize());\n    Assert.assertEquals(base.getMaxRecordsPerPoll(), deserialized.getMaxRecordsPerPoll());\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"M"},{"authorDate":"2019-07-11 03:22:24","commitOrder":2,"curCode":"  public void testSerdeWithModifiedTuningConfigAddedField() throws IOException\n  {\n    KafkaIndexTaskTuningConfig base = new KafkaIndexTaskTuningConfig(\n        1,\n        null,\n        2,\n        10L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        null,\n        null,\n        null,\n        true,\n        42,\n        42\n    );\n\n    String serialized = mapper.writeValueAsString(base);\n    TestModifiedKafkaIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, TestModifiedKafkaIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(null, deserialized.getExtra());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n  }\n","date":"2019-07-11 03:22:24","endLine":203,"groupId":"12513","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerdeWithModifiedTuningConfigAddedField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/57/b4f372cf83889f346db5c89acd81d2ecc33b68.src","preCode":"  public void testSerdeWithModifiedTuningConfigAddedField() throws IOException\n  {\n    KafkaIndexTaskTuningConfig base = new KafkaIndexTaskTuningConfig(\n        1,\n        null,\n        2,\n        10L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        null,\n        null,\n        null,\n        true,\n        42,\n        42\n    );\n\n    String serialized = mapper.writeValueAsString(base);\n    TestModifiedKafkaIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, TestModifiedKafkaIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(null, deserialized.getExtra());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"}],"commitId":"14aec7fceca90dfaf9b2ce4dae68186d04ffcc47","commitMessage":"@@@add config to optionally disable all compression  in intermediate segment persists while ingestion (#7919)\n\n* disable all compression in intermediate segment persists while ingestion\n\n* more changes and build fix\n\n* by default retain existing indexingSpec for intermediate persisted segments\n\n* document indexSpecForIntermediatePersists index tuning config\n\n* fix build issues\n\n* update serde tests\n","date":"2019-07-11 03:22:24","modifiedFileCount":"56","status":"M","submitter":"Himanshu"},{"authorTime":"2020-10-24 09:34:26","codes":[{"authorDate":"2020-10-24 09:34:26","commitOrder":3,"curCode":"  public void testSerdeWithModifiedTuningConfigRemovedField() throws IOException\n  {\n    KinesisIndexTaskTuningConfig base = new KinesisIndexTaskTuningConfig(\n        null,\n        1,\n        3L,\n        2,\n        100L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        true,\n        false,\n        1000,\n        1000,\n        500,\n        null,\n        42,\n        null,\n        false,\n        500,\n        500,\n        6000,\n        new Period(\"P3D\")\n    );\n\n    String serialized = mapper.writeValueAsString(new TestModifiedKinesisIndexTaskTuningConfig(base, \"loool\"));\n    KinesisIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, KinesisIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(base.getAppendableIndexSpec(), deserialized.getAppendableIndexSpec());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n    Assert.assertEquals(base.getRecordBufferFullWait(), deserialized.getRecordBufferFullWait());\n    Assert.assertEquals(base.getRecordBufferOfferTimeout(), deserialized.getRecordBufferOfferTimeout());\n    Assert.assertEquals(base.getRecordBufferSize(), deserialized.getRecordBufferSize());\n    Assert.assertEquals(base.getMaxRecordsPerPoll(), deserialized.getMaxRecordsPerPoll());\n  }\n","date":"2020-10-24 09:34:26","endLine":259,"groupId":"12513","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerdeWithModifiedTuningConfigRemovedField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/69/a70a494f167e6c1079fb1dd2511e34f99f90c1.src","preCode":"  public void testSerdeWithModifiedTuningConfigRemovedField() throws IOException\n  {\n    KinesisIndexTaskTuningConfig base = new KinesisIndexTaskTuningConfig(\n        1,\n        3L,\n        2,\n        100L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        true,\n        false,\n        1000,\n        1000,\n        500,\n        null,\n        42,\n        null,\n        false,\n        500,\n        500,\n        6000,\n        new Period(\"P3D\")\n    );\n\n    String serialized = mapper.writeValueAsString(new TestModifiedKinesisIndexTaskTuningConfig(base, \"loool\"));\n    KinesisIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, KinesisIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n    Assert.assertEquals(base.getRecordBufferFullWait(), deserialized.getRecordBufferFullWait());\n    Assert.assertEquals(base.getRecordBufferOfferTimeout(), deserialized.getRecordBufferOfferTimeout());\n    Assert.assertEquals(base.getRecordBufferSize(), deserialized.getRecordBufferSize());\n    Assert.assertEquals(base.getMaxRecordsPerPoll(), deserialized.getMaxRecordsPerPoll());\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"},{"authorDate":"2020-10-24 09:34:26","commitOrder":3,"curCode":"  public void testSerdeWithModifiedTuningConfigAddedField() throws IOException\n  {\n    KafkaIndexTaskTuningConfig base = new KafkaIndexTaskTuningConfig(\n        null,\n        1,\n        null,\n        2,\n        10L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        null,\n        null,\n        null,\n        true,\n        42,\n        42\n    );\n\n    String serialized = mapper.writeValueAsString(base);\n    TestModifiedKafkaIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, TestModifiedKafkaIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(null, deserialized.getExtra());\n    Assert.assertEquals(base.getAppendableIndexSpec(), deserialized.getAppendableIndexSpec());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n  }\n","date":"2020-10-24 09:34:26","endLine":212,"groupId":"12513","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerdeWithModifiedTuningConfigAddedField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/88/88a69a0d89d8e4b1376377ac46320ea068c94f.src","preCode":"  public void testSerdeWithModifiedTuningConfigAddedField() throws IOException\n  {\n    KafkaIndexTaskTuningConfig base = new KafkaIndexTaskTuningConfig(\n        1,\n        null,\n        2,\n        10L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        null,\n        null,\n        null,\n        true,\n        42,\n        42\n    );\n\n    String serialized = mapper.writeValueAsString(base);\n    TestModifiedKafkaIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, TestModifiedKafkaIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(null, deserialized.getExtra());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"f3a2903218573f5d336b082b1c9b8a60a19e8c54","commitMessage":"@@@Configurable Index Type (#10335)\n\n* Introduce a Configurable Index Type\n\n* Change to @UnstableApi\n\n* Add AppendableIndexSpecTest\n\n* Update doc\n\n* Add spelling exception\n\n* Add tests coverage\n\n* Revert some of the changes to reduce diff\n\n* Minor fixes\n\n* Update getMaxBytesInMemoryOrDefault() comment\n\n* Fix typo.  remove redundant interface\n\n* Remove off-heap spec (postponed to a later PR)\n\n* Add javadocs to AppendableIndexSpec\n\n* Describe testCreateTask()\n\n* Add tests for AppendableIndexSpec within TuningConfig\n\n* Modify hashCode() to conform with equals()\n\n* Add comment where building incremental-index\n\n* Add \"EqualsVerifier\" tests\n\n* Revert some of the API back to AppenderatorConfig\n\n* Don't use multi-line comments\n\n* Remove knob documentation (deferred)","date":"2020-10-24 09:34:26","modifiedFileCount":"72","status":"M","submitter":"Liran Funaro"},{"authorTime":"2021-01-27 16:34:56","codes":[{"authorDate":"2021-01-27 16:34:56","commitOrder":4,"curCode":"  public void testSerdeWithModifiedTuningConfigRemovedField() throws IOException\n  {\n    KinesisIndexTaskTuningConfig base = new KinesisIndexTaskTuningConfig(\n        null,\n        1,\n        3L,\n        null,\n        2,\n        100L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        true,\n        false,\n        1000,\n        1000,\n        500,\n        null,\n        42,\n        null,\n        false,\n        500,\n        500,\n        6000,\n        new Period(\"P3D\")\n    );\n\n    String serialized = mapper.writeValueAsString(new TestModifiedKinesisIndexTaskTuningConfig(base, \"loool\"));\n    KinesisIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, KinesisIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(base.getAppendableIndexSpec(), deserialized.getAppendableIndexSpec());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n    Assert.assertEquals(base.getRecordBufferFullWait(), deserialized.getRecordBufferFullWait());\n    Assert.assertEquals(base.getRecordBufferOfferTimeout(), deserialized.getRecordBufferOfferTimeout());\n    Assert.assertEquals(base.getRecordBufferSize(), deserialized.getRecordBufferSize());\n    Assert.assertEquals(base.getMaxRecordsPerPoll(), deserialized.getMaxRecordsPerPoll());\n  }\n","date":"2021-01-27 16:34:56","endLine":261,"groupId":"12513","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerdeWithModifiedTuningConfigRemovedField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/36/0067195de3da2cb63274a4768cc20ba1884da8.src","preCode":"  public void testSerdeWithModifiedTuningConfigRemovedField() throws IOException\n  {\n    KinesisIndexTaskTuningConfig base = new KinesisIndexTaskTuningConfig(\n        null,\n        1,\n        3L,\n        2,\n        100L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        true,\n        false,\n        1000,\n        1000,\n        500,\n        null,\n        42,\n        null,\n        false,\n        500,\n        500,\n        6000,\n        new Period(\"P3D\")\n    );\n\n    String serialized = mapper.writeValueAsString(new TestModifiedKinesisIndexTaskTuningConfig(base, \"loool\"));\n    KinesisIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, KinesisIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(base.getAppendableIndexSpec(), deserialized.getAppendableIndexSpec());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n    Assert.assertEquals(base.getRecordBufferFullWait(), deserialized.getRecordBufferFullWait());\n    Assert.assertEquals(base.getRecordBufferOfferTimeout(), deserialized.getRecordBufferOfferTimeout());\n    Assert.assertEquals(base.getRecordBufferSize(), deserialized.getRecordBufferSize());\n    Assert.assertEquals(base.getMaxRecordsPerPoll(), deserialized.getMaxRecordsPerPoll());\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"},{"authorDate":"2021-01-27 16:34:56","commitOrder":4,"curCode":"  public void testSerdeWithModifiedTuningConfigAddedField() throws IOException\n  {\n    KafkaIndexTaskTuningConfig base = new KafkaIndexTaskTuningConfig(\n        null,\n        1,\n        null,\n        null,\n        2,\n        10L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        null,\n        null,\n        null,\n        true,\n        42,\n        42\n    );\n\n    String serialized = mapper.writeValueAsString(base);\n    TestModifiedKafkaIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, TestModifiedKafkaIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(null, deserialized.getExtra());\n    Assert.assertEquals(base.getAppendableIndexSpec(), deserialized.getAppendableIndexSpec());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n  }\n","date":"2021-01-27 16:34:56","endLine":214,"groupId":"12513","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerdeWithModifiedTuningConfigAddedField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e2/7d7d0c07d42baac585ca143d215e8a50c0ea57.src","preCode":"  public void testSerdeWithModifiedTuningConfigAddedField() throws IOException\n  {\n    KafkaIndexTaskTuningConfig base = new KafkaIndexTaskTuningConfig(\n        null,\n        1,\n        null,\n        2,\n        10L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        null,\n        null,\n        null,\n        true,\n        42,\n        42\n    );\n\n    String serialized = mapper.writeValueAsString(base);\n    TestModifiedKafkaIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, TestModifiedKafkaIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(null, deserialized.getExtra());\n    Assert.assertEquals(base.getAppendableIndexSpec(), deserialized.getAppendableIndexSpec());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"}],"commitId":"a46d561bd7e2b045a08a2e475847d4a7505a1c93","commitMessage":"@@@Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead (#10740)\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* fix checkstyle\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* fix test\n\n* fix test\n\n* add log\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* address comments\n\n* fix checkstyle\n\n* fix checkstyle\n\n* add config to skip overhead memory calculation\n\n* add test for the skipBytesInMemoryOverheadCheck config\n\n* add docs\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix spelling\n\n* address comments\n\n* fix travis\n\n* address comments","date":"2021-01-27 16:34:56","modifiedFileCount":"50","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-06-24 07:36:46","codes":[{"authorDate":"2021-06-24 07:36:46","commitOrder":5,"curCode":"  public void testSerdeWithModifiedTuningConfigRemovedField() throws IOException\n  {\n    KinesisIndexTaskTuningConfig base = new KinesisIndexTaskTuningConfig(\n        null,\n        1,\n        3L,\n        null,\n        2,\n        100L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        5L,\n        true,\n        false,\n        1000,\n        1000,\n        500,\n        null,\n        42,\n        null,\n        false,\n        500,\n        500,\n        6000,\n        new Period(\"P3D\")\n    );\n\n    String serialized = mapper.writeValueAsString(new TestModifiedKinesisIndexTaskTuningConfig(base, \"loool\"));\n    KinesisIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, KinesisIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(base.getAppendableIndexSpec(), deserialized.getAppendableIndexSpec());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n    Assert.assertEquals(base.getRecordBufferFullWait(), deserialized.getRecordBufferFullWait());\n    Assert.assertEquals(base.getRecordBufferOfferTimeout(), deserialized.getRecordBufferOfferTimeout());\n    Assert.assertEquals(base.getRecordBufferSize(), deserialized.getRecordBufferSize());\n    Assert.assertEquals(base.getMaxRecordsPerPoll(), deserialized.getMaxRecordsPerPoll());\n  }\n","date":"2021-06-24 07:36:46","endLine":254,"groupId":"102541","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testSerdeWithModifiedTuningConfigRemovedField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3b/ba03e9136c9894dc5a00993678b9ced2df0be9.src","preCode":"  public void testSerdeWithModifiedTuningConfigRemovedField() throws IOException\n  {\n    KinesisIndexTaskTuningConfig base = new KinesisIndexTaskTuningConfig(\n        null,\n        1,\n        3L,\n        null,\n        2,\n        100L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        true,\n        false,\n        1000,\n        1000,\n        500,\n        null,\n        42,\n        null,\n        false,\n        500,\n        500,\n        6000,\n        new Period(\"P3D\")\n    );\n\n    String serialized = mapper.writeValueAsString(new TestModifiedKinesisIndexTaskTuningConfig(base, \"loool\"));\n    KinesisIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, KinesisIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(base.getAppendableIndexSpec(), deserialized.getAppendableIndexSpec());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n    Assert.assertEquals(base.getRecordBufferFullWait(), deserialized.getRecordBufferFullWait());\n    Assert.assertEquals(base.getRecordBufferOfferTimeout(), deserialized.getRecordBufferOfferTimeout());\n    Assert.assertEquals(base.getRecordBufferSize(), deserialized.getRecordBufferSize());\n    Assert.assertEquals(base.getMaxRecordsPerPoll(), deserialized.getMaxRecordsPerPoll());\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"},{"authorDate":"2021-06-24 07:36:46","commitOrder":5,"curCode":"  public void testSerdeWithModifiedTuningConfigAddedField() throws IOException\n  {\n    KafkaIndexTaskTuningConfig base = new KafkaIndexTaskTuningConfig(\n        null,\n        1,\n        null,\n        null,\n        2,\n        10L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        5L,\n        null,\n        null,\n        null,\n        true,\n        42,\n        42\n    );\n\n    String serialized = mapper.writeValueAsString(base);\n    TestModifiedKafkaIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, TestModifiedKafkaIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(null, deserialized.getExtra());\n    Assert.assertEquals(base.getAppendableIndexSpec(), deserialized.getAppendableIndexSpec());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n  }\n","date":"2021-06-24 07:36:46","endLine":211,"groupId":"102541","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testSerdeWithModifiedTuningConfigAddedField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/66/74c36f17ddd53112772e3364939218291725fb.src","preCode":"  public void testSerdeWithModifiedTuningConfigAddedField() throws IOException\n  {\n    KafkaIndexTaskTuningConfig base = new KafkaIndexTaskTuningConfig(\n        null,\n        1,\n        null,\n        null,\n        2,\n        10L,\n        new Period(\"PT3S\"),\n        new File(\"/tmp/xxx\"),\n        4,\n        new IndexSpec(),\n        new IndexSpec(),\n        true,\n        true,\n        5L,\n        null,\n        null,\n        null,\n        true,\n        42,\n        42\n    );\n\n    String serialized = mapper.writeValueAsString(base);\n    TestModifiedKafkaIndexTaskTuningConfig deserialized =\n        mapper.readValue(serialized, TestModifiedKafkaIndexTaskTuningConfig.class);\n\n    Assert.assertEquals(null, deserialized.getExtra());\n    Assert.assertEquals(base.getAppendableIndexSpec(), deserialized.getAppendableIndexSpec());\n    Assert.assertEquals(base.getMaxRowsInMemory(), deserialized.getMaxRowsInMemory());\n    Assert.assertEquals(base.getMaxBytesInMemory(), deserialized.getMaxBytesInMemory());\n    Assert.assertEquals(base.getMaxRowsPerSegment(), deserialized.getMaxRowsPerSegment());\n    Assert.assertEquals(base.getMaxTotalRows(), deserialized.getMaxTotalRows());\n    Assert.assertEquals(base.getIntermediatePersistPeriod(), deserialized.getIntermediatePersistPeriod());\n    Assert.assertEquals(base.getBasePersistDirectory(), deserialized.getBasePersistDirectory());\n    Assert.assertEquals(base.getMaxPendingPersists(), deserialized.getMaxPendingPersists());\n    Assert.assertEquals(base.getIndexSpec(), deserialized.getIndexSpec());\n    Assert.assertEquals(base.getBuildV9Directly(), deserialized.getBuildV9Directly());\n    Assert.assertEquals(base.isReportParseExceptions(), deserialized.isReportParseExceptions());\n    Assert.assertEquals(base.getHandoffConditionTimeout(), deserialized.getHandoffConditionTimeout());\n    Assert.assertEquals(base.isResetOffsetAutomatically(), deserialized.isResetOffsetAutomatically());\n    Assert.assertEquals(base.getSegmentWriteOutMediumFactory(), deserialized.getSegmentWriteOutMediumFactory());\n    Assert.assertEquals(base.getIntermediateHandoffPeriod(), deserialized.getIntermediateHandoffPeriod());\n    Assert.assertEquals(base.isLogParseExceptions(), deserialized.isLogParseExceptions());\n    Assert.assertEquals(base.getMaxParseExceptions(), deserialized.getMaxParseExceptions());\n    Assert.assertEquals(base.getMaxSavedParseExceptions(), deserialized.getMaxSavedParseExceptions());\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaIndexTaskTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"de8daf8139dcb8a497f1191587dcd5e7ea992092","commitMessage":"@@@Delete buildV9Directly in Kafka and Kinesis Indexing Service (#11351)\n\n* delete_buildV9Directly_in_kafka_and_kinesis_indexing_service\n\n* delete\n\n* delete them from server\n\n* delete buildV9Directly from hadoop indexing\n\n* bug fixed\n\nCo-authored-by: yuanyi <yuanyi@freewheel.tv>","date":"2021-06-24 07:36:46","modifiedFileCount":"38","status":"M","submitter":"Yi Yuan"}]
