[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTimeExtract()\n  {\n    testExpression(\n        rexBuilder.makeCall(\n            new TimeExtractOperatorConversion().calciteOperator(),\n            inputRef(\"t\"),\n            rexBuilder.makeLiteral(\"QUARTER\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_extract(\\\"t\\\",'QUARTER','UTC')\"),\n        1L\n    );\n\n    testExpression(\n        rexBuilder.makeCall(\n            new TimeExtractOperatorConversion().calciteOperator(),\n            inputRef(\"t\"),\n            rexBuilder.makeLiteral(\"DAY\"),\n            rexBuilder.makeLiteral(\"America/Los_Angeles\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_extract(\\\"t\\\",'DAY','America/Los_Angeles')\"),\n        2L\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":478,"groupId":"8629","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTimeExtract","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f7/db35d3fe5cac9e5fc661f7e79b60caa6d0bc16.src","preCode":"  public void testTimeExtract()\n  {\n    testExpression(\n        rexBuilder.makeCall(\n            new TimeExtractOperatorConversion().calciteOperator(),\n            inputRef(\"t\"),\n            rexBuilder.makeLiteral(\"QUARTER\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_extract(\\\"t\\\",'QUARTER','UTC')\"),\n        1L\n    );\n\n    testExpression(\n        rexBuilder.makeCall(\n            new TimeExtractOperatorConversion().calciteOperator(),\n            inputRef(\"t\"),\n            rexBuilder.makeLiteral(\"DAY\"),\n            rexBuilder.makeLiteral(\"America/Los_Angeles\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_extract(\\\"t\\\",'DAY','America/Los_Angeles')\"),\n        2L\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTimeFormat()\n  {\n    testExpression(\n        rexBuilder.makeCall(\n            new TimeFormatOperatorConversion().calciteOperator(),\n            inputRef(\"t\"),\n            rexBuilder.makeLiteral(\"yyyy-MM-dd HH:mm:ss\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_format(\\\"t\\\",'yyyy-MM-dd HH:mm:ss','UTC')\"),\n        \"2000-02-03 04:05:06\"\n    );\n\n    testExpression(\n        rexBuilder.makeCall(\n            new TimeFormatOperatorConversion().calciteOperator(),\n            inputRef(\"t\"),\n            rexBuilder.makeLiteral(\"yyyy-MM-dd HH:mm:ss\"),\n            rexBuilder.makeLiteral(\"America/Los_Angeles\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_format(\\\"t\\\",'yyyy-MM-dd HH:mm:ss','America/Los_Angeles')\"),\n        \"2000-02-02 20:05:06\"\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":622,"groupId":"3526","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTimeFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f7/db35d3fe5cac9e5fc661f7e79b60caa6d0bc16.src","preCode":"  public void testTimeFormat()\n  {\n    testExpression(\n        rexBuilder.makeCall(\n            new TimeFormatOperatorConversion().calciteOperator(),\n            inputRef(\"t\"),\n            rexBuilder.makeLiteral(\"yyyy-MM-dd HH:mm:ss\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_format(\\\"t\\\",'yyyy-MM-dd HH:mm:ss','UTC')\"),\n        \"2000-02-03 04:05:06\"\n    );\n\n    testExpression(\n        rexBuilder.makeCall(\n            new TimeFormatOperatorConversion().calciteOperator(),\n            inputRef(\"t\"),\n            rexBuilder.makeLiteral(\"yyyy-MM-dd HH:mm:ss\"),\n            rexBuilder.makeLiteral(\"America/Los_Angeles\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_format(\\\"t\\\",'yyyy-MM-dd HH:mm:ss','America/Los_Angeles')\"),\n        \"2000-02-02 20:05:06\"\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":600,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-08-02 12:29:58","codes":[{"authorDate":"2019-08-02 12:29:58","commitOrder":2,"curCode":"  public void testTimeExtract()\n  {\n    testHelper.testExpression(\n        new TimeExtractOperatorConversion().calciteOperator(),\n        ImmutableList.of(\n            testHelper.makeInputRef(\"t\"),\n            testHelper.makeLiteral(\"QUARTER\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_extract(\\\"t\\\",'QUARTER','UTC')\"),\n        1L\n    );\n\n    testHelper.testExpression(\n        new TimeExtractOperatorConversion().calciteOperator(),\n        ImmutableList.of(\n            testHelper.makeInputRef(\"t\"),\n            testHelper.makeLiteral(\"DAY\"),\n            testHelper.makeLiteral(\"America/Los_Angeles\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_extract(\\\"t\\\",'DAY','America/Los_Angeles')\"),\n        2L\n    );\n  }\n","date":"2019-08-02 12:29:58","endLine":793,"groupId":"101851","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTimeExtract","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/35/267c843f709aa8a7c3387e0c290037c57428de.src","preCode":"  public void testTimeExtract()\n  {\n    testExpression(\n        rexBuilder.makeCall(\n            new TimeExtractOperatorConversion().calciteOperator(),\n            inputRef(\"t\"),\n            rexBuilder.makeLiteral(\"QUARTER\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_extract(\\\"t\\\",'QUARTER','UTC')\"),\n        1L\n    );\n\n    testExpression(\n        rexBuilder.makeCall(\n            new TimeExtractOperatorConversion().calciteOperator(),\n            inputRef(\"t\"),\n            rexBuilder.makeLiteral(\"DAY\"),\n            rexBuilder.makeLiteral(\"America/Los_Angeles\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_extract(\\\"t\\\",'DAY','America/Los_Angeles')\"),\n        2L\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":771,"status":"M"},{"authorDate":"2019-08-02 12:29:58","commitOrder":2,"curCode":"  public void testTimeFormat()\n  {\n    testHelper.testExpression(\n        new TimeFormatOperatorConversion().calciteOperator(),\n        ImmutableList.of(\n            testHelper.makeInputRef(\"t\"),\n            testHelper.makeLiteral(\"yyyy-MM-dd HH:mm:ss\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_format(\\\"t\\\",'yyyy-MM-dd HH:mm:ss','UTC')\"),\n        \"2000-02-03 04:05:06\"\n    );\n\n    testHelper.testExpression(\n        new TimeFormatOperatorConversion().calciteOperator(),\n        ImmutableList.of(\n            testHelper.makeInputRef(\"t\"),\n            testHelper.makeLiteral(\"yyyy-MM-dd HH:mm:ss\"),\n            testHelper.makeLiteral(\"America/Los_Angeles\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_format(\\\"t\\\",'yyyy-MM-dd HH:mm:ss','America/Los_Angeles')\"),\n        \"2000-02-02 20:05:06\"\n    );\n  }\n","date":"2019-08-02 12:29:58","endLine":933,"groupId":"101851","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTimeFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/35/267c843f709aa8a7c3387e0c290037c57428de.src","preCode":"  public void testTimeFormat()\n  {\n    testExpression(\n        rexBuilder.makeCall(\n            new TimeFormatOperatorConversion().calciteOperator(),\n            inputRef(\"t\"),\n            rexBuilder.makeLiteral(\"yyyy-MM-dd HH:mm:ss\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_format(\\\"t\\\",'yyyy-MM-dd HH:mm:ss','UTC')\"),\n        \"2000-02-03 04:05:06\"\n    );\n\n    testExpression(\n        rexBuilder.makeCall(\n            new TimeFormatOperatorConversion().calciteOperator(),\n            inputRef(\"t\"),\n            rexBuilder.makeLiteral(\"yyyy-MM-dd HH:mm:ss\"),\n            rexBuilder.makeLiteral(\"America/Los_Angeles\")\n        ),\n        DruidExpression.fromExpression(\"timestamp_format(\\\"t\\\",'yyyy-MM-dd HH:mm:ss','America/Los_Angeles')\"),\n        \"2000-02-02 20:05:06\"\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/expression/ExpressionsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":911,"status":"M"}],"commitId":"4bd3bad8ba960c9dd4166336eebe019a39d00562","commitMessage":"@@@Add IPv4 SQL functions (#8223)\n\n* Add IPv4 SQL functions\n\nNew SQL functions for filtering IPv4 addresses:\n- IPV4_MATCH: Check if IP address belongs to a subnet\n- IPV4_PARSE: Convert string IP address to integer\n- IPV4_STRINGIFY: Convert integer IP address to string\n\nThese are the SQL analogs of the druid expressions with the same name.\nFiltering is more efficient when operating on IP addresses as integers\ninstead of strings.\n\n* Refactor operator conversions into named constants\n","date":"2019-08-02 12:29:58","modifiedFileCount":"2","status":"M","submitter":"Chi Cao Minh"}]
