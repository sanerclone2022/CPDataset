[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"    public void requestSucceeded()\n    {\n      log.info(\n          \"Server[%s] Successfully processed segment[%s] request[%s].\",\n          serverId,\n          segment.getIdentifier(),\n          changeRequest.getClass().getSimpleName()\n      );\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","date":"2018-08-31 00:56:26","endLine":545,"groupId":"8078","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"requestSucceeded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/87/f2e85998178f73ec891a4db59fd0603181f45d.src","preCode":"    public void requestSucceeded()\n    {\n      log.info(\n          \"Server[%s] Successfully processed segment[%s] request[%s].\",\n          serverId,\n          segment.getIdentifier(),\n          changeRequest.getClass().getSimpleName()\n      );\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","realPath":"server/src/main/java/org/apache/druid/server/coordinator/HttpLoadQueuePeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":529,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"    public void requestFailed(String failureCause)\n    {\n      log.error(\n          \"Server[%s] Failed segment[%s] request[%s] with cause [%s].\",\n          serverId,\n          segment.getIdentifier(),\n          changeRequest.getClass().getSimpleName(),\n          failureCause\n      );\n\n      failedAssignCount.getAndIncrement();\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","date":"2018-08-31 00:56:26","endLine":566,"groupId":"1666","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"requestFailed","params":"(StringfailureCause)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/87/f2e85998178f73ec891a4db59fd0603181f45d.src","preCode":"    public void requestFailed(String failureCause)\n    {\n      log.error(\n          \"Server[%s] Failed segment[%s] request[%s] with cause [%s].\",\n          serverId,\n          segment.getIdentifier(),\n          changeRequest.getClass().getSimpleName(),\n          failureCause\n      );\n\n      failedAssignCount.getAndIncrement();\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","realPath":"server/src/main/java/org/apache/druid/server/coordinator/HttpLoadQueuePeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":547,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-12-17 14:20:28","commitOrder":2,"curCode":"    public void requestSucceeded()\n    {\n      log.debug(\n          \"Server[%s] Successfully processed segment[%s] request[%s].\",\n          serverId,\n          segment.getIdentifier(),\n          changeRequest.getClass().getSimpleName()\n      );\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","date":"2018-12-17 14:20:28","endLine":538,"groupId":"8078","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"requestSucceeded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a0/641a2108247b6ca5dee511aecbe3f70450bbbc.src","preCode":"    public void requestSucceeded()\n    {\n      log.info(\n          \"Server[%s] Successfully processed segment[%s] request[%s].\",\n          serverId,\n          segment.getIdentifier(),\n          changeRequest.getClass().getSimpleName()\n      );\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","realPath":"server/src/main/java/org/apache/druid/server/coordinator/HttpLoadQueuePeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":522,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"    public void requestFailed(String failureCause)\n    {\n      log.error(\n          \"Server[%s] Failed segment[%s] request[%s] with cause [%s].\",\n          serverId,\n          segment.getIdentifier(),\n          changeRequest.getClass().getSimpleName(),\n          failureCause\n      );\n\n      failedAssignCount.getAndIncrement();\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","date":"2018-08-31 00:56:26","endLine":566,"groupId":"1666","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"requestFailed","params":"(StringfailureCause)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/87/f2e85998178f73ec891a4db59fd0603181f45d.src","preCode":"    public void requestFailed(String failureCause)\n    {\n      log.error(\n          \"Server[%s] Failed segment[%s] request[%s] with cause [%s].\",\n          serverId,\n          segment.getIdentifier(),\n          changeRequest.getClass().getSimpleName(),\n          failureCause\n      );\n\n      failedAssignCount.getAndIncrement();\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","realPath":"server/src/main/java/org/apache/druid/server/coordinator/HttpLoadQueuePeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":547,"status":"N"}],"commitId":"486c6f3cf9ca15ceb4da8be9351693fa128135c3","commitMessage":"@@@emit logs that are only useful for debugging at debug level (#6741)\n\n* make logs that are only useful for debugging be at debug level so log volume is much more chill\n\n* info level messages for total merge buffer allocated/free\n\n* more chill compaction logs\n","date":"2018-12-17 14:20:28","modifiedFileCount":"11","status":"M","submitter":"Clint Wylie"},{"authorTime":"2019-01-22 03:11:10","codes":[{"authorDate":"2019-01-22 03:11:10","commitOrder":3,"curCode":"    public void requestSucceeded()\n    {\n      log.debug(\n          \"Server[%s] Successfully processed segment[%s] request[%s].\",\n          serverId,\n          segment.getId(),\n          changeRequest.getClass().getSimpleName()\n      );\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","date":"2019-01-22 03:11:10","endLine":538,"groupId":"8078","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"requestSucceeded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e3/ab60412f41a405a78f876e6e6625a07bf313e7.src","preCode":"    public void requestSucceeded()\n    {\n      log.debug(\n          \"Server[%s] Successfully processed segment[%s] request[%s].\",\n          serverId,\n          segment.getIdentifier(),\n          changeRequest.getClass().getSimpleName()\n      );\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","realPath":"server/src/main/java/org/apache/druid/server/coordinator/HttpLoadQueuePeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":522,"status":"M"},{"authorDate":"2019-01-22 03:11:10","commitOrder":3,"curCode":"    public void requestFailed(String failureCause)\n    {\n      log.error(\n          \"Server[%s] Failed segment[%s] request[%s] with cause [%s].\",\n          serverId,\n          segment.getId(),\n          changeRequest.getClass().getSimpleName(),\n          failureCause\n      );\n\n      failedAssignCount.getAndIncrement();\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","date":"2019-01-22 03:11:10","endLine":559,"groupId":"1666","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"requestFailed","params":"(StringfailureCause)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e3/ab60412f41a405a78f876e6e6625a07bf313e7.src","preCode":"    public void requestFailed(String failureCause)\n    {\n      log.error(\n          \"Server[%s] Failed segment[%s] request[%s] with cause [%s].\",\n          serverId,\n          segment.getIdentifier(),\n          changeRequest.getClass().getSimpleName(),\n          failureCause\n      );\n\n      failedAssignCount.getAndIncrement();\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","realPath":"server/src/main/java/org/apache/druid/server/coordinator/HttpLoadQueuePeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"M"}],"commitId":"8eae26fd4e7572060d112864dd3d5f6a865b9c89","commitMessage":"@@@Introduce SegmentId class (#6370)\n\n* Introduce SegmentId class\n\n* tmp\n\n* Fix SelectQueryRunnerTest\n\n* Fix indentation\n\n* Fixes\n\n* Remove Comparators.inverse() tests\n\n* Refinements\n\n* Fix tests\n\n* Fix more tests\n\n* Remove duplicate DataSegmentTest.  fixes #6064\n\n* SegmentDescriptor doc\n\n* Fix SQLMetadataStorageUpdaterJobHandler\n\n* Fix DataSegment deserialization for ignoring id\n\n* Add comments\n\n* More comments\n\n* Address more comments\n\n* Fix compilation\n\n* Restore segment2 in SystemSchemaTest according to a comment\n\n* Fix style\n\n* fix testServerSegmentsTable\n\n* Fix compilation\n\n* Add comments about why SegmentId and SegmentIdWithShardSpec are separate classes\n\n* Fix SystemSchemaTest\n\n* Fix style\n\n* Compare SegmentDescriptor with SegmentId in Javadoc and comments rather than with DataSegment\n\n* Remove a link.  see https://youtrack.jetbrains.com/issue/IDEA-205164\n\n* Fix compilation\n","date":"2019-01-22 03:11:10","modifiedFileCount":"308","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-01-22 03:11:10","codes":[{"authorDate":"2019-11-20 05:57:58","commitOrder":4,"curCode":"    public void requestSucceeded()\n    {\n      log.trace(\n          \"Server[%s] Successfully processed segment[%s] request[%s].\",\n          serverId,\n          segment.getId(),\n          changeRequest.getClass().getSimpleName()\n      );\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","date":"2019-11-20 05:57:58","endLine":535,"groupId":"101140","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"requestSucceeded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ee/a87118f9e9d0a5bffab8a48af137624439571b.src","preCode":"    public void requestSucceeded()\n    {\n      log.debug(\n          \"Server[%s] Successfully processed segment[%s] request[%s].\",\n          serverId,\n          segment.getId(),\n          changeRequest.getClass().getSimpleName()\n      );\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","realPath":"server/src/main/java/org/apache/druid/server/coordinator/HttpLoadQueuePeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":519,"status":"M"},{"authorDate":"2019-01-22 03:11:10","commitOrder":4,"curCode":"    public void requestFailed(String failureCause)\n    {\n      log.error(\n          \"Server[%s] Failed segment[%s] request[%s] with cause [%s].\",\n          serverId,\n          segment.getId(),\n          changeRequest.getClass().getSimpleName(),\n          failureCause\n      );\n\n      failedAssignCount.getAndIncrement();\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","date":"2019-01-22 03:11:10","endLine":559,"groupId":"101140","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"requestFailed","params":"(StringfailureCause)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e3/ab60412f41a405a78f876e6e6625a07bf313e7.src","preCode":"    public void requestFailed(String failureCause)\n    {\n      log.error(\n          \"Server[%s] Failed segment[%s] request[%s] with cause [%s].\",\n          serverId,\n          segment.getId(),\n          changeRequest.getClass().getSimpleName(),\n          failureCause\n      );\n\n      failedAssignCount.getAndIncrement();\n\n      callBackExecutor.execute(() -> {\n        for (LoadPeonCallback callback : callbacks) {\n          if (callback != null) {\n            callback.execute();\n          }\n        }\n      });\n    }\n","realPath":"server/src/main/java/org/apache/druid/server/coordinator/HttpLoadQueuePeon.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"N"}],"commitId":"c44452f0c1b051b03343d8bb479828f01461d68f","commitMessage":"@@@Tidy up lifecycle.  query.  and ingestion logging. (#8889)\n\n* Tidy up lifecycle.  query.  and ingestion logging.\n\nThe goal of this patch is to improve the clarity and usefulness of\nDruid's logging for cluster operators. For more information.  see\nhttps://twitter.com/cowtowncoder/status/1195469299814555648.\n\nConcretely.  this patch does the following:\n\n- Changes a lot of INFO logs to DEBUG.  and DEBUG to TRACE.  with the\n  goal of reducing redundancy and improving clarity by avoiding\n  showing rarely-useful log messages. This includes most \"starting\"\n  and \"stopping\" messages.  and most messages related to individual\n  columns.\n- Adds new log4j2 templates that show operators how to enabled DEBUG\n  logging for certain important packages.\n- Eliminate stack traces for query errors.  unless log level is DEBUG\n  or more. This is useful because query errors often indicate user\n  error rather than system error.  but dumping stack trace often gave\n  operators the impression that there was a system failure.\n- Adds task id to Appenderator.  AppenderatorDriver thread names. In\n  the default log4j2 configuration.  this will put them in log lines\n  as well. It's very useful if a user is using the Indexer.  where\n  multiple tasks run in the same JVM.\n- More consistent terminology when it comes to \"sequences\" (sets of\n  segments that are handed-off together by Kafka ingestion) and\n  \"offsets\" (cursors in partitions). These terms had been confused in\n  some log messages due to the fact that Kinesis calls offsets\n  \"sequence numbers\".\n- Replaces some ugly toString calls with either the JSONification or\n  something more operator-accessible (like a URL or segment identifier. \n  instead of JSON object representing the same).\n\n* Adjustments.\n\n* Adjust integration test.\n","date":"2019-11-20 05:57:58","modifiedFileCount":"101","status":"M","submitter":"Gian Merlino"}]
