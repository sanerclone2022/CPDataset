[{"authorTime":"2019-03-28 00:00:43","codes":[{"authorDate":"2019-03-28 00:00:43","commitOrder":1,"curCode":"  public void testStreamTaskLogWithPositiveOffset() throws Exception\n  {\n    final String testLog = \"hello this is a log\";\n\n    final String logPath = prefix + \"/\" + taskid;\n    expect(storage.exists(bucket, logPath)).andReturn(true);\n    expect(storage.size(bucket, logPath)).andReturn((long) testLog.length());\n    expect(storage.get(bucket, logPath)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(testLog)));\n\n    replayAll();\n\n    final Optional<ByteSource> byteSource = googleTaskLogs.streamTaskLog(taskid, 5);\n\n    final StringWriter writer = new StringWriter();\n    IOUtils.copy(byteSource.get().openStream(), writer, \"UTF-8\");\n    Assert.assertEquals(writer.toString(), testLog.substring(5));\n\n    verifyAll();\n  }\n","date":"2019-03-28 00:00:43","endLine":126,"groupId":"5980","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testStreamTaskLogWithPositiveOffset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ed/b768ba76d6b207f823e8713b490115f541996b.src","preCode":"  public void testStreamTaskLogWithPositiveOffset() throws Exception\n  {\n    final String testLog = \"hello this is a log\";\n\n    final String logPath = prefix + \"/\" + taskid;\n    expect(storage.exists(bucket, logPath)).andReturn(true);\n    expect(storage.size(bucket, logPath)).andReturn((long) testLog.length());\n    expect(storage.get(bucket, logPath)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(testLog)));\n\n    replayAll();\n\n    final Optional<ByteSource> byteSource = googleTaskLogs.streamTaskLog(taskid, 5);\n\n    final StringWriter writer = new StringWriter();\n    IOUtils.copy(byteSource.get().openStream(), writer, \"UTF-8\");\n    Assert.assertEquals(writer.toString(), testLog.substring(5));\n\n    verifyAll();\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleTaskLogsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"},{"authorDate":"2019-03-28 00:00:43","commitOrder":1,"curCode":"  public void testStreamTaskLogWithNegative() throws Exception\n  {\n    final String testLog = \"hello this is a log\";\n\n    final String logPath = prefix + \"/\" + taskid;\n    expect(storage.exists(bucket, logPath)).andReturn(true);\n    expect(storage.size(bucket, logPath)).andReturn((long) testLog.length());\n    expect(storage.get(bucket, logPath)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(testLog)));\n\n    replayAll();\n\n    final Optional<ByteSource> byteSource = googleTaskLogs.streamTaskLog(taskid, -3);\n\n    final StringWriter writer = new StringWriter();\n    IOUtils.copy(byteSource.get().openStream(), writer, \"UTF-8\");\n    Assert.assertEquals(writer.toString(), testLog.substring(testLog.length() - 3));\n\n    verifyAll();\n  }\n","date":"2019-03-28 00:00:43","endLine":147,"groupId":"23406","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testStreamTaskLogWithNegative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ed/b768ba76d6b207f823e8713b490115f541996b.src","preCode":"  public void testStreamTaskLogWithNegative() throws Exception\n  {\n    final String testLog = \"hello this is a log\";\n\n    final String logPath = prefix + \"/\" + taskid;\n    expect(storage.exists(bucket, logPath)).andReturn(true);\n    expect(storage.size(bucket, logPath)).andReturn((long) testLog.length());\n    expect(storage.get(bucket, logPath)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(testLog)));\n\n    replayAll();\n\n    final Optional<ByteSource> byteSource = googleTaskLogs.streamTaskLog(taskid, -3);\n\n    final StringWriter writer = new StringWriter();\n    IOUtils.copy(byteSource.get().openStream(), writer, \"UTF-8\");\n    Assert.assertEquals(writer.toString(), testLog.substring(testLog.length() - 3));\n\n    verifyAll();\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleTaskLogsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"}],"commitId":"eeb3dbe79d442dd805ef4483c9c417e1f9cc11a5","commitMessage":"@@@Move GCP to a core extension (#6953)\n\n* Move GCP to a core extension\n\n* Don't provide druid-core >.<\n\n* Keep AWS and GCP modules separate\n\n* Move AWSModule to its own module\n\n* Add aws ec2 extension and more modules in more places\n\n* Fix bad imports\n\n* Fix test jackson module\n\n* Include AWS and GCP core in server\n\n* Add simple empty method comment\n\n* Update version to 15\n\n* One more 0.13.0-->0.15.0 change\n\n* Fix multi-binding problem\n\n* Grep for s3-extensions and update docs\n\n* Update extensions.md\n","date":"2019-03-28 00:00:43","modifiedFileCount":"4","status":"B","submitter":"Charles Allen"},{"authorTime":"2019-07-07 00:33:12","codes":[{"authorDate":"2019-07-07 00:33:12","commitOrder":2,"curCode":"  public void testStreamTaskLogWithPositiveOffset() throws Exception\n  {\n    final String testLog = \"hello this is a log\";\n\n    final String logPath = PREFIX + \"/\" + TASKID;\n    EasyMock.expect(storage.exists(BUCKET, logPath)).andReturn(true);\n    EasyMock.expect(storage.size(BUCKET, logPath)).andReturn((long) testLog.length());\n    EasyMock.expect(storage.get(BUCKET, logPath)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(testLog)));\n\n    replayAll();\n\n    final Optional<ByteSource> byteSource = googleTaskLogs.streamTaskLog(TASKID, 5);\n\n    final StringWriter writer = new StringWriter();\n    IOUtils.copy(byteSource.get().openStream(), writer, \"UTF-8\");\n    Assert.assertEquals(writer.toString(), testLog.substring(5));\n\n    verifyAll();\n  }\n","date":"2019-07-07 00:33:12","endLine":127,"groupId":"3948","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testStreamTaskLogWithPositiveOffset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/56/687b6768d9a04281c851a38a739c15f37f2bd5.src","preCode":"  public void testStreamTaskLogWithPositiveOffset() throws Exception\n  {\n    final String testLog = \"hello this is a log\";\n\n    final String logPath = prefix + \"/\" + taskid;\n    expect(storage.exists(bucket, logPath)).andReturn(true);\n    expect(storage.size(bucket, logPath)).andReturn((long) testLog.length());\n    expect(storage.get(bucket, logPath)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(testLog)));\n\n    replayAll();\n\n    final Optional<ByteSource> byteSource = googleTaskLogs.streamTaskLog(taskid, 5);\n\n    final StringWriter writer = new StringWriter();\n    IOUtils.copy(byteSource.get().openStream(), writer, \"UTF-8\");\n    Assert.assertEquals(writer.toString(), testLog.substring(5));\n\n    verifyAll();\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleTaskLogsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2019-07-07 00:33:12","commitOrder":2,"curCode":"  public void testStreamTaskLogWithNegative() throws Exception\n  {\n    final String testLog = \"hello this is a log\";\n\n    final String logPath = PREFIX + \"/\" + TASKID;\n    EasyMock.expect(storage.exists(BUCKET, logPath)).andReturn(true);\n    EasyMock.expect(storage.size(BUCKET, logPath)).andReturn((long) testLog.length());\n    EasyMock.expect(storage.get(BUCKET, logPath)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(testLog)));\n\n    replayAll();\n\n    final Optional<ByteSource> byteSource = googleTaskLogs.streamTaskLog(TASKID, -3);\n\n    final StringWriter writer = new StringWriter();\n    IOUtils.copy(byteSource.get().openStream(), writer, \"UTF-8\");\n    Assert.assertEquals(writer.toString(), testLog.substring(testLog.length() - 3));\n\n    verifyAll();\n  }\n","date":"2019-07-07 00:33:12","endLine":148,"groupId":"3949","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testStreamTaskLogWithNegative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/56/687b6768d9a04281c851a38a739c15f37f2bd5.src","preCode":"  public void testStreamTaskLogWithNegative() throws Exception\n  {\n    final String testLog = \"hello this is a log\";\n\n    final String logPath = prefix + \"/\" + taskid;\n    expect(storage.exists(bucket, logPath)).andReturn(true);\n    expect(storage.size(bucket, logPath)).andReturn((long) testLog.length());\n    expect(storage.get(bucket, logPath)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(testLog)));\n\n    replayAll();\n\n    final Optional<ByteSource> byteSource = googleTaskLogs.streamTaskLog(taskid, -3);\n\n    final StringWriter writer = new StringWriter();\n    IOUtils.copy(byteSource.get().openStream(), writer, \"UTF-8\");\n    Assert.assertEquals(writer.toString(), testLog.substring(testLog.length() - 3));\n\n    verifyAll();\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleTaskLogsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"1166bbcb75d432817715fdd429737f86730b5591","commitMessage":"@@@Remove static imports from tests (#8036)\n\nMake static imports forbidden in tests and remove all occurrences to be\nconsistent with the non-test code.\n\nAlso.  various changes to files affected by above:\n- Reformat to adhere to druid style guide\n- Fix various IntelliJ warnings\n- Fix various SonarLint warnings (e.g..  the expected/actual args to\n  Assert.assertEquals() were flipped)","date":"2019-07-07 00:33:12","modifiedFileCount":"98","status":"M","submitter":"Chi Cao Minh"},{"authorTime":"2020-10-01 23:38:58","codes":[{"authorDate":"2020-10-01 23:38:58","commitOrder":3,"curCode":"  public void testStreamTaskLogWithPositiveOffset() throws Exception\n  {\n    final String testLog = \"hello this is a log\";\n    final int offset = 5;\n    final String expectedLog = testLog.substring(offset);\n    final String logPath = PREFIX + \"/\" + TASKID;\n    EasyMock.expect(storage.exists(BUCKET, logPath)).andReturn(true);\n    EasyMock.expect(storage.size(BUCKET, logPath)).andReturn((long) testLog.length());\n    EasyMock.expect(storage.get(BUCKET, logPath, offset))\n            .andReturn(new ByteArrayInputStream(StringUtils.toUtf8(expectedLog)));\n\n    replayAll();\n\n    final Optional<ByteSource> byteSource = googleTaskLogs.streamTaskLog(TASKID, offset);\n\n    final StringWriter writer = new StringWriter();\n    IOUtils.copy(byteSource.get().openStream(), writer, \"UTF-8\");\n    Assert.assertEquals(writer.toString(), expectedLog);\n\n    verifyAll();\n  }\n","date":"2020-10-01 23:38:58","endLine":154,"groupId":"103248","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testStreamTaskLogWithPositiveOffset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c5/807723b66faf776d1255cb10bee993bb819d98.src","preCode":"  public void testStreamTaskLogWithPositiveOffset() throws Exception\n  {\n    final String testLog = \"hello this is a log\";\n\n    final String logPath = PREFIX + \"/\" + TASKID;\n    EasyMock.expect(storage.exists(BUCKET, logPath)).andReturn(true);\n    EasyMock.expect(storage.size(BUCKET, logPath)).andReturn((long) testLog.length());\n    EasyMock.expect(storage.get(BUCKET, logPath)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(testLog)));\n\n    replayAll();\n\n    final Optional<ByteSource> byteSource = googleTaskLogs.streamTaskLog(TASKID, 5);\n\n    final StringWriter writer = new StringWriter();\n    IOUtils.copy(byteSource.get().openStream(), writer, \"UTF-8\");\n    Assert.assertEquals(writer.toString(), testLog.substring(5));\n\n    verifyAll();\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleTaskLogsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"},{"authorDate":"2020-10-01 23:38:58","commitOrder":3,"curCode":"  public void testStreamTaskLogWithNegative() throws Exception\n  {\n    final String testLog = \"hello this is a log\";\n    final int offset = -3;\n    final int internalOffset = testLog.length() + offset;\n    final String expectedLog = testLog.substring(internalOffset);\n    final String logPath = PREFIX + \"/\" + TASKID;\n    EasyMock.expect(storage.exists(BUCKET, logPath)).andReturn(true);\n    EasyMock.expect(storage.size(BUCKET, logPath)).andReturn((long) testLog.length());\n    EasyMock.expect(storage.get(BUCKET, logPath, internalOffset))\n            .andReturn(new ByteArrayInputStream(StringUtils.toUtf8(expectedLog)));\n\n    replayAll();\n\n    final Optional<ByteSource> byteSource = googleTaskLogs.streamTaskLog(TASKID, offset);\n\n    final StringWriter writer = new StringWriter();\n    IOUtils.copy(byteSource.get().openStream(), writer, \"UTF-8\");\n    Assert.assertEquals(writer.toString(), expectedLog);\n\n    verifyAll();\n  }\n","date":"2020-10-01 23:38:58","endLine":178,"groupId":"103248","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testStreamTaskLogWithNegative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c5/807723b66faf776d1255cb10bee993bb819d98.src","preCode":"  public void testStreamTaskLogWithNegative() throws Exception\n  {\n    final String testLog = \"hello this is a log\";\n\n    final String logPath = PREFIX + \"/\" + TASKID;\n    EasyMock.expect(storage.exists(BUCKET, logPath)).andReturn(true);\n    EasyMock.expect(storage.size(BUCKET, logPath)).andReturn((long) testLog.length());\n    EasyMock.expect(storage.get(BUCKET, logPath)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(testLog)));\n\n    replayAll();\n\n    final Optional<ByteSource> byteSource = googleTaskLogs.streamTaskLog(TASKID, -3);\n\n    final StringWriter writer = new StringWriter();\n    IOUtils.copy(byteSource.get().openStream(), writer, \"UTF-8\");\n    Assert.assertEquals(writer.toString(), testLog.substring(testLog.length() - 3));\n\n    verifyAll();\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleTaskLogsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"d057c5149fe5a20c98f3e60af9189e4a1f7ad9ce","commitMessage":"@@@Fix the offset setting in GoogleStorage#get (#10449)\n\n* Fix the offset in get of GCP object\n\n* upgrade compute dependency\n\n* fix version\n\n* review comments\n\n* missed","date":"2020-10-01 23:38:58","modifiedFileCount":"4","status":"M","submitter":"Abhishek Agarwal"}]
