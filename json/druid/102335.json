[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testPlus()\n  {\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 3L, 2, 5L)),\n        KM1.plus(KM3)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM0.plus(KM2)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM1.plus(KM2)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 3L, 2, 5L)),\n        KM2.plus(KM1)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM2.plus(KM2)\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":95,"groupId":"2283","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPlus","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/51/afdeb8ea40278c7680baa57be6d1a21a5dc57d.src","preCode":"  public void testPlus()\n  {\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 3L, 2, 5L)),\n        KM1.plus(KM3)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM0.plus(KM2)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM1.plus(KM2)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 3L, 2, 5L)),\n        KM2.plus(KM1)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM2.plus(KM2)\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaDataSourceMetadataTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testMinus()\n  {\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(1, 3L)),\n        KM1.minus(KM3)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of()),\n        KM0.minus(KM2)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of()),\n        KM1.minus(KM2)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(2, 5L)),\n        KM2.minus(KM1)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of()),\n        KM2.minus(KM2)\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":124,"groupId":"2283","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinus","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/51/afdeb8ea40278c7680baa57be6d1a21a5dc57d.src","preCode":"  public void testMinus()\n  {\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(1, 3L)),\n        KM1.minus(KM3)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of()),\n        KM0.minus(KM2)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of()),\n        KM1.minus(KM2)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(2, 5L)),\n        KM2.minus(KM1)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of()),\n        KM2.minus(KM2)\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaDataSourceMetadataTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-02-24 12:10:31","codes":[{"authorDate":"2019-02-24 12:10:31","commitOrder":2,"curCode":"  public void testPlus()\n  {\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(0, 2L, 1, 3L, 2, 5L)),\n        KM1.plus(KM3)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM0.plus(KM2)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM1.plus(KM2)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(0, 2L, 1, 3L, 2, 5L)),\n        KM2.plus(KM1)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM2.plus(KM2)\n    );\n  }\n","date":"2019-02-24 12:10:31","endLine":96,"groupId":"2283","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPlus","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5b/609132af24e08f15b0e4e2815535e68c795578.src","preCode":"  public void testPlus()\n  {\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 3L, 2, 5L)),\n        KM1.plus(KM3)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM0.plus(KM2)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM1.plus(KM2)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 3L, 2, 5L)),\n        KM2.plus(KM1)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM2.plus(KM2)\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaDataSourceMetadataTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2019-02-24 12:10:31","commitOrder":2,"curCode":"  public void testMinus()\n  {\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(1, 3L)),\n        KM1.minus(KM3)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of()),\n        KM0.minus(KM2)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of()),\n        KM1.minus(KM2)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(2, 5L)),\n        KM2.minus(KM1)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of()),\n        KM2.minus(KM2)\n    );\n  }\n","date":"2019-02-24 12:10:31","endLine":125,"groupId":"2283","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinus","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5b/609132af24e08f15b0e4e2815535e68c795578.src","preCode":"  public void testMinus()\n  {\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(1, 3L)),\n        KM1.minus(KM3)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of()),\n        KM0.minus(KM2)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of()),\n        KM1.minus(KM2)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of(2, 5L)),\n        KM2.minus(KM1)\n    );\n\n    Assert.assertEquals(\n        KM(\"foo\", ImmutableMap.of()),\n        KM2.minus(KM2)\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaDataSourceMetadataTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"8b803cbc22b15799fd0526de8d6d0eea155ad733","commitMessage":"@@@Added checkstyle for \"Methods starting with Capital Letters\"  (#7118)\n\n* Added checkstyle for \"Methods starting with Capital Letters\" and changed the method names violating this.\n\n* Un-abbreviate the method names in the calcite tests\n\n* Fixed checkstyle errors\n\n* Changed asserts position in the code\n","date":"2019-02-24 12:10:31","modifiedFileCount":"24","status":"M","submitter":"Himanshu Pandey"},{"authorTime":"2019-03-22 04:12:22","codes":[{"authorDate":"2019-03-22 04:12:22","commitOrder":3,"curCode":"  public void testPlus()\n  {\n    Assert.assertEquals(\n        startMetadata(ImmutableMap.of(0, 2L, 1, 3L, 2, 5L)),\n        START1.plus(START3)\n    );\n\n    Assert.assertEquals(\n        startMetadata(ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        START0.plus(START2)\n    );\n\n    Assert.assertEquals(\n        startMetadata(ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        START1.plus(START2)\n    );\n\n    Assert.assertEquals(\n        startMetadata(ImmutableMap.of(0, 2L, 1, 3L, 2, 5L)),\n        START2.plus(START1)\n    );\n\n    Assert.assertEquals(\n        startMetadata(ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        START2.plus(START2)\n    );\n\n    Assert.assertEquals(\n        endMetadata(ImmutableMap.of(0, 2L, 2, 5L)),\n        END0.plus(END1)\n    );\n\n    Assert.assertEquals(\n        endMetadata(ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        END1.plus(END2)\n    );\n  }\n","date":"2019-03-22 04:12:22","endLine":123,"groupId":"102335","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testPlus","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/19/336184ac08ffa365146cc57fa41e2c24ac47ed.src","preCode":"  public void testPlus()\n  {\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(0, 2L, 1, 3L, 2, 5L)),\n        KM1.plus(KM3)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM0.plus(KM2)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM1.plus(KM2)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(0, 2L, 1, 3L, 2, 5L)),\n        KM2.plus(KM1)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(0, 2L, 1, 4L, 2, 5L)),\n        KM2.plus(KM2)\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaDataSourceMetadataTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2019-03-22 04:12:22","commitOrder":3,"curCode":"  public void testMinus()\n  {\n    Assert.assertEquals(\n        startMetadata(ImmutableMap.of(1, 3L)),\n        START1.minus(START3)\n    );\n\n    Assert.assertEquals(\n        startMetadata(ImmutableMap.of()),\n        START0.minus(START2)\n    );\n\n    Assert.assertEquals(\n        startMetadata(ImmutableMap.of()),\n        START1.minus(START2)\n    );\n\n    Assert.assertEquals(\n        startMetadata(ImmutableMap.of(2, 5L)),\n        START2.minus(START1)\n    );\n\n    Assert.assertEquals(\n        startMetadata(ImmutableMap.of()),\n        START2.minus(START2)\n    );\n\n    Assert.assertEquals(\n        endMetadata(ImmutableMap.of(1, 4L)),\n        END2.minus(END1)\n    );\n\n    Assert.assertEquals(\n        endMetadata(ImmutableMap.of(2, 5L)),\n        END1.minus(END2)\n    );\n  }\n","date":"2019-03-22 04:12:22","endLine":162,"groupId":"102335","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testMinus","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/19/336184ac08ffa365146cc57fa41e2c24ac47ed.src","preCode":"  public void testMinus()\n  {\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(1, 3L)),\n        KM1.minus(KM3)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of()),\n        KM0.minus(KM2)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of()),\n        KM1.minus(KM2)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of(2, 5L)),\n        KM2.minus(KM1)\n    );\n\n    Assert.assertEquals(\n        km(\"foo\", ImmutableMap.of()),\n        KM2.minus(KM2)\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/KafkaDataSourceMetadataTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"0c5dcf5586e33607849e397209f3eb0b10661f1e","commitMessage":"@@@Fix exclusivity for start offset in kinesis indexing service & check exclusivity properly in IndexerSQLMetadataStorageCoordinator (#7291)\n\n* Fix exclusivity for start offset in kinesis indexing service\n\n* some adjustment\n\n* Fix SeekableStreamDataSourceMetadata\n\n* Add missing javadocs\n\n* Add missing comments and unit test\n\n* fix SeekableStreamStartSequenceNumbers.plus and add comments\n\n* remove extra exclusivePartitions in KafkaIOConfig and fix downgrade issue\n\n* Add javadocs\n\n* fix compilation\n\n* fix test\n\n* remove unused variable\n","date":"2019-03-22 04:12:22","modifiedFileCount":"30","status":"M","submitter":"Jihoon Son"}]
