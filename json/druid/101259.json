[{"authorTime":"2019-07-31 08:24:39","codes":[{"authorDate":"2019-10-10 02:12:00","commitOrder":2,"curCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    SpecificSegmentsSpec that = (SpecificSegmentsSpec) o;\n    return Objects.equals(segments, that.segments);\n  }\n","date":"2019-10-10 02:12:00","endLine":97,"groupId":"19781","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/71/da54bc8241c0f0fe02d6bf60415be59a057064.src","preCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    SpecificSegmentsSpec that = (SpecificSegmentsSpec) o;\n    return Objects.equals(segments, that.segments);\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/SpecificSegmentsSpec.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"},{"authorDate":"2019-07-31 08:24:39","commitOrder":2,"curCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    HashedPartitionsSpec that = (HashedPartitionsSpec) o;\n    return Objects.equals(maxRowsPerSegment, that.maxRowsPerSegment) &&\n           Objects.equals(numShards, that.numShards) &&\n           Objects.equals(partitionDimensions, that.partitionDimensions);\n  }\n","date":"2019-07-31 08:24:39","endLine":162,"groupId":"19781","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/80/02fb5af7d9e8f0131f94fcbab17994313ef2b5.src","preCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    HashedPartitionsSpec that = (HashedPartitionsSpec) o;\n    return Objects.equals(maxRowsPerSegment, that.maxRowsPerSegment) &&\n           Objects.equals(numShards, that.numShards) &&\n           Objects.equals(partitionDimensions, that.partitionDimensions);\n  }\n","realPath":"core/src/main/java/org/apache/druid/indexer/partitions/HashedPartitionsSpec.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"NB"}],"commitId":"96d8523ecbc0108e622084671172fded81065aa0","commitMessage":"@@@Use hash of Segment IDs instead of a list of explicit segments in auto compaction (#8571)\n\n* IOConfig for compaction task\n\n* add javadoc.  doc.  unit test\n\n* fix webconsole test\n\n* add spelling\n\n* address comments\n\n* fix build and test\n\n* address comments\n","date":"2019-10-10 02:12:00","modifiedFileCount":"16","status":"M","submitter":"Jihoon Son"},{"authorTime":"2020-09-25 07:32:56","codes":[{"authorDate":"2019-10-10 02:12:00","commitOrder":3,"curCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    SpecificSegmentsSpec that = (SpecificSegmentsSpec) o;\n    return Objects.equals(segments, that.segments);\n  }\n","date":"2019-10-10 02:12:00","endLine":97,"groupId":"101259","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/71/da54bc8241c0f0fe02d6bf60415be59a057064.src","preCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    SpecificSegmentsSpec that = (SpecificSegmentsSpec) o;\n    return Objects.equals(segments, that.segments);\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/SpecificSegmentsSpec.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2020-09-25 07:32:56","commitOrder":3,"curCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    HashedPartitionsSpec that = (HashedPartitionsSpec) o;\n    return Objects.equals(maxRowsPerSegment, that.maxRowsPerSegment) &&\n           Objects.equals(numShards, that.numShards) &&\n           Objects.equals(partitionDimensions, that.partitionDimensions) &&\n           partitionFunction == that.partitionFunction;\n  }\n","date":"2020-09-25 07:32:56","endLine":201,"groupId":"101259","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/59/d6f36a0c81d767d469a468ae552f1732e48fb8.src","preCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    HashedPartitionsSpec that = (HashedPartitionsSpec) o;\n    return Objects.equals(maxRowsPerSegment, that.maxRowsPerSegment) &&\n           Objects.equals(numShards, that.numShards) &&\n           Objects.equals(partitionDimensions, that.partitionDimensions);\n  }\n","realPath":"core/src/main/java/org/apache/druid/indexer/partitions/HashedPartitionsSpec.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"}],"commitId":"0cc9eb4903e7bddb4c1484984bf87c8fab7648df","commitMessage":"@@@Store hash partition function in dataSegment and allow segment pruning only when hash partition function is provided (#10288)\n\n* Store hash partition function in dataSegment and allow segment pruning only when hash partition function is provided\n\n* query context\n\n* fix tests; add more test\n\n* javadoc\n\n* docs and more tests\n\n* remove default and hadoop tests\n\n* consistent name and fix javadoc\n\n* spelling and field name\n\n* default function for partitionsSpec\n\n* other comments\n\n* address comments\n\n* fix tests and spelling\n\n* test\n\n* doc","date":"2020-09-25 07:32:56","modifiedFileCount":"50","status":"M","submitter":"Jihoon Son"}]
