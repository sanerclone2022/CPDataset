[{"authorTime":"2019-01-11 01:50:14","codes":[{"authorDate":"2019-03-02 03:28:03","commitOrder":3,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-03-02 03:28:03","endLine":209,"groupId":"14068","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6e/71656fe2b9b219a2dc1505c7939095ee720c2b.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"B"},{"authorDate":"2019-01-11 01:50:14","commitOrder":3,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-01-11 01:50:14","endLine":453,"groupId":"14068","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cc/3ca979dcbb580762cf3de2e013fe7a6f41eba4.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"NB"}],"commitId":"06c8229c0803314929318c718c5ee8099110b9c0","commitMessage":"@@@Kill all running tasks when the supervisor task is killed (#7041)\n\n* Kill all running tasks when the supervisor task is killed\n\n* add some docs and simplify\n\n* address comment\n","date":"2019-03-02 03:28:03","modifiedFileCount":"4","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-03-16 14:29:25","codes":[{"authorDate":"2019-03-16 14:29:25","commitOrder":4,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-03-16 14:29:25","endLine":208,"groupId":"14068","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6f/7c3b9e713df940fdbb7e5e47476ea610750b68.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2019-03-16 14:29:25","commitOrder":4,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-03-16 14:29:25","endLine":452,"groupId":"14068","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/70/4c5fa4500ba313da8aefe68185cc17fa57c7c6.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"M"}],"commitId":"892d1d35d6cc00487d583f05f1cc138782180ef9","commitMessage":"@@@Deprecate NoneShardSpec and drop support for automatic segment merge (#6883)\n\n* Deprecate noneShardSpec\n\n* clean up noneShardSpec constructor\n\n* revert unnecessary change\n\n* Deprecate mergeTask\n\n* add more doc\n\n* remove convert from indexMerger\n\n* Remove mergeTask\n\n* remove HadoopDruidConverterConfig\n\n* fix build\n\n* fix build\n\n* fix teamcity\n\n* fix teamcity\n\n* fix ServerModule\n\n* fix compilation\n\n* fix compilation\n","date":"2019-03-16 14:29:25","modifiedFileCount":"40","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-07-11 03:22:24","codes":[{"authorDate":"2019-07-11 03:22:24","commitOrder":5,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-07-11 03:22:24","endLine":209,"groupId":"14068","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c7/c8d0b897e3c27a61cc092affefbf2ebbcb5463.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2019-07-11 03:22:24","commitOrder":5,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-07-11 03:22:24","endLine":453,"groupId":"14068","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/04/aa5a7a1b0716167c4e339bc05fd4c889678596.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"M"}],"commitId":"14aec7fceca90dfaf9b2ce4dae68186d04ffcc47","commitMessage":"@@@add config to optionally disable all compression  in intermediate segment persists while ingestion (#7919)\n\n* disable all compression in intermediate segment persists while ingestion\n\n* more changes and build fix\n\n* by default retain existing indexingSpec for intermediate persisted segments\n\n* document indexSpecForIntermediatePersists index tuning config\n\n* fix build issues\n\n* update serde tests\n","date":"2019-07-11 03:22:24","modifiedFileCount":"56","status":"M","submitter":"Himanshu"},{"authorTime":"2019-07-31 08:24:39","codes":[{"authorDate":"2019-07-31 08:24:39","commitOrder":6,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-07-31 08:24:39","endLine":211,"groupId":"14068","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/7d/90a062a4af5b53c02382bb4a28ac55653bea6f.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2019-07-31 08:24:39","commitOrder":6,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-07-31 08:24:39","endLine":453,"groupId":"14068","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f2/b151e2521a46779c802bfba65be7af8ababafc.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":391,"status":"M"}],"commitId":"385f492a555add279a8c6dd368954fde18c41dcb","commitMessage":"@@@Use PartitionsSpec for all task types (#8141)\n\n* Use partitionsSpec for all task types\n\n* fix doc\n\n* fix typos and revert to use isPushRequired\n\n* address comments\n\n* move partitionsSpec to core\n\n* remove hadoopPartitionsSpec\n","date":"2019-07-31 08:24:39","modifiedFileCount":"29","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-08-16 08:43:35","codes":[{"authorDate":"2019-08-16 08:43:35","commitOrder":7,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-08-16 08:43:35","endLine":222,"groupId":"14068","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3f/2e4970ae71214fa398ef2118cd7045fcd72934.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2019-08-16 08:43:35","commitOrder":7,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-08-16 08:43:35","endLine":455,"groupId":"14068","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/16/ab8b105186537f8e755276340f4b4c22d681a7.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":391,"status":"M"}],"commitId":"5dac6375f382ba485ec000802ff0e922929df95d","commitMessage":"@@@Add support for parallel native indexing with shuffle for perfect rollup (#8257)\n\n* Add TaskResourceCleaner; fix a couple of concurrency bugs in batch tasks\n\n* kill runner when it's ready\n\n* add comment\n\n* kill run thread\n\n* fix test\n\n* Take closeable out of Appenderator\n\n* add javadoc\n\n* fix test\n\n* fix test\n\n* update javadoc\n\n* add javadoc about killed task\n\n* address comment\n\n* Add support for parallel native indexing with shuffle for perfect rollup.\n\n* Add comment about volatiles\n\n* fix test\n\n* fix test\n\n* handling missing exceptions\n\n* more clear javadoc for stopGracefully\n\n* unused import\n\n* update javadoc\n\n* Add missing statement in javadoc\n\n* address comments; fix doc\n\n* add javadoc for isGuaranteedRollup\n\n* Rename confusing variable name and fix typos\n\n* fix typos; move fetch() to a better home; fix the expiration time\n\n* add support https\n","date":"2019-08-16 08:43:35","modifiedFileCount":"49","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-08-17 06:57:13","codes":[{"authorDate":"2019-08-17 06:57:13","commitOrder":8,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-08-17 06:57:13","endLine":223,"groupId":"14068","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e3/2915ec0323722c02864c83f3601812095e27f6.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2019-08-17 06:57:13","commitOrder":8,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-08-17 06:57:13","endLine":456,"groupId":"14068","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/90/bf132a921f11a0fd85db44c6958a1275628c6f.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":391,"status":"M"}],"commitId":"31af4eb9adf3e158208bf82bde959157d3ca8629","commitMessage":"@@@Rename maxNumSubTasks to maxNumConcurrentSubTasks for native parallel index task (#8324)\n\n","date":"2019-08-17 06:57:13","modifiedFileCount":"9","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-10-19 04:24:14","codes":[{"authorDate":"2019-10-19 04:24:14","commitOrder":9,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits(null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-10-19 04:24:14","endLine":225,"groupId":"14068","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/46/3ef4db5e67aa37a8fdef28c80f9d3f1920e84f.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits();\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"},{"authorDate":"2019-10-19 04:24:14","commitOrder":9,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-10-19 04:24:14","endLine":458,"groupId":"14068","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d5/5ce70a61b1e7e0563bcaaf705a61a12eccc3bd.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"M"}],"commitId":"30c15900bec7f4df7a72088ec076223839da258f","commitMessage":"@@@Auto compaction based on parallel indexing (#8570)\n\n* Auto compaction based on parallel indexing\n\n* javadoc and doc\n\n* typo\n\n* update spell\n\n* addressing comments\n\n* address comments\n\n* fix log\n\n* fix build\n\n* fix test\n\n* increase default max input segment bytes per task\n\n* fix test\n","date":"2019-10-19 04:24:14","modifiedFileCount":"28","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-11-16 01:22:09","codes":[{"authorDate":"2019-11-16 01:22:09","commitOrder":10,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.getNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-11-16 01:22:09","endLine":225,"groupId":"16450","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/9c/87b5d8970bc375aac1d1f91f1ec7874b3bb53c.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestFirehoseFactory firehoseFactory = (TestFirehoseFactory) ioConfig.getFirehoseFactory();\n    final int numTotalSubTasks = firehoseFactory.getNumSplits(null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2019-11-16 01:22:09","commitOrder":10,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-11-16 01:22:09","endLine":471,"groupId":"16450","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/41/3e99a39a50999a2afdeba9cd3e5d9a929f4d08.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            getObjectMapper().convertValue(\n                new StringInputRowParser(\n                    DEFAULT_PARSE_SPEC,\n                    null\n                ),\n                Map.class\n            ),\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null,\n            getObjectMapper()\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"M"}],"commitId":"1611792855ad9def8b6f5b1375862d05d1acca0a","commitMessage":"@@@Add InputSource and InputFormat interfaces (#8823)\n\n* Add InputSource and InputFormat interfaces\n\n* revert orc dependency\n\n* fix dimension exclusions and failing unit tests\n\n* fix tests\n\n* fix test\n\n* fix test\n\n* fix firehose and inputSource for parallel indexing task\n\n* fix tc\n\n* fix tc: remove unused method\n\n* Formattable\n\n* add needsFormat(); renamed to ObjectSource; pass metricsName for reader\n\n* address comments\n\n* fix closing resource\n\n* fix checkstyle\n\n* fix tests\n\n* remove verify from csv\n\n* Revert \"remove verify from csv\"\n\nThis reverts commit 1ea7758489cc8c9d708bd691fd48e62085fd9455.\n\n* address comments\n\n* fix import order and javadoc\n\n* flatMap\n\n* sampleLine\n\n* Add IntermediateRowParsingReader\n\n* Address comments\n\n* move csv reader test\n\n* remove test for verify\n\n* adjust comments\n\n* Fix InputEntityIteratingReader\n\n* rename source -> entity\n\n* address comments\n","date":"2019-11-16 01:22:09","modifiedFileCount":"72","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-11-16 01:22:09","codes":[{"authorDate":"2019-11-23 17:38:08","commitOrder":11,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-11-23 17:38:08","endLine":225,"groupId":"16450","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/75/64f8cecc4e8397bbaf23444764d345a2b7aece.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.getNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2019-11-16 01:22:09","commitOrder":11,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","date":"2019-11-16 01:22:09","endLine":471,"groupId":"16450","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/41/3e99a39a50999a2afdeba9cd3e5d9a929f4d08.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"N"}],"commitId":"a2e6de4b162912c582c23aa54a18006ea874032e","commitMessage":"@@@Fix the potential race between SplittableInputSource.getNumSplits() and SplittableInputSource.createSplits() in TaskMonitor (#8924)\n\n* Fix the potential race SplittableInputSource.getNumSplits() and SplittableInputSource.createSplits() in TaskMonitor\n\n* Fix docs and javadoc\n\n* Add unit tests for large or small estimated num splits\n\n* add override\n","date":"2019-11-23 17:38:08","modifiedFileCount":"18","status":"M","submitter":"Jihoon Son"},{"authorTime":"2020-02-17 05:00:12","codes":[{"authorDate":"2020-02-17 05:00:12","commitOrder":12,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true),\n        getIndexingServiceClient()\n    );\n  }\n","date":"2020-02-17 05:00:12","endLine":203,"groupId":"16450","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e5/0b41ffcca953c0bae289a81abc0089a5db6cdc.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"},{"authorDate":"2020-02-17 05:00:12","commitOrder":12,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true),\n        getIndexingServiceClient()\n    );\n  }\n","date":"2020-02-17 05:00:12","endLine":454,"groupId":"16450","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/88/dac06b89eda6fbbe4c53eab6d36dada9eb3b4b.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.emptyMap(),\n        indexingServiceClient\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"M"}],"commitId":"3bb9e7e53af4d5926995931e05294f83f756d85c","commitMessage":"@@@Inject things instead of subclassing everything for parallel task testing (#9353)\n\n* Inject things instead of subclassing everything for parallel task\ntesting\n\n* javadoc\n\n* fix compilation\n\n* fix wrong merge\n\n* Address comments\n","date":"2020-02-17 05:00:12","modifiedFileCount":"33","status":"M","submitter":"Jihoon Son"},{"authorTime":"2020-08-27 08:08:12","codes":[{"authorDate":"2020-08-27 08:08:12","commitOrder":13,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","date":"2020-08-27 08:08:12","endLine":199,"groupId":"16450","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/37/fb265b647de8eaedae2428384007a54851538d.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true),\n        getIndexingServiceClient()\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2020-08-27 08:08:12","commitOrder":13,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","date":"2020-08-27 08:08:12","endLine":450,"groupId":"16450","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/0a/30bf7270707f08c09b99ff13cfe16b5f5381c4.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true),\n        getIndexingServiceClient()\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":391,"status":"M"}],"commitId":"f82fd22fa7de175200b7127c34c2eb2900bf7317","commitMessage":"@@@Move tools for indexing to TaskToolbox instead of injecting them in constructor (#10308)\n\n* Move tools for indexing to TaskToolbox instead of injecting them in constructor\n\n* oops.  other changes\n\n* fix test\n\n* unnecessary new file\n\n* fix test\n\n* fix build","date":"2020-08-27 08:08:12","modifiedFileCount":"67","status":"M","submitter":"Jihoon Son"},{"authorTime":"2020-10-24 09:34:26","codes":[{"authorDate":"2020-10-24 09:34:26","commitOrder":14,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","date":"2020-10-24 09:34:26","endLine":200,"groupId":"16450","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/fc/193b0e1321b4668785259f8fcc0b0dd2afd39c.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2020-10-24 09:34:26","commitOrder":14,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","date":"2020-10-24 09:34:26","endLine":451,"groupId":"16450","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/be/6b0a86737eb904fb9561b9791585dfec6b3da6.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":391,"status":"M"}],"commitId":"f3a2903218573f5d336b082b1c9b8a60a19e8c54","commitMessage":"@@@Configurable Index Type (#10335)\n\n* Introduce a Configurable Index Type\n\n* Change to @UnstableApi\n\n* Add AppendableIndexSpecTest\n\n* Update doc\n\n* Add spelling exception\n\n* Add tests coverage\n\n* Revert some of the changes to reduce diff\n\n* Minor fixes\n\n* Update getMaxBytesInMemoryOrDefault() comment\n\n* Fix typo.  remove redundant interface\n\n* Remove off-heap spec (postponed to a later PR)\n\n* Add javadocs to AppendableIndexSpec\n\n* Describe testCreateTask()\n\n* Add tests for AppendableIndexSpec within TuningConfig\n\n* Modify hashCode() to conform with equals()\n\n* Add comment where building incremental-index\n\n* Add \"EqualsVerifier\" tests\n\n* Revert some of the API back to AppenderatorConfig\n\n* Don't use multi-line comments\n\n* Remove knob documentation (deferred)","date":"2020-10-24 09:34:26","modifiedFileCount":"72","status":"M","submitter":"Liran Funaro"},{"authorTime":"2021-01-06 14:19:09","codes":[{"authorDate":"2021-01-06 14:19:09","commitOrder":15,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","date":"2021-01-06 14:19:09","endLine":201,"groupId":"16450","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ee/231b50d780b5e521e78f70bbb3eb2b54ac4fa5.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2021-01-06 14:19:09","commitOrder":15,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","date":"2021-01-06 14:19:09","endLine":452,"groupId":"16450","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a4/937774eebfe95e5a8fcd4f49efc96962f0558c.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":391,"status":"M"}],"commitId":"68bb038b314c26bcc57aa96e1078c22d2f24fd35","commitMessage":"@@@Multiphase segment merge for IndexMergerV9 (#10689)\n\n* Multiphase merge for IndexMergerV9\n\n* JSON fix\n\n* Cleanup temp files\n\n* Docs\n\n* Address logging and add IT\n\n* Fix spelling and test unloader datasource name","date":"2021-01-06 14:19:09","modifiedFileCount":"40","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2021-01-27 16:34:56","codes":[{"authorDate":"2021-01-27 16:34:56","commitOrder":16,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","date":"2021-01-27 16:34:56","endLine":202,"groupId":"16450","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/16/2c86ec52e4dec08683d676b00c6104f954a45d.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2021-01-27 16:34:56","commitOrder":16,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","date":"2021-01-27 16:34:56","endLine":453,"groupId":"16450","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f4/b1746ee27febd038ee775f92ba2286a41e9a7f.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":391,"status":"M"}],"commitId":"a46d561bd7e2b045a08a2e475847d4a7505a1c93","commitMessage":"@@@Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead (#10740)\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* fix checkstyle\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* fix test\n\n* fix test\n\n* add log\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* address comments\n\n* fix checkstyle\n\n* fix checkstyle\n\n* add config to skip overhead memory calculation\n\n* add test for the skipBytesInMemoryOverheadCheck config\n\n* add docs\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix spelling\n\n* address comments\n\n* fix travis\n\n* address comments","date":"2021-01-27 16:34:56","modifiedFileCount":"50","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-04-09 12:03:00","codes":[{"authorDate":"2021-04-09 12:03:00","commitOrder":17,"curCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","date":"2021-04-09 12:03:00","endLine":205,"groupId":"104434","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/48/9035c21676a834aa05d07cedb362e74abf76ec.src","preCode":"  private ParallelIndexSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    final TestInputSource inputSource = (TestInputSource) ioConfig.getInputSource();\n    final int numTotalSubTasks = inputSource.estimateNumSplits(new NoopInputFormat(), null);\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            numTotalSubTasks,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskKillTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"},{"authorDate":"2021-04-09 12:03:00","commitOrder":17,"curCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","date":"2021-04-09 12:03:00","endLine":455,"groupId":"104434","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"newTask","params":"(Intervalinterval@ParallelIndexIOConfigioConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ab/ac3efecaeaf336ee04e46055e51db7dd857da7.src","preCode":"  private TestSupervisorTask newTask(\n      Interval interval,\n      ParallelIndexIOConfig ioConfig\n  )\n  {\n    \r\n    final ParallelIndexIngestionSpec ingestionSpec = new ParallelIndexIngestionSpec(\n        new DataSchema(\n            \"dataSource\",\n            DEFAULT_TIMESTAMP_SPEC,\n            DEFAULT_DIMENSIONS_SPEC,\n            new AggregatorFactory[]{\n                new LongSumAggregatorFactory(\"val\", \"val\")\n            },\n            new UniformGranularitySpec(\n                Granularities.DAY,\n                Granularities.MINUTE,\n                interval == null ? null : Collections.singletonList(interval)\n            ),\n            null\n        ),\n        ioConfig,\n        new ParallelIndexTuningConfig(\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            NUM_SUB_TASKS,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        )\n    );\n\n    \r\n    return new TestSupervisorTask(\n        null,\n        null,\n        ingestionSpec,\n        Collections.singletonMap(AbstractParallelIndexSupervisorTaskTest.DISABLE_TASK_INJECT_CONTEXT_KEY, true)\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTaskResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"M"}],"commitId":"8264203cee688607091232897749e959e7706010","commitMessage":"@@@Allow client to configure batch ingestion task to wait to complete until segments are confirmed to be available by other (#10676)\n\n* Add ability to wait for segment availability for batch jobs\n\n* IT updates\n\n* fix queries in legacy hadoop IT\n\n* Fix broken indexing integration tests\n\n* address an lgtm flag\n\n* spell checker still flagging for hadoop doc. adding under that file header too\n\n* fix compaction IT\n\n* Updates to wait for availability method\n\n* improve unit testing for patch\n\n* fix bad indentation\n\n* refactor waitForSegmentAvailability\n\n* Fixes based off of review comments\n\n* cleanup to get compile after merging with master\n\n* fix failing test after previous logic update\n\n* add back code that must have gotten deleted during conflict resolution\n\n* update some logging code\n\n* fixes to get compilation working after merge with master\n\n* reset interrupt flag in catch block after code review pointed it out\n\n* small changes following self-review\n\n* fixup some issues brought on by merge with master\n\n* small changes after review\n\n* cleanup a little bit after merge with master\n\n* Fix potential resource leak in AbstractBatchIndexTask\n\n* syntax fix\n\n* Add a Compcation TuningConfig type\n\n* add docs stipulating the lack of support by Compaction tasks for the new config\n\n* Fixup compilation errors after merge with master\n\n* Remove erreneous newline","date":"2021-04-09 12:03:00","modifiedFileCount":"106","status":"M","submitter":"Lucas Capistrant"}]
