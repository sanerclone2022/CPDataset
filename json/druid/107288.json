[{"authorTime":"2020-08-19 02:03:13","codes":[{"authorDate":"2020-08-19 02:03:13","commitOrder":2,"curCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClientKillUnusedSegmentsTaskQuery that = (ClientKillUnusedSegmentsTaskQuery) o;\n    return Objects.equals(id, that.id) &&\n           Objects.equals(dataSource, that.dataSource) &&\n           Objects.equals(interval, that.interval);\n  }\n","date":"2020-08-19 02:03:13","endLine":94,"groupId":"20220","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ec/008d385686e024cbf8e88298d833aca7110e2b.src","preCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClientKillUnusedSegmentsTaskQuery that = (ClientKillUnusedSegmentsTaskQuery) o;\n    return Objects.equals(id, that.id) &&\n           Objects.equals(dataSource, that.dataSource) &&\n           Objects.equals(interval, that.interval);\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/ClientKillUnusedSegmentsTaskQuery.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"},{"authorDate":"2020-08-19 02:03:13","commitOrder":2,"curCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClientCompactionTaskQuery that = (ClientCompactionTaskQuery) o;\n    return Objects.equals(id, that.id) &&\n           Objects.equals(dataSource, that.dataSource) &&\n           Objects.equals(ioConfig, that.ioConfig) &&\n           Objects.equals(tuningConfig, that.tuningConfig) &&\n           Objects.equals(context, that.context);\n  }\n","date":"2020-08-19 02:03:13","endLine":113,"groupId":"20220","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d0/dd1756f02888c75a19ff7e01901a9172d1753d.src","preCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClientCompactionTaskQuery that = (ClientCompactionTaskQuery) o;\n    return Objects.equals(id, that.id) &&\n           Objects.equals(dataSource, that.dataSource) &&\n           Objects.equals(ioConfig, that.ioConfig) &&\n           Objects.equals(tuningConfig, that.tuningConfig) &&\n           Objects.equals(context, that.context);\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/ClientCompactionTaskQuery.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"MB"}],"commitId":"9a81740281d8ee8eafafbf71ccfdb90cb87e34d6","commitMessage":"@@@Don't log the entire task spec (#10278)\n\n* Don't log the entire task spec\n\n* fix lgtm\n\n* fix serde\n\n* address comments and add tests\n\n* fix tests\n\n* remove unnecessary codes","date":"2020-08-19 02:03:13","modifiedFileCount":"24","status":"M","submitter":"Jihoon Son"},{"authorTime":"2021-02-12 19:03:20","codes":[{"authorDate":"2020-08-19 02:03:13","commitOrder":3,"curCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClientKillUnusedSegmentsTaskQuery that = (ClientKillUnusedSegmentsTaskQuery) o;\n    return Objects.equals(id, that.id) &&\n           Objects.equals(dataSource, that.dataSource) &&\n           Objects.equals(interval, that.interval);\n  }\n","date":"2020-08-19 02:03:13","endLine":94,"groupId":"20220","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ec/008d385686e024cbf8e88298d833aca7110e2b.src","preCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClientKillUnusedSegmentsTaskQuery that = (ClientKillUnusedSegmentsTaskQuery) o;\n    return Objects.equals(id, that.id) &&\n           Objects.equals(dataSource, that.dataSource) &&\n           Objects.equals(interval, that.interval);\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/ClientKillUnusedSegmentsTaskQuery.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"},{"authorDate":"2021-02-12 19:03:20","commitOrder":3,"curCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClientCompactionTaskQuery that = (ClientCompactionTaskQuery) o;\n    return Objects.equals(id, that.id) &&\n           Objects.equals(dataSource, that.dataSource) &&\n           Objects.equals(ioConfig, that.ioConfig) &&\n           Objects.equals(tuningConfig, that.tuningConfig) &&\n           Objects.equals(granularitySpec, that.granularitySpec) &&\n           Objects.equals(context, that.context);\n  }\n","date":"2021-02-12 19:03:20","endLine":124,"groupId":"20220","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ea/4155525db34d8e8e56b70b3ffca953a334474c.src","preCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClientCompactionTaskQuery that = (ClientCompactionTaskQuery) o;\n    return Objects.equals(id, that.id) &&\n           Objects.equals(dataSource, that.dataSource) &&\n           Objects.equals(ioConfig, that.ioConfig) &&\n           Objects.equals(tuningConfig, that.tuningConfig) &&\n           Objects.equals(context, that.context);\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/ClientCompactionTaskQuery.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"6541178c21839530a42af4b4675a9bc680bffca6","commitMessage":"@@@Support segmentGranularity for auto-compaction (#10843)\n\n* Support segmentGranularity for auto-compaction\n\n* Support segmentGranularity for auto-compaction\n\n* Support segmentGranularity for auto-compaction\n\n* Support segmentGranularity for auto-compaction\n\n* resolve conflict\n\n* Support segmentGranularity for auto-compaction\n\n* Support segmentGranularity for auto-compaction\n\n* fix tests\n\n* fix more tests\n\n* fix checkstyle\n\n* add unit tests\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix checkstyle\n\n* add unit tests\n\n* add integration tests\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix failing tests\n\n* address comments\n\n* address comments\n\n* fix tests\n\n* fix tests\n\n* fix test\n\n* fix test\n\n* fix test\n\n* fix test\n\n* fix test\n\n* fix test\n\n* fix test\n\n* fix test","date":"2021-02-12 19:03:20","modifiedFileCount":"32","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-02-12 19:03:20","codes":[{"authorDate":"2021-07-29 23:48:43","commitOrder":4,"curCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClientKillUnusedSegmentsTaskQuery that = (ClientKillUnusedSegmentsTaskQuery) o;\n    return Objects.equals(id, that.id)\n           && Objects.equals(dataSource, that.dataSource)\n           && Objects.equals(interval, that.interval)\n           && Objects.equals(markAsUnused, that.markAsUnused);\n  }\n","date":"2021-07-29 23:48:43","endLine":104,"groupId":"107288","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/44/35e5fac4c81c3d0b097060a1e1221f9d4120db.src","preCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClientKillUnusedSegmentsTaskQuery that = (ClientKillUnusedSegmentsTaskQuery) o;\n    return Objects.equals(id, that.id) &&\n           Objects.equals(dataSource, that.dataSource) &&\n           Objects.equals(interval, that.interval);\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/ClientKillUnusedSegmentsTaskQuery.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2021-02-12 19:03:20","commitOrder":4,"curCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClientCompactionTaskQuery that = (ClientCompactionTaskQuery) o;\n    return Objects.equals(id, that.id) &&\n           Objects.equals(dataSource, that.dataSource) &&\n           Objects.equals(ioConfig, that.ioConfig) &&\n           Objects.equals(tuningConfig, that.tuningConfig) &&\n           Objects.equals(granularitySpec, that.granularitySpec) &&\n           Objects.equals(context, that.context);\n  }\n","date":"2021-02-12 19:03:20","endLine":124,"groupId":"107288","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ea/4155525db34d8e8e56b70b3ffca953a334474c.src","preCode":"  public boolean equals(Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ClientCompactionTaskQuery that = (ClientCompactionTaskQuery) o;\n    return Objects.equals(id, that.id) &&\n           Objects.equals(dataSource, that.dataSource) &&\n           Objects.equals(ioConfig, that.ioConfig) &&\n           Objects.equals(tuningConfig, that.tuningConfig) &&\n           Objects.equals(granularitySpec, that.granularitySpec) &&\n           Objects.equals(context, that.context);\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/ClientCompactionTaskQuery.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"N"}],"commitId":"9b250c54aa1b18c21ff8369ee4a4a6015bbafc40","commitMessage":"@@@Allow kill task to mark segments as unused (#11501)\n\n* Allow kill task to mark segments as unused\n\n* Add IndexerSQLMetadataStorageCoordinator test\n\n* Update docs/ingestion/data-management.md\n\nCo-authored-by: Jihoon Son <jihoonson@apache.org>\n\n* Add warning to kill task doc\n\nCo-authored-by: Jihoon Son <jihoonson@apache.org>","date":"2021-07-29 23:48:43","modifiedFileCount":"12","status":"M","submitter":"Jonathan Wei"}]
