[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTopNCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"imps\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(\n            new TopNQueryConfig(),\n            QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n        )\n    );\n\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n    HashMap<String, List> context = new HashMap<String, List>();\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"imps\")\n        .aggregators(RENAMED_AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeRenamedTopNResults(\n            DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998,\n            DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995,\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":848,"groupId":"14805","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopNCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/6dfd0a7ba50835713564aebc5ab8650ac4b7a1.src","preCode":"  public void testTopNCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"imps\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(\n            new TopNQueryConfig(),\n            QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n        )\n    );\n\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n    HashMap<String, List> context = new HashMap<String, List>();\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"imps\")\n        .aggregators(RENAMED_AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeRenamedTopNResults(\n            DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998,\n            DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995,\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":775,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTopNOnPostAggMetricCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"avg_imps_per_row_double\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new TopNQueryQueryToolChest(\n        new TopNQueryConfig(),\n        QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n\n    HashMap<String, List> context = new HashMap<String, List>();\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"avg_imps_per_row_double\")\n        .aggregators(AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":1100,"groupId":"16174","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopNOnPostAggMetricCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/6dfd0a7ba50835713564aebc5ab8650ac4b7a1.src","preCode":"  public void testTopNOnPostAggMetricCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"avg_imps_per_row_double\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new TopNQueryQueryToolChest(\n        new TopNQueryConfig(),\n        QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n\n    HashMap<String, List> context = new HashMap<String, List>();\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"avg_imps_per_row_double\")\n        .aggregators(AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1030,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-02-05 01:18:12","codes":[{"authorDate":"2019-02-05 01:18:12","commitOrder":2,"curCode":"  public void testTopNCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"imps\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(\n            new TopNQueryConfig(),\n            QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n        )\n    );\n\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n    HashMap<String, List> context = new HashMap<String, List>();\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"imps\")\n        .aggregators(RENAMED_AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeRenamedTopNResults(\n            DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998,\n            DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995,\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","date":"2019-02-05 01:18:12","endLine":850,"groupId":"14805","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopNCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e1/b7a886d645684fe55153cd95751e0e2c6d7717.src","preCode":"  public void testTopNCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"imps\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(\n            new TopNQueryConfig(),\n            QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n        )\n    );\n\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n    HashMap<String, List> context = new HashMap<String, List>();\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"imps\")\n        .aggregators(RENAMED_AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeRenamedTopNResults(\n            DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998,\n            DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995,\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":777,"status":"M"},{"authorDate":"2019-02-05 01:18:12","commitOrder":2,"curCode":"  public void testTopNOnPostAggMetricCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"avg_imps_per_row_double\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new TopNQueryQueryToolChest(\n        new TopNQueryConfig(),\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n\n    HashMap<String, List> context = new HashMap<String, List>();\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"avg_imps_per_row_double\")\n        .aggregators(AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","date":"2019-02-05 01:18:12","endLine":1103,"groupId":"16174","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopNOnPostAggMetricCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e1/b7a886d645684fe55153cd95751e0e2c6d7717.src","preCode":"  public void testTopNOnPostAggMetricCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"avg_imps_per_row_double\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new TopNQueryQueryToolChest(\n        new TopNQueryConfig(),\n        QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n\n    HashMap<String, List> context = new HashMap<String, List>();\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"avg_imps_per_row_double\")\n        .aggregators(AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1033,"status":"M"}],"commitId":"0e926e865276f892ddc5b62685d331b822104022","commitMessage":"@@@Prohibit assigning concurrent maps into Map-typed variables and fields and fix a race condition in CoordinatorRuleManager (#6898)\n\n* Prohibit assigning concurrent maps into Map-types variables and fields; Fix a race condition in CoordinatorRuleManager; improve logic in DirectDruidClient and ResourcePool\n\n* Enforce that if compute().  computeIfAbsent().  computeIfPresent() or merge() is called on a ConcurrentHashMap.  it's stored in a ConcurrentHashMap-typed variable.  not ConcurrentMap; add comments explaining get()-before-computeIfAbsent() optimization; refactor Counters; fix a race condition in Intialization.java\n\n* Remove unnecessary comment\n\n* Checkstyle\n\n* Fix getFromExtensions()\n\n* Add a reference to the comment about guarded computeIfAbsent() optimization; IdentityHashMap optimization\n\n* Fix UriCacheGeneratorTest\n\n* Workaround issue with MaterializedViewQueryQueryToolChest\n\n* Strengthen Appenderator's contract regarding concurrency\n","date":"2019-02-05 01:18:12","modifiedFileCount":"101","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-07-24 23:29:03","codes":[{"authorDate":"2019-07-24 23:29:03","commitOrder":3,"curCode":"  public void testTopNCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"imps\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(\n            new TopNQueryConfig(),\n            QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n        )\n    );\n\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"imps\")\n        .aggregators(RENAMED_AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeRenamedTopNResults(\n            DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998,\n            DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995,\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query))\n    );\n  }\n","date":"2019-07-24 23:29:03","endLine":846,"groupId":"8539","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopNCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/38/9b49f4678c068e8f186b7e52c88926a999f50a.src","preCode":"  public void testTopNCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"imps\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(\n            new TopNQueryConfig(),\n            QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n        )\n    );\n\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n    HashMap<String, List> context = new HashMap<String, List>();\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"imps\")\n        .aggregators(RENAMED_AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeRenamedTopNResults(\n            DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998,\n            DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995,\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":774,"status":"M"},{"authorDate":"2019-07-24 23:29:03","commitOrder":3,"curCode":"  public void testTopNOnPostAggMetricCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"avg_imps_per_row_double\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new TopNQueryQueryToolChest(\n        new TopNQueryConfig(),\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"avg_imps_per_row_double\")\n        .aggregators(AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query))\n    );\n  }\n","date":"2019-07-24 23:29:03","endLine":1096,"groupId":"10483","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopNOnPostAggMetricCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/38/9b49f4678c068e8f186b7e52c88926a999f50a.src","preCode":"  public void testTopNOnPostAggMetricCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"avg_imps_per_row_double\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new TopNQueryQueryToolChest(\n        new TopNQueryConfig(),\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n\n    HashMap<String, List> context = new HashMap<String, List>();\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"avg_imps_per_row_double\")\n        .aggregators(AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1027,"status":"M"}],"commitId":"799d20249fe6333ea86b020f6d09c91fa4d3f998","commitMessage":"@@@Response context refactoring (#8110)\n\n* Response context refactoring\n\n* Serialization/Deserialization of ResponseContext\n\n* Added java doc comments\n\n* Renamed vars related to ResponseContext\n\n* Renamed empty() methods to createEmpty()\n\n* Fixed ResponseContext usage\n\n* Renamed multiple ResponseContext static fields\n\n* Added PublicApi annotations\n\n* Renamed QueryResponseContext class to ResourceIOReaderWriter\n\n* Moved the protected method below public static constants\n\n* Added createEmpty method to ResponseContext with DefaultResponseContext creation\n\n* Fixed inspection error\n\n* Added comments to the ResponseContext length limit and ResponseContext\nhttp header name\n\n* Added a comment of possible future refactoring\n\n* Removed .gitignore file of indexing-service\n\n* Removed a never-used method\n\n* VisibleForTesting method reducing boilerplate\n\nCo-Authored-By: Clint Wylie <cjwylie@gmail.com>\n\n* Reduced boilerplate\n\n* Renamed the method serialize to serializeWith\n\n* Removed unused import\n\n* Fixed incorrectly refactored test method\n\n* Added comments for ResponseContext keys\n\n* Fixed incorrectly refactored test method\n\n* Fixed IntervalChunkingQueryRunnerTest mocks\n","date":"2019-07-24 23:29:03","modifiedFileCount":"142","status":"M","submitter":"Eugene Sevastianov"},{"authorTime":"2020-01-20 09:14:23","codes":[{"authorDate":"2020-01-20 09:14:23","commitOrder":4,"curCode":"  public void testTopNCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"imps\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(new TopNQueryConfig())\n    );\n\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"imps\")\n        .aggregators(RENAMED_AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeRenamedTopNResults(\n            DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998,\n            DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995,\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query))\n    );\n  }\n","date":"2020-01-20 09:14:23","endLine":814,"groupId":"8539","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopNCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bd/91104aac410fa6f1dfe514abacec299e649d2f.src","preCode":"  public void testTopNCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"imps\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(\n            new TopNQueryConfig(),\n            QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n        )\n    );\n\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"imps\")\n        .aggregators(RENAMED_AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeRenamedTopNResults(\n            DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998,\n            DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995,\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query))\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":745,"status":"M"},{"authorDate":"2020-01-20 09:14:23","commitOrder":4,"curCode":"  public void testTopNOnPostAggMetricCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"avg_imps_per_row_double\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(new TopNQueryConfig())\n    );\n\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"avg_imps_per_row_double\")\n        .aggregators(AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query))\n    );\n  }\n","date":"2020-01-20 09:14:23","endLine":1058,"groupId":"10483","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopNOnPostAggMetricCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bd/91104aac410fa6f1dfe514abacec299e649d2f.src","preCode":"  public void testTopNOnPostAggMetricCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"avg_imps_per_row_double\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new TopNQueryQueryToolChest(\n        new TopNQueryConfig(),\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"avg_imps_per_row_double\")\n        .aggregators(AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query))\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":990,"status":"M"}],"commitId":"d21054f7c5f72f9db1ecfb72b46ee866876f1e4b","commitMessage":"@@@Remove the deprecated interval-chunking stuff. (#9216)\n\n* Remove the deprecated interval-chunking stuff.\n\nSee https://github.com/apache/druid/pull/6591.  https://github.com/apache/druid/pull/4004#issuecomment-284171911 for details.\n\n* Remove unused import.\n\n* Remove chunkInterval too.\n","date":"2020-01-20 09:14:23","modifiedFileCount":"65","status":"M","submitter":"Gian Merlino"},{"authorTime":"2020-07-02 05:02:21","codes":[{"authorDate":"2020-07-02 05:02:21","commitOrder":5,"curCode":"  public void testTopNCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"imps\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(new TopNQueryConfig())\n    );\n\n    testQueryCaching(\n        runner,\n        builder.randomQueryId().build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"imps\")\n        .aggregators(RENAMED_AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .randomQueryId()\n        .build();\n    TestHelper.assertExpectedResults(\n        makeRenamedTopNResults(\n            DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998,\n            DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995,\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query))\n    );\n  }\n","date":"2020-07-02 05:02:21","endLine":827,"groupId":"10869","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopNCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/45/2dd8cadd6b4c232ab41fc0990812d7c3f25a27.src","preCode":"  public void testTopNCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"imps\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(new TopNQueryConfig())\n    );\n\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"imps\")\n        .aggregators(RENAMED_AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeRenamedTopNResults(\n            DateTimes.of(\"2011-01-01\"), \"a\", 50, 5000, \"b\", 50, 4999, \"c\", 50, 4998,\n            DateTimes.of(\"2011-01-02\"), \"a\", 50, 4997, \"b\", 50, 4996, \"c\", 50, 4995,\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query))\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":757,"status":"M"},{"authorDate":"2020-07-02 05:02:21","commitOrder":5,"curCode":"  public void testTopNOnPostAggMetricCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"avg_imps_per_row_double\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(new TopNQueryConfig())\n    );\n\n    testQueryCaching(\n        runner,\n        builder.randomQueryId().build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"avg_imps_per_row_double\")\n        .aggregators(AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .randomQueryId()\n        .build();\n    TestHelper.assertExpectedResults(\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query))\n    );\n  }\n","date":"2020-07-02 05:02:21","endLine":1075,"groupId":"10869","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopNOnPostAggMetricCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/45/2dd8cadd6b4c232ab41fc0990812d7c3f25a27.src","preCode":"  public void testTopNOnPostAggMetricCaching()\n  {\n    final TopNQueryBuilder builder = new TopNQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .dimension(TOP_DIM)\n        .metric(\"avg_imps_per_row_double\")\n        .threshold(3)\n        .intervals(SEG_SPEC)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .aggregators(AGGS)\n        .postAggregators(POST_AGGS)\n        .context(CONTEXT);\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new TopNQueryQueryToolChest(new TopNQueryConfig())\n    );\n\n    testQueryCaching(\n        runner,\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeTopNResultsWithoutRename(),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        )\n    );\n\n    TopNQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .metric(\"avg_imps_per_row_double\")\n        .aggregators(AGGS)\n        .postAggregators(DIFF_ORDER_POST_AGGS)\n        .build();\n    TestHelper.assertExpectedResults(\n        makeTopNResultsWithoutRename(\n            DateTimes.of(\"2011-01-05\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-05T01\"), \"a\", 50, 4994, \"b\", 50, 4993, \"c\", 50, 4992,\n            DateTimes.of(\"2011-01-06\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-06T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-07T01\"), \"a\", 50, 4991, \"b\", 50, 4990, \"c\", 50, 4989,\n            DateTimes.of(\"2011-01-08\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-08T01\"), \"a\", 50, 4988, \"b\", 50, 4987, \"c\", 50, 4986,\n            DateTimes.of(\"2011-01-09\"), \"c1\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983,\n            DateTimes.of(\"2011-01-09T01\"), \"c2\", 50, 4985, \"b\", 50, 4984, \"c\", 50, 4983\n        ),\n        runner.run(QueryPlus.wrap(query))\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1006,"status":"M"}],"commitId":"657f8ee80fa86779cf26a01072814b1530277aa7","commitMessage":"@@@Fix RetryQueryRunner to actually do the job (#10082)\n\n* Fix RetryQueryRunner to actually do the job\n\n* more javadoc\n\n* fix test and checkstyle\n\n* don't combine for testing\n\n* address comments\n\n* fix unit tests\n\n* always initialize response context in cachingClusteredClient\n\n* fix subquery\n\n* address comments\n\n* fix test\n\n* query id for builders\n\n* make queryId optional in the builders and ClusterQueryResult\n\n* fix test\n\n* suppress tests and unused methods\n\n* exclude groupBy builder\n\n* fix jacoco exclusion\n\n* add tests for builders\n\n* address comments\n\n* don't truncate","date":"2020-07-02 05:02:21","modifiedFileCount":"33","status":"M","submitter":"Jihoon Son"}]
