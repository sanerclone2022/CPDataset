[{"authorTime":"2020-01-28 03:24:29","codes":[{"authorDate":"2020-01-28 03:24:29","commitOrder":4,"curCode":"  public void testSerde() throws IOException\n  {\n    final UserCompactionTaskQueryTuningConfig tuningConfig = new UserCompactionTaskQueryTuningConfig(\n        1000,\n        10000L,\n        2000L,\n        new SegmentsSplitHintSpec(42L),\n        new IndexSpec(\n            new RoaringBitmapSerdeFactory(false),\n            CompressionStrategy.LZF,\n            CompressionStrategy.UNCOMPRESSED,\n            CompressionFactory.LongEncodingStrategy.LONGS\n        ),\n        1,\n        3000L,\n        5\n    );\n\n    final String json = OBJECT_MAPPER.writeValueAsString(tuningConfig);\n    final UserCompactionTaskQueryTuningConfig fromJson =\n        OBJECT_MAPPER.readValue(json, UserCompactionTaskQueryTuningConfig.class);\n    Assert.assertEquals(tuningConfig, fromJson);\n  }\n","date":"2020-01-28 03:24:29","endLine":74,"groupId":"3472","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a1/e6e86ac35043ab850a81fe14fcd02126037e5d.src","preCode":"  public void testSerde() throws IOException\n  {\n    final UserCompactionTaskQueryTuningConfig tuningConfig = new UserCompactionTaskQueryTuningConfig(\n        1000,\n        10000L,\n        2000L,\n        new SegmentsSplitHintSpec(42L),\n        new IndexSpec(\n            new RoaringBitmapSerdeFactory(false),\n            CompressionStrategy.LZF,\n            CompressionStrategy.UNCOMPRESSED,\n            CompressionFactory.LongEncodingStrategy.LONGS\n        ),\n        1,\n        3000L,\n        5\n    );\n\n    final String json = OBJECT_MAPPER.writeValueAsString(tuningConfig);\n    final UserCompactionTaskQueryTuningConfig fromJson =\n        OBJECT_MAPPER.readValue(json, UserCompactionTaskQueryTuningConfig.class);\n    Assert.assertEquals(tuningConfig, fromJson);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/UserCompactionTaskQueryTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2020-01-28 03:24:29","commitOrder":4,"curCode":"  public void testSerdeUserCompactionTuningConfig() throws IOException\n  {\n    final UserCompactionTaskQueryTuningConfig tuningConfig = new UserCompactionTaskQueryTuningConfig(\n        1000,\n        10000L,\n        2000L,\n        new SegmentsSplitHintSpec(10000L),\n        new IndexSpec(\n            new RoaringBitmapSerdeFactory(false),\n            CompressionStrategy.LZF,\n            CompressionStrategy.UNCOMPRESSED,\n            CompressionFactory.LongEncodingStrategy.LONGS\n        ),\n        1,\n        3000L,\n        null\n    );\n\n    final String json = OBJECT_MAPPER.writeValueAsString(tuningConfig);\n    final UserCompactionTaskQueryTuningConfig fromJson =\n        OBJECT_MAPPER.readValue(json, UserCompactionTaskQueryTuningConfig.class);\n    Assert.assertEquals(tuningConfig, fromJson);\n  }\n","date":"2020-01-28 03:24:29","endLine":183,"groupId":"3472","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerdeUserCompactionTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a2/d36c1fa265f5ee4e5e4017c2e014d46081fcb9.src","preCode":"  public void testSerdeUserCompactionTuningConfig() throws IOException\n  {\n    final UserCompactionTaskQueryTuningConfig tuningConfig = new UserCompactionTaskQueryTuningConfig(\n        1000,\n        10000L,\n        2000L,\n        new SegmentsSplitHintSpec(10000L),\n        new IndexSpec(\n            new RoaringBitmapSerdeFactory(false),\n            CompressionStrategy.LZF,\n            CompressionStrategy.UNCOMPRESSED,\n            CompressionFactory.LongEncodingStrategy.LONGS\n        ),\n        1,\n        3000L,\n        null\n    );\n\n    final String json = OBJECT_MAPPER.writeValueAsString(tuningConfig);\n    final UserCompactionTaskQueryTuningConfig fromJson =\n        OBJECT_MAPPER.readValue(json, UserCompactionTaskQueryTuningConfig.class);\n    Assert.assertEquals(tuningConfig, fromJson);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/DataSourceCompactionConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"MB"}],"commitId":"b9186f8f9ff2ff52aceda42bc5f24ffd47a7d17e","commitMessage":"@@@Reconcile terminology and method naming to 'used/unused segments'; Rename MetadataSegmentManager to MetadataSegmentsManager (#7306)\n\n* Reconcile terminology and method naming to 'used/unused segments'; Don't use terms 'enable/disable data source'; Rename MetadataSegmentManager to MetadataSegments; Make REST API methods which mark segments as used/unused to return server error instead of an empty response in case of error\n\n* Fix brace\n\n* Import order\n\n* Rename withKillDataSourceWhitelist to withSpecificDataSourcesToKill\n\n* Fix tests\n\n* Fix tests by adding proper methods without interval parameters to IndexerMetadataStorageCoordinator instead of hacking with Intervals.ETERNITY\n\n* More aligned names of DruidCoordinatorHelpers.  rename several CoordinatorDynamicConfig parameters\n\n* Rename ClientCompactTaskQuery to ClientCompactionTaskQuery for consistency with CompactionTask; ClientCompactQueryTuningConfig to ClientCompactionTaskQueryTuningConfig\n\n* More variable and method renames\n\n* Rename MetadataSegments to SegmentsMetadata\n\n* Javadoc update\n\n* Simplify SegmentsMetadata.getUnusedSegmentIntervals().  more javadocs\n\n* Update Javadoc of VersionedIntervalTimeline.iterateAllObjects()\n\n* Reorder imports\n\n* Rename SegmentsMetadata.tryMark... methods to mark... and make them to return boolean and the numbers of segments changed and relay exceptions to callers\n\n* Complete merge\n\n* Add CollectionUtils.newTreeSet(); Refactor DruidCoordinatorRuntimeParams creation in tests\n\n* Remove MetadataSegmentManager\n\n* Rename millisLagSinceCoordinatorBecomesLeaderBeforeCanMarkAsUnusedOvershadowedSegments to leadingTimeMillisBeforeCanMarkAsUnusedOvershadowedSegments\n\n* Fix tests.  refactor DruidCluster creation in tests into DruidClusterBuilder\n\n* Fix inspections\n\n* Fix SQLMetadataSegmentManagerEmptyTest and rename it to SqlSegmentsMetadataEmptyTest\n\n* Rename SegmentsAndMetadata to SegmentsAndCommitMetadata to reduce the similarity with SegmentsMetadata; Rename some methods\n\n* Rename DruidCoordinatorHelper to CoordinatorDuty.  refactor DruidCoordinator\n\n* Unused import\n\n* Optimize imports\n\n* Rename IndexerSQLMetadataStorageCoordinator.getDataSourceMetadata() to retrieveDataSourceMetadata()\n\n* Unused import\n\n* Update terminology in datasource-view.tsx\n\n* Fix label in datasource-view.spec.tsx.snap\n\n* Fix lint errors in datasource-view.tsx\n\n* Doc improvements\n\n* Another attempt to please TSLint\n\n* Another attempt to please TSLint\n\n* Style fixes\n\n* Fix IndexerSQLMetadataStorageCoordinator.createUsedSegmentsSqlQueryForIntervals() (wrong merge)\n\n* Try to fix docs build issue\n\n* Javadoc and spelling fixes\n\n* Rename SegmentsMetadata to SegmentsMetadataManager.  address other comments\n\n* Address more comments\n","date":"2020-01-28 03:24:29","modifiedFileCount":"127","status":"M","submitter":"Roman Leventov"},{"authorTime":"2020-08-22 00:43:58","codes":[{"authorDate":"2020-08-22 00:43:58","commitOrder":5,"curCode":"  public void testSerde() throws IOException\n  {\n    final UserCompactionTaskQueryTuningConfig tuningConfig = new UserCompactionTaskQueryTuningConfig(\n        1000,\n        10000L,\n        2000L,\n        new SegmentsSplitHintSpec(new HumanReadableBytes(42L), null),\n        new IndexSpec(\n            new RoaringBitmapSerdeFactory(false),\n            CompressionStrategy.LZF,\n            CompressionStrategy.UNCOMPRESSED,\n            CompressionFactory.LongEncodingStrategy.LONGS\n        ),\n        1,\n        3000L,\n        5\n    );\n\n    final String json = OBJECT_MAPPER.writeValueAsString(tuningConfig);\n    final UserCompactionTaskQueryTuningConfig fromJson =\n        OBJECT_MAPPER.readValue(json, UserCompactionTaskQueryTuningConfig.class);\n    Assert.assertEquals(tuningConfig, fromJson);\n  }\n","date":"2020-08-22 00:43:58","endLine":75,"groupId":"3472","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/56/344e56f08d1ff813c4d70733bf320c2f5ce80a.src","preCode":"  public void testSerde() throws IOException\n  {\n    final UserCompactionTaskQueryTuningConfig tuningConfig = new UserCompactionTaskQueryTuningConfig(\n        1000,\n        10000L,\n        2000L,\n        new SegmentsSplitHintSpec(42L),\n        new IndexSpec(\n            new RoaringBitmapSerdeFactory(false),\n            CompressionStrategy.LZF,\n            CompressionStrategy.UNCOMPRESSED,\n            CompressionFactory.LongEncodingStrategy.LONGS\n        ),\n        1,\n        3000L,\n        5\n    );\n\n    final String json = OBJECT_MAPPER.writeValueAsString(tuningConfig);\n    final UserCompactionTaskQueryTuningConfig fromJson =\n        OBJECT_MAPPER.readValue(json, UserCompactionTaskQueryTuningConfig.class);\n    Assert.assertEquals(tuningConfig, fromJson);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/UserCompactionTaskQueryTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2020-08-22 00:43:58","commitOrder":5,"curCode":"  public void testSerdeUserCompactionTuningConfig() throws IOException\n  {\n    final UserCompactionTaskQueryTuningConfig tuningConfig = new UserCompactionTaskQueryTuningConfig(\n        1000,\n        10000L,\n        2000L,\n        new SegmentsSplitHintSpec(new HumanReadableBytes(10000L), null),\n        new IndexSpec(\n            new RoaringBitmapSerdeFactory(false),\n            CompressionStrategy.LZF,\n            CompressionStrategy.UNCOMPRESSED,\n            CompressionFactory.LongEncodingStrategy.LONGS\n        ),\n        1,\n        3000L,\n        null\n    );\n\n    final String json = OBJECT_MAPPER.writeValueAsString(tuningConfig);\n    final UserCompactionTaskQueryTuningConfig fromJson =\n        OBJECT_MAPPER.readValue(json, UserCompactionTaskQueryTuningConfig.class);\n    Assert.assertEquals(tuningConfig, fromJson);\n  }\n","date":"2020-08-22 00:43:58","endLine":184,"groupId":"3472","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerdeUserCompactionTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a0/4f286cdfb20cbae9695cad240f8ab80f2929b0.src","preCode":"  public void testSerdeUserCompactionTuningConfig() throws IOException\n  {\n    final UserCompactionTaskQueryTuningConfig tuningConfig = new UserCompactionTaskQueryTuningConfig(\n        1000,\n        10000L,\n        2000L,\n        new SegmentsSplitHintSpec(10000L),\n        new IndexSpec(\n            new RoaringBitmapSerdeFactory(false),\n            CompressionStrategy.LZF,\n            CompressionStrategy.UNCOMPRESSED,\n            CompressionFactory.LongEncodingStrategy.LONGS\n        ),\n        1,\n        3000L,\n        null\n    );\n\n    final String json = OBJECT_MAPPER.writeValueAsString(tuningConfig);\n    final UserCompactionTaskQueryTuningConfig fromJson =\n        OBJECT_MAPPER.readValue(json, UserCompactionTaskQueryTuningConfig.class);\n    Assert.assertEquals(tuningConfig, fromJson);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/DataSourceCompactionConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"b5b3e6ecce6f5346c4a1ed440b27656dd3b130a5","commitMessage":"@@@Add maxNumFiles to splitHintSpec (#10243)\n\n* Add maxNumFiles to splitHintSpec\n\n* missing link\n\n* fix build failure; use maxNumFiles for integration tests\n\n* spelling\n\n* lower default\n\n* Update docs/ingestion/native-batch.md\n\nCo-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>\n\n* address comments; change default maxSplitSize\n\n* spelling\n\n* typos and doc\n\n* same change for segments splitHintSpec\n\n* fix build\n\n* fix build\n\nCo-authored-by: Abhishek Agarwal <1477457+abhishekagarwal87@users.noreply.github.com>","date":"2020-08-22 00:43:58","modifiedFileCount":"19","status":"M","submitter":"Jihoon Son"},{"authorTime":"2020-08-27 04:19:18","codes":[{"authorDate":"2020-08-27 04:19:18","commitOrder":6,"curCode":"  public void testSerde() throws IOException\n  {\n    final UserCompactionTaskQueryTuningConfig tuningConfig = new UserCompactionTaskQueryTuningConfig(\n        40000,\n        2000L,\n        null,\n        new SegmentsSplitHintSpec(new HumanReadableBytes(42L), null),\n        new DynamicPartitionsSpec(1000, 20000L),\n        new IndexSpec(\n            new DefaultBitmapSerdeFactory(),\n            CompressionStrategy.LZ4,\n            CompressionStrategy.LZF,\n            LongEncodingStrategy.LONGS\n        ),\n        new IndexSpec(\n            new DefaultBitmapSerdeFactory(),\n            CompressionStrategy.LZ4,\n            CompressionStrategy.UNCOMPRESSED,\n            LongEncodingStrategy.AUTO\n        ),\n        2,\n        1000L,\n        TmpFileSegmentWriteOutMediumFactory.instance(),\n        100,\n        5,\n        1000L,\n        new Duration(3000L),\n        7,\n        1000,\n        100\n    );\n\n    final String json = OBJECT_MAPPER.writeValueAsString(tuningConfig);\n    final UserCompactionTaskQueryTuningConfig fromJson =\n        OBJECT_MAPPER.readValue(json, UserCompactionTaskQueryTuningConfig.class);\n    Assert.assertEquals(tuningConfig, fromJson);\n  }\n","date":"2020-08-27 04:19:18","endLine":110,"groupId":"10382","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/7a/a6540abf5aa24a35ab012c39b3c47ca91bf58e.src","preCode":"  public void testSerde() throws IOException\n  {\n    final UserCompactionTaskQueryTuningConfig tuningConfig = new UserCompactionTaskQueryTuningConfig(\n        1000,\n        10000L,\n        2000L,\n        new SegmentsSplitHintSpec(new HumanReadableBytes(42L), null),\n        new IndexSpec(\n            new RoaringBitmapSerdeFactory(false),\n            CompressionStrategy.LZF,\n            CompressionStrategy.UNCOMPRESSED,\n            CompressionFactory.LongEncodingStrategy.LONGS\n        ),\n        1,\n        3000L,\n        5\n    );\n\n    final String json = OBJECT_MAPPER.writeValueAsString(tuningConfig);\n    final UserCompactionTaskQueryTuningConfig fromJson =\n        OBJECT_MAPPER.readValue(json, UserCompactionTaskQueryTuningConfig.class);\n    Assert.assertEquals(tuningConfig, fromJson);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/UserCompactionTaskQueryTuningConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2020-08-27 04:19:18","commitOrder":6,"curCode":"  public void testSerdeUserCompactionTuningConfig() throws IOException\n  {\n    final UserCompactionTaskQueryTuningConfig tuningConfig = new UserCompactionTaskQueryTuningConfig(\n        40000,\n        2000L,\n        null,\n        new SegmentsSplitHintSpec(new HumanReadableBytes(100000L), null),\n        new DynamicPartitionsSpec(1000, 20000L),\n        new IndexSpec(\n            new DefaultBitmapSerdeFactory(),\n            CompressionStrategy.LZ4,\n            CompressionStrategy.LZF,\n            LongEncodingStrategy.LONGS\n        ),\n        new IndexSpec(\n            new DefaultBitmapSerdeFactory(),\n            CompressionStrategy.LZ4,\n            CompressionStrategy.UNCOMPRESSED,\n            LongEncodingStrategy.AUTO\n        ),\n        2,\n        1000L,\n        TmpFileSegmentWriteOutMediumFactory.instance(),\n        100,\n        5,\n        1000L,\n        new Duration(3000L),\n        7,\n        1000,\n        100\n    );\n\n    final String json = OBJECT_MAPPER.writeValueAsString(tuningConfig);\n    final UserCompactionTaskQueryTuningConfig fromJson =\n        OBJECT_MAPPER.readValue(json, UserCompactionTaskQueryTuningConfig.class);\n    Assert.assertEquals(tuningConfig, fromJson);\n  }\n","date":"2020-08-27 04:19:18","endLine":219,"groupId":"10382","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerdeUserCompactionTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/96/bfcc126cc67cec763ff09613a39d469a8b8200.src","preCode":"  public void testSerdeUserCompactionTuningConfig() throws IOException\n  {\n    final UserCompactionTaskQueryTuningConfig tuningConfig = new UserCompactionTaskQueryTuningConfig(\n        1000,\n        10000L,\n        2000L,\n        new SegmentsSplitHintSpec(new HumanReadableBytes(10000L), null),\n        new IndexSpec(\n            new RoaringBitmapSerdeFactory(false),\n            CompressionStrategy.LZF,\n            CompressionStrategy.UNCOMPRESSED,\n            CompressionFactory.LongEncodingStrategy.LONGS\n        ),\n        1,\n        3000L,\n        null\n    );\n\n    final String json = OBJECT_MAPPER.writeValueAsString(tuningConfig);\n    final UserCompactionTaskQueryTuningConfig fromJson =\n        OBJECT_MAPPER.readValue(json, UserCompactionTaskQueryTuningConfig.class);\n    Assert.assertEquals(tuningConfig, fromJson);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/DataSourceCompactionConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"}],"commitId":"b9ff3483ac353c4c7098d5caa1802befa5943ef0","commitMessage":"@@@Add support for all partitioing schemes for auto compaction  (#10307)\n\n* Add support for all partitioing schemes for auto compaction\n\n* annotate last compaction state for multi phase parallel indexing\n\n* fix build and tests\n\n* test\n\n* better home","date":"2020-08-27 04:19:18","modifiedFileCount":"37","status":"M","submitter":"Jihoon Son"}]
