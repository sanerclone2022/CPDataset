[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testMappingWithoutFilter()\n      throws InterruptedException\n  {\n    final JdbcExtractionNamespace extractionNamespace = new JdbcExtractionNamespace(\n        derbyConnectorRule.getMetadataConnectorConfig(),\n        tableName,\n        keyName,\n        valName,\n        tsColumn,\n        null,\n        new Period(0)\n    );\n    try (CacheScheduler.Entry entry = scheduler.schedule(extractionNamespace)) {\n      CacheSchedulerTest.waitFor(entry);\n      final Map<String, String> map = entry.getCache();\n\n      for (Map.Entry<String, String[]> e : renames.entrySet()) {\n        String key = e.getKey();\n        String[] val = e.getValue();\n        String field = val[0];\n        Assert.assertEquals(\n            \"non-null check\",\n            NullHandling.emptyToNullIfNeeded(field),\n            NullHandling.emptyToNullIfNeeded(map.get(key))\n        );\n      }\n      Assert.assertEquals(\"null check\", null, map.get(\"baz\"));\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":399,"groupId":"22781","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMappingWithoutFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/13/9c8a017a8f0bc4096721a12f559f25af7848cb.src","preCode":"  public void testMappingWithoutFilter()\n      throws InterruptedException\n  {\n    final JdbcExtractionNamespace extractionNamespace = new JdbcExtractionNamespace(\n        derbyConnectorRule.getMetadataConnectorConfig(),\n        tableName,\n        keyName,\n        valName,\n        tsColumn,\n        null,\n        new Period(0)\n    );\n    try (CacheScheduler.Entry entry = scheduler.schedule(extractionNamespace)) {\n      CacheSchedulerTest.waitFor(entry);\n      final Map<String, String> map = entry.getCache();\n\n      for (Map.Entry<String, String[]> e : renames.entrySet()) {\n        String key = e.getKey();\n        String[] val = e.getValue();\n        String field = val[0];\n        Assert.assertEquals(\n            \"non-null check\",\n            NullHandling.emptyToNullIfNeeded(field),\n            NullHandling.emptyToNullIfNeeded(map.get(key))\n        );\n      }\n      Assert.assertEquals(\"null check\", null, map.get(\"baz\"));\n    }\n  }\n","realPath":"extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/cache/JdbcExtractionNamespaceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testMappingWithFilter()\n      throws InterruptedException\n  {\n    final JdbcExtractionNamespace extractionNamespace = new JdbcExtractionNamespace(\n        derbyConnectorRule.getMetadataConnectorConfig(),\n        tableName,\n        keyName,\n        valName,\n        tsColumn,\n        filterColumn + \"='1'\",\n        new Period(0)\n    );\n    try (CacheScheduler.Entry entry = scheduler.schedule(extractionNamespace)) {\n      CacheSchedulerTest.waitFor(entry);\n      final Map<String, String> map = entry.getCache();\n\n      for (Map.Entry<String, String[]> e : renames.entrySet()) {\n        String key = e.getKey();\n        String[] val = e.getValue();\n        String field = val[0];\n        String filterVal = val[1];\n\n        if (\"1\".equals(filterVal)) {\n          Assert.assertEquals(\n              \"non-null check\",\n              NullHandling.emptyToNullIfNeeded(field),\n              NullHandling.emptyToNullIfNeeded(map.get(key))\n          );\n        } else {\n          Assert.assertEquals(\"non-null check\", null, NullHandling.emptyToNullIfNeeded(map.get(key)));\n        }\n      }\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":435,"groupId":"11155","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMappingWithFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/13/9c8a017a8f0bc4096721a12f559f25af7848cb.src","preCode":"  public void testMappingWithFilter()\n      throws InterruptedException\n  {\n    final JdbcExtractionNamespace extractionNamespace = new JdbcExtractionNamespace(\n        derbyConnectorRule.getMetadataConnectorConfig(),\n        tableName,\n        keyName,\n        valName,\n        tsColumn,\n        filterColumn + \"='1'\",\n        new Period(0)\n    );\n    try (CacheScheduler.Entry entry = scheduler.schedule(extractionNamespace)) {\n      CacheSchedulerTest.waitFor(entry);\n      final Map<String, String> map = entry.getCache();\n\n      for (Map.Entry<String, String[]> e : renames.entrySet()) {\n        String key = e.getKey();\n        String[] val = e.getValue();\n        String field = val[0];\n        String filterVal = val[1];\n\n        if (\"1\".equals(filterVal)) {\n          Assert.assertEquals(\n              \"non-null check\",\n              NullHandling.emptyToNullIfNeeded(field),\n              NullHandling.emptyToNullIfNeeded(map.get(key))\n          );\n        } else {\n          Assert.assertEquals(\"non-null check\", null, NullHandling.emptyToNullIfNeeded(map.get(key)));\n        }\n      }\n    }\n  }\n","realPath":"extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/cache/JdbcExtractionNamespaceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":402,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testMappingWithoutFilter()\n      throws InterruptedException\n  {\n    final JdbcExtractionNamespace extractionNamespace = new JdbcExtractionNamespace(\n        derbyConnectorRule.getMetadataConnectorConfig(),\n        TABLE_NAME,\n        KEY_NAME,\n        VAL_NAME,\n        tsColumn,\n        null,\n        new Period(0)\n    );\n    try (CacheScheduler.Entry entry = scheduler.schedule(extractionNamespace)) {\n      CacheSchedulerTest.waitFor(entry);\n      final Map<String, String> map = entry.getCache();\n\n      for (Map.Entry<String, String[]> e : RENAMES.entrySet()) {\n        String key = e.getKey();\n        String[] val = e.getValue();\n        String field = val[0];\n        Assert.assertEquals(\n            \"non-null check\",\n            NullHandling.emptyToNullIfNeeded(field),\n            NullHandling.emptyToNullIfNeeded(map.get(key))\n        );\n      }\n      Assert.assertEquals(\"null check\", null, map.get(\"baz\"));\n    }\n  }\n","date":"2019-08-23 18:13:54","endLine":393,"groupId":"22781","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMappingWithoutFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6d/fc88df527964171576f8dda4b8a55d59c85d62.src","preCode":"  public void testMappingWithoutFilter()\n      throws InterruptedException\n  {\n    final JdbcExtractionNamespace extractionNamespace = new JdbcExtractionNamespace(\n        derbyConnectorRule.getMetadataConnectorConfig(),\n        tableName,\n        keyName,\n        valName,\n        tsColumn,\n        null,\n        new Period(0)\n    );\n    try (CacheScheduler.Entry entry = scheduler.schedule(extractionNamespace)) {\n      CacheSchedulerTest.waitFor(entry);\n      final Map<String, String> map = entry.getCache();\n\n      for (Map.Entry<String, String[]> e : renames.entrySet()) {\n        String key = e.getKey();\n        String[] val = e.getValue();\n        String field = val[0];\n        Assert.assertEquals(\n            \"non-null check\",\n            NullHandling.emptyToNullIfNeeded(field),\n            NullHandling.emptyToNullIfNeeded(map.get(key))\n        );\n      }\n      Assert.assertEquals(\"null check\", null, map.get(\"baz\"));\n    }\n  }\n","realPath":"extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/cache/JdbcExtractionNamespaceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":365,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testMappingWithFilter()\n      throws InterruptedException\n  {\n    final JdbcExtractionNamespace extractionNamespace = new JdbcExtractionNamespace(\n        derbyConnectorRule.getMetadataConnectorConfig(),\n        TABLE_NAME,\n        KEY_NAME,\n        VAL_NAME,\n        tsColumn,\n        FILTER_COLUMN + \"='1'\",\n        new Period(0)\n    );\n    try (CacheScheduler.Entry entry = scheduler.schedule(extractionNamespace)) {\n      CacheSchedulerTest.waitFor(entry);\n      final Map<String, String> map = entry.getCache();\n\n      for (Map.Entry<String, String[]> e : RENAMES.entrySet()) {\n        String key = e.getKey();\n        String[] val = e.getValue();\n        String field = val[0];\n        String filterVal = val[1];\n\n        if (\"1\".equals(filterVal)) {\n          Assert.assertEquals(\n              \"non-null check\",\n              NullHandling.emptyToNullIfNeeded(field),\n              NullHandling.emptyToNullIfNeeded(map.get(key))\n          );\n        } else {\n          Assert.assertEquals(\"non-null check\", null, NullHandling.emptyToNullIfNeeded(map.get(key)));\n        }\n      }\n    }\n  }\n","date":"2019-08-23 18:13:54","endLine":429,"groupId":"11155","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMappingWithFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6d/fc88df527964171576f8dda4b8a55d59c85d62.src","preCode":"  public void testMappingWithFilter()\n      throws InterruptedException\n  {\n    final JdbcExtractionNamespace extractionNamespace = new JdbcExtractionNamespace(\n        derbyConnectorRule.getMetadataConnectorConfig(),\n        tableName,\n        keyName,\n        valName,\n        tsColumn,\n        filterColumn + \"='1'\",\n        new Period(0)\n    );\n    try (CacheScheduler.Entry entry = scheduler.schedule(extractionNamespace)) {\n      CacheSchedulerTest.waitFor(entry);\n      final Map<String, String> map = entry.getCache();\n\n      for (Map.Entry<String, String[]> e : renames.entrySet()) {\n        String key = e.getKey();\n        String[] val = e.getValue();\n        String field = val[0];\n        String filterVal = val[1];\n\n        if (\"1\".equals(filterVal)) {\n          Assert.assertEquals(\n              \"non-null check\",\n              NullHandling.emptyToNullIfNeeded(field),\n              NullHandling.emptyToNullIfNeeded(map.get(key))\n          );\n        } else {\n          Assert.assertEquals(\"non-null check\", null, NullHandling.emptyToNullIfNeeded(map.get(key)));\n        }\n      }\n    }\n  }\n","realPath":"extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/cache/JdbcExtractionNamespaceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":396,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"},{"authorTime":"2021-04-02 08:30:47","codes":[{"authorDate":"2021-04-02 08:30:47","commitOrder":3,"curCode":"  public void testMappingWithoutFilter()\n      throws InterruptedException\n  {\n    final JdbcExtractionNamespace extractionNamespace = new JdbcExtractionNamespace(\n        derbyConnectorRule.getMetadataConnectorConfig(),\n        TABLE_NAME,\n        KEY_NAME,\n        VAL_NAME,\n        tsColumn,\n        null,\n        new Period(0),\n        new JdbcAccessSecurityConfig()\n    );\n    try (CacheScheduler.Entry entry = scheduler.schedule(extractionNamespace)) {\n      CacheSchedulerTest.waitFor(entry);\n      final Map<String, String> map = entry.getCache();\n\n      for (Map.Entry<String, String[]> e : RENAMES.entrySet()) {\n        String key = e.getKey();\n        String[] val = e.getValue();\n        String field = val[0];\n        Assert.assertEquals(\n            \"non-null check\",\n            NullHandling.emptyToNullIfNeeded(field),\n            NullHandling.emptyToNullIfNeeded(map.get(key))\n        );\n      }\n      Assert.assertEquals(\"null check\", null, map.get(\"baz\"));\n    }\n  }\n","date":"2021-04-02 08:30:47","endLine":402,"groupId":"103191","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testMappingWithoutFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bb/53711bc9e136ffe87f4b314a0f818877834ba4.src","preCode":"  public void testMappingWithoutFilter()\n      throws InterruptedException\n  {\n    final JdbcExtractionNamespace extractionNamespace = new JdbcExtractionNamespace(\n        derbyConnectorRule.getMetadataConnectorConfig(),\n        TABLE_NAME,\n        KEY_NAME,\n        VAL_NAME,\n        tsColumn,\n        null,\n        new Period(0)\n    );\n    try (CacheScheduler.Entry entry = scheduler.schedule(extractionNamespace)) {\n      CacheSchedulerTest.waitFor(entry);\n      final Map<String, String> map = entry.getCache();\n\n      for (Map.Entry<String, String[]> e : RENAMES.entrySet()) {\n        String key = e.getKey();\n        String[] val = e.getValue();\n        String field = val[0];\n        Assert.assertEquals(\n            \"non-null check\",\n            NullHandling.emptyToNullIfNeeded(field),\n            NullHandling.emptyToNullIfNeeded(map.get(key))\n        );\n      }\n      Assert.assertEquals(\"null check\", null, map.get(\"baz\"));\n    }\n  }\n","realPath":"extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/cache/JdbcExtractionNamespaceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":373,"status":"M"},{"authorDate":"2021-04-02 08:30:47","commitOrder":3,"curCode":"  public void testMappingWithFilter()\n      throws InterruptedException\n  {\n    final JdbcExtractionNamespace extractionNamespace = new JdbcExtractionNamespace(\n        derbyConnectorRule.getMetadataConnectorConfig(),\n        TABLE_NAME,\n        KEY_NAME,\n        VAL_NAME,\n        tsColumn,\n        FILTER_COLUMN + \"='1'\",\n        new Period(0),\n        new JdbcAccessSecurityConfig()\n    );\n    try (CacheScheduler.Entry entry = scheduler.schedule(extractionNamespace)) {\n      CacheSchedulerTest.waitFor(entry);\n      final Map<String, String> map = entry.getCache();\n\n      for (Map.Entry<String, String[]> e : RENAMES.entrySet()) {\n        String key = e.getKey();\n        String[] val = e.getValue();\n        String field = val[0];\n        String filterVal = val[1];\n\n        if (\"1\".equals(filterVal)) {\n          Assert.assertEquals(\n              \"non-null check\",\n              NullHandling.emptyToNullIfNeeded(field),\n              NullHandling.emptyToNullIfNeeded(map.get(key))\n          );\n        } else {\n          Assert.assertEquals(\"non-null check\", null, NullHandling.emptyToNullIfNeeded(map.get(key)));\n        }\n      }\n    }\n  }\n","date":"2021-04-02 08:30:47","endLine":439,"groupId":"103191","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testMappingWithFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bb/53711bc9e136ffe87f4b314a0f818877834ba4.src","preCode":"  public void testMappingWithFilter()\n      throws InterruptedException\n  {\n    final JdbcExtractionNamespace extractionNamespace = new JdbcExtractionNamespace(\n        derbyConnectorRule.getMetadataConnectorConfig(),\n        TABLE_NAME,\n        KEY_NAME,\n        VAL_NAME,\n        tsColumn,\n        FILTER_COLUMN + \"='1'\",\n        new Period(0)\n    );\n    try (CacheScheduler.Entry entry = scheduler.schedule(extractionNamespace)) {\n      CacheSchedulerTest.waitFor(entry);\n      final Map<String, String> map = entry.getCache();\n\n      for (Map.Entry<String, String[]> e : RENAMES.entrySet()) {\n        String key = e.getKey();\n        String[] val = e.getValue();\n        String field = val[0];\n        String filterVal = val[1];\n\n        if (\"1\".equals(filterVal)) {\n          Assert.assertEquals(\n              \"non-null check\",\n              NullHandling.emptyToNullIfNeeded(field),\n              NullHandling.emptyToNullIfNeeded(map.get(key))\n          );\n        } else {\n          Assert.assertEquals(\"non-null check\", null, NullHandling.emptyToNullIfNeeded(map.get(key)));\n        }\n      }\n    }\n  }\n","realPath":"extensions-core/lookups-cached-global/src/test/java/org/apache/druid/server/lookup/namespace/cache/JdbcExtractionNamespaceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":405,"status":"M"}],"commitId":"cfcebc40f67a38eb0a3a23ae8919100bd432d533","commitMessage":"@@@Allow list for JDBC connection properties to address CVE-2021-26919 (#11047)\n\n* Allow list for JDBC connection properties to address CVE-2021-26919\n\n* fix tests for java 11","date":"2021-04-02 08:30:47","modifiedFileCount":"14","status":"M","submitter":"Jihoon Son"}]
