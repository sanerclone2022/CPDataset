[{"authorTime":"2021-05-12 09:49:18","codes":[{"authorDate":"2021-05-12 09:49:18","commitOrder":1,"curCode":"  public void testRunDoNothingIfCurrentConfigIsEmpty()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    \r\n    Mockito.when(mockJacksonConfigManager.watch(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty()))\n    ).thenReturn(new AtomicReference<>(CoordinatorCompactionConfig.empty()));\n\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killCompactionConfig = new KillCompactionConfig(druidCoordinatorConfig, mockSqlSegmentsMetadataManager, mockJacksonConfigManager);\n    killCompactionConfig.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verifyZeroInteractions(mockSqlSegmentsMetadataManager);\n    final ArgumentCaptor<ServiceEventBuilder> emittedEventCaptor = ArgumentCaptor.forClass(ServiceEventBuilder.class);\n    Mockito.verify(mockServiceEmitter).emit(emittedEventCaptor.capture());\n    Assert.assertEquals(KillCompactionConfig.COUNT_METRIC, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"metric\"));\n    Assert.assertEquals(0, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"value\"));\n    Mockito.verify(mockJacksonConfigManager).watch(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty())\n    );\n    Mockito.verifyNoMoreInteractions(mockJacksonConfigManager);\n  }\n","date":"2021-05-12 09:49:18","endLine":176,"groupId":"11979","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRunDoNothingIfCurrentConfigIsEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/55/5c998147390aff600530700fcf4c1d9b3fad67.src","preCode":"  public void testRunDoNothingIfCurrentConfigIsEmpty()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    \r\n    Mockito.when(mockJacksonConfigManager.watch(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty()))\n    ).thenReturn(new AtomicReference<>(CoordinatorCompactionConfig.empty()));\n\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killCompactionConfig = new KillCompactionConfig(druidCoordinatorConfig, mockSqlSegmentsMetadataManager, mockJacksonConfigManager);\n    killCompactionConfig.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verifyZeroInteractions(mockSqlSegmentsMetadataManager);\n    final ArgumentCaptor<ServiceEventBuilder> emittedEventCaptor = ArgumentCaptor.forClass(ServiceEventBuilder.class);\n    Mockito.verify(mockServiceEmitter).emit(emittedEventCaptor.capture());\n    Assert.assertEquals(KillCompactionConfig.COUNT_METRIC, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"metric\"));\n    Assert.assertEquals(0, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"value\"));\n    Mockito.verify(mockJacksonConfigManager).watch(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty())\n    );\n    Mockito.verifyNoMoreInteractions(mockJacksonConfigManager);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillCompactionConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"},{"authorDate":"2021-05-12 09:49:18","commitOrder":1,"curCode":"  public void testRunRetryForRetryableException()\n  {\n    String inactiveDatasourceName = \"inactive_datasource\";\n    DataSourceCompactionConfig inactiveDatasourceConfig = new DataSourceCompactionConfig(\n        inactiveDatasourceName,\n        null,\n        500L,\n        null,\n        new Period(3600),\n        null,\n        new UserCompactionTaskGranularityConfig(Granularities.HOUR, null),\n        null,\n        ImmutableMap.of(\"key\", \"val\")\n    );\n\n    CoordinatorCompactionConfig originalCurrentConfig = CoordinatorCompactionConfig.from(ImmutableList.of(inactiveDatasourceConfig));\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    Mockito.when(mockJacksonConfigManager.watch(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty()))\n    ).thenReturn(new AtomicReference<>(originalCurrentConfig));\n    Mockito.when(mockSqlSegmentsMetadataManager.retrieveAllDataSourceNames()).thenReturn(ImmutableSet.of());\n    Mockito.when(mockJacksonConfigManager.set(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any())\n    ).thenAnswer(new Answer() {\n      private int count = 0;\n      @Override\n      public Object answer(InvocationOnMock invocation)\n      {\n        if (count++ < 3) {\n          \r\n          return ConfigManager.SetResult.fail(new Exception(), true);\n        } else {\n          \r\n          return ConfigManager.SetResult.ok();\n        }\n      }\n    });\n\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killCompactionConfig = new KillCompactionConfig(druidCoordinatorConfig, mockSqlSegmentsMetadataManager, mockJacksonConfigManager);\n    killCompactionConfig.run(mockDruidCoordinatorRuntimeParams);\n\n    \r\n    final ArgumentCaptor<ServiceEventBuilder> emittedEventCaptor = ArgumentCaptor.forClass(ServiceEventBuilder.class);\n    Mockito.verify(mockServiceEmitter).emit(emittedEventCaptor.capture());\n    Assert.assertEquals(KillCompactionConfig.COUNT_METRIC, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"metric\"));\n    \r\n    Assert.assertEquals(1, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"value\"));\n\n    \r\n    Mockito.verify(mockJacksonConfigManager, Mockito.times(4)).watch(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty())\n    );\n    \r\n    Mockito.verify(mockJacksonConfigManager, Mockito.times(4)).set(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any()\n    );\n    Mockito.verifyNoMoreInteractions(mockJacksonConfigManager);\n    \r\n    Mockito.verify(mockSqlSegmentsMetadataManager, Mockito.times(4)).retrieveAllDataSourceNames();\n    Mockito.verifyNoMoreInteractions(mockSqlSegmentsMetadataManager);\n  }\n","date":"2021-05-12 09:49:18","endLine":367,"groupId":"11981","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRunRetryForRetryableException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/55/5c998147390aff600530700fcf4c1d9b3fad67.src","preCode":"  public void testRunRetryForRetryableException()\n  {\n    String inactiveDatasourceName = \"inactive_datasource\";\n    DataSourceCompactionConfig inactiveDatasourceConfig = new DataSourceCompactionConfig(\n        inactiveDatasourceName,\n        null,\n        500L,\n        null,\n        new Period(3600),\n        null,\n        new UserCompactionTaskGranularityConfig(Granularities.HOUR, null),\n        null,\n        ImmutableMap.of(\"key\", \"val\")\n    );\n\n    CoordinatorCompactionConfig originalCurrentConfig = CoordinatorCompactionConfig.from(ImmutableList.of(inactiveDatasourceConfig));\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    Mockito.when(mockJacksonConfigManager.watch(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty()))\n    ).thenReturn(new AtomicReference<>(originalCurrentConfig));\n    Mockito.when(mockSqlSegmentsMetadataManager.retrieveAllDataSourceNames()).thenReturn(ImmutableSet.of());\n    Mockito.when(mockJacksonConfigManager.set(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any())\n    ).thenAnswer(new Answer() {\n      private int count = 0;\n      @Override\n      public Object answer(InvocationOnMock invocation)\n      {\n        if (count++ < 3) {\n          \r\n          return ConfigManager.SetResult.fail(new Exception(), true);\n        } else {\n          \r\n          return ConfigManager.SetResult.ok();\n        }\n      }\n    });\n\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killCompactionConfig = new KillCompactionConfig(druidCoordinatorConfig, mockSqlSegmentsMetadataManager, mockJacksonConfigManager);\n    killCompactionConfig.run(mockDruidCoordinatorRuntimeParams);\n\n    \r\n    final ArgumentCaptor<ServiceEventBuilder> emittedEventCaptor = ArgumentCaptor.forClass(ServiceEventBuilder.class);\n    Mockito.verify(mockServiceEmitter).emit(emittedEventCaptor.capture());\n    Assert.assertEquals(KillCompactionConfig.COUNT_METRIC, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"metric\"));\n    \r\n    Assert.assertEquals(1, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"value\"));\n\n    \r\n    Mockito.verify(mockJacksonConfigManager, Mockito.times(4)).watch(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty())\n    );\n    \r\n    Mockito.verify(mockJacksonConfigManager, Mockito.times(4)).set(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any()\n    );\n    Mockito.verifyNoMoreInteractions(mockJacksonConfigManager);\n    \r\n    Mockito.verify(mockSqlSegmentsMetadataManager, Mockito.times(4)).retrieveAllDataSourceNames();\n    Mockito.verifyNoMoreInteractions(mockSqlSegmentsMetadataManager);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillCompactionConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"B"}],"commitId":"3455352241f774cfc581de7cf7b328d5cf061e3d","commitMessage":"@@@Add feature to automatically remove compaction configurations for inactive datasources (#11232)\n\n* add auto cleanup\n\n* add auto cleanup\n\n* add auto cleanup\n\n* add tests\n\n* add tests\n\n* use retryutils\n\n* use retryutils\n\n* use retryutils\n\n* address comments","date":"2021-05-12 09:49:18","modifiedFileCount":"14","status":"B","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-05-28 07:34:32","codes":[{"authorDate":"2021-05-28 07:34:32","commitOrder":2,"curCode":"  public void testRunDoNothingIfCurrentConfigIsEmpty()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    \r\n    Mockito.when(mockConnector.lookup(\n        ArgumentMatchers.anyString(),\n        ArgumentMatchers.eq(\"name\"),\n        ArgumentMatchers.eq(\"payload\"),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY))\n    ).thenReturn(null);\n    Mockito.when(mockJacksonConfigManager.convertByteToConfig(\n        ArgumentMatchers.eq(null),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty()))\n    ).thenReturn(CoordinatorCompactionConfig.empty());\n\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killCompactionConfig = new KillCompactionConfig(\n        druidCoordinatorConfig,\n        mockSqlSegmentsMetadataManager,\n        mockJacksonConfigManager,\n        mockConnector,\n        mockConnectorConfig\n    );\n    killCompactionConfig.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verifyZeroInteractions(mockSqlSegmentsMetadataManager);\n    final ArgumentCaptor<ServiceEventBuilder> emittedEventCaptor = ArgumentCaptor.forClass(ServiceEventBuilder.class);\n    Mockito.verify(mockServiceEmitter).emit(emittedEventCaptor.capture());\n    Assert.assertEquals(KillCompactionConfig.COUNT_METRIC, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"metric\"));\n    Assert.assertEquals(0, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"value\"));\n    Mockito.verify(mockJacksonConfigManager).convertByteToConfig(\n        ArgumentMatchers.eq(null),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty())\n    );\n    Mockito.verify(mockConnector).lookup(\n        ArgumentMatchers.anyString(),\n        ArgumentMatchers.eq(\"name\"),\n        ArgumentMatchers.eq(\"payload\"),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY)\n    );\n    Mockito.verifyNoMoreInteractions(mockJacksonConfigManager);\n  }\n","date":"2021-05-28 07:34:32","endLine":219,"groupId":"10525","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testRunDoNothingIfCurrentConfigIsEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/ad5df6033dffbe5a5a3ab14db7c562875c1472.src","preCode":"  public void testRunDoNothingIfCurrentConfigIsEmpty()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    \r\n    Mockito.when(mockJacksonConfigManager.watch(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty()))\n    ).thenReturn(new AtomicReference<>(CoordinatorCompactionConfig.empty()));\n\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killCompactionConfig = new KillCompactionConfig(druidCoordinatorConfig, mockSqlSegmentsMetadataManager, mockJacksonConfigManager);\n    killCompactionConfig.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verifyZeroInteractions(mockSqlSegmentsMetadataManager);\n    final ArgumentCaptor<ServiceEventBuilder> emittedEventCaptor = ArgumentCaptor.forClass(ServiceEventBuilder.class);\n    Mockito.verify(mockServiceEmitter).emit(emittedEventCaptor.capture());\n    Assert.assertEquals(KillCompactionConfig.COUNT_METRIC, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"metric\"));\n    Assert.assertEquals(0, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"value\"));\n    Mockito.verify(mockJacksonConfigManager).watch(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty())\n    );\n    Mockito.verifyNoMoreInteractions(mockJacksonConfigManager);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillCompactionConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2021-05-28 07:34:32","commitOrder":2,"curCode":"  public void testRunRetryForRetryableException()\n  {\n    String inactiveDatasourceName = \"inactive_datasource\";\n    DataSourceCompactionConfig inactiveDatasourceConfig = new DataSourceCompactionConfig(\n        inactiveDatasourceName,\n        null,\n        500L,\n        null,\n        new Period(3600),\n        null,\n        new UserCompactionTaskGranularityConfig(Granularities.HOUR, null),\n        null,\n        ImmutableMap.of(\"key\", \"val\")\n    );\n\n    CoordinatorCompactionConfig originalCurrentConfig = CoordinatorCompactionConfig.from(ImmutableList.of(inactiveDatasourceConfig));\n    byte[] originalCurrentConfigBytes = {1, 2, 3};\n    Mockito.when(mockConnector.lookup(\n        ArgumentMatchers.anyString(),\n        ArgumentMatchers.eq(\"name\"),\n        ArgumentMatchers.eq(\"payload\"),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY))\n    ).thenReturn(originalCurrentConfigBytes);\n    Mockito.when(mockJacksonConfigManager.convertByteToConfig(\n        ArgumentMatchers.eq(originalCurrentConfigBytes),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty()))\n    ).thenReturn(originalCurrentConfig);\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    Mockito.when(mockSqlSegmentsMetadataManager.retrieveAllDataSourceNames()).thenReturn(ImmutableSet.of());\n    Mockito.when(mockJacksonConfigManager.set(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.any(byte[].class),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any())\n    ).thenAnswer(new Answer() {\n      private int count = 0;\n      @Override\n      public Object answer(InvocationOnMock invocation)\n      {\n        if (count++ < 3) {\n          \r\n          return ConfigManager.SetResult.fail(new Exception(), true);\n        } else {\n          \r\n          return ConfigManager.SetResult.ok();\n        }\n      }\n    });\n\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killCompactionConfig = new KillCompactionConfig(\n        druidCoordinatorConfig,\n        mockSqlSegmentsMetadataManager,\n        mockJacksonConfigManager,\n        mockConnector,\n        mockConnectorConfig\n    );\n    killCompactionConfig.run(mockDruidCoordinatorRuntimeParams);\n\n    \r\n    final ArgumentCaptor<ServiceEventBuilder> emittedEventCaptor = ArgumentCaptor.forClass(ServiceEventBuilder.class);\n    Mockito.verify(mockServiceEmitter).emit(emittedEventCaptor.capture());\n    Assert.assertEquals(KillCompactionConfig.COUNT_METRIC, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"metric\"));\n    \r\n    Assert.assertEquals(1, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"value\"));\n\n    \r\n    Mockito.verify(mockJacksonConfigManager, Mockito.times(4)).convertByteToConfig(\n        ArgumentMatchers.eq(originalCurrentConfigBytes),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty())\n    );\n    Mockito.verify(mockConnector, Mockito.times(4)).lookup(\n        ArgumentMatchers.anyString(),\n        ArgumentMatchers.eq(\"name\"),\n        ArgumentMatchers.eq(\"payload\"),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY)\n    );\n\n    \r\n    Mockito.verify(mockJacksonConfigManager, Mockito.times(4)).set(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.any(byte[].class),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any()\n    );\n    Mockito.verifyNoMoreInteractions(mockJacksonConfigManager);\n    \r\n    Mockito.verify(mockSqlSegmentsMetadataManager, Mockito.times(4)).retrieveAllDataSourceNames();\n    Mockito.verifyNoMoreInteractions(mockSqlSegmentsMetadataManager);\n  }\n","date":"2021-05-28 07:34:32","endLine":449,"groupId":"10525","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testRunRetryForRetryableException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/ad5df6033dffbe5a5a3ab14db7c562875c1472.src","preCode":"  public void testRunRetryForRetryableException()\n  {\n    String inactiveDatasourceName = \"inactive_datasource\";\n    DataSourceCompactionConfig inactiveDatasourceConfig = new DataSourceCompactionConfig(\n        inactiveDatasourceName,\n        null,\n        500L,\n        null,\n        new Period(3600),\n        null,\n        new UserCompactionTaskGranularityConfig(Granularities.HOUR, null),\n        null,\n        ImmutableMap.of(\"key\", \"val\")\n    );\n\n    CoordinatorCompactionConfig originalCurrentConfig = CoordinatorCompactionConfig.from(ImmutableList.of(inactiveDatasourceConfig));\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    Mockito.when(mockJacksonConfigManager.watch(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty()))\n    ).thenReturn(new AtomicReference<>(originalCurrentConfig));\n    Mockito.when(mockSqlSegmentsMetadataManager.retrieveAllDataSourceNames()).thenReturn(ImmutableSet.of());\n    Mockito.when(mockJacksonConfigManager.set(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any())\n    ).thenAnswer(new Answer() {\n      private int count = 0;\n      @Override\n      public Object answer(InvocationOnMock invocation)\n      {\n        if (count++ < 3) {\n          \r\n          return ConfigManager.SetResult.fail(new Exception(), true);\n        } else {\n          \r\n          return ConfigManager.SetResult.ok();\n        }\n      }\n    });\n\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    killCompactionConfig = new KillCompactionConfig(druidCoordinatorConfig, mockSqlSegmentsMetadataManager, mockJacksonConfigManager);\n    killCompactionConfig.run(mockDruidCoordinatorRuntimeParams);\n\n    \r\n    final ArgumentCaptor<ServiceEventBuilder> emittedEventCaptor = ArgumentCaptor.forClass(ServiceEventBuilder.class);\n    Mockito.verify(mockServiceEmitter).emit(emittedEventCaptor.capture());\n    Assert.assertEquals(KillCompactionConfig.COUNT_METRIC, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"metric\"));\n    \r\n    Assert.assertEquals(1, emittedEventCaptor.getValue().build(ImmutableMap.of()).toMap().get(\"value\"));\n\n    \r\n    Mockito.verify(mockJacksonConfigManager, Mockito.times(4)).watch(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.empty())\n    );\n    \r\n    Mockito.verify(mockJacksonConfigManager, Mockito.times(4)).set(\n        ArgumentMatchers.eq(CoordinatorCompactionConfig.CONFIG_KEY),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any(CoordinatorCompactionConfig.class),\n        ArgumentMatchers.any()\n    );\n    Mockito.verifyNoMoreInteractions(mockJacksonConfigManager);\n    \r\n    Mockito.verify(mockSqlSegmentsMetadataManager, Mockito.times(4)).retrieveAllDataSourceNames();\n    Mockito.verifyNoMoreInteractions(mockSqlSegmentsMetadataManager);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillCompactionConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"M"}],"commitId":"e5633d7842f44464ed463a8718051c7542a81ccb","commitMessage":"@@@Fix bug: 502 bad gateway thrown when we edit/delete any auto compaction config created 0.21.0 or before (#11311)\n\n* fix bug\n\n* add test\n\n* fix IT\n\n* fix checkstyle\n\n* address comments","date":"2021-05-28 07:34:32","modifiedFileCount":"11","status":"M","submitter":"Maytas Monsereenusorn"}]
