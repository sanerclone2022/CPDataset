[{"authorTime":"2020-01-20 09:14:23","codes":[{"authorDate":"2020-02-14 06:58:32","commitOrder":6,"curCode":"  private static GroupByQueryRunnerFactory makeGroupByQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final Supplier<ByteBuffer> bufferSupplier =\n        () -> ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n\n    final NonBlockingPool<ByteBuffer> bufferPool = new StupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        bufferSupplier\n    );\n    final BlockingPool<ByteBuffer> mergeBufferPool = new DefaultBlockingPool<>(\n        bufferSupplier,\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            QueryConfig::new,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","date":"2020-02-14 06:58:32","endLine":383,"groupId":"19839","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"makeGroupByQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig@finalDruidProcessingConfigprocessingConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b8/9ae495b7de8d437caac15e13960fdc735de459.src","preCode":"  private static GroupByQueryRunnerFactory makeGroupByQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final Supplier<ByteBuffer> bufferSupplier =\n        () -> ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n\n    final NonBlockingPool<ByteBuffer> bufferPool = new StupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        bufferSupplier\n    );\n    final BlockingPool<ByteBuffer> mergeBufferPool = new DefaultBlockingPool<>(\n        bufferSupplier,\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            QueryConfig::new,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","realPath":"benchmarks/src/test/java/org/apache/druid/benchmark/query/CachingClusteredClientBenchmark.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"B"},{"authorDate":"2020-01-20 09:14:23","commitOrder":6,"curCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            PROCESSING_CONFIG,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","date":"2020-01-20 09:14:23","endLine":161,"groupId":"19839","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/22/1bc321b4aa5a394186208c0442f2f457632293.src","preCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            PROCESSING_CONFIG,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryMergeBufferTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"NB"}],"commitId":"e9aebd994aa0e243446b4f76d819a503401104e3","commitMessage":"@@@Fix for building in Eclipse & VS Code. (#7481)\n\nFixes #6866\nReverse dependencies from /main/ to /test/\nAdd generated-test-sources to source path for Eclipse","date":"2020-02-14 06:58:32","modifiedFileCount":"1","status":"M","submitter":"Adam Peck"},{"authorTime":"2020-07-30 06:19:18","codes":[{"authorDate":"2020-07-30 06:19:18","commitOrder":7,"curCode":"  private static GroupByQueryRunnerFactory makeGroupByQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final Supplier<ByteBuffer> bufferSupplier =\n        () -> ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n\n    final NonBlockingPool<ByteBuffer> bufferPool = new StupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        bufferSupplier\n    );\n    final BlockingPool<ByteBuffer> mergeBufferPool = new DefaultBlockingPool<>(\n        bufferSupplier,\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","date":"2020-07-30 06:19:18","endLine":383,"groupId":"106424","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"makeGroupByQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig@finalDruidProcessingConfigprocessingConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6c/53abd521dc066dd2c99e47cbd94b69833b5d93.src","preCode":"  private static GroupByQueryRunnerFactory makeGroupByQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final Supplier<ByteBuffer> bufferSupplier =\n        () -> ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n\n    final NonBlockingPool<ByteBuffer> bufferPool = new StupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        bufferSupplier\n    );\n    final BlockingPool<ByteBuffer> mergeBufferPool = new DefaultBlockingPool<>(\n        bufferSupplier,\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            QueryConfig::new,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","realPath":"benchmarks/src/test/java/org/apache/druid/benchmark/query/CachingClusteredClientBenchmark.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"M"},{"authorDate":"2020-07-30 06:19:18","commitOrder":7,"curCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            PROCESSING_CONFIG,\n            configSupplier,\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","date":"2020-07-30 06:19:18","endLine":148,"groupId":"106424","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/41/4a89fae6963e1fb030ab80deba6193987c5209.src","preCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            PROCESSING_CONFIG,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryMergeBufferTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"574b062f1f6f1cf0637d99d4ea540a95971c7489","commitMessage":"@@@Cluster wide default query context setting (#10208)\n\n* Cluster wide default query context setting\n\n* Cluster wide default query context setting\n\n* Cluster wide default query context setting\n\n* add docs\n\n* fix docs\n\n* update props\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix checkstyle\n\n* update docs\n\n* address comments\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix NPE","date":"2020-07-30 06:19:18","modifiedFileCount":"21","status":"M","submitter":"Maytas Monsereenusorn"}]
