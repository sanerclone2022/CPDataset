[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private ListenableFuture<TaskStatus> runTask(final Task task, final TaskToolbox toolbox)\n  {\n    return taskExec.submit(\n        new Callable<TaskStatus>()\n        {\n          @Override\n          public TaskStatus call() throws Exception\n          {\n            try {\n              if (task.isReady(toolbox.getTaskActionClient())) {\n                return task.run(toolbox);\n              } else {\n                throw new ISE(\"Task is not ready\");\n              }\n            }\n            catch (Exception e) {\n              log.warn(e, \"Task failed\");\n              throw e;\n            }\n          }\n        }\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":869,"groupId":"2729","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"runTask","params":"(finalTasktask@finalTaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/88/a5a43ac6348dcc06d166c7ecd82fe32df01520.src","preCode":"  private ListenableFuture<TaskStatus> runTask(final Task task, final TaskToolbox toolbox)\n  {\n    return taskExec.submit(\n        new Callable<TaskStatus>()\n        {\n          @Override\n          public TaskStatus call() throws Exception\n          {\n            try {\n              if (task.isReady(toolbox.getTaskActionClient())) {\n                return task.run(toolbox);\n              } else {\n                throw new ISE(\"Task is not ready\");\n              }\n            }\n            catch (Exception e) {\n              log.warn(e, \"Task failed\");\n              throw e;\n            }\n          }\n        }\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/RealtimeIndexTaskTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":847,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private ListenableFuture<TaskStatus> runTask(final Task task)\n  {\n    try {\n      taskStorage.insert(task, TaskStatus.running(task.getId()));\n    }\n    catch (EntryExistsException e) {\n      \r\n    }\n    taskLockbox.syncFromStorage();\n    final TaskToolbox toolbox = taskToolboxFactory.build(task);\n    return taskExec.submit(\n        new Callable<TaskStatus>()\n        {\n          @Override\n          public TaskStatus call() throws Exception\n          {\n            try {\n              if (task.isReady(toolbox.getTaskActionClient())) {\n                return task.run(toolbox);\n              } else {\n                throw new ISE(\"Task is not ready\");\n              }\n            }\n            catch (Exception e) {\n              log.warn(e, \"Task failed\");\n              throw e;\n            }\n          }\n        }\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":1231,"groupId":"2729","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"runTask","params":"(finalTasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/fcd94da19dd9f05cce3027a3abada825548097.src","preCode":"  private ListenableFuture<TaskStatus> runTask(final Task task)\n  {\n    try {\n      taskStorage.insert(task, TaskStatus.running(task.getId()));\n    }\n    catch (EntryExistsException e) {\n      \r\n    }\n    taskLockbox.syncFromStorage();\n    final TaskToolbox toolbox = taskToolboxFactory.build(task);\n    return taskExec.submit(\n        new Callable<TaskStatus>()\n        {\n          @Override\n          public TaskStatus call() throws Exception\n          {\n            try {\n              if (task.isReady(toolbox.getTaskActionClient())) {\n                return task.run(toolbox);\n              } else {\n                throw new ISE(\"Task is not ready\");\n              }\n            }\n            catch (Exception e) {\n              log.warn(e, \"Task failed\");\n              throw e;\n            }\n          }\n        }\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1201,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-09-08 04:17:49","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  private ListenableFuture<TaskStatus> runTask(final Task task, final TaskToolbox toolbox)\n  {\n    return taskExec.submit(\n        new Callable<TaskStatus>()\n        {\n          @Override\n          public TaskStatus call() throws Exception\n          {\n            try {\n              if (task.isReady(toolbox.getTaskActionClient())) {\n                return task.run(toolbox);\n              } else {\n                throw new ISE(\"Task is not ready\");\n              }\n            }\n            catch (Exception e) {\n              log.warn(e, \"Task failed\");\n              throw e;\n            }\n          }\n        }\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":869,"groupId":"104416","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"runTask","params":"(finalTasktask@finalTaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/88/a5a43ac6348dcc06d166c7ecd82fe32df01520.src","preCode":"  private ListenableFuture<TaskStatus> runTask(final Task task, final TaskToolbox toolbox)\n  {\n    return taskExec.submit(\n        new Callable<TaskStatus>()\n        {\n          @Override\n          public TaskStatus call() throws Exception\n          {\n            try {\n              if (task.isReady(toolbox.getTaskActionClient())) {\n                return task.run(toolbox);\n              } else {\n                throw new ISE(\"Task is not ready\");\n              }\n            }\n            catch (Exception e) {\n              log.warn(e, \"Task failed\");\n              throw e;\n            }\n          }\n        }\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/RealtimeIndexTaskTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":847,"status":"N"},{"authorDate":"2018-09-08 04:17:49","commitOrder":2,"curCode":"  private ListenableFuture<TaskStatus> runTask(final Task task)\n  {\n    try {\n      taskStorage.insert(task, TaskStatus.running(task.getId()));\n    }\n    catch (EntryExistsException e) {\n      \r\n    }\n    taskLockbox.syncFromStorage();\n    final TaskToolbox toolbox = taskToolboxFactory.build(task);\n    return taskExec.submit(\n        () -> {\n          try {\n            if (task.isReady(toolbox.getTaskActionClient())) {\n              return task.run(toolbox);\n            } else {\n              throw new ISE(\"Task is not ready\");\n            }\n          }\n          catch (Exception e) {\n            log.warn(e, \"Task failed\");\n            throw e;\n          }\n        }\n    );\n  }\n","date":"2018-09-08 04:17:49","endLine":1291,"groupId":"104416","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"runTask","params":"(finalTasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/da/6cd0b429362a471d42ba5a941466696623de28.src","preCode":"  private ListenableFuture<TaskStatus> runTask(final Task task)\n  {\n    try {\n      taskStorage.insert(task, TaskStatus.running(task.getId()));\n    }\n    catch (EntryExistsException e) {\n      \r\n    }\n    taskLockbox.syncFromStorage();\n    final TaskToolbox toolbox = taskToolboxFactory.build(task);\n    return taskExec.submit(\n        new Callable<TaskStatus>()\n        {\n          @Override\n          public TaskStatus call() throws Exception\n          {\n            try {\n              if (task.isReady(toolbox.getTaskActionClient())) {\n                return task.run(toolbox);\n              } else {\n                throw new ISE(\"Task is not ready\");\n              }\n            }\n            catch (Exception e) {\n              log.warn(e, \"Task failed\");\n              throw e;\n            }\n          }\n        }\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTaskTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1266,"status":"M"}],"commitId":"e6e068ce60a073700701dd2a7b2b59218d59a2c3","commitMessage":"@@@Add support for 'maxTotalRows' to incremental publishing kafka indexing task and appenderator based realtime task (#6129)\n\n* resolves #5898 by adding maxTotalRows to incremental publishing kafka index task and appenderator based realtime indexing task.  as available in IndexTask\n\n* address review comments\n\n* changes due to review\n\n* merge fail\n","date":"2018-09-08 04:17:49","modifiedFileCount":"16","status":"M","submitter":"Clint Wylie"}]
