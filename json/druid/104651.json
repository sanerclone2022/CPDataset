[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-12-22 03:49:24","commitOrder":2,"curCode":"  public Appenderator newAppenderator(FireDepartmentMetrics metrics, TaskToolbox toolbox)\n  {\n    return Appenderators.createRealtime(\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getObjectMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","date":"2018-12-22 03:49:24","endLine":216,"groupId":"10706","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newAppenderator","params":"(FireDepartmentMetricsmetrics@TaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/7f/279917a3f11f55c8794a4148be0f0f9bb0e669.src","preCode":"  public Appenderator newAppenderator(FireDepartmentMetrics metrics, TaskToolbox toolbox)\n  {\n    return Appenderators.createRealtime(\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getObjectMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  private static Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return Appenderators.createRealtime(\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getObjectMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":712,"groupId":"10706","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newAppenderator","params":"(finalDataSchemadataSchema@finalRealtimeAppenderatorTuningConfigtuningConfig@finalFireDepartmentMetricsmetrics@finalTaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/49/a9333567eec4d6ece0f23fa7d58550ac0de79a.src","preCode":"  private static Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return Appenderators.createRealtime(\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getObjectMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":689,"status":"NB"}],"commitId":"7c7997e8a1183a7bffad731ca94e8b4c381e8665","commitMessage":"@@@Add Kinesis Indexing Service to core Druid (#6431)\n\n* created seekablestream classes\n\n* created seekablestreamsupervisor class\n\n* first attempt to integrate kafa indexing service to use SeekableStream\n\n* seekablestream bug fixes\n\n* kafkarecordsupplier\n\n* integrated kafka indexing service with seekablestream\n\n* implemented resume/suspend and refactored some package names\n\n* moved kinesis indexing service into core druid extensions\n\n* merged some changes from kafka supervisor race condition\n\n* integrated kinesis-indexing-service with seekablestream\n\n* unite tests for kinesis-indexing-service\n\n* various bug fixes for kinesis-indexing-service\n\n* refactored kinesisindexingtask\n\n* finished up more kinesis unit tests\n\n* more bug fixes for kinesis-indexing-service\n\n* finsihed refactoring kinesis unit tests\n\n* removed KinesisParititons and KafkaPartitions to use SeekableStreamPartitions\n\n* kinesis-indexing-service code cleanup and docs\n\n* merge #6291\n\nmerge #6337\n\nmerge #6383\n\n* added more docs and reordered methods\n\n* fixd kinesis tests after merging master and added docs in seekablestream\n\n* fix various things from pr comment\n\n* improve recordsupplier and add unit tests\n\n* migrated to aws-java-sdk-kinesis\n\n* merge changes from master\n\n* fix pom files and forbiddenapi checks\n\n* checkpoint JavaType bug fix\n\n* fix pom and stuff\n\n* disable checkpointing in kinesis\n\n* fix kinesis sequence number null in closed shard\n\n* merge changes from master\n\n* fixes for kinesis tasks\n\n* capitalized <partitionType.  sequenceType>\n\n* removed abstract class loggers\n\n* conform to guava api restrictions\n\n* add docker for travis other modules test\n\n* address comments\n\n* improve RecordSupplier to supply records in batch\n\n* fix strict compile issue\n\n* add test scope for localstack dependency\n\n* kinesis indexing task refactoring\n\n* comments\n\n* github comments\n\n* minor fix\n\n* removed unneeded readme\n\n* fix deserialization bug\n\n* fix various bugs\n\n* KinesisRecordSupplier unable to catch up to earliest position in stream bug fix\n\n* minor changes to kinesis\n\n* implement deaggregate for kinesis\n\n* Merge remote-tracking branch 'upstream/master' into seekablestream\n\n* fix kinesis offset discrepancy with kafka\n\n* kinesis record supplier disable getPosition\n\n* pr comments\n\n* mock for kinesis tests and remove docker dependency for unit tests\n\n* PR comments\n\n* avg lag in kafkasupervisor #6587\n\n* refacotred SequenceMetadata in taskRunners\n\n* small fix\n\n* more small fix\n\n* recordsupplier resource leak\n\n* revert .travis.yml formatting\n\n* fix style\n\n* kinesis docs\n\n* doc part2\n\n* more docs\n\n* comments\n\n* comments*2\n\n* revert string replace changes\n\n* comments\n\n* teamcity\n\n* comments part 1\n\n* comments part 2\n\n* comments part 3\n\n* merge #6754\n\n* fix injection binding\n\n* comments\n\n* KinesisRegion refactor\n\n* comments part idk lol\n\n* can't think of a commit msg anymore\n\n* remove possiblyResetDataSourceMetadata() for IncrementalPublishingTaskRunner\n\n* commmmmmmmmmments\n\n* extra error handling in KinesisRecordSupplier getRecords\n\n* comments\n\n* quickfix\n\n* typo\n\n* oof\n","date":"2018-12-22 03:49:24","modifiedFileCount":"22","status":"M","submitter":"Joshua Sun"},{"authorTime":"2019-07-30 08:06:33","codes":[{"authorDate":"2019-07-30 08:06:33","commitOrder":3,"curCode":"  public Appenderator newAppenderator(FireDepartmentMetrics metrics, TaskToolbox toolbox)\n  {\n    return appenderatorsManager.createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getObjectMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","date":"2019-07-30 08:06:33","endLine":226,"groupId":"10706","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newAppenderator","params":"(FireDepartmentMetricsmetrics@TaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2d/a2f967cb9a6a0fb831c1799867dec06b552fb0.src","preCode":"  public Appenderator newAppenderator(FireDepartmentMetrics metrics, TaskToolbox toolbox)\n  {\n    return Appenderators.createRealtime(\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getObjectMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"},{"authorDate":"2019-07-30 08:06:33","commitOrder":3,"curCode":"  private Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return appenderatorsManager.createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getObjectMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","date":"2019-07-30 08:06:33","endLine":771,"groupId":"10706","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newAppenderator","params":"(finalDataSchemadataSchema@finalRealtimeAppenderatorTuningConfigtuningConfig@finalFireDepartmentMetricsmetrics@finalTaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/9e/c84de46946b416bc86ce838099add09be684e7.src","preCode":"  private static Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return Appenderators.createRealtime(\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getObjectMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":747,"status":"M"}],"commitId":"640b7afc1cee911a27de7bf938dda24a85ba1510","commitMessage":"@@@Add CliIndexer process type and initial task runner implementation (#8107)\n\n* Add CliIndexer process type and initial task runner implementation\n\n* Fix HttpRemoteTaskRunnerTest\n\n* Remove batch sanity check on PeonAppenderatorsManager\n\n* Fix paralle index tests\n\n* PR comments\n\n* Adjust Jersey resource logging\n\n* Additional cleanup\n\n* Fix SystemSchemaTest\n\n* Add comment to LocalDataSegmentPusherTest absolute path test\n\n* More PR comments\n\n* Use Server annotated with RemoteChatHandler\n\n* More PR comments\n\n* Checkstyle\n\n* PR comments\n\n* Add task shutdown to stopGracefully\n\n* Small cleanup\n\n* Compile fix\n\n* Address PR comments\n\n* Adjust TaskReportFileWriter and fix nits\n\n* Remove unnecessary closer\n\n* More PR comments\n\n* Minor adjustments\n\n* PR comments\n\n* ThreadingTaskRunner: cancel  task run future not shutdownFuture and remove thread from workitem\n","date":"2019-07-30 08:06:33","modifiedFileCount":"64","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2019-11-20 05:57:58","codes":[{"authorDate":"2019-11-20 05:57:58","commitOrder":4,"curCode":"  public Appenderator newAppenderator(FireDepartmentMetrics metrics, TaskToolbox toolbox)\n  {\n    return appenderatorsManager.createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","date":"2019-11-20 05:57:58","endLine":213,"groupId":"10706","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"newAppenderator","params":"(FireDepartmentMetricsmetrics@TaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/de/dba07d2238e60ad38e636a0085949fa47812a6.src","preCode":"  public Appenderator newAppenderator(FireDepartmentMetrics metrics, TaskToolbox toolbox)\n  {\n    return appenderatorsManager.createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getObjectMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"},{"authorDate":"2019-11-20 05:57:58","commitOrder":4,"curCode":"  private Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return appenderatorsManager.createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","date":"2019-11-20 05:57:58","endLine":779,"groupId":"10706","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newAppenderator","params":"(finalDataSchemadataSchema@finalRealtimeAppenderatorTuningConfigtuningConfig@finalFireDepartmentMetricsmetrics@finalTaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cb/9a9df37702dea19f0ec57e1f84ea01e74bfe03.src","preCode":"  private Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return appenderatorsManager.createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getObjectMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":755,"status":"M"}],"commitId":"c44452f0c1b051b03343d8bb479828f01461d68f","commitMessage":"@@@Tidy up lifecycle.  query.  and ingestion logging. (#8889)\n\n* Tidy up lifecycle.  query.  and ingestion logging.\n\nThe goal of this patch is to improve the clarity and usefulness of\nDruid's logging for cluster operators. For more information.  see\nhttps://twitter.com/cowtowncoder/status/1195469299814555648.\n\nConcretely.  this patch does the following:\n\n- Changes a lot of INFO logs to DEBUG.  and DEBUG to TRACE.  with the\n  goal of reducing redundancy and improving clarity by avoiding\n  showing rarely-useful log messages. This includes most \"starting\"\n  and \"stopping\" messages.  and most messages related to individual\n  columns.\n- Adds new log4j2 templates that show operators how to enabled DEBUG\n  logging for certain important packages.\n- Eliminate stack traces for query errors.  unless log level is DEBUG\n  or more. This is useful because query errors often indicate user\n  error rather than system error.  but dumping stack trace often gave\n  operators the impression that there was a system failure.\n- Adds task id to Appenderator.  AppenderatorDriver thread names. In\n  the default log4j2 configuration.  this will put them in log lines\n  as well. It's very useful if a user is using the Indexer.  where\n  multiple tasks run in the same JVM.\n- More consistent terminology when it comes to \"sequences\" (sets of\n  segments that are handed-off together by Kafka ingestion) and\n  \"offsets\" (cursors in partitions). These terms had been confused in\n  some log messages due to the fact that Kinesis calls offsets\n  \"sequence numbers\".\n- Replaces some ugly toString calls with either the JSONification or\n  something more operator-accessible (like a URL or segment identifier. \n  instead of JSON object representing the same).\n\n* Adjustments.\n\n* Adjust integration test.\n","date":"2019-11-20 05:57:58","modifiedFileCount":"101","status":"M","submitter":"Gian Merlino"},{"authorTime":"2020-01-25 05:10:01","codes":[{"authorDate":"2020-01-25 05:10:01","commitOrder":5,"curCode":"  public Appenderator newAppenderator(FireDepartmentMetrics metrics, TaskToolbox toolbox)\n  {\n    return appenderatorsManager.createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","date":"2020-01-25 05:10:01","endLine":214,"groupId":"10706","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"newAppenderator","params":"(FireDepartmentMetricsmetrics@TaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2f/ac4f500015c06b8c9daf86b91bda3cf3d65a26.src","preCode":"  public Appenderator newAppenderator(FireDepartmentMetrics metrics, TaskToolbox toolbox)\n  {\n    return appenderatorsManager.createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"},{"authorDate":"2020-01-25 05:10:01","commitOrder":5,"curCode":"  private Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return appenderatorsManager.createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","date":"2020-01-25 05:10:01","endLine":780,"groupId":"10706","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"newAppenderator","params":"(finalDataSchemadataSchema@finalRealtimeAppenderatorTuningConfigtuningConfig@finalFireDepartmentMetricsmetrics@finalTaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/da/aec1ba5fabc18e20d067d13374a87f8d63241b.src","preCode":"  private Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return appenderatorsManager.createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":755,"status":"M"}],"commitId":"19b427e8f371bed0b0100272ac890b3775471654","commitMessage":"@@@Add JoinableFactory interface and use it in the query stack. (#9247)\n\n* Add JoinableFactory interface and use it in the query stack.\n\nAlso includes InlineJoinableFactory.  which enables joining against\ninline datasources. This is the first patch where a basic join query\nactually works. It includes integration tests.\n\n* Fix test issues.\n\n* Adjustments from code review.\n","date":"2020-01-25 05:10:01","modifiedFileCount":"51","status":"M","submitter":"Gian Merlino"},{"authorTime":"2020-08-27 08:08:12","codes":[{"authorDate":"2020-08-27 08:08:12","commitOrder":6,"curCode":"  public Appenderator newAppenderator(FireDepartmentMetrics metrics, TaskToolbox toolbox)\n  {\n    return toolbox.getAppenderatorsManager().createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","date":"2020-08-27 08:08:12","endLine":202,"groupId":"10706","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"newAppenderator","params":"(FireDepartmentMetricsmetrics@TaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4f/db33d37107d137c2a96e1e1ee936e1c512038f.src","preCode":"  public Appenderator newAppenderator(FireDepartmentMetrics metrics, TaskToolbox toolbox)\n  {\n    return appenderatorsManager.createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"},{"authorDate":"2020-08-27 08:08:12","commitOrder":6,"curCode":"  private Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return toolbox.getAppenderatorsManager().createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","date":"2020-08-27 08:08:12","endLine":761,"groupId":"10706","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"newAppenderator","params":"(finalDataSchemadataSchema@finalRealtimeAppenderatorTuningConfigtuningConfig@finalFireDepartmentMetricsmetrics@finalTaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2b/b13d93092fb4ce1ef89d614aa2d349928a4c06.src","preCode":"  private Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return appenderatorsManager.createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":736,"status":"M"}],"commitId":"f82fd22fa7de175200b7127c34c2eb2900bf7317","commitMessage":"@@@Move tools for indexing to TaskToolbox instead of injecting them in constructor (#10308)\n\n* Move tools for indexing to TaskToolbox instead of injecting them in constructor\n\n* oops.  other changes\n\n* fix test\n\n* unnecessary new file\n\n* fix test\n\n* fix build","date":"2020-08-27 08:08:12","modifiedFileCount":"67","status":"M","submitter":"Jihoon Son"},{"authorTime":"2020-09-12 07:31:10","codes":[{"authorDate":"2020-09-12 07:31:10","commitOrder":7,"curCode":"  public Appenderator newAppenderator(\n      TaskToolbox toolbox,\n      FireDepartmentMetrics metrics,\n      RowIngestionMeters rowIngestionMeters,\n      ParseExceptionHandler parseExceptionHandler\n  )\n  {\n    return toolbox.getAppenderatorsManager().createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats(),\n        rowIngestionMeters,\n        parseExceptionHandler\n    );\n  }\n","date":"2020-09-12 07:31:10","endLine":202,"groupId":"10706","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"newAppenderator","params":"(TaskToolboxtoolbox@FireDepartmentMetricsmetrics@RowIngestionMetersrowIngestionMeters@ParseExceptionHandlerparseExceptionHandler)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/54/292d8c9fb83c05f5cc50fc7d61f6fecae88e94.src","preCode":"  public Appenderator newAppenderator(FireDepartmentMetrics metrics, TaskToolbox toolbox)\n  {\n    return toolbox.getAppenderatorsManager().createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"},{"authorDate":"2020-09-12 07:31:10","commitOrder":7,"curCode":"  private Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return toolbox.getAppenderatorsManager().createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats(),\n        rowIngestionMeters,\n        parseExceptionHandler\n    );\n  }\n","date":"2020-09-12 07:31:10","endLine":772,"groupId":"10706","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"newAppenderator","params":"(finalDataSchemadataSchema@finalRealtimeAppenderatorTuningConfigtuningConfig@finalFireDepartmentMetricsmetrics@finalTaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/06/4d2caa33502379bc0ed6a593728d18244b2dad.src","preCode":"  private Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return toolbox.getAppenderatorsManager().createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats()\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":745,"status":"M"}],"commitId":"8f14ac814e1fdf11878a5ba9bdba58fb745b4c8f","commitMessage":"@@@More structured way to handle parse exceptions (#10336)\n\n* More structured way to handle parse exceptions\n\n* checkstyle; add more tests\n\n* forbidden api; test\n\n* address comment; new test\n\n* address review comments\n\n* javadoc for parseException; remove redundant parseException in streaming ingestion\n\n* fix tests\n\n* unnecessary catch\n\n* unused imports\n\n* appenderator test\n\n* unused import","date":"2020-09-12 07:31:10","modifiedFileCount":"116","status":"M","submitter":"Jihoon Son"},{"authorTime":"2021-07-01 18:33:08","codes":[{"authorDate":"2021-07-01 18:33:08","commitOrder":8,"curCode":"  public Appenderator newAppenderator(\n      TaskToolbox toolbox,\n      FireDepartmentMetrics metrics,\n      RowIngestionMeters rowIngestionMeters,\n      ParseExceptionHandler parseExceptionHandler\n  )\n  {\n    return toolbox.getAppenderatorsManager().createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryProcessingPool(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats(),\n        rowIngestionMeters,\n        parseExceptionHandler\n    );\n  }\n","date":"2021-07-01 18:33:08","endLine":203,"groupId":"104651","id":13,"instanceNumber":1,"isCurCommit":1,"methodName":"newAppenderator","params":"(TaskToolboxtoolbox@FireDepartmentMetricsmetrics@RowIngestionMetersrowIngestionMeters@ParseExceptionHandlerparseExceptionHandler)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3f/91d11eeb9a5fefc72d1c5bcac5823ebd8c825a.src","preCode":"  public Appenderator newAppenderator(\n      TaskToolbox toolbox,\n      FireDepartmentMetrics metrics,\n      RowIngestionMeters rowIngestionMeters,\n      ParseExceptionHandler parseExceptionHandler\n  )\n  {\n    return toolbox.getAppenderatorsManager().createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats(),\n        rowIngestionMeters,\n        parseExceptionHandler\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/SeekableStreamIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"},{"authorDate":"2021-07-01 18:33:08","commitOrder":8,"curCode":"  private Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return toolbox.getAppenderatorsManager().createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryProcessingPool(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats(),\n        rowIngestionMeters,\n        parseExceptionHandler\n    );\n  }\n","date":"2021-07-01 18:33:08","endLine":787,"groupId":"104651","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"newAppenderator","params":"(finalDataSchemadataSchema@finalRealtimeAppenderatorTuningConfigtuningConfig@finalFireDepartmentMetricsmetrics@finalTaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ed/c1d183ffcaccd337efe416ed1981c91b682af5.src","preCode":"  private Appenderator newAppenderator(\n      final DataSchema dataSchema,\n      final RealtimeAppenderatorTuningConfig tuningConfig,\n      final FireDepartmentMetrics metrics,\n      final TaskToolbox toolbox\n  )\n  {\n    return toolbox.getAppenderatorsManager().createRealtimeAppenderatorForTask(\n        getId(),\n        dataSchema,\n        tuningConfig.withBasePersistDirectory(toolbox.getPersistDir()),\n        metrics,\n        toolbox.getSegmentPusher(),\n        toolbox.getJsonMapper(),\n        toolbox.getIndexIO(),\n        toolbox.getIndexMergerV9(),\n        toolbox.getQueryRunnerFactoryConglomerate(),\n        toolbox.getSegmentAnnouncer(),\n        toolbox.getEmitter(),\n        toolbox.getQueryExecutorService(),\n        toolbox.getJoinableFactory(),\n        toolbox.getCache(),\n        toolbox.getCacheConfig(),\n        toolbox.getCachePopulatorStats(),\n        rowIngestionMeters,\n        parseExceptionHandler\n    );\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":760,"status":"M"}],"commitId":"03a6a6d6e1f7024c2691e6fef0685bd137d223e7","commitMessage":"@@@Replace Processing ExecutorService with QueryProcessingPool (#11382)\n\nThis PR refactors the code for QueryRunnerFactory#mergeRunners to accept a new interface called QueryProcessingPool instead of ExecutorService for concurrent execution of query runners. This interface will let custom extensions inject their own implementation for deciding which query-runner to prioritize first. The default implementation is the same as today that takes the priority of query into account. QueryProcessingPool can also be used as a regular executor service. It has a dedicated method for accepting query execution work so implementations can differentiate between regular async tasks and query execution tasks. This dedicated method also passes the QueryRunner object as part of the task information. This hook will let custom extensions carry any state from QuerySegmentWalker to QueryProcessingPool#mergeRunners which is not possible currently.","date":"2021-07-01 18:33:08","modifiedFileCount":"52","status":"M","submitter":"Abhishek Agarwal"}]
