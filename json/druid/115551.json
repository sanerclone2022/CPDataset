[{"authorTime":"2018-10-15 11:37:37","codes":[{"authorDate":"2018-10-15 11:37:37","commitOrder":1,"curCode":"  private <T> ConfigSerde<T> create(final Class<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n    };\n  }\n","date":"2018-10-15 11:37:37","endLine":127,"groupId":"812","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(finalClass<?extendsT>clazz@finalTdefaultVal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/69/c6b60f1700f5c5f098e5f6cb4fdab978de9bca.src","preCode":"  private <T> ConfigSerde<T> create(final Class<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/common/config/JacksonConfigManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"},{"authorDate":"2018-10-15 11:37:37","commitOrder":1,"curCode":"  private <T> ConfigSerde<T> create(final TypeReference<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n    };\n  }\n","date":"2018-10-15 11:37:37","endLine":170,"groupId":"812","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(finalTypeReference<?extendsT>clazz@finalTdefaultVal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/69/c6b60f1700f5c5f098e5f6cb4fdab978de9bca.src","preCode":"  private <T> ConfigSerde<T> create(final TypeReference<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/common/config/JacksonConfigManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"}],"commitId":"84598fba3b283cbfd6a5addd2602c7b12ba8c00c","commitMessage":"@@@combine druid-api.  druid-common.  java-util into druid-core (#6443)\n\n* combine druid-api.  druid-common.  java-util\n\n* spacing\n","date":"2018-10-15 11:37:37","modifiedFileCount":"0","status":"B","submitter":"Clint Wylie"},{"authorTime":"2019-03-15 05:28:33","codes":[{"authorDate":"2019-03-15 05:28:33","commitOrder":2,"curCode":"  private <T> ConfigSerde<T> create(final Class<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n","date":"2019-03-15 05:28:33","endLine":126,"groupId":"22599","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(finalClass<?extendsT>clazz@finalTdefaultVal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/32/d7649d2c058b4635e0c1eaf67ded09dce31842.src","preCode":"  private <T> ConfigSerde<T> create(final Class<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/common/config/JacksonConfigManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2019-03-15 05:28:33","commitOrder":2,"curCode":"  private <T> ConfigSerde<T> create(final TypeReference<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n","date":"2019-03-15 05:28:33","endLine":169,"groupId":"22599","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(finalTypeReference<?extendsT>clazz@finalTdefaultVal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/32/d7649d2c058b4635e0c1eaf67ded09dce31842.src","preCode":"  private <T> ConfigSerde<T> create(final TypeReference<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw Throwables.propagate(e);\n        }\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/common/config/JacksonConfigManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"7ada1c49f9735a37808f3ed7656d93ae88b8b925","commitMessage":"@@@Prohibit Throwables.propagate() (#7121)\n\n* Throw caught exception.\n\n* Throw caught exceptions.\n\n* Related checkstyle rule is added to prevent further bugs.\n\n* RuntimeException() is used instead of Throwables.propagate().\n\n* Missing import is added.\n\n* Throwables are propogated if possible.\n\n* Throwables are propogated if possible.\n\n* Throwables are propogated if possible.\n\n* Throwables are propogated if possible.\n\n* * Checkstyle definition is improved.\n* Throwables.propagate() usages are removed.\n\n* Checkstyle pattern is changed for only scanning \"Throwables.propagate(\" instead of checking lookbehind.\n\n* Throwable is kept before firing a Runtime Exception.\n\n* Fix unused assignments.\n","date":"2019-03-15 05:28:33","modifiedFileCount":"228","status":"M","submitter":"Furkan KAMACI"},{"authorTime":"2019-03-15 05:28:33","codes":[{"authorDate":"2019-11-07 03:07:04","commitOrder":3,"curCode":"  private <T> ConfigSerde<T> create(final Class<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        return JacksonUtils.readValue(jsonMapper, bytes, clazz);\n      }\n    };\n  }\n","date":"2019-11-07 03:07:04","endLine":122,"groupId":"22599","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(finalClass<?extendsT>clazz@finalTdefaultVal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/10/75e4c1aba64a9d66d68189d4553739c338d28f.src","preCode":"  private <T> ConfigSerde<T> create(final Class<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/common/config/JacksonConfigManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2019-03-15 05:28:33","commitOrder":3,"curCode":"  private <T> ConfigSerde<T> create(final TypeReference<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n","date":"2019-03-15 05:28:33","endLine":169,"groupId":"22599","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(finalTypeReference<?extendsT>clazz@finalTdefaultVal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/32/d7649d2c058b4635e0c1eaf67ded09dce31842.src","preCode":"  private <T> ConfigSerde<T> create(final TypeReference<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/common/config/JacksonConfigManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"N"}],"commitId":"5c0fc0a13ab4d259b430bf50b322f631504c4529","commitMessage":"@@@Fix ambiguity about IndexerSQLMetadataStorageCoordinator.getUsedSegmentsForInterval() returning only non-overshadowed or all used segments (#8564)\n\n* IndexerSQLMetadataStorageCoordinator.getTimelineForIntervalsWithHandle() don't fetch abutting intervals; simplify getUsedSegmentsForIntervals()\n\n* Add VersionedIntervalTimeline.findNonOvershadowedObjectsInInterval() method; Propagate the decision about whether only visible segmetns or visible and overshadowed segments should be returned from IndexerMetadataStorageCoordinator's methods to the user logic; Rename SegmentListUsedAction to RetrieveUsedSegmentsAction.  SegmetnListUnusedAction to RetrieveUnusedSegmentsAction.  and UsedSegmentLister to UsedSegmentsRetriever\n\n* Fix tests\n\n* More fixes\n\n* Add javadoc notes about returning Collection instead of Set. Add JacksonUtils.readValue() to reduce boilerplate code\n\n* Fix KinesisIndexTaskTest.  factor out common parts from KinesisIndexTaskTest and KafkaIndexTaskTest into SeekableStreamIndexTaskTestBase\n\n* More test fixes\n\n* More test fixes\n\n* Add a comment to VersionedIntervalTimelineTestBase\n\n* Fix tests\n\n* Set DataSegment.size(0) in more tests\n\n* Specify DataSegment.size(0) in more places in tests\n\n* Fix more tests\n\n* Fix DruidSchemaTest\n\n* Set DataSegment's size in more tests and benchmarks\n\n* Fix HdfsDataSegmentPusherTest\n\n* Doc changes addressing comments\n\n* Extended doc for visibility\n\n* Typo\n\n* Typo 2\n\n* Address comment\n","date":"2019-11-07 03:07:04","modifiedFileCount":"88","status":"M","submitter":"Roman Leventov"},{"authorTime":"2021-04-14 11:18:28","codes":[{"authorDate":"2021-04-14 11:18:28","commitOrder":4,"curCode":"  <T> ConfigSerde<T> create(final Class<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj, boolean skipNull)\n      {\n        try {\n          return skipNull ? jsonMapperSkipNull.writeValueAsString(obj) : jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        return JacksonUtils.readValue(jsonMapper, bytes, clazz);\n      }\n    };\n  }\n","date":"2021-04-14 11:18:28","endLine":121,"groupId":"115551","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(finalClass<?extendsT>clazz@finalTdefaultVal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c6/2a8b72cabff1f288b6f96e9e2302094fa0ceb5.src","preCode":"  private <T> ConfigSerde<T> create(final Class<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        return JacksonUtils.readValue(jsonMapper, bytes, clazz);\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/common/config/JacksonConfigManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2021-04-14 11:18:28","commitOrder":4,"curCode":"  <T> ConfigSerde<T> create(final TypeReference<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj, boolean skipNull)\n      {\n        try {\n          return skipNull ? jsonMapperSkipNull.writeValueAsString(obj) : jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n","date":"2021-04-14 11:18:28","endLine":165,"groupId":"115551","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(finalTypeReference<?extendsT>clazz@finalTdefaultVal)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c6/2a8b72cabff1f288b6f96e9e2302094fa0ceb5.src","preCode":"  private <T> ConfigSerde<T> create(final TypeReference<? extends T> clazz, final T defaultVal)\n  {\n    return new ConfigSerde<T>()\n    {\n      @Override\n      public byte[] serialize(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsBytes(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public String serializeToString(T obj)\n      {\n        try {\n          return jsonMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e) {\n          throw new RuntimeException(e);\n        }\n      }\n\n      @Override\n      public T deserialize(byte[] bytes)\n      {\n        if (bytes == null) {\n          return defaultVal;\n        }\n\n        try {\n          return jsonMapper.readValue(bytes, clazz);\n        }\n        catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n  }\n","realPath":"core/src/main/java/org/apache/druid/common/config/JacksonConfigManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"f96840017017806d2bbe35cf344e682995e8a9c1","commitMessage":"@@@Introduce a new configuration that skip storing audit payload if payload size exceed limit and skip storing null fields for audit payload (#11078)\n\n* Add config to skip storing audit payload if exceed limit\n\n* fix checkstyle\n\n* change config name\n\n* skip null fields for audit payload\n\n* fix checkstyle\n\n* address comments\n\n* fix guice\n\n* fix test\n\n* add tests\n\n* address comments\n\n* address comments\n\n* address comments\n\n* fix checkstyle\n\n* address comments\n\n* fix test\n\n* fix test\n\n* address comments\n\n* Address comments\n\nCo-authored-by: Jihoon Son <jihoonson@apache.org>\n\nCo-authored-by: Jihoon Son <jihoonson@apache.org>","date":"2021-04-14 11:18:28","modifiedFileCount":"8","status":"M","submitter":"Maytas Monsereenusorn"}]
