[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-12-22 03:49:24","commitOrder":2,"curCode":"  public void testStop()\n  {\n    supervisorRecordSupplier.close();\n    expectLastCall().anyTimes();\n\n    EasyMock.expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KinesisSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","date":"2018-12-22 03:49:24","endLine":2182,"groupId":"245","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testStop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/75/0b9247d792032ba5dba7aad3d99eb263413dcd.src","preCode":"  public void testStop()\n  {\n    supervisorRecordSupplier.close();\n    expectLastCall().anyTimes();\n\n    EasyMock.expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KinesisSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2167,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void testStop()\n  {\n    expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KafkaSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getSupervisor(1, 1, true, \"PT1H\", null, null, false);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","date":"2018-08-31 00:56:26","endLine":1641,"groupId":"245","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testStop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5d/773db661d0c8e87703ae229b128551316998e5.src","preCode":"  public void testStop()\n  {\n    expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KafkaSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getSupervisor(1, 1, true, \"PT1H\", null, null, false);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1629,"status":"NB"}],"commitId":"7c7997e8a1183a7bffad731ca94e8b4c381e8665","commitMessage":"@@@Add Kinesis Indexing Service to core Druid (#6431)\n\n* created seekablestream classes\n\n* created seekablestreamsupervisor class\n\n* first attempt to integrate kafa indexing service to use SeekableStream\n\n* seekablestream bug fixes\n\n* kafkarecordsupplier\n\n* integrated kafka indexing service with seekablestream\n\n* implemented resume/suspend and refactored some package names\n\n* moved kinesis indexing service into core druid extensions\n\n* merged some changes from kafka supervisor race condition\n\n* integrated kinesis-indexing-service with seekablestream\n\n* unite tests for kinesis-indexing-service\n\n* various bug fixes for kinesis-indexing-service\n\n* refactored kinesisindexingtask\n\n* finished up more kinesis unit tests\n\n* more bug fixes for kinesis-indexing-service\n\n* finsihed refactoring kinesis unit tests\n\n* removed KinesisParititons and KafkaPartitions to use SeekableStreamPartitions\n\n* kinesis-indexing-service code cleanup and docs\n\n* merge #6291\n\nmerge #6337\n\nmerge #6383\n\n* added more docs and reordered methods\n\n* fixd kinesis tests after merging master and added docs in seekablestream\n\n* fix various things from pr comment\n\n* improve recordsupplier and add unit tests\n\n* migrated to aws-java-sdk-kinesis\n\n* merge changes from master\n\n* fix pom files and forbiddenapi checks\n\n* checkpoint JavaType bug fix\n\n* fix pom and stuff\n\n* disable checkpointing in kinesis\n\n* fix kinesis sequence number null in closed shard\n\n* merge changes from master\n\n* fixes for kinesis tasks\n\n* capitalized <partitionType.  sequenceType>\n\n* removed abstract class loggers\n\n* conform to guava api restrictions\n\n* add docker for travis other modules test\n\n* address comments\n\n* improve RecordSupplier to supply records in batch\n\n* fix strict compile issue\n\n* add test scope for localstack dependency\n\n* kinesis indexing task refactoring\n\n* comments\n\n* github comments\n\n* minor fix\n\n* removed unneeded readme\n\n* fix deserialization bug\n\n* fix various bugs\n\n* KinesisRecordSupplier unable to catch up to earliest position in stream bug fix\n\n* minor changes to kinesis\n\n* implement deaggregate for kinesis\n\n* Merge remote-tracking branch 'upstream/master' into seekablestream\n\n* fix kinesis offset discrepancy with kafka\n\n* kinesis record supplier disable getPosition\n\n* pr comments\n\n* mock for kinesis tests and remove docker dependency for unit tests\n\n* PR comments\n\n* avg lag in kafkasupervisor #6587\n\n* refacotred SequenceMetadata in taskRunners\n\n* small fix\n\n* more small fix\n\n* recordsupplier resource leak\n\n* revert .travis.yml formatting\n\n* fix style\n\n* kinesis docs\n\n* doc part2\n\n* more docs\n\n* comments\n\n* comments*2\n\n* revert string replace changes\n\n* comments\n\n* teamcity\n\n* comments part 1\n\n* comments part 2\n\n* comments part 3\n\n* merge #6754\n\n* fix injection binding\n\n* comments\n\n* KinesisRegion refactor\n\n* comments part idk lol\n\n* can't think of a commit msg anymore\n\n* remove possiblyResetDataSourceMetadata() for IncrementalPublishingTaskRunner\n\n* commmmmmmmmmments\n\n* extra error handling in KinesisRecordSupplier getRecords\n\n* comments\n\n* quickfix\n\n* typo\n\n* oof\n","date":"2018-12-22 03:49:24","modifiedFileCount":"22","status":"M","submitter":"Joshua Sun"},{"authorTime":"2019-02-19 03:50:08","codes":[{"authorDate":"2018-12-22 03:49:24","commitOrder":3,"curCode":"  public void testStop()\n  {\n    supervisorRecordSupplier.close();\n    expectLastCall().anyTimes();\n\n    EasyMock.expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KinesisSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","date":"2018-12-22 03:49:24","endLine":2182,"groupId":"245","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testStop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/75/0b9247d792032ba5dba7aad3d99eb263413dcd.src","preCode":"  public void testStop()\n  {\n    supervisorRecordSupplier.close();\n    expectLastCall().anyTimes();\n\n    EasyMock.expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KinesisSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2167,"status":"N"},{"authorDate":"2019-02-19 03:50:08","commitOrder":3,"curCode":"  public void testStop()\n  {\n    expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KafkaSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","date":"2019-02-19 03:50:08","endLine":1744,"groupId":"245","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testStop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f2/db280c51eb85380271ce661d1c415120afa0e0.src","preCode":"  public void testStop()\n  {\n    expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KafkaSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getSupervisor(1, 1, true, \"PT1H\", null, null, false);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1732,"status":"M"}],"commitId":"80a2ef7be46c4fc807ac2a74507b8ba8b6a44049","commitMessage":"@@@Support kafka transactional topics (#5404) (#6496)\n\n* Support kafka transactional topics\n\n* update kafka to version 2.0.0\n* Remove the skipOffsetGaps option since it's not used anymore\n* Adjust kafka consumer to use transactional semantics\n* Update tests\n\n* Remove unused import from test\n\n* Fix compilation\n\n* Invoke transaction api to fix a unit test\n\n* temporary modification of travis.yml for debugging\n\n* another attempt to get travis tasklogs\n\n* update kafka to 2.0.1 at all places\n\n* Remove druid-kafka-eight dependency from integration-tests.  remove the kafka firehose test and deprecate kafka-eight classes\n\n* Add deprecated in docs for kafka-eight and kafka-simple extensions\n\n* Remove skipOffsetGaps and code changes for transaction support\n\n* Fix indentation\n\n* remove skipOffsetGaps from kinesis\n\n* Add transaction api to KafkaRecordSupplierTest\n\n* Fix indent\n\n* Fix test\n\n* update kafka version to 2.1.0\n","date":"2019-02-19 03:50:08","modifiedFileCount":"25","status":"M","submitter":"Surekha"},{"authorTime":"2019-04-11 09:16:38","codes":[{"authorDate":"2019-04-11 09:16:38","commitOrder":4,"curCode":"  public void testStop()\n  {\n    supervisorRecordSupplier.close();\n    expectLastCall().anyTimes();\n\n    EasyMock.expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KinesisSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getTestableSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","date":"2019-04-11 09:16:38","endLine":2072,"groupId":"245","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testStop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cc/5ae9ee07047b669b97e252120bd5debf26d19a.src","preCode":"  public void testStop()\n  {\n    supervisorRecordSupplier.close();\n    expectLastCall().anyTimes();\n\n    EasyMock.expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KinesisSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2057,"status":"M"},{"authorDate":"2019-04-11 09:16:38","commitOrder":4,"curCode":"  public void testStop()\n  {\n    expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KafkaSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getTestableSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","date":"2019-04-11 09:16:38","endLine":1781,"groupId":"245","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testStop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b6/e7b3406771642225b6ce082b4b2bc68e735a67.src","preCode":"  public void testStop()\n  {\n    expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KafkaSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1769,"status":"M"}],"commitId":"2771ed50b0f07b0ee519da72ed9f4877466f8be4","commitMessage":"@@@Support Kafka supervisor adopting running tasks between versions  (#7212)\n\n* Recompute hash in isTaskCurrent() and added tests\n\n* Fixed checkstyle stuff\n\n* Fixed failing tests\n\n* Make TestableKafkaSupervisorWithCustomIsTaskCurrent static\n\n* Add doc\n\n* baseSequenceName change\n\n* Added comment\n\n* WIP\n\n* Fixed imports\n\n* Undid lambda change for diff sake\n\n* Cleanup\n\n* Added comment\n\n* Reinsert Kafka tests\n\n* Readded kinesis test\n\n* Readd bad partition assignment in kinesis supervisor test\n\n* Nit\n\n* Misnamed var\n","date":"2019-04-11 09:16:38","modifiedFileCount":"6","status":"M","submitter":"Justin Borromeo"},{"authorTime":"2019-07-07 00:33:12","codes":[{"authorDate":"2019-07-07 00:33:12","commitOrder":5,"curCode":"  public void testStop()\n  {\n    supervisorRecordSupplier.close();\n    EasyMock.expectLastCall().anyTimes();\n\n    EasyMock.expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KinesisSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getTestableSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","date":"2019-07-07 00:33:12","endLine":2137,"groupId":"102280","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testStop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/9b/6f893412902c4152e8ff5a98baf1dd63bc8c15.src","preCode":"  public void testStop()\n  {\n    supervisorRecordSupplier.close();\n    expectLastCall().anyTimes();\n\n    EasyMock.expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KinesisSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getTestableSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2122,"status":"M"},{"authorDate":"2019-07-07 00:33:12","commitOrder":5,"curCode":"  public void testStop()\n  {\n    EasyMock.expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KafkaSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getTestableSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","date":"2019-07-07 00:33:12","endLine":1785,"groupId":"102280","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testStop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/af/f5639cd0e0e7c6a18b14f694e3cf2c6cb73dec.src","preCode":"  public void testStop()\n  {\n    expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes();\n    taskClient.close();\n    taskRunner.unregisterListener(StringUtils.format(\"KafkaSupervisor-%s\", DATASOURCE));\n    replayAll();\n\n    supervisor = getTestableSupervisor(1, 1, true, \"PT1H\", null, null);\n    supervisor.start();\n    supervisor.stop(false);\n\n    verifyAll();\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1773,"status":"M"}],"commitId":"1166bbcb75d432817715fdd429737f86730b5591","commitMessage":"@@@Remove static imports from tests (#8036)\n\nMake static imports forbidden in tests and remove all occurrences to be\nconsistent with the non-test code.\n\nAlso.  various changes to files affected by above:\n- Reformat to adhere to druid style guide\n- Fix various IntelliJ warnings\n- Fix various SonarLint warnings (e.g..  the expected/actual args to\n  Assert.assertEquals() were flipped)","date":"2019-07-07 00:33:12","modifiedFileCount":"98","status":"M","submitter":"Chi Cao Minh"}]
