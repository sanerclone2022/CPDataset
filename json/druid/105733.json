[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTimeBoundary()\n  {\n    List<Result<TimeBoundaryResultValue>> expectedResults = Collections.singletonList(\n        new Result<TimeBoundaryResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TimeBoundaryResultValue(\n                ImmutableMap.of(\n                    TimeBoundaryQuery.MIN_TIME,\n                    DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n                    TimeBoundaryQuery.MAX_TIME,\n                    DateTimes.of(\"2011-01-15T02:00:00.000Z\")\n                )\n            )\n        )\n    );\n\n    TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder()\n                                    .dataSource(dataSource)\n                                    .build();\n    QueryRunner runner = TestQueryRunners.makeTimeBoundaryQueryRunner(segment);\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(expectedResults, runner.run(QueryPlus.wrap(query), context));\n  }\n","date":"2018-08-31 00:56:26","endLine":192,"groupId":"16220","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTimeBoundary","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6b/52e122b35cfde5d804ae3b5004fbaf9cf0195f.src","preCode":"  public void testTimeBoundary()\n  {\n    List<Result<TimeBoundaryResultValue>> expectedResults = Collections.singletonList(\n        new Result<TimeBoundaryResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TimeBoundaryResultValue(\n                ImmutableMap.of(\n                    TimeBoundaryQuery.MIN_TIME,\n                    DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n                    TimeBoundaryQuery.MAX_TIME,\n                    DateTimes.of(\"2011-01-15T02:00:00.000Z\")\n                )\n            )\n        )\n    );\n\n    TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder()\n                                    .dataSource(dataSource)\n                                    .build();\n    QueryRunner runner = TestQueryRunners.makeTimeBoundaryQueryRunner(segment);\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(expectedResults, runner.run(QueryPlus.wrap(query), context));\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/AppendTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTimeBoundary2()\n  {\n    List<Result<TimeBoundaryResultValue>> expectedResults = Collections.singletonList(\n        new Result<TimeBoundaryResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TimeBoundaryResultValue(\n                ImmutableMap.of(\n                    TimeBoundaryQuery.MIN_TIME,\n                    DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n                    TimeBoundaryQuery.MAX_TIME,\n                    DateTimes.of(\"2011-01-15T00:00:00.000Z\")\n                )\n            )\n        )\n    );\n\n    TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder()\n                                    .dataSource(dataSource)\n                                    .build();\n    QueryRunner runner = TestQueryRunners.makeTimeBoundaryQueryRunner(segment2);\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(expectedResults, runner.run(QueryPlus.wrap(query), context));\n  }\n","date":"2018-08-31 00:56:26","endLine":217,"groupId":"16220","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTimeBoundary2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6b/52e122b35cfde5d804ae3b5004fbaf9cf0195f.src","preCode":"  public void testTimeBoundary2()\n  {\n    List<Result<TimeBoundaryResultValue>> expectedResults = Collections.singletonList(\n        new Result<TimeBoundaryResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TimeBoundaryResultValue(\n                ImmutableMap.of(\n                    TimeBoundaryQuery.MIN_TIME,\n                    DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n                    TimeBoundaryQuery.MAX_TIME,\n                    DateTimes.of(\"2011-01-15T00:00:00.000Z\")\n                )\n            )\n        )\n    );\n\n    TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder()\n                                    .dataSource(dataSource)\n                                    .build();\n    QueryRunner runner = TestQueryRunners.makeTimeBoundaryQueryRunner(segment2);\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(expectedResults, runner.run(QueryPlus.wrap(query), context));\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/AppendTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2019-01-22 03:11:10","commitOrder":2,"curCode":"  public void testTimeBoundary()\n  {\n    List<Result<TimeBoundaryResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TimeBoundaryResultValue(\n                ImmutableMap.of(\n                    TimeBoundaryQuery.MIN_TIME,\n                    DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n                    TimeBoundaryQuery.MAX_TIME,\n                    DateTimes.of(\"2011-01-15T02:00:00.000Z\")\n                )\n            )\n        )\n    );\n\n    TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder()\n                                    .dataSource(dataSource)\n                                    .build();\n    QueryRunner runner = TestQueryRunners.makeTimeBoundaryQueryRunner(segment);\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(expectedResults, runner.run(QueryPlus.wrap(query), context));\n  }\n","date":"2019-01-22 03:11:10","endLine":190,"groupId":"16220","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTimeBoundary","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5e/d44fcb52ec3880ece6f1968571358b3886fb71.src","preCode":"  public void testTimeBoundary()\n  {\n    List<Result<TimeBoundaryResultValue>> expectedResults = Collections.singletonList(\n        new Result<TimeBoundaryResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TimeBoundaryResultValue(\n                ImmutableMap.of(\n                    TimeBoundaryQuery.MIN_TIME,\n                    DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n                    TimeBoundaryQuery.MAX_TIME,\n                    DateTimes.of(\"2011-01-15T02:00:00.000Z\")\n                )\n            )\n        )\n    );\n\n    TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder()\n                                    .dataSource(dataSource)\n                                    .build();\n    QueryRunner runner = TestQueryRunners.makeTimeBoundaryQueryRunner(segment);\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(expectedResults, runner.run(QueryPlus.wrap(query), context));\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/AppendTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void testTimeBoundary2()\n  {\n    List<Result<TimeBoundaryResultValue>> expectedResults = Collections.singletonList(\n        new Result<TimeBoundaryResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TimeBoundaryResultValue(\n                ImmutableMap.of(\n                    TimeBoundaryQuery.MIN_TIME,\n                    DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n                    TimeBoundaryQuery.MAX_TIME,\n                    DateTimes.of(\"2011-01-15T00:00:00.000Z\")\n                )\n            )\n        )\n    );\n\n    TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder()\n                                    .dataSource(dataSource)\n                                    .build();\n    QueryRunner runner = TestQueryRunners.makeTimeBoundaryQueryRunner(segment2);\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(expectedResults, runner.run(QueryPlus.wrap(query), context));\n  }\n","date":"2018-08-31 00:56:26","endLine":217,"groupId":"16220","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTimeBoundary2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6b/52e122b35cfde5d804ae3b5004fbaf9cf0195f.src","preCode":"  public void testTimeBoundary2()\n  {\n    List<Result<TimeBoundaryResultValue>> expectedResults = Collections.singletonList(\n        new Result<TimeBoundaryResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TimeBoundaryResultValue(\n                ImmutableMap.of(\n                    TimeBoundaryQuery.MIN_TIME,\n                    DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n                    TimeBoundaryQuery.MAX_TIME,\n                    DateTimes.of(\"2011-01-15T00:00:00.000Z\")\n                )\n            )\n        )\n    );\n\n    TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder()\n                                    .dataSource(dataSource)\n                                    .build();\n    QueryRunner runner = TestQueryRunners.makeTimeBoundaryQueryRunner(segment2);\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(expectedResults, runner.run(QueryPlus.wrap(query), context));\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/AppendTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"N"}],"commitId":"8eae26fd4e7572060d112864dd3d5f6a865b9c89","commitMessage":"@@@Introduce SegmentId class (#6370)\n\n* Introduce SegmentId class\n\n* tmp\n\n* Fix SelectQueryRunnerTest\n\n* Fix indentation\n\n* Fixes\n\n* Remove Comparators.inverse() tests\n\n* Refinements\n\n* Fix tests\n\n* Fix more tests\n\n* Remove duplicate DataSegmentTest.  fixes #6064\n\n* SegmentDescriptor doc\n\n* Fix SQLMetadataStorageUpdaterJobHandler\n\n* Fix DataSegment deserialization for ignoring id\n\n* Add comments\n\n* More comments\n\n* Address more comments\n\n* Fix compilation\n\n* Restore segment2 in SystemSchemaTest according to a comment\n\n* Fix style\n\n* fix testServerSegmentsTable\n\n* Fix compilation\n\n* Add comments about why SegmentId and SegmentIdWithShardSpec are separate classes\n\n* Fix SystemSchemaTest\n\n* Fix style\n\n* Compare SegmentDescriptor with SegmentId in Javadoc and comments rather than with DataSegment\n\n* Remove a link.  see https://youtrack.jetbrains.com/issue/IDEA-205164\n\n* Fix compilation\n","date":"2019-01-22 03:11:10","modifiedFileCount":"308","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-07-24 23:29:03","codes":[{"authorDate":"2019-07-24 23:29:03","commitOrder":3,"curCode":"  public void testTimeBoundary()\n  {\n    List<Result<TimeBoundaryResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TimeBoundaryResultValue(\n                ImmutableMap.of(\n                    TimeBoundaryQuery.MIN_TIME,\n                    DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n                    TimeBoundaryQuery.MAX_TIME,\n                    DateTimes.of(\"2011-01-15T02:00:00.000Z\")\n                )\n            )\n        )\n    );\n\n    TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder()\n                                    .dataSource(dataSource)\n                                    .build();\n    QueryRunner runner = TestQueryRunners.makeTimeBoundaryQueryRunner(segment);\n    TestHelper.assertExpectedResults(expectedResults, runner.run(QueryPlus.wrap(query)));\n  }\n","date":"2019-07-24 23:29:03","endLine":188,"groupId":"105733","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testTimeBoundary","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/7b/ea453e6581226cc956bb4233e36637e232aebc.src","preCode":"  public void testTimeBoundary()\n  {\n    List<Result<TimeBoundaryResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TimeBoundaryResultValue(\n                ImmutableMap.of(\n                    TimeBoundaryQuery.MIN_TIME,\n                    DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n                    TimeBoundaryQuery.MAX_TIME,\n                    DateTimes.of(\"2011-01-15T02:00:00.000Z\")\n                )\n            )\n        )\n    );\n\n    TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder()\n                                    .dataSource(dataSource)\n                                    .build();\n    QueryRunner runner = TestQueryRunners.makeTimeBoundaryQueryRunner(segment);\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(expectedResults, runner.run(QueryPlus.wrap(query), context));\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/AppendTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"},{"authorDate":"2019-07-24 23:29:03","commitOrder":3,"curCode":"  public void testTimeBoundary2()\n  {\n    List<Result<TimeBoundaryResultValue>> expectedResults = Collections.singletonList(\n        new Result<TimeBoundaryResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TimeBoundaryResultValue(\n                ImmutableMap.of(\n                    TimeBoundaryQuery.MIN_TIME,\n                    DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n                    TimeBoundaryQuery.MAX_TIME,\n                    DateTimes.of(\"2011-01-15T00:00:00.000Z\")\n                )\n            )\n        )\n    );\n\n    TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder()\n                                    .dataSource(dataSource)\n                                    .build();\n    QueryRunner runner = TestQueryRunners.makeTimeBoundaryQueryRunner(segment2);\n    TestHelper.assertExpectedResults(expectedResults, runner.run(QueryPlus.wrap(query)));\n  }\n","date":"2019-07-24 23:29:03","endLine":212,"groupId":"105733","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testTimeBoundary2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/7b/ea453e6581226cc956bb4233e36637e232aebc.src","preCode":"  public void testTimeBoundary2()\n  {\n    List<Result<TimeBoundaryResultValue>> expectedResults = Collections.singletonList(\n        new Result<TimeBoundaryResultValue>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TimeBoundaryResultValue(\n                ImmutableMap.of(\n                    TimeBoundaryQuery.MIN_TIME,\n                    DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n                    TimeBoundaryQuery.MAX_TIME,\n                    DateTimes.of(\"2011-01-15T00:00:00.000Z\")\n                )\n            )\n        )\n    );\n\n    TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder()\n                                    .dataSource(dataSource)\n                                    .build();\n    QueryRunner runner = TestQueryRunners.makeTimeBoundaryQueryRunner(segment2);\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(expectedResults, runner.run(QueryPlus.wrap(query), context));\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/AppendTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"}],"commitId":"799d20249fe6333ea86b020f6d09c91fa4d3f998","commitMessage":"@@@Response context refactoring (#8110)\n\n* Response context refactoring\n\n* Serialization/Deserialization of ResponseContext\n\n* Added java doc comments\n\n* Renamed vars related to ResponseContext\n\n* Renamed empty() methods to createEmpty()\n\n* Fixed ResponseContext usage\n\n* Renamed multiple ResponseContext static fields\n\n* Added PublicApi annotations\n\n* Renamed QueryResponseContext class to ResourceIOReaderWriter\n\n* Moved the protected method below public static constants\n\n* Added createEmpty method to ResponseContext with DefaultResponseContext creation\n\n* Fixed inspection error\n\n* Added comments to the ResponseContext length limit and ResponseContext\nhttp header name\n\n* Added a comment of possible future refactoring\n\n* Removed .gitignore file of indexing-service\n\n* Removed a never-used method\n\n* VisibleForTesting method reducing boilerplate\n\nCo-Authored-By: Clint Wylie <cjwylie@gmail.com>\n\n* Reduced boilerplate\n\n* Renamed the method serialize to serializeWith\n\n* Removed unused import\n\n* Fixed incorrectly refactored test method\n\n* Added comments for ResponseContext keys\n\n* Fixed incorrectly refactored test method\n\n* Fixed IntervalChunkingQueryRunnerTest mocks\n","date":"2019-07-24 23:29:03","modifiedFileCount":"142","status":"M","submitter":"Eugene Sevastianov"}]
