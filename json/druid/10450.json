[{"authorTime":"2021-05-04 02:50:45","codes":[{"authorDate":"2021-05-04 02:50:45","commitOrder":2,"curCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        10,\n        null\n    );\n    killRules = new KillRules(druidCoordinatorConfig);\n    killRules.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockRuleManager).removeRulesForEmptyDatasourcesOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","date":"2021-05-04 02:50:45","endLine":107,"groupId":"14135","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRunNotSkipIfLastRunMoreThanPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/98/c0ad9d65e6e5de16f9a67c5959495d1d434ed0.src","preCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        10,\n        null\n    );\n    killRules = new KillRules(druidCoordinatorConfig);\n    killRules.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockRuleManager).removeRulesForEmptyDatasourcesOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillRulesTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2021-05-04 02:50:45","commitOrder":2,"curCode":"  public void testConstructorFailIfInvalidPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(\"PT3S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        10,\n        null\n    );\n    exception.expect(IllegalArgumentException.class);\n    exception.expectMessage(\"coordinator audit kill period must be >= druid.coordinator.period.metadataStoreManagementPeriod\");\n    killAuditLog = new KillAuditLog(mockAuditManager, druidCoordinatorConfig);\n  }\n","date":"2021-05-04 02:50:45","endLine":123,"groupId":"21501","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorFailIfInvalidPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/51/ddc3c4a973bb017dda7f9d705cddf93eb603a2.src","preCode":"  public void testConstructorFailIfInvalidPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(\"PT3S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        10,\n        null\n    );\n    exception.expect(IllegalArgumentException.class);\n    exception.expectMessage(\"coordinator audit kill period must be >= druid.coordinator.period.metadataStoreManagementPeriod\");\n    killAuditLog = new KillAuditLog(mockAuditManager, druidCoordinatorConfig);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillAuditLogTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"MB"}],"commitId":"84aac4832d66d2bf2c9e2903b9772bb5882c5ccf","commitMessage":"@@@Add feature to automatically remove rules based on retention period (#11164)\n\n* Add feature to automatically remove rules based on retention period\n\n* Add feature to automatically remove rules based on retention period\n\n* address comments","date":"2021-05-04 02:50:45","modifiedFileCount":"13","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-05-07 13:25:23","codes":[{"authorDate":"2021-05-07 13:25:23","commitOrder":3,"curCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        10,\n        null\n    );\n    killRules = new KillRules(druidCoordinatorConfig);\n    killRules.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockRuleManager).removeRulesForEmptyDatasourcesOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","date":"2021-05-07 13:25:23","endLine":111,"groupId":"14135","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRunNotSkipIfLastRunMoreThanPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d3/268f21150fa12aa897e8838566940a09dcefbd.src","preCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        10,\n        null\n    );\n    killRules = new KillRules(druidCoordinatorConfig);\n    killRules.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockRuleManager).removeRulesForEmptyDatasourcesOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillRulesTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2021-05-07 13:25:23","commitOrder":3,"curCode":"  public void testConstructorFailIfInvalidPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT3S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        10,\n        null\n    );\n    exception.expect(IllegalArgumentException.class);\n    exception.expectMessage(\"coordinator audit kill period must be >= druid.coordinator.period.metadataStoreManagementPeriod\");\n    killAuditLog = new KillAuditLog(mockAuditManager, druidCoordinatorConfig);\n  }\n","date":"2021-05-07 13:25:23","endLine":129,"groupId":"21501","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorFailIfInvalidPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ae/b0bd9cbc5d6d7ef2ac70445d74300d02f750cd.src","preCode":"  public void testConstructorFailIfInvalidPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        new Duration(\"PT3S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        10,\n        null\n    );\n    exception.expect(IllegalArgumentException.class);\n    exception.expectMessage(\"coordinator audit kill period must be >= druid.coordinator.period.metadataStoreManagementPeriod\");\n    killAuditLog = new KillAuditLog(mockAuditManager, druidCoordinatorConfig);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillAuditLogTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"d73f72e50892fe0b7450d8d4bf5678c3f8270cfe","commitMessage":"@@@Add feature to automatically remove supervisor based on retention period (#11200)\n\n* add auto clean up\n\n* add test\n\n* add test\n\n* fix test\n\n* Address comments\n\n* Address comments","date":"2021-05-07 13:25:23","modifiedFileCount":"14","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-05-11 16:22:33","codes":[{"authorDate":"2021-05-11 16:22:33","commitOrder":4,"curCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        10,\n        null\n    );\n    killRules = new KillRules(druidCoordinatorConfig);\n    killRules.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockRuleManager).removeRulesForEmptyDatasourcesOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","date":"2021-05-11 16:22:33","endLine":115,"groupId":"14135","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testRunNotSkipIfLastRunMoreThanPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8d/63e913655410bcc0a00436ee830066827935b0.src","preCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        10,\n        null\n    );\n    killRules = new KillRules(druidCoordinatorConfig);\n    killRules.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockRuleManager).removeRulesForEmptyDatasourcesOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillRulesTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-05-11 16:22:33","commitOrder":4,"curCode":"  public void testConstructorFailIfInvalidPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT3S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    exception.expect(IllegalArgumentException.class);\n    exception.expectMessage(\"coordinator audit kill period must be >= druid.coordinator.period.metadataStoreManagementPeriod\");\n    killAuditLog = new KillAuditLog(mockAuditManager, druidCoordinatorConfig);\n  }\n","date":"2021-05-11 16:22:33","endLine":135,"groupId":"14228","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testConstructorFailIfInvalidPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4b/883f38e7837f9683452d23590866fb25f39ed3.src","preCode":"  public void testConstructorFailIfInvalidPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT3S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        10,\n        null\n    );\n    exception.expect(IllegalArgumentException.class);\n    exception.expectMessage(\"coordinator audit kill period must be >= druid.coordinator.period.metadataStoreManagementPeriod\");\n    killAuditLog = new KillAuditLog(mockAuditManager, druidCoordinatorConfig);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillAuditLogTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"4326e699bd3e146e1899f014e8765c52241f3cd3","commitMessage":"@@@Add feature to automatically remove datasource metadata based on retention period (#11227)\n\n* add auto clean up datasource metadata\n\n* add test\n\n* fix checkstyle\n\n* add comments\n\n* fix error\n\n* address comments\n\n* Address comments\n\n* fix test\n\n* fix test\n\n* fix typo\n\n* add comment\n\n* fix test\n\n* fix test","date":"2021-05-11 16:22:33","modifiedFileCount":"22","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-05-12 09:49:18","codes":[{"authorDate":"2021-05-12 09:49:18","commitOrder":5,"curCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        10,\n        null\n    );\n    killRules = new KillRules(druidCoordinatorConfig);\n    killRules.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockRuleManager).removeRulesForEmptyDatasourcesOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","date":"2021-05-12 09:49:18","endLine":117,"groupId":"10450","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testRunNotSkipIfLastRunMoreThanPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b9/5e8d70bef4364a40c49f73a47e9902884e3aa8.src","preCode":"  public void testRunNotSkipIfLastRunMoreThanPeriod()\n  {\n    Mockito.when(mockDruidCoordinatorRuntimeParams.getEmitter()).thenReturn(mockServiceEmitter);\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT6S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        10,\n        null\n    );\n    killRules = new KillRules(druidCoordinatorConfig);\n    killRules.run(mockDruidCoordinatorRuntimeParams);\n    Mockito.verify(mockRuleManager).removeRulesForEmptyDatasourcesOlderThan(ArgumentMatchers.anyLong());\n    Mockito.verify(mockServiceEmitter).emit(ArgumentMatchers.any(ServiceEventBuilder.class));\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillRulesTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2021-05-12 09:49:18","commitOrder":5,"curCode":"  public void testConstructorFailIfInvalidPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT3S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    exception.expect(IllegalArgumentException.class);\n    exception.expectMessage(\"coordinator audit kill period must be >= druid.coordinator.period.metadataStoreManagementPeriod\");\n    killAuditLog = new KillAuditLog(mockAuditManager, druidCoordinatorConfig);\n  }\n","date":"2021-05-12 09:49:18","endLine":138,"groupId":"10450","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testConstructorFailIfInvalidPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5f/3139d76cacd2887cfd76cef375615a5a62b5a1.src","preCode":"  public void testConstructorFailIfInvalidPeriod()\n  {\n    TestDruidCoordinatorConfig druidCoordinatorConfig = new TestDruidCoordinatorConfig(\n        null,\n        null,\n        null,\n        new Duration(\"PT5S\"),\n        null,\n        null,\n        null,\n        null,\n        null,\n        new Duration(\"PT3S\"),\n        new Duration(\"PT1S\"),\n        null,\n        null,\n        null,\n        null,\n        10,\n        null\n    );\n    exception.expect(IllegalArgumentException.class);\n    exception.expectMessage(\"coordinator audit kill period must be >= druid.coordinator.period.metadataStoreManagementPeriod\");\n    killAuditLog = new KillAuditLog(mockAuditManager, druidCoordinatorConfig);\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/duty/KillAuditLogTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"3455352241f774cfc581de7cf7b328d5cf061e3d","commitMessage":"@@@Add feature to automatically remove compaction configurations for inactive datasources (#11232)\n\n* add auto cleanup\n\n* add auto cleanup\n\n* add auto cleanup\n\n* add tests\n\n* add tests\n\n* use retryutils\n\n* use retryutils\n\n* use retryutils\n\n* address comments","date":"2021-05-12 09:49:18","modifiedFileCount":"14","status":"M","submitter":"Maytas Monsereenusorn"}]
