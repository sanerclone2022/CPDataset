[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void setup()\n  {\n    floatFirstAggregatorFactory = new FloatFirstAggregatorFactory(\"billy\", \"nilly\");\n    combiningAggFactory = (FloatFirstAggregatorFactory) floatFirstAggregatorFactory.getCombiningFactory();\n    timeSelector = new TestLongColumnSelector(times);\n    valueSelector = new TestFloatColumnSelector(floats);\n    objectSelector = new TestObjectColumnSelector<>(pairs);\n    colSelectorFactory = EasyMock.createMock(ColumnSelectorFactory.class);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(Column.TIME_COLUMN_NAME)).andReturn(timeSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(valueSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"billy\")).andReturn(objectSelector);\n    EasyMock.replay(colSelectorFactory);\n  }\n","date":"2018-08-31 00:56:26","endLine":71,"groupId":"16719","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/db/7962871a7924456e6a7ec3e75a9070e7626c72.src","preCode":"  public void setup()\n  {\n    floatFirstAggregatorFactory = new FloatFirstAggregatorFactory(\"billy\", \"nilly\");\n    combiningAggFactory = (FloatFirstAggregatorFactory) floatFirstAggregatorFactory.getCombiningFactory();\n    timeSelector = new TestLongColumnSelector(times);\n    valueSelector = new TestFloatColumnSelector(floats);\n    objectSelector = new TestObjectColumnSelector<>(pairs);\n    colSelectorFactory = EasyMock.createMock(ColumnSelectorFactory.class);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(Column.TIME_COLUMN_NAME)).andReturn(timeSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(valueSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"billy\")).andReturn(objectSelector);\n    EasyMock.replay(colSelectorFactory);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/first/FloatFirstAggregationTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void setup()\n  {\n    floatLastAggregatorFactory = new FloatLastAggregatorFactory(\"billy\", \"nilly\");\n    combiningAggFactory = (FloatLastAggregatorFactory) floatLastAggregatorFactory.getCombiningFactory();\n    timeSelector = new TestLongColumnSelector(times);\n    valueSelector = new TestFloatColumnSelector(floats);\n    objectSelector = new TestObjectColumnSelector<>(pairs);\n    colSelectorFactory = EasyMock.createMock(ColumnSelectorFactory.class);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(Column.TIME_COLUMN_NAME)).andReturn(timeSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(valueSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"billy\")).andReturn(objectSelector);\n    EasyMock.replay(colSelectorFactory);\n  }\n","date":"2018-08-31 00:56:26","endLine":71,"groupId":"16719","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1d/7a42ec8a923bc52849b66c3c462eaf1006c2e5.src","preCode":"  public void setup()\n  {\n    floatLastAggregatorFactory = new FloatLastAggregatorFactory(\"billy\", \"nilly\");\n    combiningAggFactory = (FloatLastAggregatorFactory) floatLastAggregatorFactory.getCombiningFactory();\n    timeSelector = new TestLongColumnSelector(times);\n    valueSelector = new TestFloatColumnSelector(floats);\n    objectSelector = new TestObjectColumnSelector<>(pairs);\n    colSelectorFactory = EasyMock.createMock(ColumnSelectorFactory.class);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(Column.TIME_COLUMN_NAME)).andReturn(timeSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(valueSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"billy\")).andReturn(objectSelector);\n    EasyMock.replay(colSelectorFactory);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/last/FloatLastAggregationTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-10-03 01:50:22","codes":[{"authorDate":"2018-10-03 01:50:22","commitOrder":2,"curCode":"  public void setup()\n  {\n    floatFirstAggregatorFactory = new FloatFirstAggregatorFactory(\"billy\", \"nilly\");\n    combiningAggFactory = (FloatFirstAggregatorFactory) floatFirstAggregatorFactory.getCombiningFactory();\n    timeSelector = new TestLongColumnSelector(times);\n    valueSelector = new TestFloatColumnSelector(floats);\n    objectSelector = new TestObjectColumnSelector<>(pairs);\n    colSelectorFactory = EasyMock.createMock(ColumnSelectorFactory.class);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(ColumnHolder.TIME_COLUMN_NAME)).andReturn(timeSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(valueSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"billy\")).andReturn(objectSelector);\n    EasyMock.replay(colSelectorFactory);\n  }\n","date":"2018-10-03 01:50:22","endLine":71,"groupId":"4077","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/9721d831962bfb770f0cd1ccd7fa70da348e45.src","preCode":"  public void setup()\n  {\n    floatFirstAggregatorFactory = new FloatFirstAggregatorFactory(\"billy\", \"nilly\");\n    combiningAggFactory = (FloatFirstAggregatorFactory) floatFirstAggregatorFactory.getCombiningFactory();\n    timeSelector = new TestLongColumnSelector(times);\n    valueSelector = new TestFloatColumnSelector(floats);\n    objectSelector = new TestObjectColumnSelector<>(pairs);\n    colSelectorFactory = EasyMock.createMock(ColumnSelectorFactory.class);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(Column.TIME_COLUMN_NAME)).andReturn(timeSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(valueSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"billy\")).andReturn(objectSelector);\n    EasyMock.replay(colSelectorFactory);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/first/FloatFirstAggregationTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2018-10-03 01:50:22","commitOrder":2,"curCode":"  public void setup()\n  {\n    floatLastAggregatorFactory = new FloatLastAggregatorFactory(\"billy\", \"nilly\");\n    combiningAggFactory = (FloatLastAggregatorFactory) floatLastAggregatorFactory.getCombiningFactory();\n    timeSelector = new TestLongColumnSelector(times);\n    valueSelector = new TestFloatColumnSelector(floats);\n    objectSelector = new TestObjectColumnSelector<>(pairs);\n    colSelectorFactory = EasyMock.createMock(ColumnSelectorFactory.class);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(ColumnHolder.TIME_COLUMN_NAME)).andReturn(timeSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(valueSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"billy\")).andReturn(objectSelector);\n    EasyMock.replay(colSelectorFactory);\n  }\n","date":"2018-10-03 01:50:22","endLine":71,"groupId":"4077","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f0/94ecf24e671c874981a7d2c0ada7e8fe154d83.src","preCode":"  public void setup()\n  {\n    floatLastAggregatorFactory = new FloatLastAggregatorFactory(\"billy\", \"nilly\");\n    combiningAggFactory = (FloatLastAggregatorFactory) floatLastAggregatorFactory.getCombiningFactory();\n    timeSelector = new TestLongColumnSelector(times);\n    valueSelector = new TestFloatColumnSelector(floats);\n    objectSelector = new TestObjectColumnSelector<>(pairs);\n    colSelectorFactory = EasyMock.createMock(ColumnSelectorFactory.class);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(Column.TIME_COLUMN_NAME)).andReturn(timeSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(valueSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"billy\")).andReturn(objectSelector);\n    EasyMock.replay(colSelectorFactory);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/last/FloatLastAggregationTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"3ae563263a23000560749071d262727d47296856","commitMessage":"@@@Renamed 'Generic Column' -> 'Numeric Column'; Fixed a few resource leaks in processing; misc refinements (#5957)\n\nThis PR accumulates many refactorings and small improvements that I did while preparing the next change set of https://github.com/druid-io/druid/projects/2. I finally decided to make them a separate PR to minimize the volume of the main PR.\n\nSome of the changes:\n - Renamed confusing \"Generic Column\" term to \"Numeric Column\" (what it actually implies) in many class names.\n - Generified `ComplexMetricExtractor`","date":"2018-10-03 01:50:22","modifiedFileCount":"776","status":"M","submitter":"Roman Leventov"},{"authorTime":"2018-10-03 01:50:22","codes":[{"authorDate":"2020-01-21 03:51:54","commitOrder":3,"curCode":"  public void setup()\n  {\n    floatFirstAggregatorFactory = new FloatFirstAggregatorFactory(\"billy\", \"nilly\");\n    combiningAggFactory = (FloatFirstAggregatorFactory) floatFirstAggregatorFactory.getCombiningFactory();\n    timeSelector = new TestLongColumnSelector(times);\n    valueSelector = new TestFloatColumnSelector(floats);\n    objectSelector = new TestObjectColumnSelector<>(pairs);\n    colSelectorFactory = EasyMock.createMock(ColumnSelectorFactory.class);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(ColumnHolder.TIME_COLUMN_NAME)).andReturn(timeSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(valueSelector).atLeastOnce();\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"billy\")).andReturn(objectSelector).atLeastOnce();\n    EasyMock.replay(colSelectorFactory);\n  }\n","date":"2020-01-21 03:51:54","endLine":73,"groupId":"107072","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b9/b37f83f8f76902d30a40edab8f8a2c6ad64550.src","preCode":"  public void setup()\n  {\n    floatFirstAggregatorFactory = new FloatFirstAggregatorFactory(\"billy\", \"nilly\");\n    combiningAggFactory = (FloatFirstAggregatorFactory) floatFirstAggregatorFactory.getCombiningFactory();\n    timeSelector = new TestLongColumnSelector(times);\n    valueSelector = new TestFloatColumnSelector(floats);\n    objectSelector = new TestObjectColumnSelector<>(pairs);\n    colSelectorFactory = EasyMock.createMock(ColumnSelectorFactory.class);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(ColumnHolder.TIME_COLUMN_NAME)).andReturn(timeSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(valueSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"billy\")).andReturn(objectSelector);\n    EasyMock.replay(colSelectorFactory);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/first/FloatFirstAggregationTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2018-10-03 01:50:22","commitOrder":3,"curCode":"  public void setup()\n  {\n    floatLastAggregatorFactory = new FloatLastAggregatorFactory(\"billy\", \"nilly\");\n    combiningAggFactory = (FloatLastAggregatorFactory) floatLastAggregatorFactory.getCombiningFactory();\n    timeSelector = new TestLongColumnSelector(times);\n    valueSelector = new TestFloatColumnSelector(floats);\n    objectSelector = new TestObjectColumnSelector<>(pairs);\n    colSelectorFactory = EasyMock.createMock(ColumnSelectorFactory.class);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(ColumnHolder.TIME_COLUMN_NAME)).andReturn(timeSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(valueSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"billy\")).andReturn(objectSelector);\n    EasyMock.replay(colSelectorFactory);\n  }\n","date":"2018-10-03 01:50:22","endLine":71,"groupId":"107072","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f0/94ecf24e671c874981a7d2c0ada7e8fe154d83.src","preCode":"  public void setup()\n  {\n    floatLastAggregatorFactory = new FloatLastAggregatorFactory(\"billy\", \"nilly\");\n    combiningAggFactory = (FloatLastAggregatorFactory) floatLastAggregatorFactory.getCombiningFactory();\n    timeSelector = new TestLongColumnSelector(times);\n    valueSelector = new TestFloatColumnSelector(floats);\n    objectSelector = new TestObjectColumnSelector<>(pairs);\n    colSelectorFactory = EasyMock.createMock(ColumnSelectorFactory.class);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(ColumnHolder.TIME_COLUMN_NAME)).andReturn(timeSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(valueSelector);\n    EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"billy\")).andReturn(objectSelector);\n    EasyMock.replay(colSelectorFactory);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/last/FloatLastAggregationTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"}],"commitId":"8011211a0ca26ae6fd221e3dfcaf64119609c120","commitMessage":"@@@first/last aggregators and nulls (#9161)\n\n* null handling for numeric first/last aggregators.  refactor to not extend nullable numeric agg since they are complex typed aggs\n\n* initially null or not based on config\n\n* review stuff.  make string first/last consistent with null handling of numeric columns.  more tests\n\n* docs\n\n* handle nil selectors.  revert to primitive first/last types so groupby v1 works...\n","date":"2020-01-21 03:51:54","modifiedFileCount":"34","status":"M","submitter":"Clint Wylie"}]
