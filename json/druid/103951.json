[{"authorTime":"2019-08-13 04:18:44","codes":[{"authorDate":"2019-08-13 04:18:44","commitOrder":5,"curCode":"  public void testConvertRange()\n  {\n    StatsDClient client = EasyMock.createMock(StatsDClient.class);\n    StatsDEmitter emitter = new StatsDEmitter(\n        new StatsDEmitterConfig(\"localhost\", 8888, null, null, null, null, null, null, null, null),\n        new ObjectMapper(),\n        client\n    );\n    client.gauge(\"broker.query.cache.total.hitRate\", 54);\n    EasyMock.replay(client);\n    emitter.emit(new ServiceMetricEvent.Builder()\n                     .setDimension(\"dataSource\", \"data-source\")\n                     .build(DateTimes.nowUtc(), \"query/cache/total/hitRate\", 0.54)\n                     .build(\"broker\", \"brokerHost1\")\n    );\n    EasyMock.verify(client);\n  }\n","date":"2019-08-13 04:18:44","endLine":48,"groupId":"9551","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testConvertRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2b/ebd0166e0ccc408e70d0296c48213adde1c189.src","preCode":"  public void testConvertRange()\n  {\n    StatsDClient client = EasyMock.createMock(StatsDClient.class);\n    StatsDEmitter emitter = new StatsDEmitter(\n        new StatsDEmitterConfig(\"localhost\", 8888, null, null, null, null, null, null, null, null),\n        new ObjectMapper(),\n        client\n    );\n    client.gauge(\"broker.query.cache.total.hitRate\", 54);\n    EasyMock.replay(client);\n    emitter.emit(new ServiceMetricEvent.Builder()\n                     .setDimension(\"dataSource\", \"data-source\")\n                     .build(DateTimes.nowUtc(), \"query/cache/total/hitRate\", 0.54)\n                     .build(\"broker\", \"brokerHost1\")\n    );\n    EasyMock.verify(client);\n  }\n","realPath":"extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"MB"},{"authorDate":"2019-08-13 04:18:44","commitOrder":5,"curCode":"  public void testServiceAsTagOption()\n  {\n    StatsDClient client = EasyMock.createMock(StatsDClient.class);\n    StatsDEmitter emitter = new StatsDEmitter(\n            new StatsDEmitterConfig(\"localhost\", 8888, null, null, true, null, null, true, null, true),\n            new ObjectMapper(),\n            client\n    );\n    client.time(\"druid.query.time\", 10,\n            \"service:druid/broker\", \"dataSource:data-source\", \"type:groupBy\", \"hostname:brokerHost1\"\n    );\n    EasyMock.replay(client);\n    emitter.emit(new ServiceMetricEvent.Builder()\n            .setDimension(\"dataSource\", \"data-source\")\n            .setDimension(\"type\", \"groupBy\")\n            .build(DateTimes.nowUtc(), \"query/time\", 10)\n            .build(\"druid/broker\", \"brokerHost1\")\n    );\n    EasyMock.verify(client);\n  }\n","date":"2019-08-13 04:18:44","endLine":194,"groupId":"7599","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testServiceAsTagOption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2b/ebd0166e0ccc408e70d0296c48213adde1c189.src","preCode":"  public void testServiceAsTagOption()\n  {\n    StatsDClient client = EasyMock.createMock(StatsDClient.class);\n    StatsDEmitter emitter = new StatsDEmitter(\n            new StatsDEmitterConfig(\"localhost\", 8888, null, null, true, null, null, true, null, true),\n            new ObjectMapper(),\n            client\n    );\n    client.time(\"druid.query.time\", 10,\n            \"service:druid/broker\", \"dataSource:data-source\", \"type:groupBy\", \"hostname:brokerHost1\"\n    );\n    EasyMock.replay(client);\n    emitter.emit(new ServiceMetricEvent.Builder()\n            .setDimension(\"dataSource\", \"data-source\")\n            .setDimension(\"type\", \"groupBy\")\n            .build(DateTimes.nowUtc(), \"query/time\", 10)\n            .build(\"druid/broker\", \"brokerHost1\")\n    );\n    EasyMock.verify(client);\n  }\n","realPath":"extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"B"}],"commitId":"6b4d028b96d308eaf10220b49e0d9b434a750065","commitMessage":"@@@[statsd-emitter] Add config to send Druid process/service as tag (#8238)\n\n* [statsd-emitter] Add serviceAsTag option\n\n* [statsd-emitter] Refactor serviceAsTag option\n\n* [statsd-emitter] Update statsd.md\n\n* [statsd-emitter] add default prefix\n\n* [statsd-emitter] update statsd.md\n\n* [statsd-emitter] Remove extra spaces\n\n* [statsd-emitter] Improve docs for config `dogstatsdServiceAsTag`\n\n* [statsd-emitter] Simplify equals() for StatsDEmitterConfig.java\n\n* [statsd-emitter] Add @Nullable for StatsDEmitterConfig.java\n","date":"2019-08-13 04:18:44","modifiedFileCount":"3","status":"M","submitter":"Alexandre Yang"},{"authorTime":"2019-09-06 06:43:09","codes":[{"authorDate":"2019-08-13 04:18:44","commitOrder":6,"curCode":"  public void testConvertRange()\n  {\n    StatsDClient client = EasyMock.createMock(StatsDClient.class);\n    StatsDEmitter emitter = new StatsDEmitter(\n        new StatsDEmitterConfig(\"localhost\", 8888, null, null, null, null, null, null, null, null),\n        new ObjectMapper(),\n        client\n    );\n    client.gauge(\"broker.query.cache.total.hitRate\", 54);\n    EasyMock.replay(client);\n    emitter.emit(new ServiceMetricEvent.Builder()\n                     .setDimension(\"dataSource\", \"data-source\")\n                     .build(DateTimes.nowUtc(), \"query/cache/total/hitRate\", 0.54)\n                     .build(\"broker\", \"brokerHost1\")\n    );\n    EasyMock.verify(client);\n  }\n","date":"2019-08-13 04:18:44","endLine":48,"groupId":"9551","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testConvertRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2b/ebd0166e0ccc408e70d0296c48213adde1c189.src","preCode":"  public void testConvertRange()\n  {\n    StatsDClient client = EasyMock.createMock(StatsDClient.class);\n    StatsDEmitter emitter = new StatsDEmitter(\n        new StatsDEmitterConfig(\"localhost\", 8888, null, null, null, null, null, null, null, null),\n        new ObjectMapper(),\n        client\n    );\n    client.gauge(\"broker.query.cache.total.hitRate\", 54);\n    EasyMock.replay(client);\n    emitter.emit(new ServiceMetricEvent.Builder()\n                     .setDimension(\"dataSource\", \"data-source\")\n                     .build(DateTimes.nowUtc(), \"query/cache/total/hitRate\", 0.54)\n                     .build(\"broker\", \"brokerHost1\")\n    );\n    EasyMock.verify(client);\n  }\n","realPath":"extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"N"},{"authorDate":"2019-09-06 06:43:09","commitOrder":6,"curCode":"  public void testServiceAsTagOption()\n  {\n    StatsDClient client = EasyMock.createMock(StatsDClient.class);\n    StatsDEmitter emitter = new StatsDEmitter(\n            new StatsDEmitterConfig(\"localhost\", 8888, null, null, true, null, null, true, null, true),\n            new ObjectMapper(),\n            client\n    );\n    client.time(\"druid.query.time\", 10,\n            \"druid_service:druid/broker\", \"dataSource:data-source\", \"type:groupBy\", \"hostname:brokerHost1\"\n    );\n    EasyMock.replay(client);\n    emitter.emit(new ServiceMetricEvent.Builder()\n            .setDimension(\"dataSource\", \"data-source\")\n            .setDimension(\"type\", \"groupBy\")\n            .build(DateTimes.nowUtc(), \"query/time\", 10)\n            .build(\"druid/broker\", \"brokerHost1\")\n    );\n    EasyMock.verify(client);\n  }\n","date":"2019-09-06 06:43:09","endLine":194,"groupId":"7599","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testServiceAsTagOption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f1/a37008ce79a41e1e9ebe5c2e73cee52f3a08a3.src","preCode":"  public void testServiceAsTagOption()\n  {\n    StatsDClient client = EasyMock.createMock(StatsDClient.class);\n    StatsDEmitter emitter = new StatsDEmitter(\n            new StatsDEmitterConfig(\"localhost\", 8888, null, null, true, null, null, true, null, true),\n            new ObjectMapper(),\n            client\n    );\n    client.time(\"druid.query.time\", 10,\n            \"service:druid/broker\", \"dataSource:data-source\", \"type:groupBy\", \"hostname:brokerHost1\"\n    );\n    EasyMock.replay(client);\n    emitter.emit(new ServiceMetricEvent.Builder()\n            .setDimension(\"dataSource\", \"data-source\")\n            .setDimension(\"type\", \"groupBy\")\n            .build(DateTimes.nowUtc(), \"query/time\", 10)\n            .build(\"druid/broker\", \"brokerHost1\")\n    );\n    EasyMock.verify(client);\n  }\n","realPath":"extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"}],"commitId":"7f28561d1706b6436463c6762844babf7dbf8f5c","commitMessage":"@@@Fix service tag by avoiding using a reserved tag name (#8472)\n\n","date":"2019-09-06 06:43:09","modifiedFileCount":"2","status":"M","submitter":"Alexandre Yang"},{"authorTime":"2019-09-19 23:12:30","codes":[{"authorDate":"2019-09-19 23:12:30","commitOrder":7,"curCode":"  public void testConvertRange()\n  {\n    StatsDClient client = EasyMock.createMock(StatsDClient.class);\n    StatsDEmitter emitter = new StatsDEmitter(\n        new StatsDEmitterConfig(\"localhost\", 8888, null, null, null, null, null, null, null, null, null),\n        new ObjectMapper(),\n        client\n    );\n    client.gauge(\"broker.query.cache.total.hitRate\", 54);\n    EasyMock.replay(client);\n    emitter.emit(new ServiceMetricEvent.Builder()\n                     .setDimension(\"dataSource\", \"data-source\")\n                     .build(DateTimes.nowUtc(), \"query/cache/total/hitRate\", 0.54)\n                     .build(\"broker\", \"brokerHost1\")\n    );\n    EasyMock.verify(client);\n  }\n","date":"2019-09-19 23:12:30","endLine":54,"groupId":"103951","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testConvertRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/36/0f511eb9dc935152397b40d4e6ec2ee16ce91c.src","preCode":"  public void testConvertRange()\n  {\n    StatsDClient client = EasyMock.createMock(StatsDClient.class);\n    StatsDEmitter emitter = new StatsDEmitter(\n        new StatsDEmitterConfig(\"localhost\", 8888, null, null, null, null, null, null, null, null),\n        new ObjectMapper(),\n        client\n    );\n    client.gauge(\"broker.query.cache.total.hitRate\", 54);\n    EasyMock.replay(client);\n    emitter.emit(new ServiceMetricEvent.Builder()\n                     .setDimension(\"dataSource\", \"data-source\")\n                     .build(DateTimes.nowUtc(), \"query/cache/total/hitRate\", 0.54)\n                     .build(\"broker\", \"brokerHost1\")\n    );\n    EasyMock.verify(client);\n  }\n","realPath":"extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2019-09-19 23:12:30","commitOrder":7,"curCode":"  public void testServiceAsTagOption()\n  {\n    StatsDClient client = EasyMock.createMock(StatsDClient.class);\n    StatsDEmitter emitter = new StatsDEmitter(\n            new StatsDEmitterConfig(\"localhost\", 8888, null, null, true, null, null, true, null, true, null),\n            new ObjectMapper(),\n            client\n    );\n    client.time(\"druid.query.time\", 10,\n            \"druid_service:druid/broker\", \"dataSource:data-source\", \"type:groupBy\", \"hostname:brokerHost1\"\n    );\n    EasyMock.replay(client);\n    emitter.emit(new ServiceMetricEvent.Builder()\n            .setDimension(\"dataSource\", \"data-source\")\n            .setDimension(\"type\", \"groupBy\")\n            .build(DateTimes.nowUtc(), \"query/time\", 10)\n            .build(\"druid/broker\", \"brokerHost1\")\n    );\n    EasyMock.verify(client);\n  }\n","date":"2019-09-19 23:12:30","endLine":200,"groupId":"103951","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testServiceAsTagOption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/36/0f511eb9dc935152397b40d4e6ec2ee16ce91c.src","preCode":"  public void testServiceAsTagOption()\n  {\n    StatsDClient client = EasyMock.createMock(StatsDClient.class);\n    StatsDEmitter emitter = new StatsDEmitter(\n            new StatsDEmitterConfig(\"localhost\", 8888, null, null, true, null, null, true, null, true),\n            new ObjectMapper(),\n            client\n    );\n    client.time(\"druid.query.time\", 10,\n            \"druid_service:druid/broker\", \"dataSource:data-source\", \"type:groupBy\", \"hostname:brokerHost1\"\n    );\n    EasyMock.replay(client);\n    emitter.emit(new ServiceMetricEvent.Builder()\n            .setDimension(\"dataSource\", \"data-source\")\n            .setDimension(\"type\", \"groupBy\")\n            .build(DateTimes.nowUtc(), \"query/time\", 10)\n            .build(\"druid/broker\", \"brokerHost1\")\n    );\n    EasyMock.verify(client);\n  }\n","realPath":"extensions-contrib/statsd-emitter/src/test/java/org/apache/druid/emitter/statsd/StatsDEmitterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"e184d24a74dbe425e2f80facbe09071049dcfb35","commitMessage":"@@@add support for dogstatsd events in statsd-emitter (#8546)\n\n* add support for dogstatsd events in statsd-emitter\n* add option to turn on alert events (off by default)\n* updated docs","date":"2019-09-19 23:12:30","modifiedFileCount":"3","status":"M","submitter":"Xavier L?aut?"}]
