[{"authorTime":"2018-10-15 11:37:37","codes":[{"authorDate":"2018-10-15 11:37:37","commitOrder":1,"curCode":"  private MetadataStorageConnectorConfig createMetadataStorageConfig(\n      boolean createTables,\n      String host,\n      int port,\n      String connectURI,\n      String user,\n      String pwdString\n  )\n      throws IOException\n  {\n    return jsonMapper.readValue(\n        \"{\" +\n        \"\\\"createTables\\\": \\\"\" + createTables + \"\\\",\" +\n        \"\\\"host\\\": \\\"\" + host + \"\\\",\" +\n        \"\\\"port\\\": \\\"\" + port + \"\\\",\" +\n        \"\\\"connectURI\\\": \\\"\" + connectURI + \"\\\",\" +\n        \"\\\"user\\\": \\\"\" + user + \"\\\",\" +\n        \"\\\"password\\\": \" + pwdString +\n        \"}\",\n        MetadataStorageConnectorConfig.class\n    );\n  }\n","date":"2018-10-15 11:37:37","endLine":52,"groupId":"16152","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadataStorageConfig","params":"(booleancreateTables@Stringhost@intport@StringconnectURI@Stringuser@StringpwdString)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ca/d5c5e04728ea16370ca0c1e972b188af729659.src","preCode":"  private MetadataStorageConnectorConfig createMetadataStorageConfig(\n      boolean createTables,\n      String host,\n      int port,\n      String connectURI,\n      String user,\n      String pwdString\n  )\n      throws IOException\n  {\n    return jsonMapper.readValue(\n        \"{\" +\n        \"\\\"createTables\\\": \\\"\" + createTables + \"\\\",\" +\n        \"\\\"host\\\": \\\"\" + host + \"\\\",\" +\n        \"\\\"port\\\": \\\"\" + port + \"\\\",\" +\n        \"\\\"connectURI\\\": \\\"\" + connectURI + \"\\\",\" +\n        \"\\\"user\\\": \\\"\" + user + \"\\\",\" +\n        \"\\\"password\\\": \" + pwdString +\n        \"}\",\n        MetadataStorageConnectorConfig.class\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/metadata/MetadataStorageConnectorConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"B"},{"authorDate":"2018-10-15 11:37:37","commitOrder":1,"curCode":"  private void testMetadataStorageConnectionConfig(\n      boolean createTables,\n      String host,\n      int port,\n      String connectURI,\n      String user,\n      String pwdString,\n      String pwd\n  ) throws Exception\n  {\n    MetadataStorageConnectorConfig config = jsonMapper.readValue(\n        \"{\" +\n        \"\\\"createTables\\\": \\\"\" + createTables + \"\\\",\" +\n        \"\\\"host\\\": \\\"\" + host + \"\\\",\" +\n        \"\\\"port\\\": \\\"\" + port + \"\\\",\" +\n        \"\\\"connectURI\\\": \\\"\" + connectURI + \"\\\",\" +\n        \"\\\"user\\\": \\\"\" + user + \"\\\",\" +\n        \"\\\"password\\\": \" + pwdString +\n        \"}\",\n        MetadataStorageConnectorConfig.class\n    );\n\n    Assert.assertEquals(host, config.getHost());\n    Assert.assertEquals(port, config.getPort());\n    Assert.assertEquals(connectURI, config.getConnectURI());\n    Assert.assertEquals(user, config.getUser());\n    Assert.assertEquals(pwd, config.getPassword());\n  }\n","date":"2018-10-15 11:37:37","endLine":133,"groupId":"16152","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMetadataStorageConnectionConfig","params":"(booleancreateTables@Stringhost@intport@StringconnectURI@Stringuser@StringpwdString@Stringpwd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ca/d5c5e04728ea16370ca0c1e972b188af729659.src","preCode":"  private void testMetadataStorageConnectionConfig(\n      boolean createTables,\n      String host,\n      int port,\n      String connectURI,\n      String user,\n      String pwdString,\n      String pwd\n  ) throws Exception\n  {\n    MetadataStorageConnectorConfig config = jsonMapper.readValue(\n        \"{\" +\n        \"\\\"createTables\\\": \\\"\" + createTables + \"\\\",\" +\n        \"\\\"host\\\": \\\"\" + host + \"\\\",\" +\n        \"\\\"port\\\": \\\"\" + port + \"\\\",\" +\n        \"\\\"connectURI\\\": \\\"\" + connectURI + \"\\\",\" +\n        \"\\\"user\\\": \\\"\" + user + \"\\\",\" +\n        \"\\\"password\\\": \" + pwdString +\n        \"}\",\n        MetadataStorageConnectorConfig.class\n    );\n\n    Assert.assertEquals(host, config.getHost());\n    Assert.assertEquals(port, config.getPort());\n    Assert.assertEquals(connectURI, config.getConnectURI());\n    Assert.assertEquals(user, config.getUser());\n    Assert.assertEquals(pwd, config.getPassword());\n  }\n","realPath":"core/src/test/java/org/apache/druid/metadata/MetadataStorageConnectorConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"}],"commitId":"84598fba3b283cbfd6a5addd2602c7b12ba8c00c","commitMessage":"@@@combine druid-api.  druid-common.  java-util into druid-core (#6443)\n\n* combine druid-api.  druid-common.  java-util\n\n* spacing\n","date":"2018-10-15 11:37:37","modifiedFileCount":"0","status":"B","submitter":"Clint Wylie"},{"authorTime":"2018-10-17 03:27:19","codes":[{"authorDate":"2018-10-17 03:27:19","commitOrder":2,"curCode":"  private MetadataStorageConnectorConfig createMetadataStorageConfig(\n      boolean createTables,\n      String host,\n      int port,\n      String connectURI,\n      String user,\n      String pwdString\n  )\n      throws IOException\n  {\n    return jsonMapper.readValue(\n        \"{\" +\n        \"\\\"createTables\\\": \\\"\" + createTables + \"\\\",\" +\n        \"\\\"host\\\": \\\"\" + host + \"\\\",\" +\n        \"\\\"port\\\": \\\"\" + port + \"\\\",\" +\n        \"\\\"connectURI\\\": \\\"\" + connectURI + \"\\\",\" +\n        \"\\\"user\\\": \\\"\" + user + \"\\\",\" +\n        \"\\\"password\\\": \" + pwdString + \",\" +\n        \"\\\"dbcp\\\": {\\n\" +\n        \"  \\\"maxConnLifetimeMillis\\\" : 1200000,\\n\" +\n        \"  \\\"defaultQueryTimeout\\\" : \\\"30000\\\"\\n\" +\n        \"}\" +\n        \"}\",\n        MetadataStorageConnectorConfig.class\n    );\n  }\n","date":"2018-10-17 03:27:19","endLine":57,"groupId":"16152","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadataStorageConfig","params":"(booleancreateTables@Stringhost@intport@StringconnectURI@Stringuser@StringpwdString)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/29/99671500e8f60db6699c7b0f7e8566de24ed52.src","preCode":"  private MetadataStorageConnectorConfig createMetadataStorageConfig(\n      boolean createTables,\n      String host,\n      int port,\n      String connectURI,\n      String user,\n      String pwdString\n  )\n      throws IOException\n  {\n    return jsonMapper.readValue(\n        \"{\" +\n        \"\\\"createTables\\\": \\\"\" + createTables + \"\\\",\" +\n        \"\\\"host\\\": \\\"\" + host + \"\\\",\" +\n        \"\\\"port\\\": \\\"\" + port + \"\\\",\" +\n        \"\\\"connectURI\\\": \\\"\" + connectURI + \"\\\",\" +\n        \"\\\"user\\\": \\\"\" + user + \"\\\",\" +\n        \"\\\"password\\\": \" + pwdString +\n        \"}\",\n        MetadataStorageConnectorConfig.class\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/metadata/MetadataStorageConnectorConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2018-10-17 03:27:19","commitOrder":2,"curCode":"  private void testMetadataStorageConnectionConfig(\n      boolean createTables,\n      String host,\n      int port,\n      String connectURI,\n      String user,\n      String pwdString,\n      String pwd\n  ) throws Exception\n  {\n    MetadataStorageConnectorConfig config = jsonMapper.readValue(\n        \"{\" +\n        \"\\\"createTables\\\": \\\"\" + createTables + \"\\\",\" +\n        \"\\\"host\\\": \\\"\" + host + \"\\\",\" +\n        \"\\\"port\\\": \\\"\" + port + \"\\\",\" +\n        \"\\\"connectURI\\\": \\\"\" + connectURI + \"\\\",\" +\n        \"\\\"user\\\": \\\"\" + user + \"\\\",\" +\n        \"\\\"password\\\": \" + pwdString +\n        \"}\",\n        MetadataStorageConnectorConfig.class\n    );\n\n    Assert.assertEquals(host, config.getHost());\n    Assert.assertEquals(port, config.getPort());\n    Assert.assertEquals(connectURI, config.getConnectURI());\n    Assert.assertEquals(user, config.getUser());\n    Assert.assertEquals(pwd, config.getPassword());\n    Assert.assertNull(config.getDbcpProperties());\n  }\n","date":"2018-10-17 03:27:19","endLine":140,"groupId":"16152","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMetadataStorageConnectionConfig","params":"(booleancreateTables@Stringhost@intport@StringconnectURI@Stringuser@StringpwdString@Stringpwd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/29/99671500e8f60db6699c7b0f7e8566de24ed52.src","preCode":"  private void testMetadataStorageConnectionConfig(\n      boolean createTables,\n      String host,\n      int port,\n      String connectURI,\n      String user,\n      String pwdString,\n      String pwd\n  ) throws Exception\n  {\n    MetadataStorageConnectorConfig config = jsonMapper.readValue(\n        \"{\" +\n        \"\\\"createTables\\\": \\\"\" + createTables + \"\\\",\" +\n        \"\\\"host\\\": \\\"\" + host + \"\\\",\" +\n        \"\\\"port\\\": \\\"\" + port + \"\\\",\" +\n        \"\\\"connectURI\\\": \\\"\" + connectURI + \"\\\",\" +\n        \"\\\"user\\\": \\\"\" + user + \"\\\",\" +\n        \"\\\"password\\\": \" + pwdString +\n        \"}\",\n        MetadataStorageConnectorConfig.class\n    );\n\n    Assert.assertEquals(host, config.getHost());\n    Assert.assertEquals(port, config.getPort());\n    Assert.assertEquals(connectURI, config.getConnectURI());\n    Assert.assertEquals(user, config.getUser());\n    Assert.assertEquals(pwd, config.getPassword());\n  }\n","realPath":"core/src/test/java/org/apache/druid/metadata/MetadataStorageConnectorConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"c780aacc03e30b929ba14f70d7f278811fd8ba44","commitMessage":"@@@Add ability to specify dbcp properties file (#6419)\n\n* Add ability to specify dbcp properties file\n\n* Address PR comments.  use mock config.  remove setter\n\n* Add documentation\n\n* APRC.  updated docs with example file contents\n\n* APRC.  add @Nullable.  @VisibileForTesting.  update doc\n\n* APRC.  remove error log.  use props directly as jackson binding\n\n* Remove unused files\n","date":"2018-10-17 03:27:19","modifiedFileCount":"4","status":"M","submitter":"patelh"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":3,"curCode":"  private MetadataStorageConnectorConfig createMetadataStorageConfig(\n      boolean createTables,\n      String host,\n      int port,\n      String connectURI,\n      String user,\n      String pwdString\n  )\n      throws IOException\n  {\n    return JSON_MAPPER.readValue(\n        \"{\" +\n        \"\\\"createTables\\\": \\\"\" + createTables + \"\\\",\" +\n        \"\\\"host\\\": \\\"\" + host + \"\\\",\" +\n        \"\\\"port\\\": \\\"\" + port + \"\\\",\" +\n        \"\\\"connectURI\\\": \\\"\" + connectURI + \"\\\",\" +\n        \"\\\"user\\\": \\\"\" + user + \"\\\",\" +\n        \"\\\"password\\\": \" + pwdString + \",\" +\n        \"\\\"dbcp\\\": {\\n\" +\n        \"  \\\"maxConnLifetimeMillis\\\" : 1200000,\\n\" +\n        \"  \\\"defaultQueryTimeout\\\" : \\\"30000\\\"\\n\" +\n        \"}\" +\n        \"}\",\n        MetadataStorageConnectorConfig.class\n    );\n  }\n","date":"2019-08-23 18:13:54","endLine":57,"groupId":"10201","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"createMetadataStorageConfig","params":"(booleancreateTables@Stringhost@intport@StringconnectURI@Stringuser@StringpwdString)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c5/e401ebb7400626afa90e0f373616e4f62c42df.src","preCode":"  private MetadataStorageConnectorConfig createMetadataStorageConfig(\n      boolean createTables,\n      String host,\n      int port,\n      String connectURI,\n      String user,\n      String pwdString\n  )\n      throws IOException\n  {\n    return jsonMapper.readValue(\n        \"{\" +\n        \"\\\"createTables\\\": \\\"\" + createTables + \"\\\",\" +\n        \"\\\"host\\\": \\\"\" + host + \"\\\",\" +\n        \"\\\"port\\\": \\\"\" + port + \"\\\",\" +\n        \"\\\"connectURI\\\": \\\"\" + connectURI + \"\\\",\" +\n        \"\\\"user\\\": \\\"\" + user + \"\\\",\" +\n        \"\\\"password\\\": \" + pwdString + \",\" +\n        \"\\\"dbcp\\\": {\\n\" +\n        \"  \\\"maxConnLifetimeMillis\\\" : 1200000,\\n\" +\n        \"  \\\"defaultQueryTimeout\\\" : \\\"30000\\\"\\n\" +\n        \"}\" +\n        \"}\",\n        MetadataStorageConnectorConfig.class\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/metadata/MetadataStorageConnectorConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":3,"curCode":"  private void testMetadataStorageConnectionConfig(\n      boolean createTables,\n      String host,\n      int port,\n      String connectURI,\n      String user,\n      String pwdString,\n      String pwd\n  ) throws Exception\n  {\n    MetadataStorageConnectorConfig config = JSON_MAPPER.readValue(\n        \"{\" +\n        \"\\\"createTables\\\": \\\"\" + createTables + \"\\\",\" +\n        \"\\\"host\\\": \\\"\" + host + \"\\\",\" +\n        \"\\\"port\\\": \\\"\" + port + \"\\\",\" +\n        \"\\\"connectURI\\\": \\\"\" + connectURI + \"\\\",\" +\n        \"\\\"user\\\": \\\"\" + user + \"\\\",\" +\n        \"\\\"password\\\": \" + pwdString +\n        \"}\",\n        MetadataStorageConnectorConfig.class\n    );\n\n    Assert.assertEquals(host, config.getHost());\n    Assert.assertEquals(port, config.getPort());\n    Assert.assertEquals(connectURI, config.getConnectURI());\n    Assert.assertEquals(user, config.getUser());\n    Assert.assertEquals(pwd, config.getPassword());\n    Assert.assertNull(config.getDbcpProperties());\n  }\n","date":"2019-08-23 18:13:54","endLine":140,"groupId":"10201","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testMetadataStorageConnectionConfig","params":"(booleancreateTables@Stringhost@intport@StringconnectURI@Stringuser@StringpwdString@Stringpwd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c5/e401ebb7400626afa90e0f373616e4f62c42df.src","preCode":"  private void testMetadataStorageConnectionConfig(\n      boolean createTables,\n      String host,\n      int port,\n      String connectURI,\n      String user,\n      String pwdString,\n      String pwd\n  ) throws Exception\n  {\n    MetadataStorageConnectorConfig config = jsonMapper.readValue(\n        \"{\" +\n        \"\\\"createTables\\\": \\\"\" + createTables + \"\\\",\" +\n        \"\\\"host\\\": \\\"\" + host + \"\\\",\" +\n        \"\\\"port\\\": \\\"\" + port + \"\\\",\" +\n        \"\\\"connectURI\\\": \\\"\" + connectURI + \"\\\",\" +\n        \"\\\"user\\\": \\\"\" + user + \"\\\",\" +\n        \"\\\"password\\\": \" + pwdString +\n        \"}\",\n        MetadataStorageConnectorConfig.class\n    );\n\n    Assert.assertEquals(host, config.getHost());\n    Assert.assertEquals(port, config.getPort());\n    Assert.assertEquals(connectURI, config.getConnectURI());\n    Assert.assertEquals(user, config.getUser());\n    Assert.assertEquals(pwd, config.getPassword());\n    Assert.assertNull(config.getDbcpProperties());\n  }\n","realPath":"core/src/test/java/org/apache/druid/metadata/MetadataStorageConnectorConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
