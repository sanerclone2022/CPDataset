[{"authorTime":"2018-10-15 11:37:37","codes":[{"authorDate":"2018-10-15 11:37:37","commitOrder":1,"curCode":"  public void testDimExclusionDuplicate()\n  {\n    @SuppressWarnings(\"unused\") \r\n    final ParseSpec spec = new DelimitedParseSpec(\n        new TimestampSpec(\n            \"timestamp\",\n            \"auto\",\n            null\n        ),\n        new DimensionsSpec(\n            DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"a\")),\n            Lists.newArrayList(\"B\", \"B\"),\n            Lists.newArrayList()\n        ),\n        \",\",\n        null,\n        Arrays.asList(\"a\", \"B\"),\n        false,\n        0\n    );\n  }\n","date":"2018-10-15 11:37:37","endLine":128,"groupId":"18718","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDimExclusionDuplicate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/42/4dec57f13a78b815ad92dd295918802b9f6ba6.src","preCode":"  public void testDimExclusionDuplicate()\n  {\n    @SuppressWarnings(\"unused\") \r\n    final ParseSpec spec = new DelimitedParseSpec(\n        new TimestampSpec(\n            \"timestamp\",\n            \"auto\",\n            null\n        ),\n        new DimensionsSpec(\n            DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"a\")),\n            Lists.newArrayList(\"B\", \"B\"),\n            Lists.newArrayList()\n        ),\n        \",\",\n        null,\n        Arrays.asList(\"a\", \"B\"),\n        false,\n        0\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/data/input/impl/ParseSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"},{"authorDate":"2018-10-15 11:37:37","commitOrder":1,"curCode":"  public void testDefaultTimestampSpec()\n  {\n    expectedException.expect(NullPointerException.class);\n    expectedException.expectMessage(\"parseSpec requires timestampSpec\");\n    @SuppressWarnings(\"unused\") \r\n    final ParseSpec spec = new DelimitedParseSpec(\n        null,\n        new DimensionsSpec(\n            DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"a\")),\n            Lists.newArrayList(\"B\", \"B\"),\n            Lists.newArrayList()\n        ),\n        \",\",\n        null,\n        Arrays.asList(\"a\", \"B\"),\n        false,\n        0\n    );\n  }\n","date":"2018-10-15 11:37:37","endLine":149,"groupId":"18718","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultTimestampSpec","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/42/4dec57f13a78b815ad92dd295918802b9f6ba6.src","preCode":"  public void testDefaultTimestampSpec()\n  {\n    expectedException.expect(NullPointerException.class);\n    expectedException.expectMessage(\"parseSpec requires timestampSpec\");\n    @SuppressWarnings(\"unused\") \r\n    final ParseSpec spec = new DelimitedParseSpec(\n        null,\n        new DimensionsSpec(\n            DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"a\")),\n            Lists.newArrayList(\"B\", \"B\"),\n            Lists.newArrayList()\n        ),\n        \",\",\n        null,\n        Arrays.asList(\"a\", \"B\"),\n        false,\n        0\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/data/input/impl/ParseSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"B"}],"commitId":"84598fba3b283cbfd6a5addd2602c7b12ba8c00c","commitMessage":"@@@combine druid-api.  druid-common.  java-util into druid-core (#6443)\n\n* combine druid-api.  druid-common.  java-util\n\n* spacing\n","date":"2018-10-15 11:37:37","modifiedFileCount":"0","status":"B","submitter":"Clint Wylie"},{"authorTime":"2018-10-29 20:02:43","codes":[{"authorDate":"2018-10-29 20:02:43","commitOrder":2,"curCode":"  public void testDimExclusionDuplicate()\n  {\n    @SuppressWarnings(\"unused\") \r\n    final ParseSpec spec = new DelimitedParseSpec(\n        new TimestampSpec(\n            \"timestamp\",\n            \"auto\",\n            null\n        ),\n        new DimensionsSpec(\n            DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"a\")),\n            Lists.newArrayList(\"B\", \"B\"),\n            new ArrayList<>()\n        ),\n        \",\",\n        null,\n        Arrays.asList(\"a\", \"B\"),\n        false,\n        0\n    );\n  }\n","date":"2018-10-29 20:02:43","endLine":129,"groupId":"104867","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDimExclusionDuplicate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1c/2e7808e17415386263c95df1016f126adb043a.src","preCode":"  public void testDimExclusionDuplicate()\n  {\n    @SuppressWarnings(\"unused\") \r\n    final ParseSpec spec = new DelimitedParseSpec(\n        new TimestampSpec(\n            \"timestamp\",\n            \"auto\",\n            null\n        ),\n        new DimensionsSpec(\n            DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"a\")),\n            Lists.newArrayList(\"B\", \"B\"),\n            Lists.newArrayList()\n        ),\n        \",\",\n        null,\n        Arrays.asList(\"a\", \"B\"),\n        false,\n        0\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/data/input/impl/ParseSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2018-10-29 20:02:43","commitOrder":2,"curCode":"  public void testDefaultTimestampSpec()\n  {\n    expectedException.expect(NullPointerException.class);\n    expectedException.expectMessage(\"parseSpec requires timestampSpec\");\n    @SuppressWarnings(\"unused\") \r\n    final ParseSpec spec = new DelimitedParseSpec(\n        null,\n        new DimensionsSpec(\n            DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"a\")),\n            Lists.newArrayList(\"B\", \"B\"),\n            new ArrayList<>()\n        ),\n        \",\",\n        null,\n        Arrays.asList(\"a\", \"B\"),\n        false,\n        0\n    );\n  }\n","date":"2018-10-29 20:02:43","endLine":150,"groupId":"104867","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultTimestampSpec","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1c/2e7808e17415386263c95df1016f126adb043a.src","preCode":"  public void testDefaultTimestampSpec()\n  {\n    expectedException.expect(NullPointerException.class);\n    expectedException.expectMessage(\"parseSpec requires timestampSpec\");\n    @SuppressWarnings(\"unused\") \r\n    final ParseSpec spec = new DelimitedParseSpec(\n        null,\n        new DimensionsSpec(\n            DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"a\")),\n            Lists.newArrayList(\"B\", \"B\"),\n            Lists.newArrayList()\n        ),\n        \",\",\n        null,\n        Arrays.asList(\"a\", \"B\"),\n        false,\n        0\n    );\n  }\n","realPath":"core/src/test/java/org/apache/druid/data/input/impl/ParseSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"}],"commitId":"676f5e6d7f184101b8763e4249b18b237bbe0ec7","commitMessage":"@@@Prohibit some guava collection APIs and use JDK collection APIs directly (#6511)\n\n* Prohibit some guava collection APIs and use JDK APIs directly\n\n* reset files that changed by accident\n\n* sort codestyle/druid-forbidden-apis.txt alphabetically\n","date":"2018-10-29 20:02:43","modifiedFileCount":"427","status":"M","submitter":"QiuMM"}]
