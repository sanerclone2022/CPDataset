[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void loadQueryable(String dataSource, String version, Interval interval)\n  {\n    try {\n      segmentManager.loadSegment(\n          new DataSegment(\n              dataSource,\n              interval,\n              version,\n              ImmutableMap.of(\"version\", version, \"interval\", interval),\n              Arrays.asList(\"dim1\", \"dim2\", \"dim3\"),\n              Arrays.asList(\"metric1\", \"metric2\"),\n              NoneShardSpec.instance(),\n              IndexIO.CURRENT_VERSION_ID,\n              123L\n          )\n      );\n    }\n    catch (SegmentLoadingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":489,"groupId":"2937","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"loadQueryable","params":"(StringdataSource@Stringversion@Intervalinterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/31/07539e6f6c5d64f76d5b8978eaaf386f2b5cab.src","preCode":"  public void loadQueryable(String dataSource, String version, Interval interval)\n  {\n    try {\n      segmentManager.loadSegment(\n          new DataSegment(\n              dataSource,\n              interval,\n              version,\n              ImmutableMap.of(\"version\", version, \"interval\", interval),\n              Arrays.asList(\"dim1\", \"dim2\", \"dim3\"),\n              Arrays.asList(\"metric1\", \"metric2\"),\n              NoneShardSpec.instance(),\n              IndexIO.CURRENT_VERSION_ID,\n              123L\n          )\n      );\n    }\n    catch (SegmentLoadingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordination/ServerManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":469,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void dropQueryable(String dataSource, String version, Interval interval)\n  {\n    segmentManager.dropSegment(\n        new DataSegment(\n            dataSource,\n            interval,\n            version,\n            ImmutableMap.of(\"version\", version, \"interval\", interval),\n            Arrays.asList(\"dim1\", \"dim2\", \"dim3\"),\n            Arrays.asList(\"metric1\", \"metric2\"),\n            NoneShardSpec.instance(),\n            IndexIO.CURRENT_VERSION_ID,\n            123L\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":506,"groupId":"2937","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"dropQueryable","params":"(StringdataSource@Stringversion@Intervalinterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/31/07539e6f6c5d64f76d5b8978eaaf386f2b5cab.src","preCode":"  public void dropQueryable(String dataSource, String version, Interval interval)\n  {\n    segmentManager.dropSegment(\n        new DataSegment(\n            dataSource,\n            interval,\n            version,\n            ImmutableMap.of(\"version\", version, \"interval\", interval),\n            Arrays.asList(\"dim1\", \"dim2\", \"dim3\"),\n            Arrays.asList(\"metric1\", \"metric2\"),\n            NoneShardSpec.instance(),\n            IndexIO.CURRENT_VERSION_ID,\n            123L\n        )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordination/ServerManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":491,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2019-12-04 01:47:01","commitOrder":2,"curCode":"  public void loadQueryable(String dataSource, String version, Interval interval)\n  {\n    try {\n      segmentManager.loadSegment(\n          new DataSegment(\n              dataSource,\n              interval,\n              version,\n              ImmutableMap.of(\"version\", version, \"interval\", interval),\n              Arrays.asList(\"dim1\", \"dim2\", \"dim3\"),\n              Arrays.asList(\"metric1\", \"metric2\"),\n              NoneShardSpec.instance(),\n              IndexIO.CURRENT_VERSION_ID,\n              123L\n          ),\n          false\n      );\n    }\n    catch (SegmentLoadingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-12-04 01:47:01","endLine":488,"groupId":"2937","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"loadQueryable","params":"(StringdataSource@Stringversion@Intervalinterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/24/828e2bbaac28cc1d0604b685d88904e60e0faf.src","preCode":"  public void loadQueryable(String dataSource, String version, Interval interval)\n  {\n    try {\n      segmentManager.loadSegment(\n          new DataSegment(\n              dataSource,\n              interval,\n              version,\n              ImmutableMap.of(\"version\", version, \"interval\", interval),\n              Arrays.asList(\"dim1\", \"dim2\", \"dim3\"),\n              Arrays.asList(\"metric1\", \"metric2\"),\n              NoneShardSpec.instance(),\n              IndexIO.CURRENT_VERSION_ID,\n              123L\n          )\n      );\n    }\n    catch (SegmentLoadingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordination/ServerManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":467,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void dropQueryable(String dataSource, String version, Interval interval)\n  {\n    segmentManager.dropSegment(\n        new DataSegment(\n            dataSource,\n            interval,\n            version,\n            ImmutableMap.of(\"version\", version, \"interval\", interval),\n            Arrays.asList(\"dim1\", \"dim2\", \"dim3\"),\n            Arrays.asList(\"metric1\", \"metric2\"),\n            NoneShardSpec.instance(),\n            IndexIO.CURRENT_VERSION_ID,\n            123L\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":506,"groupId":"2937","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"dropQueryable","params":"(StringdataSource@Stringversion@Intervalinterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/31/07539e6f6c5d64f76d5b8978eaaf386f2b5cab.src","preCode":"  public void dropQueryable(String dataSource, String version, Interval interval)\n  {\n    segmentManager.dropSegment(\n        new DataSegment(\n            dataSource,\n            interval,\n            version,\n            ImmutableMap.of(\"version\", version, \"interval\", interval),\n            Arrays.asList(\"dim1\", \"dim2\", \"dim3\"),\n            Arrays.asList(\"metric1\", \"metric2\"),\n            NoneShardSpec.instance(),\n            IndexIO.CURRENT_VERSION_ID,\n            123L\n        )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordination/ServerManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":491,"status":"N"}],"commitId":"187cf0dd3f6079077c07a6c8ef10621c26383d17","commitMessage":"@@@[Improvement] historical fast restart by lazy load columns metadata(20X faster) (#6988)\n\n* historical fast restart by lazy load columns metadata\n\n* delete repeated code\n\n* add documentation for druid.segmentCache.lazyLoadOnStart\n\n* fix unit test fail\n\n* fix spellcheck\n\n* update docs\n\n* update docs mentioning a catch\n","date":"2019-12-04 01:47:01","modifiedFileCount":"15","status":"M","submitter":"Fangyuan Deng"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2021-01-17 11:53:30","commitOrder":3,"curCode":"  public void loadQueryable(String dataSource, String version, Interval interval)\n  {\n    try {\n      segmentManager.loadSegment(\n          new DataSegment(\n              dataSource,\n              interval,\n              version,\n              ImmutableMap.of(\"version\", version, \"interval\", interval),\n              Arrays.asList(\"dim1\", \"dim2\", \"dim3\"),\n              Arrays.asList(\"metric1\", \"metric2\"),\n              NoneShardSpec.instance(),\n              IndexIO.CURRENT_VERSION_ID,\n              123L\n          ),\n          false,\n          SegmentLazyLoadFailCallback.NOOP\n      );\n    }\n    catch (SegmentLoadingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2021-01-17 11:53:30","endLine":685,"groupId":"10690","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"loadQueryable","params":"(StringdataSource@Stringversion@Intervalinterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6f/8d5a63e9dbfcf150c8c5ebb2b1ba623a5ba860.src","preCode":"  public void loadQueryable(String dataSource, String version, Interval interval)\n  {\n    try {\n      segmentManager.loadSegment(\n          new DataSegment(\n              dataSource,\n              interval,\n              version,\n              ImmutableMap.of(\"version\", version, \"interval\", interval),\n              Arrays.asList(\"dim1\", \"dim2\", \"dim3\"),\n              Arrays.asList(\"metric1\", \"metric2\"),\n              NoneShardSpec.instance(),\n              IndexIO.CURRENT_VERSION_ID,\n              123L\n          ),\n          false\n      );\n    }\n    catch (SegmentLoadingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordination/ServerManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":663,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":3,"curCode":"  public void dropQueryable(String dataSource, String version, Interval interval)\n  {\n    segmentManager.dropSegment(\n        new DataSegment(\n            dataSource,\n            interval,\n            version,\n            ImmutableMap.of(\"version\", version, \"interval\", interval),\n            Arrays.asList(\"dim1\", \"dim2\", \"dim3\"),\n            Arrays.asList(\"metric1\", \"metric2\"),\n            NoneShardSpec.instance(),\n            IndexIO.CURRENT_VERSION_ID,\n            123L\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":506,"groupId":"10690","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"dropQueryable","params":"(StringdataSource@Stringversion@Intervalinterval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/31/07539e6f6c5d64f76d5b8978eaaf386f2b5cab.src","preCode":"  public void dropQueryable(String dataSource, String version, Interval interval)\n  {\n    segmentManager.dropSegment(\n        new DataSegment(\n            dataSource,\n            interval,\n            version,\n            ImmutableMap.of(\"version\", version, \"interval\", interval),\n            Arrays.asList(\"dim1\", \"dim2\", \"dim3\"),\n            Arrays.asList(\"metric1\", \"metric2\"),\n            NoneShardSpec.instance(),\n            IndexIO.CURRENT_VERSION_ID,\n            123L\n        )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordination/ServerManagerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":491,"status":"N"}],"commitId":"2590ad4f67fab99760eb4562d84b34e8aa55f6c1","commitMessage":"@@@Historical unloads damaged segments automatically when lazy on start. (#10688)\n\n* ready to test\n\n* tested on dev cluster\n\n* tested\n\n* code review\n\n* add UTs\n\n* add UTs\n\n* ut passed\n\n* ut passed\n\n* opti imports\n\n* done\n\n* done\n\n* fix checkstyle\n\n* modify uts\n\n* modify logs\n\n* changing the package of SegmentLazyLoadFailCallback.java to org.apache.druid.segment\n\n* merge from master\n\n* modify import orders\n\n* merge from master\n\n* merge from master\n\n* modify logs\n\n* modify docs\n\n* modify logs to rerun ci\n\n* modify logs to rerun ci\n\n* modify logs to rerun ci\n\n* modify logs to rerun ci\n\n* modify logs to rerun ci\n\n* modify logs to rerun ci\n\n* modify logs to rerun ci\n\n* modify logs to rerun ci\n\nCo-authored-by: yuezhang <yuezhang@freewheel.tv>","date":"2021-01-17 11:53:30","modifiedFileCount":"20","status":"M","submitter":"zhangyue19921010"}]
