[{"authorTime":"2020-06-25 09:01:31","codes":[{"authorDate":"2020-06-25 09:01:31","commitOrder":3,"curCode":"  public void setup()\n  {\n    nestedParseSpec = new JSONParseSpec(\n                new TimestampSpec(\"timestamp\", \"iso\", null),\n                new DimensionsSpec(Lists.newArrayList(\n                        new StringDimensionSchema(\"event\"),\n                        new StringDimensionSchema(\"id\"),\n                        new StringDimensionSchema(\"someOtherId\"),\n                        new StringDimensionSchema(\"isValid\")\n                ), null, null),\n                new JSONPathSpec(\n                        true,\n                        Lists.newArrayList(\n                                new JSONPathFieldSpec(JSONPathFieldType.ROOT, \"eventType\", \"eventType\"),\n                                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"foobar\", \"$.foo.bar\"),\n                                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"bar0\", \"$.bar[0].bar\")\n                        )\n                ),\n                null,\n                null\n    );\n\n    flatParseSpec = new JSONParseSpec(\n            new TimestampSpec(\"timestamp\", \"iso\", null),\n            new DimensionsSpec(Lists.newArrayList(\n                    new StringDimensionSchema(\"event\"),\n                    new StringDimensionSchema(\"id\"),\n                    new StringDimensionSchema(\"someOtherId\"),\n                    new StringDimensionSchema(\"isValid\")\n            ), null, null),\n            null,\n            null,\n            null\n    );\n\n    protoFilePath = \"ProtoFile\";\n    protoInputs = getProtoInputs(protoFilePath);\n    nestedParser = new ProtobufInputRowParser(nestedParseSpec, \"prototest.desc\", \"ProtoTestEvent\");\n    flatParser = new ProtobufInputRowParser(flatParseSpec, \"prototest.desc\", \"ProtoTestEvent\");\n  }\n","date":"2020-06-25 09:01:31","endLine":117,"groupId":"16479","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b4/08076806cff150f604edbfdd406eb6b55e4791.src","preCode":"  public void setup()\n  {\n    nestedParseSpec = new JSONParseSpec(\n                new TimestampSpec(\"timestamp\", \"iso\", null),\n                new DimensionsSpec(Lists.newArrayList(\n                        new StringDimensionSchema(\"event\"),\n                        new StringDimensionSchema(\"id\"),\n                        new StringDimensionSchema(\"someOtherId\"),\n                        new StringDimensionSchema(\"isValid\")\n                ), null, null),\n                new JSONPathSpec(\n                        true,\n                        Lists.newArrayList(\n                                new JSONPathFieldSpec(JSONPathFieldType.ROOT, \"eventType\", \"eventType\"),\n                                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"foobar\", \"$.foo.bar\"),\n                                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"bar0\", \"$.bar[0].bar\")\n                        )\n                ),\n                null,\n                null\n    );\n\n    flatParseSpec = new JSONParseSpec(\n            new TimestampSpec(\"timestamp\", \"iso\", null),\n            new DimensionsSpec(Lists.newArrayList(\n                    new StringDimensionSchema(\"event\"),\n                    new StringDimensionSchema(\"id\"),\n                    new StringDimensionSchema(\"someOtherId\"),\n                    new StringDimensionSchema(\"isValid\")\n            ), null, null),\n            null,\n            null,\n            null\n    );\n\n    protoFilePath = \"ProtoFile\";\n    protoInputs = getProtoInputs(protoFilePath);\n    nestedParser = new ProtobufInputRowParser(nestedParseSpec, \"prototest.desc\", \"ProtoTestEvent\");\n    flatParser = new ProtobufInputRowParser(flatParseSpec, \"prototest.desc\", \"ProtoTestEvent\");\n  }\n","realPath":"benchmarks/src/test/java/org/apache/druid/benchmark/ProtobufParserBenchmark.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"},{"authorDate":"2020-06-25 09:01:31","commitOrder":3,"curCode":"  public void setUp()\n  {\n    parseSpec = new JSONParseSpec(\n        new TimestampSpec(\"timestamp\", \"iso\", null),\n        new DimensionsSpec(Lists.newArrayList(\n            new StringDimensionSchema(\"event\"),\n            new StringDimensionSchema(\"id\"),\n            new StringDimensionSchema(\"someOtherId\"),\n            new StringDimensionSchema(\"isValid\")\n        ), null, null),\n        new JSONPathSpec(\n            true,\n            Lists.newArrayList(\n                new JSONPathFieldSpec(JSONPathFieldType.ROOT, \"eventType\", \"eventType\"),\n                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"foobar\", \"$.foo.bar\"),\n                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"bar0\", \"$.bar[0].bar\")\n            )\n        ),\n        null,\n        null\n    );\n\n    flatParseSpec = new JSONParseSpec(\n            new TimestampSpec(\"timestamp\", \"iso\", null),\n            new DimensionsSpec(Lists.newArrayList(\n                    new StringDimensionSchema(\"event\"),\n                    new StringDimensionSchema(\"id\"),\n                    new StringDimensionSchema(\"someOtherId\"),\n                    new StringDimensionSchema(\"isValid\")\n            ), null, null),\n\n            null,\n            null,\n            null\n    );\n  }\n","date":"2020-06-25 09:01:31","endLine":93,"groupId":"16479","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/31/71cc577d5fd74d1be9062de0ea91a3a0e04098.src","preCode":"  public void setUp()\n  {\n    parseSpec = new JSONParseSpec(\n        new TimestampSpec(\"timestamp\", \"iso\", null),\n        new DimensionsSpec(Lists.newArrayList(\n            new StringDimensionSchema(\"event\"),\n            new StringDimensionSchema(\"id\"),\n            new StringDimensionSchema(\"someOtherId\"),\n            new StringDimensionSchema(\"isValid\")\n        ), null, null),\n        new JSONPathSpec(\n            true,\n            Lists.newArrayList(\n                new JSONPathFieldSpec(JSONPathFieldType.ROOT, \"eventType\", \"eventType\"),\n                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"foobar\", \"$.foo.bar\"),\n                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"bar0\", \"$.bar[0].bar\")\n            )\n        ),\n        null,\n        null\n    );\n\n    flatParseSpec = new JSONParseSpec(\n            new TimestampSpec(\"timestamp\", \"iso\", null),\n            new DimensionsSpec(Lists.newArrayList(\n                    new StringDimensionSchema(\"event\"),\n                    new StringDimensionSchema(\"id\"),\n                    new StringDimensionSchema(\"someOtherId\"),\n                    new StringDimensionSchema(\"isValid\")\n            ), null, null),\n\n            null,\n            null,\n            null\n    );\n  }\n","realPath":"extensions-core/protobuf-extensions/src/test/java/org/apache/druid/data/input/protobuf/ProtobufInputRowParserTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"MB"}],"commitId":"1596b3eacdb1ec127a9b1f4aa99ee8b8dd7a8b76","commitMessage":"@@@Optimize protobuf parsing for flatten data (#9999)\n\n* optimize for protobuf parsing\n\n* fix import error and maven dependency\n\n* add unit test in protobufInputrowParserTest for flatten data\n\n* solve code duplication (remove the log and main())\n\n* rename 'flatten' to 'flat' to make it clearer\n\nCo-authored-by: xionghuilin <xionghuilin@bytedance.com>","date":"2020-06-25 09:01:31","modifiedFileCount":"2","status":"M","submitter":"xhl0726"},{"authorTime":"2021-03-10 07:15:51","codes":[{"authorDate":"2021-03-10 07:15:51","commitOrder":4,"curCode":"  public void setup()\n  {\n    nestedParseSpec = new JSONParseSpec(\n                new TimestampSpec(\"timestamp\", \"iso\", null),\n                new DimensionsSpec(Lists.newArrayList(\n                        new StringDimensionSchema(\"event\"),\n                        new StringDimensionSchema(\"id\"),\n                        new StringDimensionSchema(\"someOtherId\"),\n                        new StringDimensionSchema(\"isValid\")\n                ), null, null),\n                new JSONPathSpec(\n                        true,\n                        Lists.newArrayList(\n                                new JSONPathFieldSpec(JSONPathFieldType.ROOT, \"eventType\", \"eventType\"),\n                                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"foobar\", \"$.foo.bar\"),\n                                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"bar0\", \"$.bar[0].bar\")\n                        )\n                ),\n                null,\n                null\n    );\n\n    flatParseSpec = new JSONParseSpec(\n            new TimestampSpec(\"timestamp\", \"iso\", null),\n            new DimensionsSpec(Lists.newArrayList(\n                    new StringDimensionSchema(\"event\"),\n                    new StringDimensionSchema(\"id\"),\n                    new StringDimensionSchema(\"someOtherId\"),\n                    new StringDimensionSchema(\"isValid\")\n            ), null, null),\n            null,\n            null,\n            null\n    );\n    decoder = new FileBasedProtobufBytesDecoder(\"prototest.desc\", \"ProtoTestEvent\");\n\n    protoFilePath = \"ProtoFile\";\n    protoInputs = getProtoInputs(protoFilePath);\n    nestedParser = new ProtobufInputRowParser(nestedParseSpec, decoder, null, null);\n    flatParser = new ProtobufInputRowParser(flatParseSpec, decoder, null, null);\n  }\n","date":"2021-03-10 07:15:51","endLine":120,"groupId":"16479","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/98/ff204ae414e102c1e7af050365307040c18bb8.src","preCode":"  public void setup()\n  {\n    nestedParseSpec = new JSONParseSpec(\n                new TimestampSpec(\"timestamp\", \"iso\", null),\n                new DimensionsSpec(Lists.newArrayList(\n                        new StringDimensionSchema(\"event\"),\n                        new StringDimensionSchema(\"id\"),\n                        new StringDimensionSchema(\"someOtherId\"),\n                        new StringDimensionSchema(\"isValid\")\n                ), null, null),\n                new JSONPathSpec(\n                        true,\n                        Lists.newArrayList(\n                                new JSONPathFieldSpec(JSONPathFieldType.ROOT, \"eventType\", \"eventType\"),\n                                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"foobar\", \"$.foo.bar\"),\n                                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"bar0\", \"$.bar[0].bar\")\n                        )\n                ),\n                null,\n                null\n    );\n\n    flatParseSpec = new JSONParseSpec(\n            new TimestampSpec(\"timestamp\", \"iso\", null),\n            new DimensionsSpec(Lists.newArrayList(\n                    new StringDimensionSchema(\"event\"),\n                    new StringDimensionSchema(\"id\"),\n                    new StringDimensionSchema(\"someOtherId\"),\n                    new StringDimensionSchema(\"isValid\")\n            ), null, null),\n            null,\n            null,\n            null\n    );\n\n    protoFilePath = \"ProtoFile\";\n    protoInputs = getProtoInputs(protoFilePath);\n    nestedParser = new ProtobufInputRowParser(nestedParseSpec, \"prototest.desc\", \"ProtoTestEvent\");\n    flatParser = new ProtobufInputRowParser(flatParseSpec, \"prototest.desc\", \"ProtoTestEvent\");\n  }\n","realPath":"benchmarks/src/test/java/org/apache/druid/benchmark/ProtobufParserBenchmark.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2021-03-10 07:15:51","commitOrder":4,"curCode":"  public void setUp()\n  {\n    parseSpec = new JSONParseSpec(\n        new TimestampSpec(\"timestamp\", \"iso\", null),\n        new DimensionsSpec(Lists.newArrayList(\n            new StringDimensionSchema(\"event\"),\n            new StringDimensionSchema(\"id\"),\n            new StringDimensionSchema(\"someOtherId\"),\n            new StringDimensionSchema(\"isValid\")\n        ), null, null),\n        new JSONPathSpec(\n            true,\n            Lists.newArrayList(\n                new JSONPathFieldSpec(JSONPathFieldType.ROOT, \"eventType\", \"eventType\"),\n                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"foobar\", \"$.foo.bar\"),\n                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"bar0\", \"$.bar[0].bar\")\n            )\n        ),\n        null,\n        null\n    );\n\n    flatParseSpec = new JSONParseSpec(\n            new TimestampSpec(\"timestamp\", \"iso\", null),\n            new DimensionsSpec(Lists.newArrayList(\n                    new StringDimensionSchema(\"event\"),\n                    new StringDimensionSchema(\"id\"),\n                    new StringDimensionSchema(\"someOtherId\"),\n                    new StringDimensionSchema(\"isValid\")\n            ), null, null),\n\n            null,\n            null,\n            null\n    );\n    decoder = new FileBasedProtobufBytesDecoder(\"prototest.desc\", \"ProtoTestEvent\");\n  }\n","date":"2021-03-10 07:15:51","endLine":94,"groupId":"16479","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/03/d4f874c7d2f0b678b8a698f9f13f6e4e0a1dda.src","preCode":"  public void setUp()\n  {\n    parseSpec = new JSONParseSpec(\n        new TimestampSpec(\"timestamp\", \"iso\", null),\n        new DimensionsSpec(Lists.newArrayList(\n            new StringDimensionSchema(\"event\"),\n            new StringDimensionSchema(\"id\"),\n            new StringDimensionSchema(\"someOtherId\"),\n            new StringDimensionSchema(\"isValid\")\n        ), null, null),\n        new JSONPathSpec(\n            true,\n            Lists.newArrayList(\n                new JSONPathFieldSpec(JSONPathFieldType.ROOT, \"eventType\", \"eventType\"),\n                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"foobar\", \"$.foo.bar\"),\n                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"bar0\", \"$.bar[0].bar\")\n            )\n        ),\n        null,\n        null\n    );\n\n    flatParseSpec = new JSONParseSpec(\n            new TimestampSpec(\"timestamp\", \"iso\", null),\n            new DimensionsSpec(Lists.newArrayList(\n                    new StringDimensionSchema(\"event\"),\n                    new StringDimensionSchema(\"id\"),\n                    new StringDimensionSchema(\"someOtherId\"),\n                    new StringDimensionSchema(\"isValid\")\n            ), null, null),\n\n            null,\n            null,\n            null\n    );\n  }\n","realPath":"extensions-core/protobuf-extensions/src/test/java/org/apache/druid/data/input/protobuf/ProtobufInputRowParserTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"36e86a2880de52e8270ffa26904f179cdd243b75","commitMessage":"@@@Add protobuf schema registry (#10839)\n\n* dd_protobuf_schema_registry\n\n* change licese\n\n* delete some annotation\n\n* nodify tests\n\n* delete extra exception\n\n* add licenses\n\n* add descriptor and protoMessageType in ProtobufInputRowParser for adopt to old version\n\n* seperate kafka-protobuf-provider\n\n* modify protobuf.md\n\n* refine protobuf.md\n\n* add config and header\n\n* bug fixed\n\nCo-authored-by: yuanyi <yuanyi@freewheel.tv>","date":"2021-03-10 07:15:51","modifiedFileCount":"3","status":"M","submitter":"Yi Yuan"},{"authorTime":"2021-06-07 17:49:39","codes":[{"authorDate":"2021-03-10 07:15:51","commitOrder":5,"curCode":"  public void setup()\n  {\n    nestedParseSpec = new JSONParseSpec(\n                new TimestampSpec(\"timestamp\", \"iso\", null),\n                new DimensionsSpec(Lists.newArrayList(\n                        new StringDimensionSchema(\"event\"),\n                        new StringDimensionSchema(\"id\"),\n                        new StringDimensionSchema(\"someOtherId\"),\n                        new StringDimensionSchema(\"isValid\")\n                ), null, null),\n                new JSONPathSpec(\n                        true,\n                        Lists.newArrayList(\n                                new JSONPathFieldSpec(JSONPathFieldType.ROOT, \"eventType\", \"eventType\"),\n                                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"foobar\", \"$.foo.bar\"),\n                                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"bar0\", \"$.bar[0].bar\")\n                        )\n                ),\n                null,\n                null\n    );\n\n    flatParseSpec = new JSONParseSpec(\n            new TimestampSpec(\"timestamp\", \"iso\", null),\n            new DimensionsSpec(Lists.newArrayList(\n                    new StringDimensionSchema(\"event\"),\n                    new StringDimensionSchema(\"id\"),\n                    new StringDimensionSchema(\"someOtherId\"),\n                    new StringDimensionSchema(\"isValid\")\n            ), null, null),\n            null,\n            null,\n            null\n    );\n    decoder = new FileBasedProtobufBytesDecoder(\"prototest.desc\", \"ProtoTestEvent\");\n\n    protoFilePath = \"ProtoFile\";\n    protoInputs = getProtoInputs(protoFilePath);\n    nestedParser = new ProtobufInputRowParser(nestedParseSpec, decoder, null, null);\n    flatParser = new ProtobufInputRowParser(flatParseSpec, decoder, null, null);\n  }\n","date":"2021-03-10 07:15:51","endLine":120,"groupId":"101485","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/98/ff204ae414e102c1e7af050365307040c18bb8.src","preCode":"  public void setup()\n  {\n    nestedParseSpec = new JSONParseSpec(\n                new TimestampSpec(\"timestamp\", \"iso\", null),\n                new DimensionsSpec(Lists.newArrayList(\n                        new StringDimensionSchema(\"event\"),\n                        new StringDimensionSchema(\"id\"),\n                        new StringDimensionSchema(\"someOtherId\"),\n                        new StringDimensionSchema(\"isValid\")\n                ), null, null),\n                new JSONPathSpec(\n                        true,\n                        Lists.newArrayList(\n                                new JSONPathFieldSpec(JSONPathFieldType.ROOT, \"eventType\", \"eventType\"),\n                                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"foobar\", \"$.foo.bar\"),\n                                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"bar0\", \"$.bar[0].bar\")\n                        )\n                ),\n                null,\n                null\n    );\n\n    flatParseSpec = new JSONParseSpec(\n            new TimestampSpec(\"timestamp\", \"iso\", null),\n            new DimensionsSpec(Lists.newArrayList(\n                    new StringDimensionSchema(\"event\"),\n                    new StringDimensionSchema(\"id\"),\n                    new StringDimensionSchema(\"someOtherId\"),\n                    new StringDimensionSchema(\"isValid\")\n            ), null, null),\n            null,\n            null,\n            null\n    );\n    decoder = new FileBasedProtobufBytesDecoder(\"prototest.desc\", \"ProtoTestEvent\");\n\n    protoFilePath = \"ProtoFile\";\n    protoInputs = getProtoInputs(protoFilePath);\n    nestedParser = new ProtobufInputRowParser(nestedParseSpec, decoder, null, null);\n    flatParser = new ProtobufInputRowParser(flatParseSpec, decoder, null, null);\n  }\n","realPath":"benchmarks/src/test/java/org/apache/druid/benchmark/ProtobufParserBenchmark.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"N"},{"authorDate":"2021-06-07 17:49:39","commitOrder":5,"curCode":"  public void setUp()\n  {\n    parseSpec = new JSONParseSpec(\n        new TimestampSpec(\"timestamp\", \"iso\", null),\n        new DimensionsSpec(Lists.newArrayList(\n            new StringDimensionSchema(\"event\"),\n            new StringDimensionSchema(\"id\"),\n            new StringDimensionSchema(\"someOtherId\"),\n            new StringDimensionSchema(\"isValid\")\n        ), null, null),\n        new JSONPathSpec(\n            true,\n            Lists.newArrayList(\n                new JSONPathFieldSpec(JSONPathFieldType.ROOT, \"eventType\", \"eventType\"),\n                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"foobar\", \"$.foo.bar\"),\n                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"bar0\", \"$.bar[0].bar\")\n            )\n        ),\n        null,\n        null\n    );\n\n    flatParseSpec = new JSONParseSpec(\n            new TimestampSpec(\"timestamp\", \"iso\", null),\n            new DimensionsSpec(Lists.newArrayList(\n                    new StringDimensionSchema(\"event\"),\n                    new StringDimensionSchema(\"id\"),\n                    new StringDimensionSchema(\"someOtherId\"),\n                    new StringDimensionSchema(\"isValid\")\n            ), null, null),\n\n            null,\n            null,\n            null\n    );\n\n    flatParseSpecWithComplexTimestamp = new JSONParseSpec(\n        new TimestampSpec(\"otherTimestamp\", \"iso\", null),\n        new DimensionsSpec(Lists.newArrayList(\n            new StringDimensionSchema(\"event\"),\n            new StringDimensionSchema(\"id\"),\n            new StringDimensionSchema(\"someOtherId\"),\n            new StringDimensionSchema(\"isValid\")\n        ), null, null),\n\n        null,\n        null,\n        null\n    );\n    decoder = new FileBasedProtobufBytesDecoder(\"prototest.desc\", \"ProtoTestEvent\");\n  }\n","date":"2021-06-07 17:49:39","endLine":111,"groupId":"101485","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/7d/0b1cd39770aa86a1dfcf31bc92a13c0eaa400d.src","preCode":"  public void setUp()\n  {\n    parseSpec = new JSONParseSpec(\n        new TimestampSpec(\"timestamp\", \"iso\", null),\n        new DimensionsSpec(Lists.newArrayList(\n            new StringDimensionSchema(\"event\"),\n            new StringDimensionSchema(\"id\"),\n            new StringDimensionSchema(\"someOtherId\"),\n            new StringDimensionSchema(\"isValid\")\n        ), null, null),\n        new JSONPathSpec(\n            true,\n            Lists.newArrayList(\n                new JSONPathFieldSpec(JSONPathFieldType.ROOT, \"eventType\", \"eventType\"),\n                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"foobar\", \"$.foo.bar\"),\n                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"bar0\", \"$.bar[0].bar\")\n            )\n        ),\n        null,\n        null\n    );\n\n    flatParseSpec = new JSONParseSpec(\n            new TimestampSpec(\"timestamp\", \"iso\", null),\n            new DimensionsSpec(Lists.newArrayList(\n                    new StringDimensionSchema(\"event\"),\n                    new StringDimensionSchema(\"id\"),\n                    new StringDimensionSchema(\"someOtherId\"),\n                    new StringDimensionSchema(\"isValid\")\n            ), null, null),\n\n            null,\n            null,\n            null\n    );\n    decoder = new FileBasedProtobufBytesDecoder(\"prototest.desc\", \"ProtoTestEvent\");\n  }\n","realPath":"extensions-core/protobuf-extensions/src/test/java/org/apache/druid/data/input/protobuf/ProtobufInputRowParserTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"44d629319d4fa274276f11951b0141c420e073c4","commitMessage":"@@@handle timestamps of complex types when parsing protobuf messages (#11293)\n\n* handle timestamps correctly when parsing protobuf\n\n* Add timestamp handling to ProtobufReader\n\n* disable checkstyle for generated sourcecode\n\n* Fix test\n\n* try this\n\n* refactor tests","date":"2021-06-07 17:49:39","modifiedFileCount":"6","status":"M","submitter":"Abhishek Agarwal"}]
