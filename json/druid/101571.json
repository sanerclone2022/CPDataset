[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testInformationSchemaColumnsOnTable() throws Exception\n  {\n    testQuery(\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'foo'\",\n        ImmutableList.of(),\n        ImmutableList.of(\n            new Object[]{\"__time\", \"TIMESTAMP\", \"NO\"},\n            new Object[]{\"cnt\", \"BIGINT\", \"NO\"},\n            new Object[]{\"dim1\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim2\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"m1\", \"FLOAT\", \"NO\"},\n            new Object[]{\"m2\", \"DOUBLE\", \"NO\"},\n            new Object[]{\"unique_dim1\", \"OTHER\", \"YES\"}\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":522,"groupId":"17120","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInformationSchemaColumnsOnTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d7/379ded006b366f1ea8ef06ae925a08ff61040e.src","preCode":"  public void testInformationSchemaColumnsOnTable() throws Exception\n  {\n    testQuery(\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'foo'\",\n        ImmutableList.of(),\n        ImmutableList.of(\n            new Object[]{\"__time\", \"TIMESTAMP\", \"NO\"},\n            new Object[]{\"cnt\", \"BIGINT\", \"NO\"},\n            new Object[]{\"dim1\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim2\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"m1\", \"FLOAT\", \"NO\"},\n            new Object[]{\"m2\", \"DOUBLE\", \"NO\"},\n            new Object[]{\"unique_dim1\", \"OTHER\", \"YES\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":505,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testInformationSchemaColumnsOnForbiddenTable() throws Exception\n  {\n    testQuery(\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'forbiddenDatasource'\",\n        ImmutableList.of(),\n        ImmutableList.of()\n    );\n\n    testQuery(\n        PLANNER_CONFIG_DEFAULT,\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'forbiddenDatasource'\",\n        CalciteTests.SUPER_USER_AUTH_RESULT,\n        ImmutableList.of(),\n        ImmutableList.of(\n            new Object[]{\"__time\", \"TIMESTAMP\", \"NO\"},\n            new Object[]{\"cnt\", \"BIGINT\", \"NO\"},\n            new Object[]{\"dim1\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim2\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"m1\", \"FLOAT\", \"NO\"},\n            new Object[]{\"m2\", \"DOUBLE\", \"NO\"},\n            new Object[]{\"unique_dim1\", \"OTHER\", \"YES\"}\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":552,"groupId":"17120","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInformationSchemaColumnsOnForbiddenTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d7/379ded006b366f1ea8ef06ae925a08ff61040e.src","preCode":"  public void testInformationSchemaColumnsOnForbiddenTable() throws Exception\n  {\n    testQuery(\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'forbiddenDatasource'\",\n        ImmutableList.of(),\n        ImmutableList.of()\n    );\n\n    testQuery(\n        PLANNER_CONFIG_DEFAULT,\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'forbiddenDatasource'\",\n        CalciteTests.SUPER_USER_AUTH_RESULT,\n        ImmutableList.of(),\n        ImmutableList.of(\n            new Object[]{\"__time\", \"TIMESTAMP\", \"NO\"},\n            new Object[]{\"cnt\", \"BIGINT\", \"NO\"},\n            new Object[]{\"dim1\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim2\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"m1\", \"FLOAT\", \"NO\"},\n            new Object[]{\"m2\", \"DOUBLE\", \"NO\"},\n            new Object[]{\"unique_dim1\", \"OTHER\", \"YES\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":525,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-10-16 05:01:21","commitOrder":2,"curCode":"  public void testInformationSchemaColumnsOnTable() throws Exception\n  {\n    testQuery(\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'foo'\",\n        ImmutableList.of(),\n        ImmutableList.of(\n            new Object[]{\"__time\", \"TIMESTAMP\", \"NO\"},\n            new Object[]{\"cnt\", \"BIGINT\", \"NO\"},\n            new Object[]{\"dim1\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim2\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim3\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"m1\", \"FLOAT\", \"NO\"},\n            new Object[]{\"m2\", \"DOUBLE\", \"NO\"},\n            new Object[]{\"unique_dim1\", \"OTHER\", \"YES\"}\n        )\n    );\n  }\n","date":"2018-10-16 05:01:21","endLine":546,"groupId":"9261","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInformationSchemaColumnsOnTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/43/16ec0560839cf10739fc335fdc3753a365af3a.src","preCode":"  public void testInformationSchemaColumnsOnTable() throws Exception\n  {\n    testQuery(\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'foo'\",\n        ImmutableList.of(),\n        ImmutableList.of(\n            new Object[]{\"__time\", \"TIMESTAMP\", \"NO\"},\n            new Object[]{\"cnt\", \"BIGINT\", \"NO\"},\n            new Object[]{\"dim1\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim2\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"m1\", \"FLOAT\", \"NO\"},\n            new Object[]{\"m2\", \"DOUBLE\", \"NO\"},\n            new Object[]{\"unique_dim1\", \"OTHER\", \"YES\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":528,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void testInformationSchemaColumnsOnForbiddenTable() throws Exception\n  {\n    testQuery(\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'forbiddenDatasource'\",\n        ImmutableList.of(),\n        ImmutableList.of()\n    );\n\n    testQuery(\n        PLANNER_CONFIG_DEFAULT,\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'forbiddenDatasource'\",\n        CalciteTests.SUPER_USER_AUTH_RESULT,\n        ImmutableList.of(),\n        ImmutableList.of(\n            new Object[]{\"__time\", \"TIMESTAMP\", \"NO\"},\n            new Object[]{\"cnt\", \"BIGINT\", \"NO\"},\n            new Object[]{\"dim1\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim2\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"m1\", \"FLOAT\", \"NO\"},\n            new Object[]{\"m2\", \"DOUBLE\", \"NO\"},\n            new Object[]{\"unique_dim1\", \"OTHER\", \"YES\"}\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":552,"groupId":"17120","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInformationSchemaColumnsOnForbiddenTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d7/379ded006b366f1ea8ef06ae925a08ff61040e.src","preCode":"  public void testInformationSchemaColumnsOnForbiddenTable() throws Exception\n  {\n    testQuery(\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'forbiddenDatasource'\",\n        ImmutableList.of(),\n        ImmutableList.of()\n    );\n\n    testQuery(\n        PLANNER_CONFIG_DEFAULT,\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'forbiddenDatasource'\",\n        CalciteTests.SUPER_USER_AUTH_RESULT,\n        ImmutableList.of(),\n        ImmutableList.of(\n            new Object[]{\"__time\", \"TIMESTAMP\", \"NO\"},\n            new Object[]{\"cnt\", \"BIGINT\", \"NO\"},\n            new Object[]{\"dim1\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim2\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"m1\", \"FLOAT\", \"NO\"},\n            new Object[]{\"m2\", \"DOUBLE\", \"NO\"},\n            new Object[]{\"unique_dim1\", \"OTHER\", \"YES\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":525,"status":"N"}],"commitId":"f537c0069a724c55161168ed8c7fc1e1d4b52293","commitMessage":"@@@SQL: Support for selecting multi-value dimensions. (#6462)\n\n* SQL: Support for selecting multi-value dimensions.\n\nFixes #4637. Doesn't completely address everything mentioned in #4638. \nbut at least fixes one issue on the way there.\n\n* Fix null cases in tests.\n","date":"2018-10-16 05:01:21","modifiedFileCount":"6","status":"M","submitter":"Gian Merlino"},{"authorTime":"2019-12-19 05:30:34","codes":[{"authorDate":"2019-12-19 05:30:34","commitOrder":3,"curCode":"  public void testInformationSchemaColumnsOnTable() throws Exception\n  {\n    testQuery(\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'foo'\",\n        ImmutableList.of(),\n        ImmutableList.of(\n            new Object[]{\"__time\", \"TIMESTAMP\", \"NO\"},\n            new Object[]{\"cnt\", \"BIGINT\", useDefault ? \"NO\" : \"YES\"},\n            new Object[]{\"dim1\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim2\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim3\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"m1\", \"FLOAT\", useDefault ? \"NO\" : \"YES\"},\n            new Object[]{\"m2\", \"DOUBLE\", useDefault ? \"NO\" : \"YES\"},\n            new Object[]{\"unique_dim1\", \"OTHER\", \"YES\"}\n        )\n    );\n  }\n","date":"2019-12-19 05:30:34","endLine":396,"groupId":"101571","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInformationSchemaColumnsOnTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/88/b3d588f71d2f8fafa0318109f1212cc181123a.src","preCode":"  public void testInformationSchemaColumnsOnTable() throws Exception\n  {\n    testQuery(\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'foo'\",\n        ImmutableList.of(),\n        ImmutableList.of(\n            new Object[]{\"__time\", \"TIMESTAMP\", \"NO\"},\n            new Object[]{\"cnt\", \"BIGINT\", \"NO\"},\n            new Object[]{\"dim1\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim2\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim3\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"m1\", \"FLOAT\", \"NO\"},\n            new Object[]{\"m2\", \"DOUBLE\", \"NO\"},\n            new Object[]{\"unique_dim1\", \"OTHER\", \"YES\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"M"},{"authorDate":"2019-12-19 05:30:34","commitOrder":3,"curCode":"  public void testInformationSchemaColumnsOnForbiddenTable() throws Exception\n  {\n    testQuery(\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'forbiddenDatasource'\",\n        ImmutableList.of(),\n        ImmutableList.of()\n    );\n\n    testQuery(\n        PLANNER_CONFIG_DEFAULT,\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'forbiddenDatasource'\",\n        CalciteTests.SUPER_USER_AUTH_RESULT,\n        ImmutableList.of(),\n        ImmutableList.of(\n            new Object[]{\"__time\", \"TIMESTAMP\", \"NO\"},\n            new Object[]{\"cnt\", \"BIGINT\", useDefault ? \"NO\" : \"YES\"},\n            new Object[]{\"dim1\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim2\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"m1\", \"FLOAT\", useDefault ? \"NO\" : \"YES\"},\n            new Object[]{\"m2\", \"DOUBLE\", useDefault ? \"NO\" : \"YES\"},\n            new Object[]{\"unique_dim1\", \"OTHER\", \"YES\"}\n        )\n    );\n  }\n","date":"2019-12-19 05:30:34","endLine":426,"groupId":"101571","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testInformationSchemaColumnsOnForbiddenTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/88/b3d588f71d2f8fafa0318109f1212cc181123a.src","preCode":"  public void testInformationSchemaColumnsOnForbiddenTable() throws Exception\n  {\n    testQuery(\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'forbiddenDatasource'\",\n        ImmutableList.of(),\n        ImmutableList.of()\n    );\n\n    testQuery(\n        PLANNER_CONFIG_DEFAULT,\n        \"SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE\\n\"\n        + \"FROM INFORMATION_SCHEMA.COLUMNS\\n\"\n        + \"WHERE TABLE_SCHEMA = 'druid' AND TABLE_NAME = 'forbiddenDatasource'\",\n        CalciteTests.SUPER_USER_AUTH_RESULT,\n        ImmutableList.of(),\n        ImmutableList.of(\n            new Object[]{\"__time\", \"TIMESTAMP\", \"NO\"},\n            new Object[]{\"cnt\", \"BIGINT\", \"NO\"},\n            new Object[]{\"dim1\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"dim2\", \"VARCHAR\", \"YES\"},\n            new Object[]{\"m1\", \"FLOAT\", \"NO\"},\n            new Object[]{\"m2\", \"DOUBLE\", \"NO\"},\n            new Object[]{\"unique_dim1\", \"OTHER\", \"YES\"}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":399,"status":"M"}],"commitId":"84ef8b819e961cf9e2684197c534875e82bf3461","commitMessage":"@@@fix druid-sql issue with filtering numeric columns by null values (#9061)\n\n* fix druid-sql issue with filtering numeric columns by null values\n\n* fix tests\n\n* fix tests for reals\n","date":"2019-12-19 05:30:34","modifiedFileCount":"3","status":"M","submitter":"Clint Wylie"}]
