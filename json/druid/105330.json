[{"authorTime":"2021-04-13 13:03:13","codes":[{"authorDate":"2021-04-13 12:53:41","commitOrder":2,"curCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final AvroStreamInputFormat that = (AvroStreamInputFormat) o;\n    return Objects.equals(getFlattenSpec(), that.getFlattenSpec()) &&\n        Objects.equals(avroBytesDecoder, that.avroBytesDecoder) &&\n        Objects.equals(binaryAsString, that.binaryAsString);\n  }\n","date":"2021-04-13 12:53:41","endLine":96,"groupId":"20808","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3b/59b368f0bf70385add298ed3ef05319e9752b8.src","preCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final AvroStreamInputFormat that = (AvroStreamInputFormat) o;\n    return Objects.equals(getFlattenSpec(), that.getFlattenSpec()) &&\n        Objects.equals(avroBytesDecoder, that.avroBytesDecoder) &&\n        Objects.equals(binaryAsString, that.binaryAsString);\n  }\n","realPath":"extensions-core/avro-extensions/src/main/java/org/apache/druid/data/input/avro/AvroStreamInputFormat.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"NB"},{"authorDate":"2021-04-13 13:03:13","commitOrder":2,"curCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final ProtobufInputFormat that = (ProtobufInputFormat) o;\n    return Objects.equals(getFlattenSpec(), that.getFlattenSpec()) &&\n        Objects.equals(protobufBytesDecoder, that.protobufBytesDecoder);\n  }\n","date":"2021-04-13 13:03:13","endLine":84,"groupId":"20808","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/36/ae06875e3df6bb8ab4771bdd0c4714cf387629.src","preCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final ProtobufInputFormat that = (ProtobufInputFormat) o;\n    return Objects.equals(getFlattenSpec(), that.getFlattenSpec()) &&\n        Objects.equals(protobufBytesDecoder, that.protobufBytesDecoder);\n  }\n","realPath":"extensions-core/protobuf-extensions/src/main/java/org/apache/druid/data/input/protobuf/ProtobufInputFormat.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"}],"commitId":"0e0c1a1aaf468d2e082fffa9cab8a98013f2b536","commitMessage":"@@@add protobuf inputformat (#11018)\n\n* add protobuf inputformat\n\n* repair pom\n\n* alter intermediateRow to type of Dynamicmessage\n\n* add document\n\n* refine test\n\n* fix document\n\n* add protoBytesDecoder\n\n* refine document and add ser test\n\n* add hash\n\n* add schema registry ser test\n\nCo-authored-by: yuanyi <yuanyi@freewheel.tv>","date":"2021-04-13 13:03:13","modifiedFileCount":"3","status":"M","submitter":"Yi Yuan"},{"authorTime":"2021-04-13 13:03:13","codes":[{"authorDate":"2021-07-20 00:32:05","commitOrder":3,"curCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final AvroStreamInputFormat that = (AvroStreamInputFormat) o;\n    return Objects.equals(getFlattenSpec(), that.getFlattenSpec()) &&\n           Objects.equals(avroBytesDecoder, that.avroBytesDecoder) &&\n           Objects.equals(binaryAsString, that.binaryAsString) &&\n           Objects.equals(extractUnionsByType, that.extractUnionsByType);\n  }\n","date":"2021-07-20 00:32:05","endLine":107,"groupId":"105330","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bf/0cecfa3213a2b9c40d86b788fedb7090df88f1.src","preCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final AvroStreamInputFormat that = (AvroStreamInputFormat) o;\n    return Objects.equals(getFlattenSpec(), that.getFlattenSpec()) &&\n        Objects.equals(avroBytesDecoder, that.avroBytesDecoder) &&\n        Objects.equals(binaryAsString, that.binaryAsString);\n  }\n","realPath":"extensions-core/avro-extensions/src/main/java/org/apache/druid/data/input/avro/AvroStreamInputFormat.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2021-04-13 13:03:13","commitOrder":3,"curCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final ProtobufInputFormat that = (ProtobufInputFormat) o;\n    return Objects.equals(getFlattenSpec(), that.getFlattenSpec()) &&\n        Objects.equals(protobufBytesDecoder, that.protobufBytesDecoder);\n  }\n","date":"2021-04-13 13:03:13","endLine":84,"groupId":"105330","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/36/ae06875e3df6bb8ab4771bdd0c4714cf387629.src","preCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final ProtobufInputFormat that = (ProtobufInputFormat) o;\n    return Objects.equals(getFlattenSpec(), that.getFlattenSpec()) &&\n        Objects.equals(protobufBytesDecoder, that.protobufBytesDecoder);\n  }\n","realPath":"extensions-core/protobuf-extensions/src/main/java/org/apache/druid/data/input/protobuf/ProtobufInputFormat.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"N"}],"commitId":"2705fe98fa4513c506ac4ffb4c71fc2be51f7738","commitMessage":"@@@Fix avro json serde issues (#11455)\n\n","date":"2021-07-20 00:32:05","modifiedFileCount":"7","status":"M","submitter":"Clint Wylie"}]
