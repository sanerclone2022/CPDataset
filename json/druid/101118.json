[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void createPendingSegmentsTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  dataSource VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  start VARCHAR(255) NOT NULL,\\n\"\n                + \"  %3$send%3$s VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_prev_id VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name_prev_id_sha1 VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  PRIMARY KEY (id),\\n\"\n                + \"  UNIQUE (sequence_name_prev_id_sha1)\\n\"\n                + \")\",\n                tableName, getPayloadType(), getQuoteString()\n            )\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":221,"groupId":"5664","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createPendingSegmentsTable","params":"(finalStringtableName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8c/8528142e590a701aa8ea7c0572564aea52f114.src","preCode":"  public void createPendingSegmentsTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  dataSource VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  start VARCHAR(255) NOT NULL,\\n\"\n                + \"  %3$send%3$s VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_prev_id VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name_prev_id_sha1 VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  PRIMARY KEY (id),\\n\"\n                + \"  UNIQUE (sequence_name_prev_id_sha1)\\n\"\n                + \")\",\n                tableName, getPayloadType(), getQuoteString()\n            )\n        )\n    );\n  }\n","realPath":"server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void createEntryTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  datasource VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  status_payload %2$s NOT NULL,\\n\"\n                + \"  active BOOLEAN NOT NULL DEFAULT FALSE,\\n\"\n                + \"  PRIMARY KEY (id)\\n\"\n                + \")\",\n                tableName, getPayloadType()\n            ),\n            StringUtils.format(\"CREATE INDEX idx_%1$s_active_created_date ON %1$s(active, created_date)\", tableName)\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":325,"groupId":"6467","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createEntryTable","params":"(finalStringtableName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8c/8528142e590a701aa8ea7c0572564aea52f114.src","preCode":"  public void createEntryTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  datasource VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  status_payload %2$s NOT NULL,\\n\"\n                + \"  active BOOLEAN NOT NULL DEFAULT FALSE,\\n\"\n                + \"  PRIMARY KEY (id)\\n\"\n                + \")\",\n                tableName, getPayloadType()\n            ),\n            StringUtils.format(\"CREATE INDEX idx_%1$s_active_created_date ON %1$s(active, created_date)\", tableName)\n        )\n    );\n  }\n","realPath":"server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-09-20 06:54:13","commitOrder":2,"curCode":"  public void createPendingSegmentsTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  dataSource VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  start VARCHAR(255) NOT NULL,\\n\"\n                + \"  %3$send%3$s VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_prev_id VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name_prev_id_sha1 VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  PRIMARY KEY (id),\\n\"\n                + \"  UNIQUE (sequence_name_prev_id_sha1)\\n\"\n                + \")\",\n                tableName, getPayloadType(), getQuoteString()\n            ),\n            StringUtils.format(\n                \"CREATE INDEX idx_%1$s_datasource_used_end ON %1$s(dataSource, used, %2$send%2$s)\",\n                tableName,\n                getQuoteString()\n            )\n        )\n    );\n  }\n","date":"2018-09-20 06:54:13","endLine":226,"groupId":"5664","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createPendingSegmentsTable","params":"(finalStringtableName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/68/8409e3cf9b7abeca281068d0992d235ff76028.src","preCode":"  public void createPendingSegmentsTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  dataSource VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  start VARCHAR(255) NOT NULL,\\n\"\n                + \"  %3$send%3$s VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_prev_id VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name_prev_id_sha1 VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  PRIMARY KEY (id),\\n\"\n                + \"  UNIQUE (sequence_name_prev_id_sha1)\\n\"\n                + \")\",\n                tableName, getPayloadType(), getQuoteString()\n            )\n        )\n    );\n  }\n","realPath":"server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void createEntryTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  datasource VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  status_payload %2$s NOT NULL,\\n\"\n                + \"  active BOOLEAN NOT NULL DEFAULT FALSE,\\n\"\n                + \"  PRIMARY KEY (id)\\n\"\n                + \")\",\n                tableName, getPayloadType()\n            ),\n            StringUtils.format(\"CREATE INDEX idx_%1$s_active_created_date ON %1$s(active, created_date)\", tableName)\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":325,"groupId":"6467","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createEntryTable","params":"(finalStringtableName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8c/8528142e590a701aa8ea7c0572564aea52f114.src","preCode":"  public void createEntryTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  datasource VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  status_payload %2$s NOT NULL,\\n\"\n                + \"  active BOOLEAN NOT NULL DEFAULT FALSE,\\n\"\n                + \"  PRIMARY KEY (id)\\n\"\n                + \")\",\n                tableName, getPayloadType()\n            ),\n            StringUtils.format(\"CREATE INDEX idx_%1$s_active_created_date ON %1$s(active, created_date)\", tableName)\n        )\n    );\n  }\n","realPath":"server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"N"}],"commitId":"e1c649e90683a5b49648522d4c7e0ff1088f1efd","commitMessage":"@@@Add metadata indexes to help with segment allocation. (#6348)\n\nSegment allocation queries can take a long time (10s of seconds) when\nyou have a lot of segments. Adding these indexes helps greatly.","date":"2018-09-20 06:54:13","modifiedFileCount":"1","status":"M","submitter":"Gian Merlino"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-09-26 11:49:13","commitOrder":3,"curCode":"  public void createPendingSegmentsTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  dataSource VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  start VARCHAR(255) NOT NULL,\\n\"\n                + \"  %3$send%3$s VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_prev_id VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name_prev_id_sha1 VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  PRIMARY KEY (id),\\n\"\n                + \"  UNIQUE (sequence_name_prev_id_sha1)\\n\"\n                + \")\",\n                tableName, getPayloadType(), getQuoteString()\n            ),\n            StringUtils.format(\n                \"CREATE INDEX idx_%1$s_datasource_end ON %1$s(dataSource, %2$send%2$s)\",\n                tableName,\n                getQuoteString()\n            ),\n            StringUtils.format(\n                \"CREATE INDEX idx_%1$s_datasource_sequence ON %1$s(dataSource, sequence_name)\",\n                tableName\n            )\n        )\n    );\n  }\n","date":"2018-09-26 11:49:13","endLine":230,"groupId":"5664","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createPendingSegmentsTable","params":"(finalStringtableName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/86/c4fb44b7c2ff3ece976bc67013e39b93c83ff2.src","preCode":"  public void createPendingSegmentsTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  dataSource VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  start VARCHAR(255) NOT NULL,\\n\"\n                + \"  %3$send%3$s VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_prev_id VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name_prev_id_sha1 VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  PRIMARY KEY (id),\\n\"\n                + \"  UNIQUE (sequence_name_prev_id_sha1)\\n\"\n                + \")\",\n                tableName, getPayloadType(), getQuoteString()\n            ),\n            StringUtils.format(\n                \"CREATE INDEX idx_%1$s_datasource_used_end ON %1$s(dataSource, used, %2$send%2$s)\",\n                tableName,\n                getQuoteString()\n            )\n        )\n    );\n  }\n","realPath":"server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":3,"curCode":"  public void createEntryTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  datasource VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  status_payload %2$s NOT NULL,\\n\"\n                + \"  active BOOLEAN NOT NULL DEFAULT FALSE,\\n\"\n                + \"  PRIMARY KEY (id)\\n\"\n                + \")\",\n                tableName, getPayloadType()\n            ),\n            StringUtils.format(\"CREATE INDEX idx_%1$s_active_created_date ON %1$s(active, created_date)\", tableName)\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":325,"groupId":"6467","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createEntryTable","params":"(finalStringtableName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8c/8528142e590a701aa8ea7c0572564aea52f114.src","preCode":"  public void createEntryTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  datasource VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  status_payload %2$s NOT NULL,\\n\"\n                + \"  active BOOLEAN NOT NULL DEFAULT FALSE,\\n\"\n                + \"  PRIMARY KEY (id)\\n\"\n                + \")\",\n                tableName, getPayloadType()\n            ),\n            StringUtils.format(\"CREATE INDEX idx_%1$s_active_created_date ON %1$s(active, created_date)\", tableName)\n        )\n    );\n  }\n","realPath":"server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"N"}],"commitId":"a92a20e037a7c31b3268b0ee3cf5b4ecd678ec4c","commitMessage":"@@@Fix indexes introduced in #6348. (#6356)\n\nThe indexes introduced in #6348 were on the wrong table. The tests\ndid not catch them due to retries on the create table steps (the\nfirst try created the table but not the bogus indexes; the second\ntry noticed that the table already existed and did nothing). This\npatch doesn't fix the issue with the tests.  since the best way to\ndo that would be to do the table and index creation in a\ntransaction; but.  this is not supported by all of our supported\ndatabase engines.","date":"2018-09-26 11:49:13","modifiedFileCount":"1","status":"M","submitter":"Gian Merlino"},{"authorTime":"2019-10-31 11:48:08","codes":[{"authorDate":"2019-10-31 11:48:08","commitOrder":4,"curCode":"  public void createPendingSegmentsTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  dataSource VARCHAR(255) %4$s NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  start VARCHAR(255) NOT NULL,\\n\"\n                + \"  %3$send%3$s VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_prev_id VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name_prev_id_sha1 VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  PRIMARY KEY (id),\\n\"\n                + \"  UNIQUE (sequence_name_prev_id_sha1)\\n\"\n                + \")\",\n                tableName, getPayloadType(), getQuoteString(), getCollation()\n            ),\n            StringUtils.format(\n                \"CREATE INDEX idx_%1$s_datasource_end ON %1$s(dataSource, %2$send%2$s)\",\n                tableName,\n                getQuoteString()\n            ),\n            StringUtils.format(\n                \"CREATE INDEX idx_%1$s_datasource_sequence ON %1$s(dataSource, sequence_name)\",\n                tableName\n            )\n        )\n    );\n  }\n","date":"2019-10-31 11:48:08","endLine":246,"groupId":"101118","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createPendingSegmentsTable","params":"(finalStringtableName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/71/a1aedf2b7f75c5738d712098ab287dcfb342c5.src","preCode":"  public void createPendingSegmentsTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  dataSource VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  start VARCHAR(255) NOT NULL,\\n\"\n                + \"  %3$send%3$s VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_prev_id VARCHAR(255) NOT NULL,\\n\"\n                + \"  sequence_name_prev_id_sha1 VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  PRIMARY KEY (id),\\n\"\n                + \"  UNIQUE (sequence_name_prev_id_sha1)\\n\"\n                + \")\",\n                tableName, getPayloadType(), getQuoteString()\n            ),\n            StringUtils.format(\n                \"CREATE INDEX idx_%1$s_datasource_end ON %1$s(dataSource, %2$send%2$s)\",\n                tableName,\n                getQuoteString()\n            ),\n            StringUtils.format(\n                \"CREATE INDEX idx_%1$s_datasource_sequence ON %1$s(dataSource, sequence_name)\",\n                tableName\n            )\n        )\n    );\n  }\n","realPath":"server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"M"},{"authorDate":"2019-10-31 11:48:08","commitOrder":4,"curCode":"  public void createEntryTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  datasource VARCHAR(255) %3$s NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  status_payload %2$s NOT NULL,\\n\"\n                + \"  active BOOLEAN NOT NULL DEFAULT FALSE,\\n\"\n                + \"  PRIMARY KEY (id)\\n\"\n                + \")\",\n                tableName, getPayloadType(), getCollation()\n            ),\n            StringUtils.format(\"CREATE INDEX idx_%1$s_active_created_date ON %1$s(active, created_date)\", tableName)\n        )\n    );\n  }\n","date":"2019-10-31 11:48:08","endLine":354,"groupId":"101118","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createEntryTable","params":"(finalStringtableName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/71/a1aedf2b7f75c5738d712098ab287dcfb342c5.src","preCode":"  public void createEntryTable(final String tableName)\n  {\n    createTable(\n        tableName,\n        ImmutableList.of(\n            StringUtils.format(\n                \"CREATE TABLE %1$s (\\n\"\n                + \"  id VARCHAR(255) NOT NULL,\\n\"\n                + \"  created_date VARCHAR(255) NOT NULL,\\n\"\n                + \"  datasource VARCHAR(255) NOT NULL,\\n\"\n                + \"  payload %2$s NOT NULL,\\n\"\n                + \"  status_payload %2$s NOT NULL,\\n\"\n                + \"  active BOOLEAN NOT NULL DEFAULT FALSE,\\n\"\n                + \"  PRIMARY KEY (id)\\n\"\n                + \")\",\n                tableName, getPayloadType()\n            ),\n            StringUtils.format(\"CREATE INDEX idx_%1$s_active_created_date ON %1$s(active, created_date)\", tableName)\n        )\n    );\n  }\n","realPath":"server/src/main/java/org/apache/druid/metadata/SQLMetadataConnector.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":334,"status":"M"}],"commitId":"bca649e49250c3f460f4ae83ff5b79f16dcc3d37","commitMessage":"@@@Case sensitive comparison of nonbinary string in MySQL metadata storage (#8758)\n\n","date":"2019-10-31 11:48:08","modifiedFileCount":"2","status":"M","submitter":"yuanli"}]
