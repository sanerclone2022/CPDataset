[{"authorTime":"2018-10-15 11:37:37","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"      TestModule()\n      {\n        addSerializer(Interval.class, ToStringSerializer.instance);\n        addSerializer(NumberedShardSpec.class, ToStringSerializer.instance);\n        addDeserializer(\n            Interval.class, new StdDeserializer<Interval>(Interval.class)\n            {\n              @Override\n              public Interval deserialize(JsonParser jsonParser, DeserializationContext deserializationContext)\n                  throws IOException\n              {\n                return Intervals.of(jsonParser.getText());\n              }\n            }\n        );\n      }\n","date":"2018-08-31 00:56:26","endLine":391,"groupId":"7898","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"TestModule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8b/0684d173eeaa02908e1a4beca489e5ebbcdf20.src","preCode":"      TestModule()\n      {\n        addSerializer(Interval.class, ToStringSerializer.instance);\n        addSerializer(NumberedShardSpec.class, ToStringSerializer.instance);\n        addDeserializer(\n            Interval.class, new StdDeserializer<Interval>(Interval.class)\n            {\n              @Override\n              public Interval deserialize(JsonParser jsonParser, DeserializationContext deserializationContext)\n                  throws IOException\n              {\n                return Intervals.of(jsonParser.getText());\n              }\n            }\n        );\n      }\n","realPath":"extensions-core/hdfs-storage/src/test/java/org/apache/druid/storage/hdfs/HdfsDataSegmentPusherTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":376,"status":"NB"},{"authorDate":"2018-10-15 11:37:37","commitOrder":2,"curCode":"    TestModule()\n    {\n      addSerializer(Interval.class, ToStringSerializer.instance);\n      addDeserializer(\n          Interval.class, new StdDeserializer<Interval>(Interval.class)\n          {\n            @Override\n            public Interval deserialize(\n                JsonParser jsonParser, DeserializationContext deserializationContext\n            ) throws IOException, JsonProcessingException\n            {\n              return Intervals.of(jsonParser.getText());\n            }\n          }\n      );\n    }\n","date":"2018-10-15 11:37:37","endLine":69,"groupId":"7898","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"TestModule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/71/9ca97565da32d17abffe4f8638088b01e24afa.src","preCode":"    TestModule()\n    {\n      addSerializer(Interval.class, ToStringSerializer.instance);\n      addDeserializer(\n          Interval.class, new StdDeserializer<Interval>(Interval.class)\n          {\n            @Override\n            public Interval deserialize(\n                JsonParser jsonParser, DeserializationContext deserializationContext\n            ) throws IOException, JsonProcessingException\n            {\n              return Intervals.of(jsonParser.getText());\n            }\n          }\n      );\n    }\n","realPath":"core/src/test/java/org/apache/druid/TestObjectMapper.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"84598fba3b283cbfd6a5addd2602c7b12ba8c00c","commitMessage":"@@@combine druid-api.  druid-common.  java-util into druid-core (#6443)\n\n* combine druid-api.  druid-common.  java-util\n\n* spacing\n","date":"2018-10-15 11:37:37","modifiedFileCount":"0","status":"M","submitter":"Clint Wylie"},{"authorTime":"2018-10-23 18:17:38","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":3,"curCode":"      TestModule()\n      {\n        addSerializer(Interval.class, ToStringSerializer.instance);\n        addSerializer(NumberedShardSpec.class, ToStringSerializer.instance);\n        addDeserializer(\n            Interval.class, new StdDeserializer<Interval>(Interval.class)\n            {\n              @Override\n              public Interval deserialize(JsonParser jsonParser, DeserializationContext deserializationContext)\n                  throws IOException\n              {\n                return Intervals.of(jsonParser.getText());\n              }\n            }\n        );\n      }\n","date":"2018-08-31 00:56:26","endLine":391,"groupId":"103431","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"TestModule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8b/0684d173eeaa02908e1a4beca489e5ebbcdf20.src","preCode":"      TestModule()\n      {\n        addSerializer(Interval.class, ToStringSerializer.instance);\n        addSerializer(NumberedShardSpec.class, ToStringSerializer.instance);\n        addDeserializer(\n            Interval.class, new StdDeserializer<Interval>(Interval.class)\n            {\n              @Override\n              public Interval deserialize(JsonParser jsonParser, DeserializationContext deserializationContext)\n                  throws IOException\n              {\n                return Intervals.of(jsonParser.getText());\n              }\n            }\n        );\n      }\n","realPath":"extensions-core/hdfs-storage/src/test/java/org/apache/druid/storage/hdfs/HdfsDataSegmentPusherTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":376,"status":"N"},{"authorDate":"2018-10-23 18:17:38","commitOrder":3,"curCode":"    TestModule()\n    {\n      addSerializer(Interval.class, ToStringSerializer.instance);\n      addDeserializer(\n          Interval.class,\n          new StdDeserializer<Interval>(Interval.class)\n          {\n            @Override\n            public Interval deserialize(JsonParser jsonParser, DeserializationContext deserializationContext)\n                throws IOException\n            {\n              return Intervals.of(jsonParser.getText());\n            }\n          }\n      );\n    }\n","date":"2018-10-23 18:17:38","endLine":68,"groupId":"103431","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"TestModule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a5/52c4bdab8fca7f6dabe4388facfc633ac16922.src","preCode":"    TestModule()\n    {\n      addSerializer(Interval.class, ToStringSerializer.instance);\n      addDeserializer(\n          Interval.class, new StdDeserializer<Interval>(Interval.class)\n          {\n            @Override\n            public Interval deserialize(\n                JsonParser jsonParser, DeserializationContext deserializationContext\n            ) throws IOException, JsonProcessingException\n            {\n              return Intervals.of(jsonParser.getText());\n            }\n          }\n      );\n    }\n","realPath":"core/src/test/java/org/apache/druid/TestObjectMapper.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"84ac18dc1bce14afe88ebcccd46da21baefae73d","commitMessage":"@@@Catch some incorrect method parameter or call argument formatting patterns with checkstyle (#6461)\n\n* Catch some incorrect method parameter or call argument formatting patterns with checkstyle\n\n* Fix DiscoveryModule\n\n* Inline parameters_and_arguments.txt\n\n* Fix a bug in PolyBind\n\n* Fix formatting\n","date":"2018-10-23 18:17:38","modifiedFileCount":"339","status":"M","submitter":"Roman Leventov"}]
