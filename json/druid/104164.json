[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTryExclusiveLock()\n  {\n    Task task = NoopTask.create();\n    lockbox.add(task);\n    Assert.assertTrue(lockbox.tryLock(TaskLockType.EXCLUSIVE, task, Intervals.of(\"2015-01-01/2015-01-03\")).isOk());\n\n    \r\n    Task task2 = NoopTask.create();\n    lockbox.add(task2);\n    Assert.assertFalse(lockbox.tryLock(TaskLockType.EXCLUSIVE, task2, Intervals.of(\"2015-01-01/2015-01-02\")).isOk());\n\n    \r\n    lockbox.remove(task);\n\n    \r\n    Assert.assertTrue(lockbox.tryLock(TaskLockType.EXCLUSIVE, task2, Intervals.of(\"2015-01-01/2015-01-02\")).isOk());\n  }\n","date":"2018-08-31 00:56:26","endLine":202,"groupId":"18875","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTryExclusiveLock","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e2/0df5a7a7c43109a90dc935f61124da37e69905.src","preCode":"  public void testTryExclusiveLock()\n  {\n    Task task = NoopTask.create();\n    lockbox.add(task);\n    Assert.assertTrue(lockbox.tryLock(TaskLockType.EXCLUSIVE, task, Intervals.of(\"2015-01-01/2015-01-03\")).isOk());\n\n    \r\n    Task task2 = NoopTask.create();\n    lockbox.add(task2);\n    Assert.assertFalse(lockbox.tryLock(TaskLockType.EXCLUSIVE, task2, Intervals.of(\"2015-01-01/2015-01-02\")).isOk());\n\n    \r\n    lockbox.remove(task);\n\n    \r\n    Assert.assertTrue(lockbox.tryLock(TaskLockType.EXCLUSIVE, task2, Intervals.of(\"2015-01-01/2015-01-02\")).isOk());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLockboxTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTryLockAfterTaskComplete()\n  {\n    Task task = NoopTask.create();\n    exception.expect(ISE.class);\n    exception.expectMessage(\"Unable to grant lock to inactive Task\");\n    lockbox.add(task);\n    lockbox.remove(task);\n    Assert.assertFalse(lockbox.tryLock(TaskLockType.EXCLUSIVE, task, Intervals.of(\"2015-01-01/2015-01-02\")).isOk());\n  }\n","date":"2018-08-31 00:56:26","endLine":219,"groupId":"22371","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTryLockAfterTaskComplete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e2/0df5a7a7c43109a90dc935f61124da37e69905.src","preCode":"  public void testTryLockAfterTaskComplete()\n  {\n    Task task = NoopTask.create();\n    exception.expect(ISE.class);\n    exception.expectMessage(\"Unable to grant lock to inactive Task\");\n    lockbox.add(task);\n    lockbox.remove(task);\n    Assert.assertFalse(lockbox.tryLock(TaskLockType.EXCLUSIVE, task, Intervals.of(\"2015-01-01/2015-01-02\")).isOk());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLockboxTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":211,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-07-25 08:35:46","codes":[{"authorDate":"2019-07-25 08:35:46","commitOrder":2,"curCode":"  public void testTryExclusiveLock()\n  {\n    Task task = NoopTask.create();\n    lockbox.add(task);\n    Assert.assertTrue(tryTimeChunkLock(TaskLockType.EXCLUSIVE, task, Intervals.of(\"2015-01-01/2015-01-03\")).isOk());\n\n    \r\n    Task task2 = NoopTask.create();\n    lockbox.add(task2);\n    Assert.assertFalse(tryTimeChunkLock(TaskLockType.EXCLUSIVE, task2, Intervals.of(\"2015-01-01/2015-01-02\")).isOk());\n\n    \r\n    lockbox.remove(task);\n\n    \r\n    Assert.assertTrue(tryTimeChunkLock(TaskLockType.EXCLUSIVE, task2, Intervals.of(\"2015-01-01/2015-01-02\")).isOk());\n  }\n","date":"2019-07-25 08:35:46","endLine":249,"groupId":"104164","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTryExclusiveLock","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/00/4c15b3527eef609c1381ab4722898a3f1a38ba.src","preCode":"  public void testTryExclusiveLock()\n  {\n    Task task = NoopTask.create();\n    lockbox.add(task);\n    Assert.assertTrue(lockbox.tryLock(TaskLockType.EXCLUSIVE, task, Intervals.of(\"2015-01-01/2015-01-03\")).isOk());\n\n    \r\n    Task task2 = NoopTask.create();\n    lockbox.add(task2);\n    Assert.assertFalse(lockbox.tryLock(TaskLockType.EXCLUSIVE, task2, Intervals.of(\"2015-01-01/2015-01-02\")).isOk());\n\n    \r\n    lockbox.remove(task);\n\n    \r\n    Assert.assertTrue(lockbox.tryLock(TaskLockType.EXCLUSIVE, task2, Intervals.of(\"2015-01-01/2015-01-02\")).isOk());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLockboxTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"},{"authorDate":"2019-07-25 08:35:46","commitOrder":2,"curCode":"  public void testTryLockAfterTaskComplete()\n  {\n    Task task = NoopTask.create();\n    exception.expect(ISE.class);\n    exception.expectMessage(\"Unable to grant lock to inactive Task\");\n    lockbox.add(task);\n    lockbox.remove(task);\n    Assert.assertFalse(tryTimeChunkLock(TaskLockType.EXCLUSIVE, task, Intervals.of(\"2015-01-01/2015-01-02\")).isOk());\n  }\n","date":"2019-07-25 08:35:46","endLine":266,"groupId":"104164","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTryLockAfterTaskComplete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/00/4c15b3527eef609c1381ab4722898a3f1a38ba.src","preCode":"  public void testTryLockAfterTaskComplete()\n  {\n    Task task = NoopTask.create();\n    exception.expect(ISE.class);\n    exception.expectMessage(\"Unable to grant lock to inactive Task\");\n    lockbox.add(task);\n    lockbox.remove(task);\n    Assert.assertFalse(lockbox.tryLock(TaskLockType.EXCLUSIVE, task, Intervals.of(\"2015-01-01/2015-01-02\")).isOk());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLockboxTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"M"}],"commitId":"db149462073d59e7563f0d3834e69d44a2bb4011","commitMessage":"@@@Add support minor compaction with segment locking (#7547)\n\n* Segment locking\n\n* Allow both timeChunk and segment lock in the same gruop\n\n* fix it test\n\n* Fix adding same chunk to atomicUpdateGroup\n\n* resolving todos\n\n* Fix segments to lock\n\n* fix segments to lock\n\n* fix kill task\n\n* resolving todos\n\n* resolving todos\n\n* fix teamcity\n\n* remove unused class\n\n* fix single map\n\n* resolving todos\n\n* fix build\n\n* fix SQLMetadataSegmentManager\n\n* fix findInputSegments\n\n* adding more tests\n\n* fixing task lock checks\n\n* add SegmentTransactionalOverwriteAction\n\n* changing publisher\n\n* fixing something\n\n* fix for perfect rollup\n\n* fix test\n\n* adjust package-lock.json\n\n* fix test\n\n* fix style\n\n* adding javadocs\n\n* remove unused classes\n\n* add more javadocs\n\n* unused import\n\n* fix test\n\n* fix test\n\n* Support forceTimeChunk context and force timeChunk lock for parallel index task if intervals are missing\n\n* fix travis\n\n* fix travis\n\n* unused import\n\n* spotbug\n\n* revert getMaxVersion\n\n* address comments\n\n* fix tc\n\n* add missing error handling\n\n* fix backward compatibility\n\n* unused import\n\n* Fix perf of versionedIntervalTimeline\n\n* fix timeline\n\n* fix tc\n\n* remove remaining todos\n\n* add comment for parallel index\n\n* fix javadoc and typos\n\n* typo\n\n* address comments\n","date":"2019-07-25 08:35:46","modifiedFileCount":"130","status":"M","submitter":"Jihoon Son"}]
