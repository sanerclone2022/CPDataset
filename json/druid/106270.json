[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testSerializationLegacyString() throws Exception\n  {\n    QuerySegmentSpec spec = jsonMapper.readValue(\n        \"\\\"2011-10-01/2011-10-10,2011-11-01/2011-11-10\\\"\", QuerySegmentSpec.class\n    );\n    Assert.assertTrue(spec instanceof LegacySegmentSpec);\n    Assert.assertEquals(\n        ImmutableList.of(Intervals.of(\"2011-10-01/2011-10-10\"), Intervals.of(\"2011-11-01/2011-11-10\")),\n        spec.getIntervals()\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":50,"groupId":"9838","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSerializationLegacyString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f6/0544db7719eb228554bc16665093455287be44.src","preCode":"  public void testSerializationLegacyString() throws Exception\n  {\n    QuerySegmentSpec spec = jsonMapper.readValue(\n        \"\\\"2011-10-01/2011-10-10,2011-11-01/2011-11-10\\\"\", QuerySegmentSpec.class\n    );\n    Assert.assertTrue(spec instanceof LegacySegmentSpec);\n    Assert.assertEquals(\n        ImmutableList.of(Intervals.of(\"2011-10-01/2011-10-10\"), Intervals.of(\"2011-11-01/2011-11-10\")),\n        spec.getIntervals()\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/spec/QuerySegmentSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testSerializationSegments()\n  {\n    QuerySegmentSpec spec = jsonMapper.convertValue(\n        ImmutableMap.<String, Object>of(\n            \"type\", \"segments\",\n\n            \"segments\", ImmutableList\n            .<Map<String, Object>>of(\n                ImmutableMap.of(\n                    \"itvl\", \"2011-07-01/2011-10-10\",\n                    \"ver\", \"1\",\n                    \"part\", 0\n                ),\n                ImmutableMap.of(\n                    \"itvl\", \"2011-07-01/2011-10-10\",\n                    \"ver\", \"1\",\n                    \"part\", 1\n                ),\n                ImmutableMap.of(\n                    \"itvl\", \"2011-11-01/2011-11-10\",\n                    \"ver\", \"2\",\n                    \"part\", 10\n                )\n            )\n        ),\n        QuerySegmentSpec.class\n    );\n    Assert.assertTrue(spec instanceof MultipleSpecificSegmentSpec);\n    Assert.assertEquals(\n        ImmutableList.of(Intervals.of(\"2011-07-01/2011-10-10\"), Intervals.of(\"2011-11-01/2011-11-10\")),\n        spec.getIntervals()\n    );\n    Assert.assertEquals(\n        ImmutableList.of(\n            new SegmentDescriptor(Intervals.of(\"2011-07-01/2011-10-10\"), \"1\", 0),\n            new SegmentDescriptor(Intervals.of(\"2011-07-01/2011-10-10\"), \"1\", 1),\n            new SegmentDescriptor(Intervals.of(\"2011-11-01/2011-11-10\"), \"2\", 10)\n        ),\n        ((MultipleSpecificSegmentSpec) spec).getDescriptors()\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":120,"groupId":"9838","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerializationSegments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f6/0544db7719eb228554bc16665093455287be44.src","preCode":"  public void testSerializationSegments()\n  {\n    QuerySegmentSpec spec = jsonMapper.convertValue(\n        ImmutableMap.<String, Object>of(\n            \"type\", \"segments\",\n\n            \"segments\", ImmutableList\n            .<Map<String, Object>>of(\n                ImmutableMap.of(\n                    \"itvl\", \"2011-07-01/2011-10-10\",\n                    \"ver\", \"1\",\n                    \"part\", 0\n                ),\n                ImmutableMap.of(\n                    \"itvl\", \"2011-07-01/2011-10-10\",\n                    \"ver\", \"1\",\n                    \"part\", 1\n                ),\n                ImmutableMap.of(\n                    \"itvl\", \"2011-11-01/2011-11-10\",\n                    \"ver\", \"2\",\n                    \"part\", 10\n                )\n            )\n        ),\n        QuerySegmentSpec.class\n    );\n    Assert.assertTrue(spec instanceof MultipleSpecificSegmentSpec);\n    Assert.assertEquals(\n        ImmutableList.of(Intervals.of(\"2011-07-01/2011-10-10\"), Intervals.of(\"2011-11-01/2011-11-10\")),\n        spec.getIntervals()\n    );\n    Assert.assertEquals(\n        ImmutableList.of(\n            new SegmentDescriptor(Intervals.of(\"2011-07-01/2011-10-10\"), \"1\", 0),\n            new SegmentDescriptor(Intervals.of(\"2011-07-01/2011-10-10\"), \"1\", 1),\n            new SegmentDescriptor(Intervals.of(\"2011-11-01/2011-11-10\"), \"2\", 10)\n        ),\n        ((MultipleSpecificSegmentSpec) spec).getDescriptors()\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/spec/QuerySegmentSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testSerializationLegacyString() throws Exception\n  {\n    QuerySegmentSpec spec = JSON_MAPPER.readValue(\n        \"\\\"2011-10-01/2011-10-10,2011-11-01/2011-11-10\\\"\", QuerySegmentSpec.class\n    );\n    Assert.assertTrue(spec instanceof LegacySegmentSpec);\n    Assert.assertEquals(\n        ImmutableList.of(Intervals.of(\"2011-10-01/2011-10-10\"), Intervals.of(\"2011-11-01/2011-11-10\")),\n        spec.getIntervals()\n    );\n  }\n","date":"2019-08-23 18:13:54","endLine":50,"groupId":"106270","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testSerializationLegacyString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/fd/0bd6b856b7d5a70bd293c8d37f254e7cb047c6.src","preCode":"  public void testSerializationLegacyString() throws Exception\n  {\n    QuerySegmentSpec spec = jsonMapper.readValue(\n        \"\\\"2011-10-01/2011-10-10,2011-11-01/2011-11-10\\\"\", QuerySegmentSpec.class\n    );\n    Assert.assertTrue(spec instanceof LegacySegmentSpec);\n    Assert.assertEquals(\n        ImmutableList.of(Intervals.of(\"2011-10-01/2011-10-10\"), Intervals.of(\"2011-11-01/2011-11-10\")),\n        spec.getIntervals()\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/spec/QuerySegmentSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testSerializationSegments()\n  {\n    QuerySegmentSpec spec = JSON_MAPPER.convertValue(\n        ImmutableMap.<String, Object>of(\n            \"type\", \"segments\",\n\n            \"segments\", ImmutableList\n            .<Map<String, Object>>of(\n                ImmutableMap.of(\n                    \"itvl\", \"2011-07-01/2011-10-10\",\n                    \"ver\", \"1\",\n                    \"part\", 0\n                ),\n                ImmutableMap.of(\n                    \"itvl\", \"2011-07-01/2011-10-10\",\n                    \"ver\", \"1\",\n                    \"part\", 1\n                ),\n                ImmutableMap.of(\n                    \"itvl\", \"2011-11-01/2011-11-10\",\n                    \"ver\", \"2\",\n                    \"part\", 10\n                )\n            )\n        ),\n        QuerySegmentSpec.class\n    );\n    Assert.assertTrue(spec instanceof MultipleSpecificSegmentSpec);\n    Assert.assertEquals(\n        ImmutableList.of(Intervals.of(\"2011-07-01/2011-10-10\"), Intervals.of(\"2011-11-01/2011-11-10\")),\n        spec.getIntervals()\n    );\n    Assert.assertEquals(\n        ImmutableList.of(\n            new SegmentDescriptor(Intervals.of(\"2011-07-01/2011-10-10\"), \"1\", 0),\n            new SegmentDescriptor(Intervals.of(\"2011-07-01/2011-10-10\"), \"1\", 1),\n            new SegmentDescriptor(Intervals.of(\"2011-11-01/2011-11-10\"), \"2\", 10)\n        ),\n        ((MultipleSpecificSegmentSpec) spec).getDescriptors()\n    );\n  }\n","date":"2019-08-23 18:13:54","endLine":120,"groupId":"106270","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testSerializationSegments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/fd/0bd6b856b7d5a70bd293c8d37f254e7cb047c6.src","preCode":"  public void testSerializationSegments()\n  {\n    QuerySegmentSpec spec = jsonMapper.convertValue(\n        ImmutableMap.<String, Object>of(\n            \"type\", \"segments\",\n\n            \"segments\", ImmutableList\n            .<Map<String, Object>>of(\n                ImmutableMap.of(\n                    \"itvl\", \"2011-07-01/2011-10-10\",\n                    \"ver\", \"1\",\n                    \"part\", 0\n                ),\n                ImmutableMap.of(\n                    \"itvl\", \"2011-07-01/2011-10-10\",\n                    \"ver\", \"1\",\n                    \"part\", 1\n                ),\n                ImmutableMap.of(\n                    \"itvl\", \"2011-11-01/2011-11-10\",\n                    \"ver\", \"2\",\n                    \"part\", 10\n                )\n            )\n        ),\n        QuerySegmentSpec.class\n    );\n    Assert.assertTrue(spec instanceof MultipleSpecificSegmentSpec);\n    Assert.assertEquals(\n        ImmutableList.of(Intervals.of(\"2011-07-01/2011-10-10\"), Intervals.of(\"2011-11-01/2011-11-10\")),\n        spec.getIntervals()\n    );\n    Assert.assertEquals(\n        ImmutableList.of(\n            new SegmentDescriptor(Intervals.of(\"2011-07-01/2011-10-10\"), \"1\", 0),\n            new SegmentDescriptor(Intervals.of(\"2011-07-01/2011-10-10\"), \"1\", 1),\n            new SegmentDescriptor(Intervals.of(\"2011-11-01/2011-11-10\"), \"2\", 10)\n        ),\n        ((MultipleSpecificSegmentSpec) spec).getDescriptors()\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/spec/QuerySegmentSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
