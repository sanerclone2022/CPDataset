[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testSearchCaching()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":1170,"groupId":"14808","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/6dfd0a7ba50835713564aebc5ab8650ac4b7a1.src","preCode":"  public void testSearchCaching()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1103,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testSearchCachingRenamedOutput()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .limit(1000)\n        .intervals(SEG_SPEC)\n        .dimensions(Collections.singletonList(TOP_DIM))\n        .query(\"how\")\n        .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n    SearchQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .dimensions(new DefaultDimensionSpec(TOP_DIM, \"new_dim\"))\n        .build();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            \"new_dim\",\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":1262,"groupId":"14808","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearchCachingRenamedOutput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/6dfd0a7ba50835713564aebc5ab8650ac4b7a1.src","preCode":"  public void testSearchCachingRenamedOutput()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n        .dataSource(DATA_SOURCE)\n        .filters(DIM_FILTER)\n        .granularity(GRANULARITY)\n        .limit(1000)\n        .intervals(SEG_SPEC)\n        .dimensions(Collections.singletonList(TOP_DIM))\n        .query(\"how\")\n        .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n    SearchQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .dimensions(new DefaultDimensionSpec(TOP_DIM, \"new_dim\"))\n        .build();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            \"new_dim\",\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1173,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-02-05 01:18:12","codes":[{"authorDate":"2019-02-05 01:18:12","commitOrder":2,"curCode":"  public void testSearchCaching()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n  }\n","date":"2019-02-05 01:18:12","endLine":1173,"groupId":"14808","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e1/b7a886d645684fe55153cd95751e0e2c6d7717.src","preCode":"  public void testSearchCaching()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1106,"status":"M"},{"authorDate":"2019-02-05 01:18:12","commitOrder":2,"curCode":"  public void testSearchCachingRenamedOutput()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n    SearchQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .dimensions(new DefaultDimensionSpec(TOP_DIM, \"new_dim\"))\n        .build();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            \"new_dim\",\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","date":"2019-02-05 01:18:12","endLine":1265,"groupId":"14808","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearchCachingRenamedOutput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e1/b7a886d645684fe55153cd95751e0e2c6d7717.src","preCode":"  public void testSearchCachingRenamedOutput()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n    SearchQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .dimensions(new DefaultDimensionSpec(TOP_DIM, \"new_dim\"))\n        .build();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            \"new_dim\",\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1176,"status":"M"}],"commitId":"0e926e865276f892ddc5b62685d331b822104022","commitMessage":"@@@Prohibit assigning concurrent maps into Map-typed variables and fields and fix a race condition in CoordinatorRuleManager (#6898)\n\n* Prohibit assigning concurrent maps into Map-types variables and fields; Fix a race condition in CoordinatorRuleManager; improve logic in DirectDruidClient and ResourcePool\n\n* Enforce that if compute().  computeIfAbsent().  computeIfPresent() or merge() is called on a ConcurrentHashMap.  it's stored in a ConcurrentHashMap-typed variable.  not ConcurrentMap; add comments explaining get()-before-computeIfAbsent() optimization; refactor Counters; fix a race condition in Intialization.java\n\n* Remove unnecessary comment\n\n* Checkstyle\n\n* Fix getFromExtensions()\n\n* Add a reference to the comment about guarded computeIfAbsent() optimization; IdentityHashMap optimization\n\n* Fix UriCacheGeneratorTest\n\n* Workaround issue with MaterializedViewQueryQueryToolChest\n\n* Strengthen Appenderator's contract regarding concurrency\n","date":"2019-02-05 01:18:12","modifiedFileCount":"101","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-07-24 23:29:03","codes":[{"authorDate":"2019-07-24 23:29:03","commitOrder":3,"curCode":"  public void testSearchCaching()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()))\n    );\n  }\n","date":"2019-07-24 23:29:03","endLine":1165,"groupId":"14808","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/38/9b49f4678c068e8f186b7e52c88926a999f50a.src","preCode":"  public void testSearchCaching()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1099,"status":"M"},{"authorDate":"2019-07-24 23:29:03","commitOrder":3,"curCode":"  public void testSearchCachingRenamedOutput()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    ResponseContext context = ResponseContext.createEmpty();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n    SearchQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .dimensions(new DefaultDimensionSpec(TOP_DIM, \"new_dim\"))\n        .build();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            \"new_dim\",\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","date":"2019-07-24 23:29:03","endLine":1257,"groupId":"8541","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearchCachingRenamedOutput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/38/9b49f4678c068e8f186b7e52c88926a999f50a.src","preCode":"  public void testSearchCachingRenamedOutput()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    HashMap<String, Object> context = new HashMap<String, Object>();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n    SearchQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .dimensions(new DefaultDimensionSpec(TOP_DIM, \"new_dim\"))\n        .build();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            \"new_dim\",\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1168,"status":"M"}],"commitId":"799d20249fe6333ea86b020f6d09c91fa4d3f998","commitMessage":"@@@Response context refactoring (#8110)\n\n* Response context refactoring\n\n* Serialization/Deserialization of ResponseContext\n\n* Added java doc comments\n\n* Renamed vars related to ResponseContext\n\n* Renamed empty() methods to createEmpty()\n\n* Fixed ResponseContext usage\n\n* Renamed multiple ResponseContext static fields\n\n* Added PublicApi annotations\n\n* Renamed QueryResponseContext class to ResourceIOReaderWriter\n\n* Moved the protected method below public static constants\n\n* Added createEmpty method to ResponseContext with DefaultResponseContext creation\n\n* Fixed inspection error\n\n* Added comments to the ResponseContext length limit and ResponseContext\nhttp header name\n\n* Added a comment of possible future refactoring\n\n* Removed .gitignore file of indexing-service\n\n* Removed a never-used method\n\n* VisibleForTesting method reducing boilerplate\n\nCo-Authored-By: Clint Wylie <cjwylie@gmail.com>\n\n* Reduced boilerplate\n\n* Renamed the method serialize to serializeWith\n\n* Removed unused import\n\n* Fixed incorrectly refactored test method\n\n* Added comments for ResponseContext keys\n\n* Fixed incorrectly refactored test method\n\n* Fixed IntervalChunkingQueryRunnerTest mocks\n","date":"2019-07-24 23:29:03","modifiedFileCount":"142","status":"M","submitter":"Eugene Sevastianov"},{"authorTime":"2020-01-20 09:14:23","codes":[{"authorDate":"2020-01-20 09:14:23","commitOrder":4,"curCode":"  public void testSearchCaching()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new SearchQueryQueryToolChest(new SearchQueryConfig())\n    );\n\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()))\n    );\n  }\n","date":"2020-01-20 09:14:23","endLine":1126,"groupId":"4595","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bd/91104aac410fa6f1dfe514abacec299e649d2f.src","preCode":"  public void testSearchCaching()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()))\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1061,"status":"M"},{"authorDate":"2020-01-20 09:14:23","commitOrder":4,"curCode":"  public void testSearchCachingRenamedOutput()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new SearchQueryQueryToolChest(new SearchQueryConfig())\n    );\n\n    ResponseContext context = ResponseContext.createEmpty();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n    SearchQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .dimensions(new DefaultDimensionSpec(TOP_DIM, \"new_dim\"))\n        .build();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            \"new_dim\",\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","date":"2020-01-20 09:14:23","endLine":1217,"groupId":"20557","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearchCachingRenamedOutput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bd/91104aac410fa6f1dfe514abacec299e649d2f.src","preCode":"  public void testSearchCachingRenamedOutput()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(), new SearchQueryQueryToolChest(\n        new SearchQueryConfig(),\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    )\n    );\n    ResponseContext context = ResponseContext.createEmpty();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n    SearchQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .dimensions(new DefaultDimensionSpec(TOP_DIM, \"new_dim\"))\n        .build();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            \"new_dim\",\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1129,"status":"M"}],"commitId":"d21054f7c5f72f9db1ecfb72b46ee866876f1e4b","commitMessage":"@@@Remove the deprecated interval-chunking stuff. (#9216)\n\n* Remove the deprecated interval-chunking stuff.\n\nSee https://github.com/apache/druid/pull/6591.  https://github.com/apache/druid/pull/4004#issuecomment-284171911 for details.\n\n* Remove unused import.\n\n* Remove chunkInterval too.\n","date":"2020-01-20 09:14:23","modifiedFileCount":"65","status":"M","submitter":"Gian Merlino"},{"authorTime":"2020-07-02 05:02:21","codes":[{"authorDate":"2020-07-02 05:02:21","commitOrder":5,"curCode":"  public void testSearchCaching()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.randomQueryId().build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new SearchQueryQueryToolChest(new SearchQueryConfig())\n    );\n\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.randomQueryId().intervals(\"2011-01-01/2011-01-10\").build()))\n    );\n  }\n","date":"2020-07-02 05:02:21","endLine":1143,"groupId":"10877","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchCaching","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/45/2dd8cadd6b4c232ab41fc0990812d7c3f25a27.src","preCode":"  public void testSearchCaching()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new SearchQueryQueryToolChest(new SearchQueryConfig())\n    );\n\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()))\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1078,"status":"M"},{"authorDate":"2020-07-02 05:02:21","commitOrder":5,"curCode":"  public void testSearchCachingRenamedOutput()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.randomQueryId().build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new SearchQueryQueryToolChest(new SearchQueryConfig())\n    );\n\n    ResponseContext context = initializeResponseContext();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.randomQueryId().intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n    SearchQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .dimensions(new DefaultDimensionSpec(TOP_DIM, \"new_dim\"))\n        .randomQueryId()\n        .build();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            \"new_dim\",\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","date":"2020-07-02 05:02:21","endLine":1235,"groupId":"10877","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearchCachingRenamedOutput","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/45/2dd8cadd6b4c232ab41fc0990812d7c3f25a27.src","preCode":"  public void testSearchCachingRenamedOutput()\n  {\n    final Druids.SearchQueryBuilder builder = Druids.newSearchQueryBuilder()\n                                                    .dataSource(DATA_SOURCE)\n                                                    .filters(DIM_FILTER)\n                                                    .granularity(GRANULARITY)\n                                                    .limit(1000)\n                                                    .intervals(SEG_SPEC)\n                                                    .dimensions(Collections.singletonList(TOP_DIM))\n                                                    .query(\"how\")\n                                                    .context(CONTEXT);\n\n    testQueryCaching(\n        getDefaultQueryRunner(),\n        builder.build(),\n        Intervals.of(\"2011-01-01/2011-01-02\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4),\n\n        Intervals.of(\"2011-01-02/2011-01-03\"),\n        makeSearchResults(TOP_DIM, DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n\n        Intervals.of(\"2011-01-05/2011-01-10\"),\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        )\n    );\n\n    QueryRunner runner = new FinalizeResultsQueryRunner(\n        getDefaultQueryRunner(),\n        new SearchQueryQueryToolChest(new SearchQueryConfig())\n    );\n\n    ResponseContext context = ResponseContext.createEmpty();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            TOP_DIM,\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(builder.intervals(\"2011-01-01/2011-01-10\").build()), context)\n    );\n    SearchQuery query = builder\n        .intervals(\"2011-01-01/2011-01-10\")\n        .dimensions(new DefaultDimensionSpec(TOP_DIM, \"new_dim\"))\n        .build();\n    TestHelper.assertExpectedResults(\n        makeSearchResults(\n            \"new_dim\",\n            DateTimes.of(\"2011-01-01\"), \"how\", 1, \"howdy\", 2, \"howwwwww\", 3, \"howwy\", 4,\n            DateTimes.of(\"2011-01-02\"), \"how1\", 1, \"howdy1\", 2, \"howwwwww1\", 3, \"howwy1\", 4,\n            DateTimes.of(\"2011-01-05\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-05T01\"), \"how2\", 1, \"howdy2\", 2, \"howwwwww2\", 3, \"howww2\", 4,\n            DateTimes.of(\"2011-01-06\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-06T01\"), \"how3\", 1, \"howdy3\", 2, \"howwwwww3\", 3, \"howww3\", 4,\n            DateTimes.of(\"2011-01-07\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-07T01\"), \"how4\", 1, \"howdy4\", 2, \"howwwwww4\", 3, \"howww4\", 4,\n            DateTimes.of(\"2011-01-08\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-08T01\"), \"how5\", 1, \"howdy5\", 2, \"howwwwww5\", 3, \"howww5\", 4,\n            DateTimes.of(\"2011-01-09\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4,\n            DateTimes.of(\"2011-01-09T01\"), \"how6\", 1, \"howdy6\", 2, \"howwwwww6\", 3, \"howww6\", 4\n        ),\n        runner.run(QueryPlus.wrap(query), context)\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/client/CachingClusteredClientTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1146,"status":"M"}],"commitId":"657f8ee80fa86779cf26a01072814b1530277aa7","commitMessage":"@@@Fix RetryQueryRunner to actually do the job (#10082)\n\n* Fix RetryQueryRunner to actually do the job\n\n* more javadoc\n\n* fix test and checkstyle\n\n* don't combine for testing\n\n* address comments\n\n* fix unit tests\n\n* always initialize response context in cachingClusteredClient\n\n* fix subquery\n\n* address comments\n\n* fix test\n\n* query id for builders\n\n* make queryId optional in the builders and ClusterQueryResult\n\n* fix test\n\n* suppress tests and unused methods\n\n* exclude groupBy builder\n\n* fix jacoco exclusion\n\n* add tests for builders\n\n* address comments\n\n* don't truncate","date":"2020-07-02 05:02:21","modifiedFileCount":"33","status":"M","submitter":"Jihoon Son"}]
