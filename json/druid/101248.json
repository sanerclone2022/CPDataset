[{"authorTime":"2018-12-28 10:03:44","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public TaskStatusResponse getTaskStatus(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\"/druid/indexer/v1/task/%s/status\", taskId))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskStatusResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":267,"groupId":"11584","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getTaskStatus","params":"(StringtaskId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a3/cf5c608c922b8e193b848ed16b1da35c2455d1.src","preCode":"  public TaskStatusResponse getTaskStatus(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\"/druid/indexer/v1/task/%s/status\", taskId))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskStatusResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/HttpIndexingServiceClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"NB"},{"authorDate":"2018-12-28 10:03:44","commitOrder":2,"curCode":"  public TaskPayloadResponse getTaskPayload(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\"/druid/indexer/v1/task/%s\", taskId))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskPayloadResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2018-12-28 10:03:44","endLine":299,"groupId":"11584","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getTaskPayload","params":"(StringtaskId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b8/960c03c58dac2fad44be28ea02451fcd8a7bd9.src","preCode":"  public TaskPayloadResponse getTaskPayload(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\"/druid/indexer/v1/task/%s\", taskId))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskPayloadResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/HttpIndexingServiceClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"B"}],"commitId":"fa7cb906e40021549648848caada38cf80338b7b","commitMessage":"@@@Fix auto compaction to consider intervals of running tasks (#6767)\n\n* Fix auto compaction to consider intervals of running tasks\n\n* adjust initial collection size\n","date":"2018-12-28 10:03:44","modifiedFileCount":"13","status":"M","submitter":"Jihoon Son"},{"authorTime":"2018-12-28 10:03:44","codes":[{"authorDate":"2019-01-16 00:33:31","commitOrder":3,"curCode":"  public TaskStatusResponse getTaskStatus(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\n              \"/druid/indexer/v1/task/%s/status\",\n              StringUtils.urlEncode(taskId)\n          ))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskStatusResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-01-16 00:33:31","endLine":277,"groupId":"7443","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getTaskStatus","params":"(StringtaskId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/70/2d78b08568c3d2544d653af446ad91ee16b6e9.src","preCode":"  public TaskStatusResponse getTaskStatus(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\"/druid/indexer/v1/task/%s/status\", taskId))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskStatusResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/HttpIndexingServiceClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"M"},{"authorDate":"2018-12-28 10:03:44","commitOrder":3,"curCode":"  public TaskPayloadResponse getTaskPayload(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\"/druid/indexer/v1/task/%s\", taskId))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskPayloadResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2018-12-28 10:03:44","endLine":299,"groupId":"11584","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getTaskPayload","params":"(StringtaskId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b8/960c03c58dac2fad44be28ea02451fcd8a7bd9.src","preCode":"  public TaskPayloadResponse getTaskPayload(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\"/druid/indexer/v1/task/%s\", taskId))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskPayloadResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/HttpIndexingServiceClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"N"}],"commitId":"8537a771b00ce53cf6f2f4f9070eb3cd5d50d632","commitMessage":"@@@Some fixes and tests for spaces/non-ASCII chars in datasource names (#6761)\n\n* Fixes and tests for spaces/non-ASCII datasource names\n\n* Some unit test fixes\n\n* Fix ITRealtimeIndexTaskTest\n\n* Checkstyle\n\n* TeamCity\n\n* PR comments\n","date":"2019-01-16 00:33:31","modifiedFileCount":"26","status":"M","submitter":"Jonathan Wei"},{"authorTime":"2019-03-29 11:25:10","codes":[{"authorDate":"2019-01-16 00:33:31","commitOrder":4,"curCode":"  public TaskStatusResponse getTaskStatus(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\n              \"/druid/indexer/v1/task/%s/status\",\n              StringUtils.urlEncode(taskId)\n          ))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskStatusResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-01-16 00:33:31","endLine":277,"groupId":"7443","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getTaskStatus","params":"(StringtaskId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/70/2d78b08568c3d2544d653af446ad91ee16b6e9.src","preCode":"  public TaskStatusResponse getTaskStatus(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\n              \"/druid/indexer/v1/task/%s/status\",\n              StringUtils.urlEncode(taskId)\n          ))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskStatusResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/HttpIndexingServiceClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"N"},{"authorDate":"2019-03-29 11:25:10","commitOrder":4,"curCode":"  public TaskPayloadResponse getTaskPayload(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(\n              HttpMethod.GET,\n              StringUtils.format(\"/druid/indexer/v1/task/%s\", StringUtils.urlEncode(taskId))\n          )\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskPayloadResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-03-29 11:25:10","endLine":290,"groupId":"7443","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getTaskPayload","params":"(StringtaskId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c5/c9531ffd89facf946f5753ab59faff62ab8948.src","preCode":"  public TaskPayloadResponse getTaskPayload(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\"/druid/indexer/v1/task/%s\", taskId))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskPayloadResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/HttpIndexingServiceClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"}],"commitId":"62c3e89266037da2814fb3504f1c22b34064ade1","commitMessage":"@@@maxTotalRows should be checked in DataSourceCompactionConfig before setting targetCompactionSizeBytes (#7368)\n\n* maxTotalRows should be checked in DataSourceCompactionConfig before setting targetCompactionSizeBytes\n\n* remove unnecessary default values\n\n* remove flacky test\n\n* fix build\n\n* Add comments\n","date":"2019-03-29 11:25:10","modifiedFileCount":"14","status":"M","submitter":"Jihoon Son"},{"authorTime":"2019-08-27 10:27:41","codes":[{"authorDate":"2019-08-27 10:27:41","commitOrder":5,"curCode":"  public TaskStatusResponse getTaskStatus(String taskId)\n  {\n    try {\n      final StringFullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\n              \"/druid/indexer/v1/task/%s/status\",\n              StringUtils.urlEncode(taskId)\n          ))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskStatusResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-08-27 10:27:41","endLine":271,"groupId":"101248","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getTaskStatus","params":"(StringtaskId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/de/590a2a85ca63b8b7ba7bce8ad892c2f626a821.src","preCode":"  public TaskStatusResponse getTaskStatus(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(HttpMethod.GET, StringUtils.format(\n              \"/druid/indexer/v1/task/%s/status\",\n              StringUtils.urlEncode(taskId)\n          ))\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskStatusResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/HttpIndexingServiceClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":251,"status":"M"},{"authorDate":"2019-08-27 10:27:41","commitOrder":5,"curCode":"  public TaskPayloadResponse getTaskPayload(String taskId)\n  {\n    try {\n      final StringFullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(\n              HttpMethod.GET,\n              StringUtils.format(\"/druid/indexer/v1/task/%s\", StringUtils.urlEncode(taskId))\n          )\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskPayloadResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","date":"2019-08-27 10:27:41","endLine":323,"groupId":"101248","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getTaskPayload","params":"(StringtaskId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/de/590a2a85ca63b8b7ba7bce8ad892c2f626a821.src","preCode":"  public TaskPayloadResponse getTaskPayload(String taskId)\n  {\n    try {\n      final FullResponseHolder responseHolder = druidLeaderClient.go(\n          druidLeaderClient.makeRequest(\n              HttpMethod.GET,\n              StringUtils.format(\"/druid/indexer/v1/task/%s\", StringUtils.urlEncode(taskId))\n          )\n      );\n\n      return jsonMapper.readValue(\n          responseHolder.getContent(),\n          new TypeReference<TaskPayloadResponse>()\n          {\n          }\n      );\n    }\n    catch (IOException | InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n  }\n","realPath":"server/src/main/java/org/apache/druid/client/indexing/HttpIndexingServiceClient.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"M"}],"commitId":"e5ef5ddafa632256fe8a387a117557c415bee7df","commitMessage":"@@@Fix the shuffle with TLS enabled for parallel indexing; add an integration test; improve unit tests (#8350)\n\n* Fix shuffle with tls enabled; add an integration test; improve unit tests\n\n* remove debug log\n\n* fix tests\n\n* unused import\n\n* add javadoc\n\n* rename to getContent\n","date":"2019-08-27 10:27:41","modifiedFileCount":"37","status":"M","submitter":"Jihoon Son"}]
