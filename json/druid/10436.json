[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testAppliesToPartialOverlap()\n  {\n    DateTime now = DateTimes.of(\"2012-12-31T01:00:00\");\n    PeriodLoadRule rule = new PeriodLoadRule(\n            new Period(\"P1M\"),\n            ImmutableMap.of(\"\", 0)\n    );\n\n    Assert.assertTrue(\n            rule.appliesTo(\n                    builder.interval(new Interval(now.minusWeeks(1), now.plusWeeks(1))).build(),\n                    now\n            )\n    );\n    Assert.assertTrue(\n            rule.appliesTo(\n                    builder.interval(\n                            new Interval(now.minusMonths(1).minusWeeks(1), now.minusMonths(1).plusWeeks(1))\n                    ).build(),\n                    now\n            )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":108,"groupId":"7424","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppliesToPartialOverlap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/63/f4ca04ca85d7d6a9cf9be9d057982c7f59eb96.src","preCode":"  public void testAppliesToPartialOverlap()\n  {\n    DateTime now = DateTimes.of(\"2012-12-31T01:00:00\");\n    PeriodLoadRule rule = new PeriodLoadRule(\n            new Period(\"P1M\"),\n            ImmutableMap.of(\"\", 0)\n    );\n\n    Assert.assertTrue(\n            rule.appliesTo(\n                    builder.interval(new Interval(now.minusWeeks(1), now.plusWeeks(1))).build(),\n                    now\n            )\n    );\n    Assert.assertTrue(\n            rule.appliesTo(\n                    builder.interval(\n                            new Interval(now.minusMonths(1).minusWeeks(1), now.minusMonths(1).plusWeeks(1))\n                    ).build(),\n                    now\n            )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/rules/PeriodLoadRuleTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testAppliesToPeriod()\n  {\n    DateTime now = DateTimes.of(\"2012-12-31T01:00:00\");\n    PeriodDropRule rule = new PeriodDropRule(\n        new Period(\"P1M\")\n    );\n\n    Assert.assertTrue(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusWeeks(1), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n    Assert.assertTrue(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusDays(1), now))\n                   .build(),\n            now\n        )\n    );\n    Assert.assertFalse(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusYears(1), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n    Assert.assertFalse(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusMonths(2), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":104,"groupId":"16901","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppliesToPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/16/df35dfe43d2dfe568fb6a5ec75a4353eef9e43.src","preCode":"  public void testAppliesToPeriod()\n  {\n    DateTime now = DateTimes.of(\"2012-12-31T01:00:00\");\n    PeriodDropRule rule = new PeriodDropRule(\n        new Period(\"P1M\")\n    );\n\n    Assert.assertTrue(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusWeeks(1), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n    Assert.assertTrue(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusDays(1), now))\n                   .build(),\n            now\n        )\n    );\n    Assert.assertFalse(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusYears(1), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n    Assert.assertFalse(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusMonths(2), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/rules/PeriodDropRuleTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-11-02 00:43:34","codes":[{"authorDate":"2018-11-02 00:43:34","commitOrder":2,"curCode":"  public void testAppliesToPartialOverlap()\n  {\n    DateTime now = DateTimes.of(\"2012-12-31T01:00:00\");\n    PeriodLoadRule rule = new PeriodLoadRule(\n            new Period(\"P1M\"),\n            false,\n            ImmutableMap.of(\"\", 0)\n    );\n\n    Assert.assertTrue(\n            rule.appliesTo(\n                    builder.interval(new Interval(now.minusWeeks(1), now.plusWeeks(1))).build(),\n                    now\n            )\n    );\n    Assert.assertTrue(\n            rule.appliesTo(\n                    builder.interval(\n                            new Interval(now.minusMonths(1).minusWeeks(1), now.minusMonths(1).plusWeeks(1))\n                    ).build(),\n                    now\n            )\n    );\n  }\n","date":"2018-11-02 00:43:34","endLine":111,"groupId":"7424","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppliesToPartialOverlap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/53/eaa2ef62350459a7a0748421608ceb1b1ac5b0.src","preCode":"  public void testAppliesToPartialOverlap()\n  {\n    DateTime now = DateTimes.of(\"2012-12-31T01:00:00\");\n    PeriodLoadRule rule = new PeriodLoadRule(\n            new Period(\"P1M\"),\n            ImmutableMap.of(\"\", 0)\n    );\n\n    Assert.assertTrue(\n            rule.appliesTo(\n                    builder.interval(new Interval(now.minusWeeks(1), now.plusWeeks(1))).build(),\n                    now\n            )\n    );\n    Assert.assertTrue(\n            rule.appliesTo(\n                    builder.interval(\n                            new Interval(now.minusMonths(1).minusWeeks(1), now.minusMonths(1).plusWeeks(1))\n                    ).build(),\n                    now\n            )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/rules/PeriodLoadRuleTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2018-11-02 00:43:34","commitOrder":2,"curCode":"  public void testAppliesToPeriod()\n  {\n    DateTime now = DateTimes.of(\"2012-12-31T01:00:00\");\n    PeriodDropRule rule = new PeriodDropRule(\n        new Period(\"P1M\"),\n        false\n    );\n\n    Assert.assertTrue(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusWeeks(1), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n    Assert.assertTrue(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusDays(1), now))\n                   .build(),\n            now\n        )\n    );\n    Assert.assertFalse(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusYears(1), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n    Assert.assertFalse(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusMonths(2), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n  }\n","date":"2018-11-02 00:43:34","endLine":106,"groupId":"16901","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppliesToPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/2dafc7dbd60f62e5005724cf228cbb8d9c926c.src","preCode":"  public void testAppliesToPeriod()\n  {\n    DateTime now = DateTimes.of(\"2012-12-31T01:00:00\");\n    PeriodDropRule rule = new PeriodDropRule(\n        new Period(\"P1M\")\n    );\n\n    Assert.assertTrue(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusWeeks(1), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n    Assert.assertTrue(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusDays(1), now))\n                   .build(),\n            now\n        )\n    );\n    Assert.assertFalse(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusYears(1), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n    Assert.assertFalse(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusMonths(2), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/rules/PeriodDropRuleTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"7b346624624d6ec6843b9591c0c8e357d3d928de","commitMessage":"@@@Period load/drop/broadcast rules should include the future by default (#6414)\n\n* Period load/drop/broadcast rules should include the future by default\n\n* address comments\n\n* adjust coordinator console and tweak docs\n\n* address comments\n\n* fix travis-ci\n","date":"2018-11-02 00:43:34","modifiedFileCount":"8","status":"M","submitter":"QiuMM"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":3,"curCode":"  public void testAppliesToPartialOverlap()\n  {\n    DateTime now = DateTimes.of(\"2012-12-31T01:00:00\");\n    PeriodLoadRule rule = new PeriodLoadRule(\n            new Period(\"P1M\"),\n            false,\n            ImmutableMap.of(\"\", 0)\n    );\n\n    Assert.assertTrue(\n            rule.appliesTo(\n                    BUILDER.interval(new Interval(now.minusWeeks(1), now.plusWeeks(1))).build(),\n                    now\n            )\n    );\n    Assert.assertTrue(\n            rule.appliesTo(\n                    BUILDER.interval(\n                            new Interval(now.minusMonths(1).minusWeeks(1), now.minusMonths(1).plusWeeks(1))\n                    ).build(),\n                    now\n            )\n    );\n  }\n","date":"2019-08-23 18:13:54","endLine":111,"groupId":"10436","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAppliesToPartialOverlap","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/91/c7510429f125a7e92d1c758aafe285e1fae274.src","preCode":"  public void testAppliesToPartialOverlap()\n  {\n    DateTime now = DateTimes.of(\"2012-12-31T01:00:00\");\n    PeriodLoadRule rule = new PeriodLoadRule(\n            new Period(\"P1M\"),\n            false,\n            ImmutableMap.of(\"\", 0)\n    );\n\n    Assert.assertTrue(\n            rule.appliesTo(\n                    builder.interval(new Interval(now.minusWeeks(1), now.plusWeeks(1))).build(),\n                    now\n            )\n    );\n    Assert.assertTrue(\n            rule.appliesTo(\n                    builder.interval(\n                            new Interval(now.minusMonths(1).minusWeeks(1), now.minusMonths(1).plusWeeks(1))\n                    ).build(),\n                    now\n            )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/rules/PeriodLoadRuleTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":3,"curCode":"  public void testAppliesToPeriod()\n  {\n    DateTime now = DateTimes.of(\"2012-12-31T01:00:00\");\n    PeriodDropRule rule = new PeriodDropRule(\n        new Period(\"P1M\"),\n        false\n    );\n\n    Assert.assertTrue(\n        rule.appliesTo(\n            BUILDER.interval(new Interval(now.minusWeeks(1), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n    Assert.assertTrue(\n        rule.appliesTo(\n            BUILDER.interval(new Interval(now.minusDays(1), now))\n                   .build(),\n            now\n        )\n    );\n    Assert.assertFalse(\n        rule.appliesTo(\n            BUILDER.interval(new Interval(now.minusYears(1), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n    Assert.assertFalse(\n        rule.appliesTo(\n            BUILDER.interval(new Interval(now.minusMonths(2), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n  }\n","date":"2019-08-23 18:13:54","endLine":106,"groupId":"10436","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAppliesToPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/06/054a1af876b182bc8ae7666e58e29e30bdd223.src","preCode":"  public void testAppliesToPeriod()\n  {\n    DateTime now = DateTimes.of(\"2012-12-31T01:00:00\");\n    PeriodDropRule rule = new PeriodDropRule(\n        new Period(\"P1M\"),\n        false\n    );\n\n    Assert.assertTrue(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusWeeks(1), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n    Assert.assertTrue(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusDays(1), now))\n                   .build(),\n            now\n        )\n    );\n    Assert.assertFalse(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusYears(1), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n    Assert.assertFalse(\n        rule.appliesTo(\n            builder.interval(new Interval(now.minusMonths(2), now.minusDays(1)))\n                       .build(),\n            now\n        )\n    );\n  }\n","realPath":"server/src/test/java/org/apache/druid/server/coordinator/rules/PeriodDropRuleTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
