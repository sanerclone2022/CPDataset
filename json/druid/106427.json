[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.sameThreadIntervalChunkingQueryRunnerDecorator()\n    );\n    final Closer closer = Closer.create();\n    closer.register(bufferPool);\n    closer.register(mergeBufferPool);\n    return Pair.of(\n        new GroupByQueryRunnerFactory(\n            strategySelector,\n            toolChest\n        ),\n        closer\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":406,"groupId":"19839","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig@finalDruidProcessingConfigprocessingConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/76/97506dd7d87c44ca1fada8cf624753ca12a2ea.src","preCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.sameThreadIntervalChunkingQueryRunnerDecorator()\n    );\n    final Closer closer = Closer.create();\n    closer.register(bufferPool);\n    closer.register(mergeBufferPool);\n    return Pair.of(\n        new GroupByQueryRunnerFactory(\n            strategySelector,\n            toolChest\n        ),\n        closer\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n    );\n    return new GroupByQueryRunnerFactory(\n        strategySelector,\n        toolChest\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":128,"groupId":"19839","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ca/c1ac443c67400ae804c502cc8b2cd262b17550.src","preCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n    );\n    return new GroupByQueryRunnerFactory(\n        strategySelector,\n        toolChest\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerFailureTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-02-05 01:18:12","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.sameThreadIntervalChunkingQueryRunnerDecorator()\n    );\n    final Closer closer = Closer.create();\n    closer.register(bufferPool);\n    closer.register(mergeBufferPool);\n    return Pair.of(\n        new GroupByQueryRunnerFactory(\n            strategySelector,\n            toolChest\n        ),\n        closer\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":406,"groupId":"19839","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig@finalDruidProcessingConfigprocessingConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/76/97506dd7d87c44ca1fada8cf624753ca12a2ea.src","preCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.sameThreadIntervalChunkingQueryRunnerDecorator()\n    );\n    final Closer closer = Closer.create();\n    closer.register(bufferPool);\n    closer.register(mergeBufferPool);\n    return Pair.of(\n        new GroupByQueryRunnerFactory(\n            strategySelector,\n            toolChest\n        ),\n        closer\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"N"},{"authorDate":"2019-02-05 01:18:12","commitOrder":2,"curCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    );\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","date":"2019-02-05 01:18:12","endLine":125,"groupId":"19839","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e8/04de9cf49de3c9150e50ca92b64a8f2066cf7f.src","preCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.NoopIntervalChunkingQueryRunnerDecorator()\n    );\n    return new GroupByQueryRunnerFactory(\n        strategySelector,\n        toolChest\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerFailureTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"0e926e865276f892ddc5b62685d331b822104022","commitMessage":"@@@Prohibit assigning concurrent maps into Map-typed variables and fields and fix a race condition in CoordinatorRuleManager (#6898)\n\n* Prohibit assigning concurrent maps into Map-types variables and fields; Fix a race condition in CoordinatorRuleManager; improve logic in DirectDruidClient and ResourcePool\n\n* Enforce that if compute().  computeIfAbsent().  computeIfPresent() or merge() is called on a ConcurrentHashMap.  it's stored in a ConcurrentHashMap-typed variable.  not ConcurrentMap; add comments explaining get()-before-computeIfAbsent() optimization; refactor Counters; fix a race condition in Intialization.java\n\n* Remove unnecessary comment\n\n* Checkstyle\n\n* Fix getFromExtensions()\n\n* Add a reference to the comment about guarded computeIfAbsent() optimization; IdentityHashMap optimization\n\n* Fix UriCacheGeneratorTest\n\n* Workaround issue with MaterializedViewQueryQueryToolChest\n\n* Strengthen Appenderator's contract regarding concurrency\n","date":"2019-02-05 01:18:12","modifiedFileCount":"101","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":3,"curCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.sameThreadIntervalChunkingQueryRunnerDecorator()\n    );\n    final Closer closer = Closer.create();\n    closer.register(bufferPool);\n    closer.register(mergeBufferPool);\n    return Pair.of(\n        new GroupByQueryRunnerFactory(\n            strategySelector,\n            toolChest\n        ),\n        closer\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":406,"groupId":"19839","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig@finalDruidProcessingConfigprocessingConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/76/97506dd7d87c44ca1fada8cf624753ca12a2ea.src","preCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.sameThreadIntervalChunkingQueryRunnerDecorator()\n    );\n    final Closer closer = Closer.create();\n    closer.register(bufferPool);\n    closer.register(mergeBufferPool);\n    return Pair.of(\n        new GroupByQueryRunnerFactory(\n            strategySelector,\n            toolChest\n        ),\n        closer\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"N"},{"authorDate":"2019-08-23 18:13:54","commitOrder":3,"curCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    );\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","date":"2019-08-23 18:13:54","endLine":124,"groupId":"19839","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/85/85aae4b55a04d0f9ad2b2f7c563b76517d97dd.src","preCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    );\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerFailureTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"},{"authorTime":"2019-10-23 21:44:28","codes":[{"authorDate":"2019-10-23 21:44:28","commitOrder":4,"curCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.sameThreadIntervalChunkingQueryRunnerDecorator()\n    );\n    final Closer closer = Closer.create();\n    closer.register(bufferPool);\n    closer.register(mergeBufferPool);\n    return Pair.of(new GroupByQueryRunnerFactory(strategySelector, toolChest), closer);\n  }\n","date":"2019-10-23 21:44:28","endLine":412,"groupId":"19839","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig@finalDruidProcessingConfigprocessingConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/87/f0de0b15bab9defa3ffd401e4b0322a6731d70.src","preCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.sameThreadIntervalChunkingQueryRunnerDecorator()\n    );\n    final Closer closer = Closer.create();\n    closer.register(bufferPool);\n    closer.register(mergeBufferPool);\n    return Pair.of(new GroupByQueryRunnerFactory(strategySelector, toolChest), closer);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":357,"status":"M"},{"authorDate":"2019-10-23 21:44:28","commitOrder":4,"curCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    );\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","date":"2019-10-23 21:44:28","endLine":126,"groupId":"19839","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/02/196e6dc85ddbf3fc92aa7417b60004ffe2a78d.src","preCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    );\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerFailureTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"f5b9bf55255b084a48a33ebb75d34df4453080ea","commitMessage":"@@@Cluster-wide configuration for query vectorization (#8657)\n\n* Cluster-wide configuration for query vectorization\n\n* add doc\n\n* fix build\n\n* fix doc\n\n* rename to QueryConfig and add javadoc\n\n* fix checkstyle\n\n* fix variable names\n","date":"2019-10-23 21:44:28","modifiedFileCount":"18","status":"M","submitter":"Jihoon Son"},{"authorTime":"2020-01-20 09:14:23","codes":[{"authorDate":"2020-01-20 09:14:23","commitOrder":5,"curCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    final Closer closer = Closer.create();\n    closer.register(bufferPool);\n    closer.register(mergeBufferPool);\n    return Pair.of(new GroupByQueryRunnerFactory(strategySelector, toolChest), closer);\n  }\n","date":"2020-01-20 09:14:23","endLine":410,"groupId":"19839","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig@finalDruidProcessingConfigprocessingConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b8/662e01f1df2e180ef9450666a29bcde60bf7bf.src","preCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.sameThreadIntervalChunkingQueryRunnerDecorator()\n    );\n    final Closer closer = Closer.create();\n    closer.register(bufferPool);\n    closer.register(mergeBufferPool);\n    return Pair.of(new GroupByQueryRunnerFactory(strategySelector, toolChest), closer);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"},{"authorDate":"2020-01-20 09:14:23","commitOrder":5,"curCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","date":"2020-01-20 09:14:23","endLine":123,"groupId":"19839","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/14/2f361b4e8c2fb1cf1bff288a8aa3c3c365d221.src","preCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(\n        strategySelector,\n        QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()\n    );\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerFailureTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"d21054f7c5f72f9db1ecfb72b46ee866876f1e4b","commitMessage":"@@@Remove the deprecated interval-chunking stuff. (#9216)\n\n* Remove the deprecated interval-chunking stuff.\n\nSee https://github.com/apache/druid/pull/6591.  https://github.com/apache/druid/pull/4004#issuecomment-284171911 for details.\n\n* Remove unused import.\n\n* Remove chunkInterval too.\n","date":"2020-01-20 09:14:23","modifiedFileCount":"65","status":"M","submitter":"Gian Merlino"},{"authorTime":"2020-01-20 09:14:23","codes":[{"authorDate":"2020-06-03 09:26:18","commitOrder":6,"curCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    final Closer closer = Closer.create();\n    closer.register(() -> {\n      \r\n      Assert.assertEquals(bufferPool.poolSize(), bufferPool.objectsCreatedCount());\n      bufferPool.close();\n    });\n    closer.register(mergeBufferPool);\n    return Pair.of(new GroupByQueryRunnerFactory(strategySelector, toolChest), closer);\n  }\n","date":"2020-06-03 09:26:18","endLine":414,"groupId":"19839","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig@finalDruidProcessingConfigprocessingConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/04/17d4a430ba8ee4870be805a1317ac22beda004.src","preCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    final Closer closer = Closer.create();\n    closer.register(bufferPool);\n    closer.register(mergeBufferPool);\n    return Pair.of(new GroupByQueryRunnerFactory(strategySelector, toolChest), closer);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"},{"authorDate":"2020-01-20 09:14:23","commitOrder":6,"curCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","date":"2020-01-20 09:14:23","endLine":123,"groupId":"19839","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/14/2f361b4e8c2fb1cf1bff288a8aa3c3c365d221.src","preCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerFailureTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"N"}],"commitId":"3d81564a14253515f9dc849334fa7db073eb5f58","commitMessage":"@@@Fix various processing buffer leaks and simplify BlockingPool. (#9928)\n\n* - GroupByQueryEngineV2: Fix leak of intermediate processing buffer when\n  exceptions are thrown before result sequence is created.\n- PooledTopNAlgorithm: Fix leak of intermediate processing buffer when\n  exceptions are thrown before the PooledTopNParams object is created.\n- BlockingPool: Remove unused \"take\" methods.\n\n* Add tests to verify that buffers have been returned.","date":"2020-06-03 09:26:18","modifiedFileCount":"10","status":"M","submitter":"Gian Merlino"},{"authorTime":"2020-07-30 06:19:18","codes":[{"authorDate":"2020-07-30 06:19:18","commitOrder":7,"curCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    final Closer closer = Closer.create();\n    closer.register(() -> {\n      \r\n      Assert.assertEquals(bufferPool.poolSize(), bufferPool.objectsCreatedCount());\n      bufferPool.close();\n    });\n    closer.register(mergeBufferPool);\n    return Pair.of(new GroupByQueryRunnerFactory(strategySelector, toolChest), closer);\n  }\n","date":"2020-07-30 06:19:18","endLine":413,"groupId":"106427","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig@finalDruidProcessingConfigprocessingConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e8/ab616c0fad68a016579f2df9e8be147134bbd0.src","preCode":"  public static Pair<GroupByQueryRunnerFactory, Closer> makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config,\n      final DruidProcessingConfig processingConfig\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n    final CloseableStupidPool<ByteBuffer> bufferPool = new CloseableStupidPool<>(\n        \"GroupByQueryEngine-bufferPool\",\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        }\n    );\n    final CloseableDefaultBlockingPool<ByteBuffer> mergeBufferPool = new CloseableDefaultBlockingPool<>(\n        new Supplier<ByteBuffer>()\n        {\n          @Override\n          public ByteBuffer get()\n          {\n            return ByteBuffer.allocateDirect(processingConfig.intermediateComputeSizeBytes());\n          }\n        },\n        processingConfig.getNumMergeBuffers()\n    );\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, bufferPool),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            bufferPool\n        ),\n        new GroupByStrategyV2(\n            processingConfig,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            bufferPool,\n            mergeBufferPool,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    final Closer closer = Closer.create();\n    closer.register(() -> {\n      \r\n      Assert.assertEquals(bufferPool.poolSize(), bufferPool.objectsCreatedCount());\n      bufferPool.close();\n    });\n    closer.register(mergeBufferPool);\n    return Pair.of(new GroupByQueryRunnerFactory(strategySelector, toolChest), closer);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"},{"authorDate":"2020-07-30 06:19:18","commitOrder":7,"curCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","date":"2020-07-30 06:19:18","endLine":121,"groupId":"106427","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"makeQueryRunnerFactory","params":"(finalObjectMappermapper@finalGroupByQueryConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/70/806e6e55d2fa8da68636feabf938cac1858557.src","preCode":"  private static GroupByQueryRunnerFactory makeQueryRunnerFactory(\n      final ObjectMapper mapper,\n      final GroupByQueryConfig config\n  )\n  {\n    final Supplier<GroupByQueryConfig> configSupplier = Suppliers.ofInstance(config);\n\n    final GroupByStrategySelector strategySelector = new GroupByStrategySelector(\n        configSupplier,\n        new GroupByStrategyV1(\n            configSupplier,\n            new GroupByQueryEngine(configSupplier, BUFFER_POOL),\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER,\n            BUFFER_POOL\n        ),\n        new GroupByStrategyV2(\n            DEFAULT_PROCESSING_CONFIG,\n            configSupplier,\n            Suppliers.ofInstance(new QueryConfig()),\n            BUFFER_POOL,\n            MERGE_BUFFER_POOL,\n            mapper,\n            QueryRunnerTestHelper.NOOP_QUERYWATCHER\n        )\n    );\n    final GroupByQueryQueryToolChest toolChest = new GroupByQueryQueryToolChest(strategySelector);\n    return new GroupByQueryRunnerFactory(strategySelector, toolChest);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryRunnerFailureTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"574b062f1f6f1cf0637d99d4ea540a95971c7489","commitMessage":"@@@Cluster wide default query context setting (#10208)\n\n* Cluster wide default query context setting\n\n* Cluster wide default query context setting\n\n* Cluster wide default query context setting\n\n* add docs\n\n* fix docs\n\n* update props\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix checkstyle\n\n* update docs\n\n* address comments\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix NPE","date":"2020-07-30 06:19:18","modifiedFileCount":"21","status":"M","submitter":"Maytas Monsereenusorn"}]
