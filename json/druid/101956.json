[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testCountStarWithLongColumnFiltersOnTwoPoints() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo WHERE cnt = 1 OR cnt = 2\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(QSS(Filtration.eternity()))\n                  .granularity(Granularities.ALL)\n                  .filters(IN(\"cnt\", ImmutableList.of(\"1\", \"2\"), null))\n                  .aggregators(AGGS(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{6L}\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":2437,"groupId":"6922","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCountStarWithLongColumnFiltersOnTwoPoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d7/379ded006b366f1ea8ef06ae925a08ff61040e.src","preCode":"  public void testCountStarWithLongColumnFiltersOnTwoPoints() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo WHERE cnt = 1 OR cnt = 2\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(QSS(Filtration.eternity()))\n                  .granularity(Granularities.ALL)\n                  .filters(IN(\"cnt\", ImmutableList.of(\"1\", \"2\"), null))\n                  .aggregators(AGGS(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{6L}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2419,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testCountStarWithBoundFilterSimplifyOnMetric() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo WHERE 2.5 < m1 AND m1 < 3.5\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(QSS(Filtration.eternity()))\n                  .granularity(Granularities.ALL)\n                  .filters(BOUND(\"m1\", \"2.5\", \"3.5\", true, true, null, StringComparators.NUMERIC))\n                  .aggregators(AGGS(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{1L}\n        )\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":3119,"groupId":"18730","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountStarWithBoundFilterSimplifyOnMetric","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d7/379ded006b366f1ea8ef06ae925a08ff61040e.src","preCode":"  public void testCountStarWithBoundFilterSimplifyOnMetric() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo WHERE 2.5 < m1 AND m1 < 3.5\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(QSS(Filtration.eternity()))\n                  .granularity(Granularities.ALL)\n                  .filters(BOUND(\"m1\", \"2.5\", \"3.5\", true, true, null, StringComparators.NUMERIC))\n                  .aggregators(AGGS(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{1L}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3101,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-02-24 12:10:31","codes":[{"authorDate":"2019-02-24 12:10:31","commitOrder":2,"curCode":"  public void testCountStarWithLongColumnFiltersOnTwoPoints() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo WHERE cnt = 1 OR cnt = 2\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec(Filtration.eternity()))\n                  .granularity(Granularities.ALL)\n                  .filters(in(\"cnt\", ImmutableList.of(\"1\", \"2\"), null))\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{6L}\n        )\n    );\n  }\n","date":"2019-02-24 12:10:31","endLine":2284,"groupId":"9279","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCountStarWithLongColumnFiltersOnTwoPoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ad/6030fb8d73521776662c2a97e0f873c4ad7d0f.src","preCode":"  public void testCountStarWithLongColumnFiltersOnTwoPoints() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo WHERE cnt = 1 OR cnt = 2\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(QSS(Filtration.eternity()))\n                  .granularity(Granularities.ALL)\n                  .filters(IN(\"cnt\", ImmutableList.of(\"1\", \"2\"), null))\n                  .aggregators(AGGS(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{6L}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2266,"status":"M"},{"authorDate":"2019-02-24 12:10:31","commitOrder":2,"curCode":"  public void testCountStarWithBoundFilterSimplifyOnMetric() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo WHERE 2.5 < m1 AND m1 < 3.5\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec(Filtration.eternity()))\n                  .granularity(Granularities.ALL)\n                  .filters(bound(\"m1\", \"2.5\", \"3.5\", true, true, null, StringComparators.NUMERIC))\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{1L}\n        )\n    );\n  }\n","date":"2019-02-24 12:10:31","endLine":2979,"groupId":"19547","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountStarWithBoundFilterSimplifyOnMetric","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ad/6030fb8d73521776662c2a97e0f873c4ad7d0f.src","preCode":"  public void testCountStarWithBoundFilterSimplifyOnMetric() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo WHERE 2.5 < m1 AND m1 < 3.5\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(QSS(Filtration.eternity()))\n                  .granularity(Granularities.ALL)\n                  .filters(BOUND(\"m1\", \"2.5\", \"3.5\", true, true, null, StringComparators.NUMERIC))\n                  .aggregators(AGGS(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{1L}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2961,"status":"M"}],"commitId":"8b803cbc22b15799fd0526de8d6d0eea155ad733","commitMessage":"@@@Added checkstyle for \"Methods starting with Capital Letters\"  (#7118)\n\n* Added checkstyle for \"Methods starting with Capital Letters\" and changed the method names violating this.\n\n* Un-abbreviate the method names in the calcite tests\n\n* Fixed checkstyle errors\n\n* Changed asserts position in the code\n","date":"2019-02-24 12:10:31","modifiedFileCount":"24","status":"M","submitter":"Himanshu Pandey"},{"authorTime":"2021-05-11 01:13:37","codes":[{"authorDate":"2021-05-11 01:13:37","commitOrder":3,"curCode":"  public void testCountStarWithLongColumnFiltersOnTwoPoints() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo WHERE cnt = 1 OR cnt = 2\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec(Filtration.eternity()))\n                  .granularity(Granularities.ALL)\n                  .filters(in(\"cnt\", ImmutableList.of(\"1\", \"2\"), null))\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(QUERY_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{6L}\n        )\n    );\n  }\n","date":"2021-05-11 01:13:37","endLine":5967,"groupId":"101956","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCountStarWithLongColumnFiltersOnTwoPoints","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/fd99b05ebe6da94fffaa752ce8de0e97ef485f.src","preCode":"  public void testCountStarWithLongColumnFiltersOnTwoPoints() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo WHERE cnt = 1 OR cnt = 2\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec(Filtration.eternity()))\n                  .granularity(Granularities.ALL)\n                  .filters(in(\"cnt\", ImmutableList.of(\"1\", \"2\"), null))\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{6L}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":5949,"status":"M"},{"authorDate":"2021-05-11 01:13:37","commitOrder":3,"curCode":"  public void testCountStarWithBoundFilterSimplifyOnMetric() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo WHERE 2.5 < m1 AND m1 < 3.5\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec(Filtration.eternity()))\n                  .granularity(Granularities.ALL)\n                  .filters(bound(\"m1\", \"2.5\", \"3.5\", true, true, null, StringComparators.NUMERIC))\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(QUERY_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{1L}\n        )\n    );\n  }\n","date":"2021-05-11 01:13:37","endLine":6799,"groupId":"101956","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCountStarWithBoundFilterSimplifyOnMetric","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/fd99b05ebe6da94fffaa752ce8de0e97ef485f.src","preCode":"  public void testCountStarWithBoundFilterSimplifyOnMetric() throws Exception\n  {\n    testQuery(\n        \"SELECT COUNT(*) FROM druid.foo WHERE 2.5 < m1 AND m1 < 3.5\",\n        ImmutableList.of(\n            Druids.newTimeseriesQueryBuilder()\n                  .dataSource(CalciteTests.DATASOURCE1)\n                  .intervals(querySegmentSpec(Filtration.eternity()))\n                  .granularity(Granularities.ALL)\n                  .filters(bound(\"m1\", \"2.5\", \"3.5\", true, true, null, StringComparators.NUMERIC))\n                  .aggregators(aggregators(new CountAggregatorFactory(\"a0\")))\n                  .context(TIMESERIES_CONTEXT_DEFAULT)\n                  .build()\n        ),\n        ImmutableList.of(\n            new Object[]{1L}\n        )\n    );\n  }\n","realPath":"sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":6781,"status":"M"}],"commitId":"691d7a1d548909951468005348a603380f4d6d74","commitMessage":"@@@SQL timeseries no longer skip empty buckets with all granularity (#11188)\n\n* SQL timeseries no longer skip empty buckets with all granularity\n\n* add comment.  fix tests\n\n* the ol switcheroo\n\n* revert unintended change\n\n* docs and more tests\n\n* style\n\n* make checkstyle happy\n\n* docs fixes and more tests\n\n* add docs.  tests for array_agg\n\n* fixes\n\n* oops\n\n* doc stuffs\n\n* fix compile.  match doc style","date":"2021-05-11 01:13:37","modifiedFileCount":"16","status":"M","submitter":"Clint Wylie"}]
