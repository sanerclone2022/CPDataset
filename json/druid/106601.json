[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testNoOverrides()\n  {\n    final GroupByQueryConfig config = MAPPER.convertValue(CONFIG_MAP, GroupByQueryConfig.class);\n    final GroupByQueryConfig config2 = config.withOverrides(\n        GroupByQuery.builder()\n                    .setDataSource(\"test\")\n                    .setInterval(Intervals.of(\"2000/P1D\"))\n                    .setGranularity(Granularities.ALL)\n                    .build()\n    );\n\n    Assert.assertEquals(true, config2.isSingleThreaded());\n    Assert.assertEquals(\"v2\", config2.getDefaultStrategy());\n    Assert.assertEquals(1, config2.getBufferGrouperInitialBuckets());\n    Assert.assertEquals(2, config2.getMaxIntermediateRows());\n    Assert.assertEquals(3, config2.getMaxResults());\n    Assert.assertEquals(4, config2.getMaxOnDiskStorage());\n    Assert.assertEquals(5, config2.getMaxMergingDictionarySize());\n    Assert.assertEquals(6.0, config2.getBufferGrouperMaxLoadFactor(), 0.0);\n  }\n","date":"2018-08-31 00:56:26","endLine":81,"groupId":"8095","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoOverrides","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/74/d5e28c9aa7d7c20fe4324ad1a5d8a58f46e6b4.src","preCode":"  public void testNoOverrides()\n  {\n    final GroupByQueryConfig config = MAPPER.convertValue(CONFIG_MAP, GroupByQueryConfig.class);\n    final GroupByQueryConfig config2 = config.withOverrides(\n        GroupByQuery.builder()\n                    .setDataSource(\"test\")\n                    .setInterval(Intervals.of(\"2000/P1D\"))\n                    .setGranularity(Granularities.ALL)\n                    .build()\n    );\n\n    Assert.assertEquals(true, config2.isSingleThreaded());\n    Assert.assertEquals(\"v2\", config2.getDefaultStrategy());\n    Assert.assertEquals(1, config2.getBufferGrouperInitialBuckets());\n    Assert.assertEquals(2, config2.getMaxIntermediateRows());\n    Assert.assertEquals(3, config2.getMaxResults());\n    Assert.assertEquals(4, config2.getMaxOnDiskStorage());\n    Assert.assertEquals(5, config2.getMaxMergingDictionarySize());\n    Assert.assertEquals(6.0, config2.getBufferGrouperMaxLoadFactor(), 0.0);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testOverrides()\n  {\n    final GroupByQueryConfig config = MAPPER.convertValue(CONFIG_MAP, GroupByQueryConfig.class);\n    final GroupByQueryConfig config2 = config.withOverrides(\n        GroupByQuery.builder()\n                    .setDataSource(\"test\")\n                    .setInterval(Intervals.of(\"2000/P1D\"))\n                    .setGranularity(Granularities.ALL)\n                    .setContext(\n                        ImmutableMap.of(\n                            \"groupByStrategy\", \"v1\",\n                            \"maxOnDiskStorage\", 0,\n                            \"maxResults\", 2,\n                            \"maxMergingDictionarySize\", 3\n                        )\n                    )\n                    .build()\n    );\n\n    Assert.assertEquals(true, config2.isSingleThreaded());\n    Assert.assertEquals(\"v1\", config2.getDefaultStrategy());\n    Assert.assertEquals(1, config2.getBufferGrouperInitialBuckets());\n    Assert.assertEquals(2, config2.getMaxIntermediateRows());\n    Assert.assertEquals(2, config2.getMaxResults());\n    Assert.assertEquals(0, config2.getMaxOnDiskStorage());\n    Assert.assertEquals(3, config2.getMaxMergingDictionarySize());\n    Assert.assertEquals(6.0, config2.getBufferGrouperMaxLoadFactor(), 0.0);\n  }\n","date":"2018-08-31 00:56:26","endLine":111,"groupId":"5007","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOverrides","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/74/d5e28c9aa7d7c20fe4324ad1a5d8a58f46e6b4.src","preCode":"  public void testOverrides()\n  {\n    final GroupByQueryConfig config = MAPPER.convertValue(CONFIG_MAP, GroupByQueryConfig.class);\n    final GroupByQueryConfig config2 = config.withOverrides(\n        GroupByQuery.builder()\n                    .setDataSource(\"test\")\n                    .setInterval(Intervals.of(\"2000/P1D\"))\n                    .setGranularity(Granularities.ALL)\n                    .setContext(\n                        ImmutableMap.of(\n                            \"groupByStrategy\", \"v1\",\n                            \"maxOnDiskStorage\", 0,\n                            \"maxResults\", 2,\n                            \"maxMergingDictionarySize\", 3\n                        )\n                    )\n                    .build()\n    );\n\n    Assert.assertEquals(true, config2.isSingleThreaded());\n    Assert.assertEquals(\"v1\", config2.getDefaultStrategy());\n    Assert.assertEquals(1, config2.getBufferGrouperInitialBuckets());\n    Assert.assertEquals(2, config2.getMaxIntermediateRows());\n    Assert.assertEquals(2, config2.getMaxResults());\n    Assert.assertEquals(0, config2.getMaxOnDiskStorage());\n    Assert.assertEquals(3, config2.getMaxMergingDictionarySize());\n    Assert.assertEquals(6.0, config2.getBufferGrouperMaxLoadFactor(), 0.0);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-10-09 06:35:07","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void testNoOverrides()\n  {\n    final GroupByQueryConfig config = MAPPER.convertValue(CONFIG_MAP, GroupByQueryConfig.class);\n    final GroupByQueryConfig config2 = config.withOverrides(\n        GroupByQuery.builder()\n                    .setDataSource(\"test\")\n                    .setInterval(Intervals.of(\"2000/P1D\"))\n                    .setGranularity(Granularities.ALL)\n                    .build()\n    );\n\n    Assert.assertEquals(true, config2.isSingleThreaded());\n    Assert.assertEquals(\"v2\", config2.getDefaultStrategy());\n    Assert.assertEquals(1, config2.getBufferGrouperInitialBuckets());\n    Assert.assertEquals(2, config2.getMaxIntermediateRows());\n    Assert.assertEquals(3, config2.getMaxResults());\n    Assert.assertEquals(4, config2.getMaxOnDiskStorage());\n    Assert.assertEquals(5, config2.getMaxMergingDictionarySize());\n    Assert.assertEquals(6.0, config2.getBufferGrouperMaxLoadFactor(), 0.0);\n  }\n","date":"2018-08-31 00:56:26","endLine":81,"groupId":"8095","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoOverrides","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/74/d5e28c9aa7d7c20fe4324ad1a5d8a58f46e6b4.src","preCode":"  public void testNoOverrides()\n  {\n    final GroupByQueryConfig config = MAPPER.convertValue(CONFIG_MAP, GroupByQueryConfig.class);\n    final GroupByQueryConfig config2 = config.withOverrides(\n        GroupByQuery.builder()\n                    .setDataSource(\"test\")\n                    .setInterval(Intervals.of(\"2000/P1D\"))\n                    .setGranularity(Granularities.ALL)\n                    .build()\n    );\n\n    Assert.assertEquals(true, config2.isSingleThreaded());\n    Assert.assertEquals(\"v2\", config2.getDefaultStrategy());\n    Assert.assertEquals(1, config2.getBufferGrouperInitialBuckets());\n    Assert.assertEquals(2, config2.getMaxIntermediateRows());\n    Assert.assertEquals(3, config2.getMaxResults());\n    Assert.assertEquals(4, config2.getMaxOnDiskStorage());\n    Assert.assertEquals(5, config2.getMaxMergingDictionarySize());\n    Assert.assertEquals(6.0, config2.getBufferGrouperMaxLoadFactor(), 0.0);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"N"},{"authorDate":"2019-10-09 06:35:07","commitOrder":2,"curCode":"  public void testOverrides()\n  {\n    final GroupByQueryConfig config = MAPPER.convertValue(CONFIG_MAP, GroupByQueryConfig.class);\n    final GroupByQueryConfig config2 = config.withOverrides(\n        GroupByQuery.builder()\n                    .setDataSource(\"test\")\n                    .setInterval(Intervals.of(\"2000/P1D\"))\n                    .setGranularity(Granularities.ALL)\n                    .setContext(\n                        ImmutableMap.of(\n                            \"groupByStrategy\", \"v1\",\n                            \"maxOnDiskStorage\", 0,\n                            \"maxResults\", 2,\n                            \"maxMergingDictionarySize\", 3,\n                            \"applyLimitPushDownToSegment\", false\n                        )\n                    )\n                    .build()\n    );\n\n    Assert.assertEquals(true, config2.isSingleThreaded());\n    Assert.assertEquals(\"v1\", config2.getDefaultStrategy());\n    Assert.assertEquals(1, config2.getBufferGrouperInitialBuckets());\n    Assert.assertEquals(2, config2.getMaxIntermediateRows());\n    Assert.assertEquals(2, config2.getMaxResults());\n    Assert.assertEquals(0, config2.getMaxOnDiskStorage());\n    Assert.assertEquals(3, config2.getMaxMergingDictionarySize());\n    Assert.assertEquals(6.0, config2.getBufferGrouperMaxLoadFactor(), 0.0);\n    Assert.assertFalse(config2.isApplyLimitPushDownToSegment());\n  }\n","date":"2019-10-09 06:35:07","endLine":113,"groupId":"5007","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testOverrides","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4c/b5e8040050e43aa953784c238bf710162c5f96.src","preCode":"  public void testOverrides()\n  {\n    final GroupByQueryConfig config = MAPPER.convertValue(CONFIG_MAP, GroupByQueryConfig.class);\n    final GroupByQueryConfig config2 = config.withOverrides(\n        GroupByQuery.builder()\n                    .setDataSource(\"test\")\n                    .setInterval(Intervals.of(\"2000/P1D\"))\n                    .setGranularity(Granularities.ALL)\n                    .setContext(\n                        ImmutableMap.of(\n                            \"groupByStrategy\", \"v1\",\n                            \"maxOnDiskStorage\", 0,\n                            \"maxResults\", 2,\n                            \"maxMergingDictionarySize\", 3\n                        )\n                    )\n                    .build()\n    );\n\n    Assert.assertEquals(true, config2.isSingleThreaded());\n    Assert.assertEquals(\"v1\", config2.getDefaultStrategy());\n    Assert.assertEquals(1, config2.getBufferGrouperInitialBuckets());\n    Assert.assertEquals(2, config2.getMaxIntermediateRows());\n    Assert.assertEquals(2, config2.getMaxResults());\n    Assert.assertEquals(0, config2.getMaxOnDiskStorage());\n    Assert.assertEquals(3, config2.getMaxMergingDictionarySize());\n    Assert.assertEquals(6.0, config2.getBufferGrouperMaxLoadFactor(), 0.0);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"c078ed40fd9e24e2008178156953a384a1c910e1","commitMessage":"@@@ groupBy query: optional limit push down to segment scan (#8426)\n\n* groupBy query: optional limit push down to segment scan\n\n* make segment level limit push down configurable\n\n* fix teamcity errors\n\n* fix segment limit pushdown flag handling on query level config override\n\n* use equals for comparator check\n\n* fix sql and null handling\n\n* fix unused imports\n\n* handle null offset in NullableValueGroupByColumnSelectorStrategy for buffer comparator similar to RowBasedGrouperHelper.NullableRowBasedKeySerdeHelper\n","date":"2019-10-09 06:35:07","modifiedFileCount":"11","status":"M","submitter":"Himanshu"},{"authorTime":"2020-04-16 18:03:35","codes":[{"authorDate":"2020-04-16 18:03:35","commitOrder":3,"curCode":"  public void testNoOverrides()\n  {\n    final GroupByQueryConfig config = MAPPER.convertValue(CONFIG_MAP, GroupByQueryConfig.class);\n    final GroupByQueryConfig config2 = config.withOverrides(\n        GroupByQuery.builder()\n                    .setDataSource(\"test\")\n                    .setInterval(Intervals.of(\"2000/P1D\"))\n                    .setGranularity(Granularities.ALL)\n                    .build()\n    );\n\n    Assert.assertEquals(true, config2.isSingleThreaded());\n    Assert.assertEquals(\"v2\", config2.getDefaultStrategy());\n    Assert.assertEquals(1, config2.getBufferGrouperInitialBuckets());\n    Assert.assertEquals(2, config2.getMaxIntermediateRows());\n    Assert.assertEquals(3, config2.getMaxResults());\n    Assert.assertEquals(4, config2.getMaxOnDiskStorage());\n    Assert.assertEquals(5, config2.getMaxMergingDictionarySize());\n    Assert.assertEquals(6.0, config2.getBufferGrouperMaxLoadFactor(), 0.0);\n    Assert.assertFalse(config2.isApplyLimitPushDownToSegment());\n  }\n","date":"2020-04-16 18:03:35","endLine":83,"groupId":"106601","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testNoOverrides","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/fb/0090f4212949c6b0435a8a182814f446b3de56.src","preCode":"  public void testNoOverrides()\n  {\n    final GroupByQueryConfig config = MAPPER.convertValue(CONFIG_MAP, GroupByQueryConfig.class);\n    final GroupByQueryConfig config2 = config.withOverrides(\n        GroupByQuery.builder()\n                    .setDataSource(\"test\")\n                    .setInterval(Intervals.of(\"2000/P1D\"))\n                    .setGranularity(Granularities.ALL)\n                    .build()\n    );\n\n    Assert.assertEquals(true, config2.isSingleThreaded());\n    Assert.assertEquals(\"v2\", config2.getDefaultStrategy());\n    Assert.assertEquals(1, config2.getBufferGrouperInitialBuckets());\n    Assert.assertEquals(2, config2.getMaxIntermediateRows());\n    Assert.assertEquals(3, config2.getMaxResults());\n    Assert.assertEquals(4, config2.getMaxOnDiskStorage());\n    Assert.assertEquals(5, config2.getMaxMergingDictionarySize());\n    Assert.assertEquals(6.0, config2.getBufferGrouperMaxLoadFactor(), 0.0);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-04-16 18:03:35","commitOrder":3,"curCode":"  public void testOverrides()\n  {\n    final GroupByQueryConfig config = MAPPER.convertValue(CONFIG_MAP, GroupByQueryConfig.class);\n    final GroupByQueryConfig config2 = config.withOverrides(\n        GroupByQuery.builder()\n                    .setDataSource(\"test\")\n                    .setInterval(Intervals.of(\"2000/P1D\"))\n                    .setGranularity(Granularities.ALL)\n                    .setContext(\n                        ImmutableMap.of(\n                            \"groupByStrategy\", \"v1\",\n                            \"maxOnDiskStorage\", 0,\n                            \"maxResults\", 2,\n                            \"maxMergingDictionarySize\", 3,\n                            \"applyLimitPushDownToSegment\", true\n                        )\n                    )\n                    .build()\n    );\n\n    Assert.assertEquals(true, config2.isSingleThreaded());\n    Assert.assertEquals(\"v1\", config2.getDefaultStrategy());\n    Assert.assertEquals(1, config2.getBufferGrouperInitialBuckets());\n    Assert.assertEquals(2, config2.getMaxIntermediateRows());\n    Assert.assertEquals(2, config2.getMaxResults());\n    Assert.assertEquals(0, config2.getMaxOnDiskStorage());\n    Assert.assertEquals(3, config2.getMaxMergingDictionarySize());\n    Assert.assertEquals(6.0, config2.getBufferGrouperMaxLoadFactor(), 0.0);\n    Assert.assertTrue(config2.isApplyLimitPushDownToSegment());\n  }\n","date":"2020-04-16 18:03:35","endLine":115,"groupId":"106601","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testOverrides","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/fb/0090f4212949c6b0435a8a182814f446b3de56.src","preCode":"  public void testOverrides()\n  {\n    final GroupByQueryConfig config = MAPPER.convertValue(CONFIG_MAP, GroupByQueryConfig.class);\n    final GroupByQueryConfig config2 = config.withOverrides(\n        GroupByQuery.builder()\n                    .setDataSource(\"test\")\n                    .setInterval(Intervals.of(\"2000/P1D\"))\n                    .setGranularity(Granularities.ALL)\n                    .setContext(\n                        ImmutableMap.of(\n                            \"groupByStrategy\", \"v1\",\n                            \"maxOnDiskStorage\", 0,\n                            \"maxResults\", 2,\n                            \"maxMergingDictionarySize\", 3,\n                            \"applyLimitPushDownToSegment\", false\n                        )\n                    )\n                    .build()\n    );\n\n    Assert.assertEquals(true, config2.isSingleThreaded());\n    Assert.assertEquals(\"v1\", config2.getDefaultStrategy());\n    Assert.assertEquals(1, config2.getBufferGrouperInitialBuckets());\n    Assert.assertEquals(2, config2.getMaxIntermediateRows());\n    Assert.assertEquals(2, config2.getMaxResults());\n    Assert.assertEquals(0, config2.getMaxOnDiskStorage());\n    Assert.assertEquals(3, config2.getMaxMergingDictionarySize());\n    Assert.assertEquals(6.0, config2.getBufferGrouperMaxLoadFactor(), 0.0);\n    Assert.assertFalse(config2.isApplyLimitPushDownToSegment());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"b89ad49396387bfb931ea936a65986700ca1ff9e","commitMessage":"@@@disable group by config applyLimitPushDownToSegment by default (#9711)\n\n* disable group by config applyLimitPushDownToSegment by default\n\n* document","date":"2020-04-16 18:03:35","modifiedFileCount":"2","status":"M","submitter":"Clint Wylie"}]
