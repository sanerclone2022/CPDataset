[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public Response createRole(String authorizerName, String roleName)\n  {\n    final BasicRoleBasedAuthorizer authorizer = authorizerMap.get(authorizerName);\n    if (authorizer == null) {\n      return makeResponseForAuthorizerNotFound(authorizerName);\n    }\n\n    try {\n      storageUpdater.createRole(authorizerName, roleName);\n      return Response.ok().build();\n    }\n    catch (BasicSecurityDBResourceException cfe) {\n      return makeResponseForBasicSecurityDBResourceException(cfe);\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":190,"groupId":"19819","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createRole","params":"(StringauthorizerName@StringroleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/7a/a53d8c27627d9b4ec654bf1422224c924f5203.src","preCode":"  public Response createRole(String authorizerName, String roleName)\n  {\n    final BasicRoleBasedAuthorizer authorizer = authorizerMap.get(authorizerName);\n    if (authorizer == null) {\n      return makeResponseForAuthorizerNotFound(authorizerName);\n    }\n\n    try {\n      storageUpdater.createRole(authorizerName, roleName);\n      return Response.ok().build();\n    }\n    catch (BasicSecurityDBResourceException cfe) {\n      return makeResponseForBasicSecurityDBResourceException(cfe);\n    }\n  }\n","realPath":"extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authorization/endpoint/CoordinatorBasicAuthorizerResourceHandler.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public Response assignRoleToUser(String authorizerName, String userName, String roleName)\n  {\n    final BasicRoleBasedAuthorizer authorizer = authorizerMap.get(authorizerName);\n    if (authorizer == null) {\n      return makeResponseForAuthorizerNotFound(authorizerName);\n    }\n\n    try {\n      storageUpdater.assignRole(authorizerName, userName, roleName);\n      return Response.ok().build();\n    }\n    catch (BasicSecurityDBResourceException cfe) {\n      return makeResponseForBasicSecurityDBResourceException(cfe);\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":224,"groupId":"21324","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assignRoleToUser","params":"(StringauthorizerName@StringuserName@StringroleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/7a/a53d8c27627d9b4ec654bf1422224c924f5203.src","preCode":"  public Response assignRoleToUser(String authorizerName, String userName, String roleName)\n  {\n    final BasicRoleBasedAuthorizer authorizer = authorizerMap.get(authorizerName);\n    if (authorizer == null) {\n      return makeResponseForAuthorizerNotFound(authorizerName);\n    }\n\n    try {\n      storageUpdater.assignRole(authorizerName, userName, roleName);\n      return Response.ok().build();\n    }\n    catch (BasicSecurityDBResourceException cfe) {\n      return makeResponseForBasicSecurityDBResourceException(cfe);\n    }\n  }\n","realPath":"extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authorization/endpoint/CoordinatorBasicAuthorizerResourceHandler.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-10-09 08:08:27","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public Response createRole(String authorizerName, String roleName)\n  {\n    final BasicRoleBasedAuthorizer authorizer = authorizerMap.get(authorizerName);\n    if (authorizer == null) {\n      return makeResponseForAuthorizerNotFound(authorizerName);\n    }\n\n    try {\n      storageUpdater.createRole(authorizerName, roleName);\n      return Response.ok().build();\n    }\n    catch (BasicSecurityDBResourceException cfe) {\n      return makeResponseForBasicSecurityDBResourceException(cfe);\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":190,"groupId":"103148","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createRole","params":"(StringauthorizerName@StringroleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/7a/a53d8c27627d9b4ec654bf1422224c924f5203.src","preCode":"  public Response createRole(String authorizerName, String roleName)\n  {\n    final BasicRoleBasedAuthorizer authorizer = authorizerMap.get(authorizerName);\n    if (authorizer == null) {\n      return makeResponseForAuthorizerNotFound(authorizerName);\n    }\n\n    try {\n      storageUpdater.createRole(authorizerName, roleName);\n      return Response.ok().build();\n    }\n    catch (BasicSecurityDBResourceException cfe) {\n      return makeResponseForBasicSecurityDBResourceException(cfe);\n    }\n  }\n","realPath":"extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authorization/endpoint/CoordinatorBasicAuthorizerResourceHandler.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"N"},{"authorDate":"2019-10-09 08:08:27","commitOrder":2,"curCode":"  public Response assignRoleToUser(String authorizerName, String userName, String roleName)\n  {\n    final BasicRoleBasedAuthorizer authorizer = authorizerMap.get(authorizerName);\n    if (authorizer == null) {\n      return makeResponseForAuthorizerNotFound(authorizerName);\n    }\n\n    try {\n      storageUpdater.assignUserRole(authorizerName, userName, roleName);\n      return Response.ok().build();\n    }\n    catch (BasicSecurityDBResourceException cfe) {\n      return makeResponseForBasicSecurityDBResourceException(cfe);\n    }\n  }\n","date":"2019-10-09 08:08:27","endLine":292,"groupId":"103148","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"assignRoleToUser","params":"(StringauthorizerName@StringuserName@StringroleName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/13/ef116067b3595e5d16a1fa2255aa0010c0c91d.src","preCode":"  public Response assignRoleToUser(String authorizerName, String userName, String roleName)\n  {\n    final BasicRoleBasedAuthorizer authorizer = authorizerMap.get(authorizerName);\n    if (authorizer == null) {\n      return makeResponseForAuthorizerNotFound(authorizerName);\n    }\n\n    try {\n      storageUpdater.assignRole(authorizerName, userName, roleName);\n      return Response.ok().build();\n    }\n    catch (BasicSecurityDBResourceException cfe) {\n      return makeResponseForBasicSecurityDBResourceException(cfe);\n    }\n  }\n","realPath":"extensions-core/druid-basic-security/src/main/java/org/apache/druid/security/basic/authorization/endpoint/CoordinatorBasicAuthorizerResourceHandler.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"M"}],"commitId":"18758f52283696ba12ab0763260909b7ca734f1e","commitMessage":"@@@Support LDAP authentication/authorization (#6972)\n\n* Support LDAP authentication/authorization\n\n* fixed integration-tests\n\n* fixed Travis CI build errors related to druid-security module\n\n* fixed failing test\n\n* fixed failing test header\n\n* added comments.  force build\n\n* fixes for strict compilation spotbugs checks\n\n* removed authenticator rolling credential update feature\n\n* removed escalator rolling credential update feature\n\n* fixed teamcity inspection deprecated API usage error\n\n* fixed checkstyle execution error.  removed unused import\n\n* removed cached config as part of removing authenticator rolling credential update feature\n\n* removed config bundle entity as part of removing authenticator rolling credential update feature\n\n* refactored ldao configuration\n\n* added support for SSLContext configuration and TLSCertificateChecker\n\n* removed check to return authentication failure when user has no group assigned.  will be checked and handled by the authorizer\n\n* Separate out authorizer checks between metadata-backed store user and LDAP user/groups\n\n* refactored BasicSecuritySSLSocketFactory usage to fix strict compilation spotbugs checks\n\n* fixes build issue\n\n* final review comments updates\n\n* final review comments updates\n\n* fixed LGTM and spellcheck alerts\n\n* Fixed Avatica auth failure error message check\n\n* Updated metadata credentials validator exception message string.  replaced DB with metadata store\n","date":"2019-10-09 08:08:27","modifiedFileCount":"44","status":"M","submitter":"Mohammad J. Khan"}]
