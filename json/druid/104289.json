[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testRun() throws Exception\n  {\n    doSetup();\n\n    ListenableFuture<TaskStatus> result = remoteTaskRunner.run(task);\n\n    Assert.assertTrue(taskAnnounced(task.getId()));\n    mockWorkerRunningTask(task);\n    Assert.assertTrue(workerRunningTask(task.getId()));\n    mockWorkerCompleteSuccessfulTask(task);\n    Assert.assertTrue(workerCompletedTask(result));\n\n    Assert.assertEquals(task.getId(), result.get().getId());\n    Assert.assertEquals(TaskState.SUCCESS, result.get().getStatusCode());\n  }\n","date":"2018-08-31 00:56:26","endLine":109,"groupId":"9001","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/92/0d401ee5a40638f258d57962b56fffc87f3f23.src","preCode":"  public void testRun() throws Exception\n  {\n    doSetup();\n\n    ListenableFuture<TaskStatus> result = remoteTaskRunner.run(task);\n\n    Assert.assertTrue(taskAnnounced(task.getId()));\n    mockWorkerRunningTask(task);\n    Assert.assertTrue(workerRunningTask(task.getId()));\n    mockWorkerCompleteSuccessfulTask(task);\n    Assert.assertTrue(workerCompletedTask(result));\n\n    Assert.assertEquals(task.getId(), result.get().getId());\n    Assert.assertEquals(TaskState.SUCCESS, result.get().getStatusCode());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testWorkerDisabled() throws Exception\n  {\n    doSetup();\n    final ListenableFuture<TaskStatus> result = remoteTaskRunner.run(task);\n\n    Assert.assertTrue(taskAnnounced(task.getId()));\n    mockWorkerRunningTask(task);\n    Assert.assertTrue(workerRunningTask(task.getId()));\n\n    \r\n    disableWorker();\n\n    \r\n    mockWorkerCompleteSuccessfulTask(task);\n    Assert.assertTrue(workerCompletedTask(result));\n    Assert.assertEquals(task.getId(), result.get().getId());\n    Assert.assertEquals(TaskState.SUCCESS, result.get().getStatusCode());\n\n    \r\n    Assert.assertEquals(\"\", Iterables.getOnlyElement(remoteTaskRunner.getWorkers()).getWorker().getVersion());\n  }\n","date":"2018-08-31 00:56:26","endLine":448,"groupId":"10925","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWorkerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/92/0d401ee5a40638f258d57962b56fffc87f3f23.src","preCode":"  public void testWorkerDisabled() throws Exception\n  {\n    doSetup();\n    final ListenableFuture<TaskStatus> result = remoteTaskRunner.run(task);\n\n    Assert.assertTrue(taskAnnounced(task.getId()));\n    mockWorkerRunningTask(task);\n    Assert.assertTrue(workerRunningTask(task.getId()));\n\n    \r\n    disableWorker();\n\n    \r\n    mockWorkerCompleteSuccessfulTask(task);\n    Assert.assertTrue(workerCompletedTask(result));\n    Assert.assertEquals(task.getId(), result.get().getId());\n    Assert.assertEquals(TaskState.SUCCESS, result.get().getStatusCode());\n\n    \r\n    Assert.assertEquals(\"\", Iterables.getOnlyElement(remoteTaskRunner.getWorkers()).getWorker().getVersion());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2020-09-29 14:50:38","commitOrder":2,"curCode":"  public void testRun() throws Exception\n  {\n    doSetup();\n\n    Assert.assertEquals(3, remoteTaskRunner.getTotalTaskSlotCount());\n    Assert.assertEquals(3, remoteTaskRunner.getIdleTaskSlotCount());\n    Assert.assertEquals(0, remoteTaskRunner.getUsedTaskSlotCount());\n\n    ListenableFuture<TaskStatus> result = remoteTaskRunner.run(task);\n\n    Assert.assertTrue(taskAnnounced(task.getId()));\n    mockWorkerRunningTask(task);\n    Assert.assertTrue(workerRunningTask(task.getId()));\n\n    mockWorkerCompleteSuccessfulTask(task);\n    Assert.assertTrue(workerCompletedTask(result));\n    Assert.assertEquals(task.getId(), result.get().getId());\n    Assert.assertEquals(TaskState.SUCCESS, result.get().getStatusCode());\n\n    cf.delete().guaranteed().forPath(JOINER.join(STATUS_PATH, task.getId()));\n\n    Assert.assertEquals(3, remoteTaskRunner.getTotalTaskSlotCount());\n    Assert.assertEquals(3, remoteTaskRunner.getIdleTaskSlotCount());\n    Assert.assertEquals(0, remoteTaskRunner.getUsedTaskSlotCount());\n  }\n","date":"2020-09-29 14:50:38","endLine":127,"groupId":"104289","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e7/bf0226ba19e0a93515e815bf0b3fceacc5404c.src","preCode":"  public void testRun() throws Exception\n  {\n    doSetup();\n\n    ListenableFuture<TaskStatus> result = remoteTaskRunner.run(task);\n\n    Assert.assertTrue(taskAnnounced(task.getId()));\n    mockWorkerRunningTask(task);\n    Assert.assertTrue(workerRunningTask(task.getId()));\n    mockWorkerCompleteSuccessfulTask(task);\n    Assert.assertTrue(workerCompletedTask(result));\n\n    Assert.assertEquals(task.getId(), result.get().getId());\n    Assert.assertEquals(TaskState.SUCCESS, result.get().getStatusCode());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void testWorkerDisabled() throws Exception\n  {\n    doSetup();\n    final ListenableFuture<TaskStatus> result = remoteTaskRunner.run(task);\n\n    Assert.assertTrue(taskAnnounced(task.getId()));\n    mockWorkerRunningTask(task);\n    Assert.assertTrue(workerRunningTask(task.getId()));\n\n    \r\n    disableWorker();\n\n    \r\n    mockWorkerCompleteSuccessfulTask(task);\n    Assert.assertTrue(workerCompletedTask(result));\n    Assert.assertEquals(task.getId(), result.get().getId());\n    Assert.assertEquals(TaskState.SUCCESS, result.get().getStatusCode());\n\n    \r\n    Assert.assertEquals(\"\", Iterables.getOnlyElement(remoteTaskRunner.getWorkers()).getWorker().getVersion());\n  }\n","date":"2018-08-31 00:56:26","endLine":448,"groupId":"104289","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWorkerDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/92/0d401ee5a40638f258d57962b56fffc87f3f23.src","preCode":"  public void testWorkerDisabled() throws Exception\n  {\n    doSetup();\n    final ListenableFuture<TaskStatus> result = remoteTaskRunner.run(task);\n\n    Assert.assertTrue(taskAnnounced(task.getId()));\n    mockWorkerRunningTask(task);\n    Assert.assertTrue(workerRunningTask(task.getId()));\n\n    \r\n    disableWorker();\n\n    \r\n    mockWorkerCompleteSuccessfulTask(task);\n    Assert.assertTrue(workerCompletedTask(result));\n    Assert.assertEquals(task.getId(), result.get().getId());\n    Assert.assertEquals(TaskState.SUCCESS, result.get().getStatusCode());\n\n    \r\n    Assert.assertEquals(\"\", Iterables.getOnlyElement(remoteTaskRunner.getWorkers()).getWorker().getVersion());\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"N"}],"commitId":"8168e14e9224c9459efda07b038269815975cf50","commitMessage":"@@@Adding task slot count metrics to Druid Overlord (#10379)\n\n* Adding more worker metrics to Druid Overlord\n\n* Changing the nomenclature from worker to peon as that represents the metrics that we want to monitor better\n\n* Few more instance of worker usage replaced with peon\n\n* Modifying the peon idle count logic to only use eligible workers available capacity\n\n* Changing the naming to task slot count instead of peon\n\n* Adding some unit test coverage for the new test runner apis\n\n* Addressing Review Comments\n\n* Modifying the TaskSlotCountStatsProvider apis so that overlords which are not leader do not emit these metrics\n\n* Fixing the spelling issue in the docs\n\n* Setting the annotation Nullable on the TaskSlotCountStatsProvider methods","date":"2020-09-29 14:50:38","modifiedFileCount":"14","status":"M","submitter":"Mainak Ghosh"}]
