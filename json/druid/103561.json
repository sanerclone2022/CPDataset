[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final DoublesSketchToQuantilesPostAggregator that = (DoublesSketchToQuantilesPostAggregator) o;\n    if (!name.equals(that.name)) {\n      return false;\n    }\n    if (!Arrays.equals(fractions, that.fractions)) {\n      return false;\n    }\n    return field.equals(that.field);\n  }\n","date":"2018-08-31 00:56:26","endLine":120,"groupId":"1643","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/60/a7064011f0e3e5d1d7ea47eac4c097c336b7dc.src","preCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final DoublesSketchToQuantilesPostAggregator that = (DoublesSketchToQuantilesPostAggregator) o;\n    if (!name.equals(that.name)) {\n      return false;\n    }\n    if (!Arrays.equals(fractions, that.fractions)) {\n      return false;\n    }\n    return field.equals(that.field);\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToQuantilesPostAggregator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final DoublesSketchToHistogramPostAggregator that = (DoublesSketchToHistogramPostAggregator) o;\n    if (!name.equals(that.name)) {\n      return false;\n    }\n    if (!Arrays.equals(splitPoints, that.splitPoints)) {\n      return false;\n    }\n    return field.equals(that.field);\n  }\n","date":"2018-08-31 00:56:26","endLine":124,"groupId":"1643","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2e/c10b595f7760139b703f80bb93dd98660b6c8d.src","preCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final DoublesSketchToHistogramPostAggregator that = (DoublesSketchToHistogramPostAggregator) o;\n    if (!name.equals(that.name)) {\n      return false;\n    }\n    if (!Arrays.equals(splitPoints, that.splitPoints)) {\n      return false;\n    }\n    return field.equals(that.field);\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2020-05-05 07:53:09","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final DoublesSketchToQuantilesPostAggregator that = (DoublesSketchToQuantilesPostAggregator) o;\n    if (!name.equals(that.name)) {\n      return false;\n    }\n    if (!Arrays.equals(fractions, that.fractions)) {\n      return false;\n    }\n    return field.equals(that.field);\n  }\n","date":"2018-08-31 00:56:26","endLine":120,"groupId":"103561","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/60/a7064011f0e3e5d1d7ea47eac4c097c336b7dc.src","preCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final DoublesSketchToQuantilesPostAggregator that = (DoublesSketchToQuantilesPostAggregator) o;\n    if (!name.equals(that.name)) {\n      return false;\n    }\n    if (!Arrays.equals(fractions, that.fractions)) {\n      return false;\n    }\n    return field.equals(that.field);\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToQuantilesPostAggregator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"N"},{"authorDate":"2020-05-05 07:53:09","commitOrder":2,"curCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final DoublesSketchToHistogramPostAggregator that = (DoublesSketchToHistogramPostAggregator) o;\n    if (!name.equals(that.name)) {\n      return false;\n    }\n    if (!Arrays.equals(splitPoints, that.splitPoints)) {\n      return false;\n    }\n    if (!field.equals(that.field)) {\n      return false;\n    }\n    if (numBins == null && that.numBins == null) {\n      return true;\n    }\n    if (numBins != null && numBins.equals(that.numBins)) {\n      return true;\n    }\n    return false;\n  }\n","date":"2020-05-05 07:53:09","endLine":174,"groupId":"103561","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(finalObjecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/16/a235c66566788c11deb4aeade70362a611bea0.src","preCode":"  public boolean equals(final Object o)\n  {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    final DoublesSketchToHistogramPostAggregator that = (DoublesSketchToHistogramPostAggregator) o;\n    if (!name.equals(that.name)) {\n      return false;\n    }\n    if (!Arrays.equals(splitPoints, that.splitPoints)) {\n      return false;\n    }\n    return field.equals(that.field);\n  }\n","realPath":"extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"}],"commitId":"844d62673888899a4b7be8b50929adcf057e7808","commitMessage":"@@@added number of bins parameter (#9436)\n\n* added number of bins parameter\n\n* addressed review points\n\n* test equals\n\nCo-authored-by: AlexanderSaydakov <AlexanderSaydakov@users.noreply.github.com>","date":"2020-05-05 07:53:09","modifiedFileCount":"4","status":"M","submitter":"Alexander Saydakov"}]
