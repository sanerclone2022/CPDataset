[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void addValue(int val) throws IOException\n  {\n    if (endBuffer == null) {\n      throw new IllegalStateException(\"written out already\");\n    }\n    if (!endBuffer.hasRemaining()) {\n      endBuffer.rewind();\n      flattener.write(endBuffer);\n      endBuffer.clear();\n    }\n    intBuffer.putInt(0, val);\n    if (isBigEndian) {\n      endBuffer.put(intBuffer.array(), Integer.BYTES - numBytes, numBytes);\n    } else {\n      endBuffer.put(intBuffer.array(), 0, numBytes);\n    }\n    numInserted++;\n  }\n","date":"2018-08-31 00:56:26","endLine":149,"groupId":"3651","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addValue","params":"(intval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ff/c1ee84a6cdabcb15ff25141e551af4a81cdfb7.src","preCode":"  public void addValue(int val) throws IOException\n  {\n    if (endBuffer == null) {\n      throw new IllegalStateException(\"written out already\");\n    }\n    if (!endBuffer.hasRemaining()) {\n      endBuffer.rewind();\n      flattener.write(endBuffer);\n      endBuffer.clear();\n    }\n    intBuffer.putInt(0, val);\n    if (isBigEndian) {\n      endBuffer.put(intBuffer.array(), Integer.BYTES - numBytes, numBytes);\n    } else {\n      endBuffer.put(intBuffer.array(), 0, numBytes);\n    }\n    numInserted++;\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/data/CompressedVSizeColumnarIntsSerializer.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void addValue(int val) throws IOException\n  {\n    if (endBuffer == null) {\n      throw new IllegalStateException(\"written out already\");\n    }\n    if (!endBuffer.hasRemaining()) {\n      endBuffer.rewind();\n      flattener.write(endBuffer);\n      endBuffer.clear();\n    }\n    endBuffer.putInt(val);\n    numInserted++;\n  }\n","date":"2018-08-31 00:56:26","endLine":109,"groupId":"3651","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addValue","params":"(intval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/da/cf62f27b49e5ac8ac0d0ac792f096e1d3e7895.src","preCode":"  public void addValue(int val) throws IOException\n  {\n    if (endBuffer == null) {\n      throw new IllegalStateException(\"written out already\");\n    }\n    if (!endBuffer.hasRemaining()) {\n      endBuffer.rewind();\n      flattener.write(endBuffer);\n      endBuffer.clear();\n    }\n    endBuffer.putInt(val);\n    numInserted++;\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/data/CompressedColumnarIntsSerializer.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2020-03-27 07:54:48","codes":[{"authorDate":"2020-03-27 07:54:48","commitOrder":2,"curCode":"  public void addValue(int val) throws IOException\n  {\n    if (endBuffer == null) {\n      throw new IllegalStateException(\"written out already\");\n    }\n    if (!endBuffer.hasRemaining()) {\n      endBuffer.rewind();\n      flattener.write(endBuffer);\n      endBuffer.clear();\n    }\n    intBuffer.putInt(0, val);\n    if (isBigEndian) {\n      endBuffer.put(intBuffer.array(), Integer.BYTES - numBytes, numBytes);\n    } else {\n      endBuffer.put(intBuffer.array(), 0, numBytes);\n    }\n    numInserted++;\n    if (numInserted < 0) {\n      throw new ColumnCapacityExceededException(columnName);\n    }\n  }\n","date":"2020-03-27 07:54:48","endLine":162,"groupId":"107206","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"addValue","params":"(intval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/60/60be2cc3c097d3b6996da77e45a83625b80a20.src","preCode":"  public void addValue(int val) throws IOException\n  {\n    if (endBuffer == null) {\n      throw new IllegalStateException(\"written out already\");\n    }\n    if (!endBuffer.hasRemaining()) {\n      endBuffer.rewind();\n      flattener.write(endBuffer);\n      endBuffer.clear();\n    }\n    intBuffer.putInt(0, val);\n    if (isBigEndian) {\n      endBuffer.put(intBuffer.array(), Integer.BYTES - numBytes, numBytes);\n    } else {\n      endBuffer.put(intBuffer.array(), 0, numBytes);\n    }\n    numInserted++;\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/data/CompressedVSizeColumnarIntsSerializer.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"},{"authorDate":"2020-03-27 07:54:48","commitOrder":2,"curCode":"  public void addValue(int val) throws IOException\n  {\n    if (endBuffer == null) {\n      throw new IllegalStateException(\"written out already\");\n    }\n    if (!endBuffer.hasRemaining()) {\n      endBuffer.rewind();\n      flattener.write(endBuffer);\n      endBuffer.clear();\n    }\n    endBuffer.putInt(val);\n    numInserted++;\n    if (numInserted < 0) {\n      throw new ColumnCapacityExceededException(columnName);\n    }\n  }\n","date":"2020-03-27 07:54:48","endLine":120,"groupId":"107206","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"addValue","params":"(intval)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a0/442d95adfdde0d21073240cec4c559ce1d1f9a.src","preCode":"  public void addValue(int val) throws IOException\n  {\n    if (endBuffer == null) {\n      throw new IllegalStateException(\"written out already\");\n    }\n    if (!endBuffer.hasRemaining()) {\n      endBuffer.rewind();\n      flattener.write(endBuffer);\n      endBuffer.clear();\n    }\n    endBuffer.putInt(val);\n    numInserted++;\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/data/CompressedColumnarIntsSerializer.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"2c49f6d89acdf1e15f6bc339321f0e78066e2e42","commitMessage":"@@@error on value counter overflow instead of writing sad segments (#9559)\n\n","date":"2020-03-27 07:54:48","modifiedFileCount":"32","status":"M","submitter":"Clint Wylie"}]
