[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public QueryRunner mergeResults(QueryRunner runner)\n  {\n    return new QueryRunner() {\n      @Override\n      public Sequence run(QueryPlus queryPlus, Map responseContext) \n      {\n        Query realQuery = getRealQuery(queryPlus.getQuery());\n        return warehouse.getToolChest(realQuery).mergeResults(runner).run(queryPlus.withQuery(realQuery), responseContext);\n      }\n    };\n  }\n","date":"2018-08-31 00:56:26","endLine":60,"groupId":"11158","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mergeResults","params":"(QueryRunnerrunner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/34/b556669fba7aac54f6cbc4a3c408bec1ec1c05.src","preCode":"  public QueryRunner mergeResults(QueryRunner runner)\n  {\n    return new QueryRunner() {\n      @Override\n      public Sequence run(QueryPlus queryPlus, Map responseContext) \n      {\n        Query realQuery = getRealQuery(queryPlus.getQuery());\n        return warehouse.getToolChest(realQuery).mergeResults(runner).run(queryPlus.withQuery(realQuery), responseContext);\n      }\n    };\n  }\n","realPath":"extensions-contrib/materialized-view-selection/src/main/java/org/apache/druid/query/materializedview/MaterializedViewQueryQueryToolChest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public QueryRunner preMergeQueryDecoration(final QueryRunner runner)\n  {\n    return new QueryRunner() {\n      @Override\n      public Sequence run(QueryPlus queryPlus, Map responseContext)\n      {\n        Query realQuery = getRealQuery(queryPlus.getQuery());\n        QueryToolChest realQueryToolChest = warehouse.getToolChest(realQuery);\n        QueryRunner realQueryRunner = realQueryToolChest.preMergeQueryDecoration(\n            new MaterializedViewQueryRunner(runner, optimizer)\n        );\n        return realQueryRunner.run(queryPlus.withQuery(realQuery), responseContext);\n      }\n    };\n  }\n","date":"2018-08-31 00:56:26","endLine":97,"groupId":"16187","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"preMergeQueryDecoration","params":"(finalQueryRunnerrunner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/34/b556669fba7aac54f6cbc4a3c408bec1ec1c05.src","preCode":"  public QueryRunner preMergeQueryDecoration(final QueryRunner runner)\n  {\n    return new QueryRunner() {\n      @Override\n      public Sequence run(QueryPlus queryPlus, Map responseContext)\n      {\n        Query realQuery = getRealQuery(queryPlus.getQuery());\n        QueryToolChest realQueryToolChest = warehouse.getToolChest(realQuery);\n        QueryRunner realQueryRunner = realQueryToolChest.preMergeQueryDecoration(\n            new MaterializedViewQueryRunner(runner, optimizer)\n        );\n        return realQueryRunner.run(queryPlus.withQuery(realQuery), responseContext);\n      }\n    };\n  }\n","realPath":"extensions-contrib/materialized-view-selection/src/main/java/org/apache/druid/query/materializedview/MaterializedViewQueryQueryToolChest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-07-24 23:29:03","codes":[{"authorDate":"2019-07-24 23:29:03","commitOrder":2,"curCode":"  public QueryRunner mergeResults(QueryRunner runner)\n  {\n    return new QueryRunner() {\n      @Override\n      public Sequence run(QueryPlus queryPlus, ResponseContext responseContext)\n      {\n        Query realQuery = getRealQuery(queryPlus.getQuery());\n        return warehouse.getToolChest(realQuery).mergeResults(runner).run(queryPlus.withQuery(realQuery), responseContext);\n      }\n    };\n  }\n","date":"2019-07-24 23:29:03","endLine":59,"groupId":"104075","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mergeResults","params":"(QueryRunnerrunner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6e/c31083ba40e48de9a7afd9da3c258dedafe154.src","preCode":"  public QueryRunner mergeResults(QueryRunner runner)\n  {\n    return new QueryRunner() {\n      @Override\n      public Sequence run(QueryPlus queryPlus, Map responseContext) \n      {\n        Query realQuery = getRealQuery(queryPlus.getQuery());\n        return warehouse.getToolChest(realQuery).mergeResults(runner).run(queryPlus.withQuery(realQuery), responseContext);\n      }\n    };\n  }\n","realPath":"extensions-contrib/materialized-view-selection/src/main/java/org/apache/druid/query/materializedview/MaterializedViewQueryQueryToolChest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2019-07-24 23:29:03","commitOrder":2,"curCode":"  public QueryRunner preMergeQueryDecoration(final QueryRunner runner)\n  {\n    return new QueryRunner() {\n      @Override\n      public Sequence run(QueryPlus queryPlus, ResponseContext responseContext)\n      {\n        Query realQuery = getRealQuery(queryPlus.getQuery());\n        QueryToolChest realQueryToolChest = warehouse.getToolChest(realQuery);\n        QueryRunner realQueryRunner = realQueryToolChest.preMergeQueryDecoration(\n            new MaterializedViewQueryRunner(runner, optimizer)\n        );\n        return realQueryRunner.run(queryPlus.withQuery(realQuery), responseContext);\n      }\n    };\n  }\n","date":"2019-07-24 23:29:03","endLine":103,"groupId":"104075","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"preMergeQueryDecoration","params":"(finalQueryRunnerrunner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6e/c31083ba40e48de9a7afd9da3c258dedafe154.src","preCode":"  public QueryRunner preMergeQueryDecoration(final QueryRunner runner)\n  {\n    return new QueryRunner() {\n      @Override\n      public Sequence run(QueryPlus queryPlus, Map responseContext)\n      {\n        Query realQuery = getRealQuery(queryPlus.getQuery());\n        QueryToolChest realQueryToolChest = warehouse.getToolChest(realQuery);\n        QueryRunner realQueryRunner = realQueryToolChest.preMergeQueryDecoration(\n            new MaterializedViewQueryRunner(runner, optimizer)\n        );\n        return realQueryRunner.run(queryPlus.withQuery(realQuery), responseContext);\n      }\n    };\n  }\n","realPath":"extensions-contrib/materialized-view-selection/src/main/java/org/apache/druid/query/materializedview/MaterializedViewQueryQueryToolChest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"799d20249fe6333ea86b020f6d09c91fa4d3f998","commitMessage":"@@@Response context refactoring (#8110)\n\n* Response context refactoring\n\n* Serialization/Deserialization of ResponseContext\n\n* Added java doc comments\n\n* Renamed vars related to ResponseContext\n\n* Renamed empty() methods to createEmpty()\n\n* Fixed ResponseContext usage\n\n* Renamed multiple ResponseContext static fields\n\n* Added PublicApi annotations\n\n* Renamed QueryResponseContext class to ResourceIOReaderWriter\n\n* Moved the protected method below public static constants\n\n* Added createEmpty method to ResponseContext with DefaultResponseContext creation\n\n* Fixed inspection error\n\n* Added comments to the ResponseContext length limit and ResponseContext\nhttp header name\n\n* Added a comment of possible future refactoring\n\n* Removed .gitignore file of indexing-service\n\n* Removed a never-used method\n\n* VisibleForTesting method reducing boilerplate\n\nCo-Authored-By: Clint Wylie <cjwylie@gmail.com>\n\n* Reduced boilerplate\n\n* Renamed the method serialize to serializeWith\n\n* Removed unused import\n\n* Fixed incorrectly refactored test method\n\n* Added comments for ResponseContext keys\n\n* Fixed incorrectly refactored test method\n\n* Fixed IntervalChunkingQueryRunnerTest mocks\n","date":"2019-07-24 23:29:03","modifiedFileCount":"142","status":"M","submitter":"Eugene Sevastianov"}]
