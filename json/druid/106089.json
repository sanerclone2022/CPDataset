[{"authorTime":"2020-01-17 05:14:20","codes":[{"authorDate":"2020-01-17 05:14:20","commitOrder":1,"curCode":"  public void test_getColumnCapabilities_factToCountryFactColumn()\n  {\n    final ColumnCapabilities capabilities = makeFactToCountrySegment().getColumnCapabilities(\"countryIsoCode\");\n\n    Assert.assertEquals(ValueType.STRING, capabilities.getType());\n    Assert.assertTrue(capabilities.hasBitmapIndexes());\n    Assert.assertTrue(capabilities.isDictionaryEncoded());\n  }\n","date":"2020-01-17 05:14:20","endLine":263,"groupId":"21507","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"test_getColumnCapabilities_factToCountryFactColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/27/de9aaa7caea0368014c0388bd07ec990203949.src","preCode":"  public void test_getColumnCapabilities_factToCountryFactColumn()\n  {\n    final ColumnCapabilities capabilities = makeFactToCountrySegment().getColumnCapabilities(\"countryIsoCode\");\n\n    Assert.assertEquals(ValueType.STRING, capabilities.getType());\n    Assert.assertTrue(capabilities.hasBitmapIndexes());\n    Assert.assertTrue(capabilities.isDictionaryEncoded());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"B"},{"authorDate":"2020-01-17 05:14:20","commitOrder":1,"curCode":"  public void test_getColumnCapabilities_factToCountryJoinColumn()\n  {\n    final ColumnCapabilities capabilities = makeFactToCountrySegment().getColumnCapabilities(\n        FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\"\n    );\n\n    Assert.assertEquals(ValueType.STRING, capabilities.getType());\n    Assert.assertFalse(capabilities.hasBitmapIndexes());\n    Assert.assertTrue(capabilities.isDictionaryEncoded());\n  }\n","date":"2020-01-17 05:14:20","endLine":275,"groupId":"10574","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"test_getColumnCapabilities_factToCountryJoinColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/27/de9aaa7caea0368014c0388bd07ec990203949.src","preCode":"  public void test_getColumnCapabilities_factToCountryJoinColumn()\n  {\n    final ColumnCapabilities capabilities = makeFactToCountrySegment().getColumnCapabilities(\n        FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\"\n    );\n\n    Assert.assertEquals(ValueType.STRING, capabilities.getType());\n    Assert.assertFalse(capabilities.hasBitmapIndexes());\n    Assert.assertTrue(capabilities.isDictionaryEncoded());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"B"}],"commitId":"a87db7f353cdee4dfa9b541063f59d67706d1b07","commitMessage":"@@@Add HashJoinSegment.  a virtual segment for joins. (#9111)\n\n* Add HashJoinSegment.  a virtual segment for joins.\n\nAn initial step towards #8728. This patch adds enough functionality to implement a joining\ncursor on top of a normal datasource. It does not include enough to actually do a query. For\nthat.  future patches will need to wire this low-level functionality into the query language.\n\n* Fixups.\n\n* Fix missing format argument.\n\n* Various tests and minor improvements.\n\n* Changes.\n\n* Remove or add tests for unused stuff.\n\n* Fix up package locations.\n","date":"2020-01-17 05:14:20","modifiedFileCount":"34","status":"B","submitter":"Gian Merlino"},{"authorTime":"2020-04-11 16:18:11","codes":[{"authorDate":"2020-04-11 16:18:11","commitOrder":2,"curCode":"  public void test_getColumnCapabilities_factToCountryFactColumn()\n  {\n    final ColumnCapabilities capabilities = makeFactToCountrySegment().getColumnCapabilities(\"countryIsoCode\");\n\n    Assert.assertEquals(ValueType.STRING, capabilities.getType());\n    Assert.assertTrue(capabilities.hasBitmapIndexes());\n    Assert.assertTrue(capabilities.isDictionaryEncoded());\n    Assert.assertTrue(capabilities.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(capabilities.areDictionaryValuesUnique().isTrue());\n  }\n","date":"2020-04-11 16:18:11","endLine":208,"groupId":"21507","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"test_getColumnCapabilities_factToCountryFactColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b8/f30ffbd692ff10c66cde228805897bd5782c39.src","preCode":"  public void test_getColumnCapabilities_factToCountryFactColumn()\n  {\n    final ColumnCapabilities capabilities = makeFactToCountrySegment().getColumnCapabilities(\"countryIsoCode\");\n\n    Assert.assertEquals(ValueType.STRING, capabilities.getType());\n    Assert.assertTrue(capabilities.hasBitmapIndexes());\n    Assert.assertTrue(capabilities.isDictionaryEncoded());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"},{"authorDate":"2020-04-11 16:18:11","commitOrder":2,"curCode":"  public void test_getColumnCapabilities_factToCountryJoinColumn()\n  {\n    final ColumnCapabilities capabilities = makeFactToCountrySegment().getColumnCapabilities(\n        FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\"\n    );\n\n    Assert.assertEquals(ValueType.STRING, capabilities.getType());\n    Assert.assertFalse(capabilities.hasBitmapIndexes());\n    Assert.assertFalse(capabilities.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(capabilities.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(capabilities.isDictionaryEncoded());\n  }\n","date":"2020-04-11 16:18:11","endLine":222,"groupId":"10574","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"test_getColumnCapabilities_factToCountryJoinColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b8/f30ffbd692ff10c66cde228805897bd5782c39.src","preCode":"  public void test_getColumnCapabilities_factToCountryJoinColumn()\n  {\n    final ColumnCapabilities capabilities = makeFactToCountrySegment().getColumnCapabilities(\n        FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\"\n    );\n\n    Assert.assertEquals(ValueType.STRING, capabilities.getType());\n    Assert.assertFalse(capabilities.hasBitmapIndexes());\n    Assert.assertTrue(capabilities.isDictionaryEncoded());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":211,"status":"M"}],"commitId":"0ff926b1a1367be88fb6f5f4baaa74ca849bd8bf","commitMessage":"@@@fix issue with group by limit pushdown for extractionFn.  expressions.  joins.  etc (#9662)\n\n* fix issue with group by limit pushdown for extractionFn.  expressions.  joins.  etc\n\n* remove unused\n\n* fix test\n\n* revert unintended change\n\n* more tests\n\n* consider capabilities for StringGroupByColumnSelectorStrategy\n\n* fix test\n\n* fix and more test\n\n* revert because im scared","date":"2020-04-11 16:18:11","modifiedFileCount":"22","status":"M","submitter":"Clint Wylie"},{"authorTime":"2020-08-12 02:07:17","codes":[{"authorDate":"2020-08-12 02:07:17","commitOrder":3,"curCode":"  public void test_getColumnCapabilities_factToCountryFactColumn()\n  {\n    final ColumnCapabilities capabilities = makeFactToCountrySegment().getColumnCapabilities(\"countryIsoCode\");\n\n    Assert.assertEquals(ValueType.STRING, capabilities.getType());\n    Assert.assertTrue(capabilities.hasBitmapIndexes());\n    Assert.assertTrue(capabilities.isDictionaryEncoded().isTrue());\n    Assert.assertTrue(capabilities.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(capabilities.areDictionaryValuesUnique().isTrue());\n  }\n","date":"2020-08-12 02:07:17","endLine":206,"groupId":"106089","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"test_getColumnCapabilities_factToCountryFactColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/64/06d7afe098b336668a20d901ff1935178bc9b7.src","preCode":"  public void test_getColumnCapabilities_factToCountryFactColumn()\n  {\n    final ColumnCapabilities capabilities = makeFactToCountrySegment().getColumnCapabilities(\"countryIsoCode\");\n\n    Assert.assertEquals(ValueType.STRING, capabilities.getType());\n    Assert.assertTrue(capabilities.hasBitmapIndexes());\n    Assert.assertTrue(capabilities.isDictionaryEncoded());\n    Assert.assertTrue(capabilities.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(capabilities.areDictionaryValuesUnique().isTrue());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"},{"authorDate":"2020-08-12 02:07:17","commitOrder":3,"curCode":"  public void test_getColumnCapabilities_factToCountryJoinColumn()\n  {\n    final ColumnCapabilities capabilities = makeFactToCountrySegment().getColumnCapabilities(\n        FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\"\n    );\n\n    Assert.assertEquals(ValueType.STRING, capabilities.getType());\n    Assert.assertFalse(capabilities.hasBitmapIndexes());\n    Assert.assertFalse(capabilities.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(capabilities.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(capabilities.isDictionaryEncoded().isTrue());\n  }\n","date":"2020-08-12 02:07:17","endLine":220,"groupId":"106089","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"test_getColumnCapabilities_factToCountryJoinColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/64/06d7afe098b336668a20d901ff1935178bc9b7.src","preCode":"  public void test_getColumnCapabilities_factToCountryJoinColumn()\n  {\n    final ColumnCapabilities capabilities = makeFactToCountrySegment().getColumnCapabilities(\n        FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\"\n    );\n\n    Assert.assertEquals(ValueType.STRING, capabilities.getType());\n    Assert.assertFalse(capabilities.hasBitmapIndexes());\n    Assert.assertFalse(capabilities.areDictionaryValuesUnique().isTrue());\n    Assert.assertFalse(capabilities.areDictionaryValuesSorted().isTrue());\n    Assert.assertTrue(capabilities.isDictionaryEncoded());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapterTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"}],"commitId":"c72f96a4babdf5055912bb0fb5eb2236cfe0ef23","commitMessage":"@@@fix bug with expressions on sparse string realtime columns without explicit null valued rows (#10248)\n\n* fix bug with realtime expressions on sparse string columns\n\n* fix test\n\n* add comment back\n\n* push capabilities for dimensions to dimension indexers since they know things\n\n* style\n\n* style\n\n* fixes\n\n* getting a bit carried away\n\n* missed one\n\n* fix it\n\n* benchmark build fix\n\n* review stuffs\n\n* javadoc and comments\n\n* add comment\n\n* more strict check\n\n* fix missed usaged of impl instead of interface","date":"2020-08-12 02:07:17","modifiedFileCount":"30","status":"M","submitter":"Clint Wylie"}]
