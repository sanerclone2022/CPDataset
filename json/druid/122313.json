[{"authorTime":"2019-04-11 09:16:38","codes":[{"authorDate":"2019-04-11 09:16:38","commitOrder":1,"curCode":"  private KinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig KinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            KinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-04-11 09:16:38","endLine":3962,"groupId":"5508","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cc/5ae9ee07047b669b97e252120bd5debf26d19a.src","preCode":"  private KinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig KinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            KinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3883,"status":"B"},{"authorDate":"2019-04-11 09:16:38","commitOrder":1,"curCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig KinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            KinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","date":"2019-04-11 09:16:38","endLine":4047,"groupId":"11772","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@DataSchemadataSchema@KinesisSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cc/5ae9ee07047b669b97e252120bd5debf26d19a.src","preCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig KinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            KinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3967,"status":"B"}],"commitId":"2771ed50b0f07b0ee519da72ed9f4877466f8be4","commitMessage":"@@@Support Kafka supervisor adopting running tasks between versions  (#7212)\n\n* Recompute hash in isTaskCurrent() and added tests\n\n* Fixed checkstyle stuff\n\n* Fixed failing tests\n\n* Make TestableKafkaSupervisorWithCustomIsTaskCurrent static\n\n* Add doc\n\n* baseSequenceName change\n\n* Added comment\n\n* WIP\n\n* Fixed imports\n\n* Undid lambda change for diff sake\n\n* Cleanup\n\n* Added comment\n\n* Reinsert Kafka tests\n\n* Readded kinesis test\n\n* Readd bad partition assignment in kinesis supervisor test\n\n* Nit\n\n* Misnamed var\n","date":"2019-04-11 09:16:38","modifiedFileCount":"6","status":"B","submitter":"Justin Borromeo"},{"authorTime":"2019-05-24 00:40:28","codes":[{"authorDate":"2019-05-24 00:40:28","commitOrder":2,"curCode":"  private KinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-05-24 00:40:28","endLine":3962,"groupId":"5508","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a0/6c303a83b00accdc5944abeab63dc51d8ec700.src","preCode":"  private KinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig KinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            KinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3883,"status":"M"},{"authorDate":"2019-05-24 00:40:28","commitOrder":2,"curCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","date":"2019-05-24 00:40:28","endLine":4047,"groupId":"11772","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@DataSchemadataSchema@KinesisSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a0/6c303a83b00accdc5944abeab63dc51d8ec700.src","preCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig KinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            KinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3967,"status":"M"}],"commitId":"26fad7e06a61ae76a670a0ced0690767ed76c6c7","commitMessage":"@@@Add checkstyle for \"Local variable names shouldn't start with capital\" (#7681)\n\n* Add checkstyle for \"Local variable names shouldn't start with capital\"\n\n* Adjust some local variables to constants\n\n* Replace StringUtils.LINE_SEPARATOR with System.lineSeparator()\n","date":"2019-05-24 00:40:28","modifiedFileCount":"13","status":"M","submitter":"Merlin Lee"},{"authorTime":"2019-06-01 08:16:01","codes":[{"authorDate":"2019-06-01 08:16:01","commitOrder":3,"curCode":"  private TestableKinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-06-01 08:16:01","endLine":3976,"groupId":"5508","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c2/2e57d30e48eaa4fb198dac4cfc90c4eeac0ca1.src","preCode":"  private KinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3896,"status":"M"},{"authorDate":"2019-06-01 08:16:01","commitOrder":3,"curCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","date":"2019-06-01 08:16:01","endLine":4062,"groupId":"11772","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@DataSchemadataSchema@KinesisSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c2/2e57d30e48eaa4fb198dac4cfc90c4eeac0ca1.src","preCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3981,"status":"M"}],"commitId":"8032c4add8f78d0c15044d0847201c618e27dc25","commitMessage":"@@@Add errors and state to stream supervisor status API endpoint (#7428)\n\n* Add state and error tracking for seekable stream supervisors\n\n* Fixed nits in docs\n\n* Made inner class static and updated spec test with jackson inject\n\n* Review changes\n\n* Remove redundant config param in supervisor\n\n* Style\n\n* Applied some of Jon's recommendations\n\n* Add transience field\n\n* write test\n\n* implement code review changes except for reconsidering logic of markRunFinishedAndEvaluateHealth()\n\n* remove transience reporting and fix SeekableStreamSupervisorStateManager impl\n\n* move call to stateManager.markRunFinished() from RunNotice to runInternal() for tests\n\n* remove stateHistory because it wasn't adding much value.  some fixes.  and add more tests\n\n* fix tests\n\n* code review changes and add HTTP health check status\n\n* fix test failure\n\n* refactor to split into a generic SupervisorStateManager and a specific SeekableStreamSupervisorStateManager\n\n* fixup after merge\n\n* code review changes - add additional docs\n\n* cleanup KafkaIndexTaskTest\n\n* add additional documentation for Kinesis indexing\n\n* remove unused throws class\n","date":"2019-06-01 08:16:01","modifiedFileCount":"32","status":"M","submitter":"Justin Borromeo"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":4,"curCode":"  private TestableKinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-08-23 18:13:54","endLine":4146,"groupId":"5508","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4d/2513120f718fcfeaffff03deb7b887ec9db72c.src","preCode":"  private TestableKinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4066,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":4,"curCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","date":"2019-08-23 18:13:54","endLine":4232,"groupId":"11772","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@DataSchemadataSchema@KinesisSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4d/2513120f718fcfeaffff03deb7b887ec9db72c.src","preCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        stream,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        objectMapper,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            objectMapper,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4151,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"},{"authorTime":"2019-11-01 06:13:02","codes":[{"authorDate":"2019-11-01 06:13:02","commitOrder":5,"curCode":"  private TestableKinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-11-01 06:13:02","endLine":4887,"groupId":"5508","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b9/a1ed6e01aa452a0bcba3f1d1ce96d636997fed.src","preCode":"  private TestableKinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4806,"status":"M"},{"authorDate":"2019-11-01 06:13:02","commitOrder":5,"curCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","date":"2019-11-01 06:13:02","endLine":4974,"groupId":"11772","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@DataSchemadataSchema@KinesisSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b9/a1ed6e01aa452a0bcba3f1d1ce96d636997fed.src","preCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4892,"status":"M"}],"commitId":"9c171e2b1fe6de81c8e06e5726acb1728266830d","commitMessage":"@@@Message rejection absolute date (#8656)\n\n* Add option lateMessageRejectionStartDate\n\n* Use option lateMessageRejectionStartDate\n\n* Fix tests\n\n* Add lateMessageRejectionStartDate to kafka indexing service\n\n* Update tests kafka indexing service\n\n* Fix tests for KafkaSupervisorTest\n\n* Add lateMessageRejectionStartDate to KinesisSupervisorIOConfig\n\n* Fix var name\n\n* Update documentation\n\n* Add check lateMessageRejectionStartDateTime and lateMessageRejectionPeriod.  fails if both were specified.\n","date":"2019-11-01 06:13:02","modifiedFileCount":"11","status":"M","submitter":"Giuseppe Martino"},{"authorTime":"2019-11-21 02:04:41","codes":[{"authorDate":"2019-11-21 02:04:41","commitOrder":6,"curCode":"  private TestableKinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-11-21 02:04:41","endLine":4890,"groupId":"5508","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c3/eba4b368aedb98232a6f6f3ad3c8bb0b033b75.src","preCode":"  private TestableKinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4808,"status":"M"},{"authorDate":"2019-11-21 02:04:41","commitOrder":6,"curCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","date":"2019-11-21 02:04:41","endLine":4978,"groupId":"11772","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@DataSchemadataSchema@KinesisSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c3/eba4b368aedb98232a6f6f3ad3c8bb0b033b75.src","preCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4895,"status":"M"}],"commitId":"d628bebbd7ca1f103227d3d73fc938f580e4f7c6","commitMessage":"@@@Make supervisor API similar to submit task API (#8810)\n\n* accept spec or dataSchema.  tuningConfig.  ioConfig while submitting task json\n\n* fix test\n\n* update docs\n\n* lgtm warning\n\n* Add original constructor back to IndexTask to minimize changes\n\n* fix indentation in docs\n\n* Allow spec to be specified in supervisor schema\n\n* undo IndexTask spec changes\n\n* update docs\n\n* Add Nullable and deprecated annotations\n\n* remove deprecated configs from SeekableStreamSupervisorSpec\n\n* remove nullable annotation\n","date":"2019-11-21 02:04:41","modifiedFileCount":"10","status":"M","submitter":"Surekha"},{"authorTime":"2019-11-21 06:51:25","codes":[{"authorDate":"2019-11-21 06:51:25","commitOrder":7,"curCode":"  private TestableKinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        INPUT_FORMAT,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2019-11-21 06:51:25","endLine":4896,"groupId":"5508","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/29/2e9dc7dd3e330998898aafdc0a4f0ff8a10324.src","preCode":"  private TestableKinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4813,"status":"M"},{"authorDate":"2019-11-21 06:51:25","commitOrder":7,"curCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        INPUT_FORMAT,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","date":"2019-11-21 06:51:25","endLine":4985,"groupId":"11772","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@DataSchemadataSchema@KinesisSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/29/2e9dc7dd3e330998898aafdc0a4f0ff8a10324.src","preCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4901,"status":"M"}],"commitId":"ac6d703814ccb5b258c586b63e0bc33d669e0f57","commitMessage":"@@@Support inputFormat and inputSource for sampler (#8901)\n\n* Support inputFormat and inputSource for sampler\n\n* Cleanup javadocs and names\n\n* fix style\n\n* fix timed shutoff input source reader\n\n* fix timed shutoff input source reader again\n\n* tidy up timed shutoff reader\n\n* unused imports\n\n* fix tc\n","date":"2019-11-21 06:51:25","modifiedFileCount":"66","status":"M","submitter":"Jihoon Son"},{"authorTime":"2021-03-06 17:06:52","codes":[{"authorDate":"2021-03-06 17:06:52","commitOrder":8,"curCode":"  private TestableKinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        INPUT_FORMAT,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","date":"2021-03-06 17:06:52","endLine":5076,"groupId":"122313","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"getTestableSupervisorCustomIsTaskCurrent","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@booleanisTaskCurrentReturn)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5d/1d0f6a00995a2e91639be95646eb7d948c46d5.src","preCode":"  private TestableKinesisSupervisor getTestableSupervisorCustomIsTaskCurrent(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      boolean isTaskCurrentReturn\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        INPUT_FORMAT,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new TestableKinesisSupervisorWithCustomIsTaskCurrent(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        isTaskCurrentReturn\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":4992,"status":"M"},{"authorDate":"2021-03-06 17:06:52","commitOrder":8,"curCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        INPUT_FORMAT,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","date":"2021-03-06 17:06:52","endLine":5166,"groupId":"122313","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"getSupervisor","params":"(intreplicas@inttaskCount@booleanuseEarliestOffset@Stringduration@PeriodlateMessageRejectionPeriod@PeriodearlyMessageRejectionPeriod@booleansuspended@IntegerrecordsPerFetch@IntegerfetchDelayMillis@DataSchemadataSchema@KinesisSupervisorTuningConfigtuningConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5d/1d0f6a00995a2e91639be95646eb7d948c46d5.src","preCode":"  private KinesisSupervisor getSupervisor(\n      int replicas,\n      int taskCount,\n      boolean useEarliestOffset,\n      String duration,\n      Period lateMessageRejectionPeriod,\n      Period earlyMessageRejectionPeriod,\n      boolean suspended,\n      Integer recordsPerFetch,\n      Integer fetchDelayMillis,\n      DataSchema dataSchema,\n      KinesisSupervisorTuningConfig tuningConfig\n  )\n  {\n    KinesisSupervisorIOConfig kinesisSupervisorIOConfig = new KinesisSupervisorIOConfig(\n        STREAM,\n        INPUT_FORMAT,\n        \"awsEndpoint\",\n        null,\n        replicas,\n        taskCount,\n        new Period(duration),\n        new Period(\"P1D\"),\n        new Period(\"PT30S\"),\n        useEarliestOffset,\n        new Period(\"PT30M\"),\n        lateMessageRejectionPeriod,\n        earlyMessageRejectionPeriod,\n        null,\n        recordsPerFetch,\n        fetchDelayMillis,\n        null,\n        null,\n        false\n    );\n\n    KinesisIndexTaskClientFactory taskClientFactory = new KinesisIndexTaskClientFactory(\n        null,\n        null\n    )\n    {\n      @Override\n      public KinesisIndexTaskClient build(\n          TaskInfoProvider taskInfoProvider,\n          String dataSource,\n          int numThreads,\n          Duration httpTimeout,\n          long numRetries\n      )\n      {\n        Assert.assertEquals(TEST_CHAT_THREADS, numThreads);\n        Assert.assertEquals(TEST_HTTP_TIMEOUT.toStandardDuration(), httpTimeout);\n        Assert.assertEquals(TEST_CHAT_RETRIES, numRetries);\n        return taskClient;\n      }\n    };\n\n    return new KinesisSupervisor(\n        taskStorage,\n        taskMaster,\n        indexerMetadataStorageCoordinator,\n        taskClientFactory,\n        OBJECT_MAPPER,\n        new KinesisSupervisorSpec(\n            null,\n            dataSchema,\n            tuningConfig,\n            kinesisSupervisorIOConfig,\n            null,\n            suspended,\n            taskStorage,\n            taskMaster,\n            indexerMetadataStorageCoordinator,\n            taskClientFactory,\n            OBJECT_MAPPER,\n            new NoopServiceEmitter(),\n            new DruidMonitorSchedulerConfig(),\n            rowIngestionMetersFactory,\n            null,\n            supervisorConfig\n        ),\n        rowIngestionMetersFactory,\n        null\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":5081,"status":"M"}],"commitId":"bddacbb1c3abccf6ad035a4756a6960761fd43a2","commitMessage":"@@@Dynamic auto scale Kafka-Stream ingest tasks (#10524)\n\n* druid task auto scale based on kafka lag\n\n* fix kafkaSupervisorIOConfig and KinesisSupervisorIOConfig\n\n* druid task auto scale based on kafka lag\n\n* fix kafkaSupervisorIOConfig and KinesisSupervisorIOConfig\n\n* test dynamic auto scale done\n\n* auto scale tasks tested on prd cluster\n\n* auto scale tasks tested on prd cluster\n\n* modify code style to solve 29055.10 29055.9 29055.17 29055.18 29055.19 29055.20\n\n* rename test fiel function\n\n* change codes and add docs based on capistrant reviewed\n\n* midify test docs\n\n* modify docs\n\n* modify docs\n\n* modify docs\n\n* merge from master\n\n* Extract the autoScale logic out of SeekableStreamSupervisor to minimize putting more stuff inside there &&  Make autoscaling algorithm configurable and scalable.\n\n* fix ci failed\n\n* revert msic.xml\n\n* add uts to test autoscaler create && scale out/in and kafka ingest with scale enable\n\n* add more uts\n\n* fix inner class check\n\n* add IT for kafka ingestion with autoscaler\n\n* add new IT in groups=kafka-index named testKafkaIndexDataWithWithAutoscaler\n\n* review change\n\n* code review\n\n* remove unused imports\n\n* fix NLP\n\n* fix docs and UTs\n\n* revert misc.xml\n\n* use jackson to build autoScaleConfig with default values\n\n* add uts\n\n* use jackson to init AutoScalerConfig in IOConfig instead of Map<>\n\n* autoscalerConfig interface and provide a defaultAutoScalerConfig\n\n* modify uts\n\n* modify docs\n\n* fix checkstyle\n\n* revert misc.xml\n\n* modify uts\n\n* reviewed code change\n\n* reviewed code change\n\n* code reviewed\n\n* code review\n\n* log changed\n\n* do StringUtils.encodeForFormat when create allocationExec\n\n* code review && limit taskCountMax to partitionNumbers\n\n* modify docs\n\n* code review\n\nCo-authored-by: yuezhang <yuezhang@freewheel.tv>","date":"2021-03-06 17:06:52","modifiedFileCount":"24","status":"M","submitter":"zhangyue19921010"}]
