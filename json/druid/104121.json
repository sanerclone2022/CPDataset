[{"authorTime":"2020-03-17 12:39:53","codes":[{"authorDate":"2020-03-17 12:39:53","commitOrder":1,"curCode":"  public void testEmitRecordLag() throws Exception\n  {\n    expectEmitterSupervisor(false);\n\n    CountDownLatch latch = new CountDownLatch(1);\n    TestEmittingTestSeekableStreamSupervisor supervisor = new TestEmittingTestSeekableStreamSupervisor(\n        latch,\n        ImmutableMap.of(\"1\", 100L, \"2\", 250L, \"3\", 500L),\n        null\n    );\n\n\n    supervisor.start();\n\n    Assert.assertTrue(supervisor.stateManager.isHealthy());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState().getBasicState());\n    Assert.assertTrue(supervisor.stateManager.getExceptionEvents().isEmpty());\n    Assert.assertFalse(supervisor.stateManager.isAtLeastOneSuccessfulRun());\n\n\n    latch.await();\n    Assert.assertEquals(3, emitter.getEvents().size());\n    Assert.assertEquals(\"ingest/test/lag\", emitter.getEvents().get(0).toMap().get(\"metric\"));\n    Assert.assertEquals(850L, emitter.getEvents().get(0).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/maxLag\", emitter.getEvents().get(1).toMap().get(\"metric\"));\n    Assert.assertEquals(500L, emitter.getEvents().get(1).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/avgLag\", emitter.getEvents().get(2).toMap().get(\"metric\"));\n    Assert.assertEquals(283L, emitter.getEvents().get(2).toMap().get(\"value\"));\n    verifyAll();\n  }\n","date":"2020-03-17 12:39:53","endLine":637,"groupId":"8167","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEmitRecordLag","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2e/5d74af439e9ff1dba8d9cf6751b905eef23ef6.src","preCode":"  public void testEmitRecordLag() throws Exception\n  {\n    expectEmitterSupervisor(false);\n\n    CountDownLatch latch = new CountDownLatch(1);\n    TestEmittingTestSeekableStreamSupervisor supervisor = new TestEmittingTestSeekableStreamSupervisor(\n        latch,\n        ImmutableMap.of(\"1\", 100L, \"2\", 250L, \"3\", 500L),\n        null\n    );\n\n\n    supervisor.start();\n\n    Assert.assertTrue(supervisor.stateManager.isHealthy());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState().getBasicState());\n    Assert.assertTrue(supervisor.stateManager.getExceptionEvents().isEmpty());\n    Assert.assertFalse(supervisor.stateManager.isAtLeastOneSuccessfulRun());\n\n\n    latch.await();\n    Assert.assertEquals(3, emitter.getEvents().size());\n    Assert.assertEquals(\"ingest/test/lag\", emitter.getEvents().get(0).toMap().get(\"metric\"));\n    Assert.assertEquals(850L, emitter.getEvents().get(0).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/maxLag\", emitter.getEvents().get(1).toMap().get(\"metric\"));\n    Assert.assertEquals(500L, emitter.getEvents().get(1).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/avgLag\", emitter.getEvents().get(2).toMap().get(\"metric\"));\n    Assert.assertEquals(283L, emitter.getEvents().get(2).toMap().get(\"value\"));\n    verifyAll();\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":607,"status":"B"},{"authorDate":"2020-03-17 12:39:53","commitOrder":1,"curCode":"  public void testEmitTimeLag() throws Exception\n  {\n    expectEmitterSupervisor(false);\n\n    CountDownLatch latch = new CountDownLatch(1);\n    TestEmittingTestSeekableStreamSupervisor supervisor = new TestEmittingTestSeekableStreamSupervisor(\n        latch,\n        null,\n        ImmutableMap.of(\"1\", 10000L, \"2\", 15000L, \"3\", 20000L)\n    );\n\n\n    supervisor.start();\n\n    Assert.assertTrue(supervisor.stateManager.isHealthy());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState().getBasicState());\n    Assert.assertTrue(supervisor.stateManager.getExceptionEvents().isEmpty());\n    Assert.assertFalse(supervisor.stateManager.isAtLeastOneSuccessfulRun());\n\n\n    latch.await();\n    Assert.assertEquals(3, emitter.getEvents().size());\n    Assert.assertEquals(\"ingest/test/lag/time\", emitter.getEvents().get(0).toMap().get(\"metric\"));\n    Assert.assertEquals(45000L, emitter.getEvents().get(0).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/maxLag/time\", emitter.getEvents().get(1).toMap().get(\"metric\"));\n    Assert.assertEquals(20000L, emitter.getEvents().get(1).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/avgLag/time\", emitter.getEvents().get(2).toMap().get(\"metric\"));\n    Assert.assertEquals(15000L, emitter.getEvents().get(2).toMap().get(\"value\"));\n    verifyAll();\n  }\n","date":"2020-03-17 12:39:53","endLine":670,"groupId":"8167","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEmitTimeLag","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2e/5d74af439e9ff1dba8d9cf6751b905eef23ef6.src","preCode":"  public void testEmitTimeLag() throws Exception\n  {\n    expectEmitterSupervisor(false);\n\n    CountDownLatch latch = new CountDownLatch(1);\n    TestEmittingTestSeekableStreamSupervisor supervisor = new TestEmittingTestSeekableStreamSupervisor(\n        latch,\n        null,\n        ImmutableMap.of(\"1\", 10000L, \"2\", 15000L, \"3\", 20000L)\n    );\n\n\n    supervisor.start();\n\n    Assert.assertTrue(supervisor.stateManager.isHealthy());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState().getBasicState());\n    Assert.assertTrue(supervisor.stateManager.getExceptionEvents().isEmpty());\n    Assert.assertFalse(supervisor.stateManager.isAtLeastOneSuccessfulRun());\n\n\n    latch.await();\n    Assert.assertEquals(3, emitter.getEvents().size());\n    Assert.assertEquals(\"ingest/test/lag/time\", emitter.getEvents().get(0).toMap().get(\"metric\"));\n    Assert.assertEquals(45000L, emitter.getEvents().get(0).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/maxLag/time\", emitter.getEvents().get(1).toMap().get(\"metric\"));\n    Assert.assertEquals(20000L, emitter.getEvents().get(1).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/avgLag/time\", emitter.getEvents().get(2).toMap().get(\"metric\"));\n    Assert.assertEquals(15000L, emitter.getEvents().get(2).toMap().get(\"value\"));\n    verifyAll();\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":640,"status":"B"}],"commitId":"142742f291daaf1ac9afea319cacbbe2a3077952","commitMessage":"@@@add kinesis lag metric (#9509)\n\n* add kinesis lag metric\n\n* fixes\n\n* heh\n\n* do it right this time\n\n* more test\n\n* split out supervisor report lags into lagMillis.  remove latest offsets from kinesis supervisor report since always null.  review stuffs","date":"2020-03-17 12:39:53","modifiedFileCount":"17","status":"B","submitter":"Clint Wylie"},{"authorTime":"2021-07-30 22:59:26","codes":[{"authorDate":"2021-07-30 22:59:26","commitOrder":2,"curCode":"  public void testEmitRecordLag() throws Exception\n  {\n    expectEmitterSupervisor(false);\n\n    CountDownLatch latch = new CountDownLatch(2);\n    TestEmittingTestSeekableStreamSupervisor supervisor = new TestEmittingTestSeekableStreamSupervisor(\n        latch,\n        ImmutableMap.of(\"1\", 100L, \"2\", 250L, \"3\", 500L),\n        null\n    );\n\n\n    supervisor.start();\n\n    Assert.assertTrue(supervisor.stateManager.isHealthy());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState().getBasicState());\n    Assert.assertTrue(supervisor.stateManager.getExceptionEvents().isEmpty());\n    Assert.assertFalse(supervisor.stateManager.isAtLeastOneSuccessfulRun());\n\n\n    latch.await();\n    List<Event> events = emitter.getEvents();\n    List<String> whitelist = Arrays.asList(\"ingest/test/lag\", \"ingest/test/maxLag\", \"ingest/test/avgLag\");\n    events = filterMetrics(events, whitelist);\n    Assert.assertEquals(3, events.size());\n    Assert.assertEquals(\"ingest/test/lag\", events.get(0).toMap().get(\"metric\"));\n    Assert.assertEquals(850L, events.get(0).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/maxLag\", events.get(1).toMap().get(\"metric\"));\n    Assert.assertEquals(500L, events.get(1).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/avgLag\", events.get(2).toMap().get(\"metric\"));\n    Assert.assertEquals(283L, events.get(2).toMap().get(\"value\"));\n    verifyAll();\n  }\n","date":"2021-07-30 22:59:26","endLine":703,"groupId":"104121","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testEmitRecordLag","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5f/5d47f5d9db895a77d1d149fde9795775bfaa76.src","preCode":"  public void testEmitRecordLag() throws Exception\n  {\n    expectEmitterSupervisor(false);\n\n    CountDownLatch latch = new CountDownLatch(1);\n    TestEmittingTestSeekableStreamSupervisor supervisor = new TestEmittingTestSeekableStreamSupervisor(\n        latch,\n        ImmutableMap.of(\"1\", 100L, \"2\", 250L, \"3\", 500L),\n        null\n    );\n\n\n    supervisor.start();\n\n    Assert.assertTrue(supervisor.stateManager.isHealthy());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState().getBasicState());\n    Assert.assertTrue(supervisor.stateManager.getExceptionEvents().isEmpty());\n    Assert.assertFalse(supervisor.stateManager.isAtLeastOneSuccessfulRun());\n\n\n    latch.await();\n    Assert.assertEquals(3, emitter.getEvents().size());\n    Assert.assertEquals(\"ingest/test/lag\", emitter.getEvents().get(0).toMap().get(\"metric\"));\n    Assert.assertEquals(850L, emitter.getEvents().get(0).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/maxLag\", emitter.getEvents().get(1).toMap().get(\"metric\"));\n    Assert.assertEquals(500L, emitter.getEvents().get(1).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/avgLag\", emitter.getEvents().get(2).toMap().get(\"metric\"));\n    Assert.assertEquals(283L, emitter.getEvents().get(2).toMap().get(\"value\"));\n    verifyAll();\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":670,"status":"M"},{"authorDate":"2021-07-30 22:59:26","commitOrder":2,"curCode":"  public void testEmitTimeLag() throws Exception\n  {\n    expectEmitterSupervisor(false);\n\n    CountDownLatch latch = new CountDownLatch(2);\n    TestEmittingTestSeekableStreamSupervisor supervisor = new TestEmittingTestSeekableStreamSupervisor(\n        latch,\n        null,\n        ImmutableMap.of(\"1\", 10000L, \"2\", 15000L, \"3\", 20000L)\n    );\n\n\n    supervisor.start();\n\n    Assert.assertTrue(supervisor.stateManager.isHealthy());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState().getBasicState());\n    Assert.assertTrue(supervisor.stateManager.getExceptionEvents().isEmpty());\n    Assert.assertFalse(supervisor.stateManager.isAtLeastOneSuccessfulRun());\n\n\n    latch.await();\n    List<Event> events = emitter.getEvents();\n    List<String> whitelist = Arrays.asList(\"ingest/test/lag/time\", \"ingest/test/maxLag/time\", \"ingest/test/avgLag/time\");\n    events = filterMetrics(events, whitelist);\n    Assert.assertEquals(3, events.size());\n    Assert.assertEquals(\"ingest/test/lag/time\", events.get(0).toMap().get(\"metric\"));\n    Assert.assertEquals(45000L, events.get(0).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/maxLag/time\", events.get(1).toMap().get(\"metric\"));\n    Assert.assertEquals(20000L, events.get(1).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/avgLag/time\", events.get(2).toMap().get(\"metric\"));\n    Assert.assertEquals(15000L, events.get(2).toMap().get(\"value\"));\n    verifyAll();\n  }\n","date":"2021-07-30 22:59:26","endLine":739,"groupId":"104121","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testEmitTimeLag","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/5f/5d47f5d9db895a77d1d149fde9795775bfaa76.src","preCode":"  public void testEmitTimeLag() throws Exception\n  {\n    expectEmitterSupervisor(false);\n\n    CountDownLatch latch = new CountDownLatch(1);\n    TestEmittingTestSeekableStreamSupervisor supervisor = new TestEmittingTestSeekableStreamSupervisor(\n        latch,\n        null,\n        ImmutableMap.of(\"1\", 10000L, \"2\", 15000L, \"3\", 20000L)\n    );\n\n\n    supervisor.start();\n\n    Assert.assertTrue(supervisor.stateManager.isHealthy());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState());\n    Assert.assertEquals(BasicState.PENDING, supervisor.stateManager.getSupervisorState().getBasicState());\n    Assert.assertTrue(supervisor.stateManager.getExceptionEvents().isEmpty());\n    Assert.assertFalse(supervisor.stateManager.isAtLeastOneSuccessfulRun());\n\n\n    latch.await();\n    Assert.assertEquals(3, emitter.getEvents().size());\n    Assert.assertEquals(\"ingest/test/lag/time\", emitter.getEvents().get(0).toMap().get(\"metric\"));\n    Assert.assertEquals(45000L, emitter.getEvents().get(0).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/maxLag/time\", emitter.getEvents().get(1).toMap().get(\"metric\"));\n    Assert.assertEquals(20000L, emitter.getEvents().get(1).toMap().get(\"value\"));\n    Assert.assertEquals(\"ingest/test/avgLag/time\", emitter.getEvents().get(2).toMap().get(\"metric\"));\n    Assert.assertEquals(15000L, emitter.getEvents().get(2).toMap().get(\"value\"));\n    verifyAll();\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisorStateTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":706,"status":"M"}],"commitId":"995d99d9e44145fcb89b2fd6060f4d38f6c39e21","commitMessage":"@@@add ingest/notices/queueSize metric to give visibility into supervisor notices queue size (#11417)\n\n","date":"2021-07-30 22:59:26","modifiedFileCount":"2","status":"M","submitter":"Harini Rajendran"}]
