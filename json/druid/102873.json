[{"authorTime":"2019-12-05 13:01:10","codes":[{"authorDate":"2019-11-26 14:31:19","commitOrder":3,"curCode":"  public void testWithUrisSplit()\n  {\n    S3InputSource inputSource = new S3InputSource(SERVICE, EXPECTED_URIS, null, null);\n\n    Stream<InputSplit<CloudObjectLocation>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n\n    Assert.assertEquals(EXPECTED_COORDS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","date":"2019-11-26 14:31:19","endLine":217,"groupId":"12085","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithUrisSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1c/1bc01991233252d6f41fa74c5c3326f0ebdaa1.src","preCode":"  public void testWithUrisSplit()\n  {\n    S3InputSource inputSource = new S3InputSource(SERVICE, EXPECTED_URIS, null, null);\n\n    Stream<InputSplit<CloudObjectLocation>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n\n    Assert.assertEquals(EXPECTED_COORDS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","realPath":"extensions-core/s3-extensions/src/test/java/org/apache/druid/data/input/s3/S3InputSourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"NB"},{"authorDate":"2019-12-05 13:01:10","commitOrder":3,"curCode":"  public void testWithUrisSplit()\n  {\n\n    GoogleCloudStorageInputSource inputSource =\n        new GoogleCloudStorageInputSource(STORAGE, EXPECTED_URIS, ImmutableList.of(), null);\n\n    Stream<InputSplit<CloudObjectLocation>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n    Assert.assertEquals(EXPECTED_OBJECTS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","date":"2019-12-05 13:01:10","endLine":146,"groupId":"20181","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithUrisSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/21/46c5f4157e6c38e06a2d397a7e58c00655c4dc.src","preCode":"  public void testWithUrisSplit()\n  {\n\n    GoogleCloudStorageInputSource inputSource =\n        new GoogleCloudStorageInputSource(STORAGE, EXPECTED_URIS, ImmutableList.of(), null);\n\n    Stream<InputSplit<CloudObjectLocation>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n    Assert.assertEquals(EXPECTED_OBJECTS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/data/input/google/GoogleCloudStorageInputSourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"MB"}],"commitId":"5ecdf94d835446cd00798be283323473a20d62fa","commitMessage":"@@@add 'prefixes' support to google input source (#8930)\n\n* add prefixes support to google input source.  making it symmetrical-ish with s3\n\n* docs\n\n* more better.  and tests\n\n* unused\n\n* formatting\n\n* javadoc\n\n* dependencies\n\n* oops\n\n* review comments\n\n* better javadoc\n","date":"2019-12-05 13:01:10","modifiedFileCount":"9","status":"M","submitter":"Clint Wylie"},{"authorTime":"2020-02-22 06:12:03","codes":[{"authorDate":"2020-02-22 06:12:03","commitOrder":4,"curCode":"  public void testWithUrisSplit()\n  {\n    S3InputSource inputSource = new S3InputSource(SERVICE, INPUT_DATA_CONFIG, EXPECTED_URIS, null, null);\n\n    Stream<InputSplit<CloudObjectLocation>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n\n    Assert.assertEquals(EXPECTED_COORDS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","date":"2020-02-22 06:12:03","endLine":230,"groupId":"12085","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithUrisSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ac/edc0c62969c66e5a10a048fe297e9f36eb9398.src","preCode":"  public void testWithUrisSplit()\n  {\n    S3InputSource inputSource = new S3InputSource(SERVICE, EXPECTED_URIS, null, null);\n\n    Stream<InputSplit<CloudObjectLocation>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n\n    Assert.assertEquals(EXPECTED_COORDS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","realPath":"extensions-core/s3-extensions/src/test/java/org/apache/druid/data/input/s3/S3InputSourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"},{"authorDate":"2020-02-22 06:12:03","commitOrder":4,"curCode":"  public void testWithUrisSplit()\n  {\n\n    GoogleCloudStorageInputSource inputSource =\n        new GoogleCloudStorageInputSource(STORAGE, INPUT_DATA_CONFIG, EXPECTED_URIS, ImmutableList.of(), null);\n\n    Stream<InputSplit<CloudObjectLocation>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n    Assert.assertEquals(EXPECTED_OBJECTS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","date":"2020-02-22 06:12:03","endLine":150,"groupId":"20181","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithUrisSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/62/b3b6281436a5b58427d02a0579166201570c9c.src","preCode":"  public void testWithUrisSplit()\n  {\n\n    GoogleCloudStorageInputSource inputSource =\n        new GoogleCloudStorageInputSource(STORAGE, EXPECTED_URIS, ImmutableList.of(), null);\n\n    Stream<InputSplit<CloudObjectLocation>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n    Assert.assertEquals(EXPECTED_OBJECTS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/data/input/google/GoogleCloudStorageInputSourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"f707064bed89f668cf152ae18b445bceb540d529","commitMessage":"@@@Add Azure config options for segment prefix and max listing length (#9356)\n\n* Add Azure config options for segment prefix and max listing length\n\nAdded configuration options to allow the user to specify the prefix\nwithin the segment container to store the segment files. Also\nadded a configuration option to allow the user to specify the\nmaximum number of input files to stream for each iteration.\n\n* * Fix test failures\n\n* * Address review comments\n\n* * add dependency explicitly to pom\n\n* * update docs\n\n* * Address review comments\n\n* * Address review comments\n","date":"2020-02-22 06:12:03","modifiedFileCount":"22","status":"M","submitter":"zachjsh"},{"authorTime":"2020-02-25 09:34:39","codes":[{"authorDate":"2020-02-25 09:34:39","commitOrder":5,"curCode":"  public void testWithUrisSplit()\n  {\n    S3InputSource inputSource = new S3InputSource(SERVICE, INPUT_DATA_CONFIG, EXPECTED_URIS, null, null);\n\n    Stream<InputSplit<List<CloudObjectLocation>>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n\n    Assert.assertEquals(EXPECTED_COORDS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","date":"2020-02-25 09:34:39","endLine":234,"groupId":"12085","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithUrisSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a7/ab23bd9feba00ab9c04741e4313e4098d06cb4.src","preCode":"  public void testWithUrisSplit()\n  {\n    S3InputSource inputSource = new S3InputSource(SERVICE, INPUT_DATA_CONFIG, EXPECTED_URIS, null, null);\n\n    Stream<InputSplit<CloudObjectLocation>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n\n    Assert.assertEquals(EXPECTED_COORDS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","realPath":"extensions-core/s3-extensions/src/test/java/org/apache/druid/data/input/s3/S3InputSourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"},{"authorDate":"2020-02-25 09:34:39","commitOrder":5,"curCode":"  public void testWithUrisSplit()\n  {\n\n    GoogleCloudStorageInputSource inputSource =\n        new GoogleCloudStorageInputSource(STORAGE, INPUT_DATA_CONFIG, EXPECTED_URIS, ImmutableList.of(), null);\n\n    Stream<InputSplit<List<CloudObjectLocation>>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n    Assert.assertEquals(EXPECTED_OBJECTS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","date":"2020-02-25 09:34:39","endLine":155,"groupId":"20181","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithUrisSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/25/fdcca804d2033d0c776d354682ebb780f1f77c.src","preCode":"  public void testWithUrisSplit()\n  {\n\n    GoogleCloudStorageInputSource inputSource =\n        new GoogleCloudStorageInputSource(STORAGE, INPUT_DATA_CONFIG, EXPECTED_URIS, ImmutableList.of(), null);\n\n    Stream<InputSplit<CloudObjectLocation>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n    Assert.assertEquals(EXPECTED_OBJECTS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/data/input/google/GoogleCloudStorageInputSourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"3bc7ae782c9e5989da88999fa91ddfb6fa559a31","commitMessage":"@@@Create splits of multiple files for parallel indexing (#9360)\n\n* Create splits of multiple files for parallel indexing\n\n* fix wrong import and npe in test\n\n* use the single file split in tests\n\n* rename\n\n* import order\n\n* Remove specific local input source\n\n* Update docs/ingestion/native-batch.md\n\nCo-Authored-By: sthetland <steve.hetland@imply.io>\n\n* Update docs/ingestion/native-batch.md\n\nCo-Authored-By: sthetland <steve.hetland@imply.io>\n\n* doc and error msg\n\n* fix build\n\n* fix a test and address comments\n\nCo-authored-by: sthetland <steve.hetland@imply.io>\n","date":"2020-02-25 09:34:39","modifiedFileCount":"31","status":"M","submitter":"Jihoon Son"},{"authorTime":"2020-02-25 09:34:39","codes":[{"authorDate":"2020-02-26 12:59:53","commitOrder":6,"curCode":"  public void testWithUrisSplit()\n  {\n    S3InputSource inputSource = new S3InputSource(\n        SERVICE,\n        SERVER_SIDE_ENCRYPTING_AMAZON_S3_BUILDER,\n        INPUT_DATA_CONFIG,\n        EXPECTED_URIS,\n        null,\n        null,\n        null\n    );\n\n    Stream<InputSplit<List<CloudObjectLocation>>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n\n    Assert.assertEquals(EXPECTED_COORDS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","date":"2020-02-26 12:59:53","endLine":371,"groupId":"12085","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithUrisSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/59/b6303eb28fdbec6fe5f42346074c71fd8451b0.src","preCode":"  public void testWithUrisSplit()\n  {\n    S3InputSource inputSource = new S3InputSource(SERVICE, INPUT_DATA_CONFIG, EXPECTED_URIS, null, null);\n\n    Stream<InputSplit<List<CloudObjectLocation>>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n\n    Assert.assertEquals(EXPECTED_COORDS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","realPath":"extensions-core/s3-extensions/src/test/java/org/apache/druid/data/input/s3/S3InputSourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":353,"status":"M"},{"authorDate":"2020-02-25 09:34:39","commitOrder":6,"curCode":"  public void testWithUrisSplit()\n  {\n\n    GoogleCloudStorageInputSource inputSource =\n        new GoogleCloudStorageInputSource(STORAGE, INPUT_DATA_CONFIG, EXPECTED_URIS, ImmutableList.of(), null);\n\n    Stream<InputSplit<List<CloudObjectLocation>>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n    Assert.assertEquals(EXPECTED_OBJECTS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","date":"2020-02-25 09:34:39","endLine":155,"groupId":"20181","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithUrisSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/25/fdcca804d2033d0c776d354682ebb780f1f77c.src","preCode":"  public void testWithUrisSplit()\n  {\n\n    GoogleCloudStorageInputSource inputSource =\n        new GoogleCloudStorageInputSource(STORAGE, INPUT_DATA_CONFIG, EXPECTED_URIS, ImmutableList.of(), null);\n\n    Stream<InputSplit<List<CloudObjectLocation>>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n    Assert.assertEquals(EXPECTED_OBJECTS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/data/input/google/GoogleCloudStorageInputSourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"N"}],"commitId":"92fb83726b0275cb936fbed21a183c81b55df419","commitMessage":"@@@Add support for optional aws credentials for s3 for ingestion (#9375)\n\n* Add support for optional cloud (aws.  gcs.  etc.) credentials for s3 for ingestion\n\n* Add support for optional cloud (aws.  gcs.  etc.) credentials for s3 for ingestion\n\n* Add support for optional cloud (aws.  gcs.  etc.) credentials for s3 for ingestion\n\n* fix build failure\n\n* fix failing build\n\n* fix failing build\n\n* Code cleanup\n\n* fix failing test\n\n* Removed CloudConfigProperties and make specific class for each cloudInputSource\n\n* Removed CloudConfigProperties and make specific class for each cloudInputSource\n\n* pass s3ConfigProperties for split\n\n* lazy init s3client\n\n* update docs\n\n* fix docs check\n\n* address comments\n\n* add ServerSideEncryptingAmazonS3.Builder\n\n* fix failing checkstyle\n\n* fix typo\n\n* wrap the ServerSideEncryptingAmazonS3.Builder in a provider\n\n* added java docs for S3InputSource constructor\n\n* added java docs for S3InputSource constructor\n\n* remove wrap the ServerSideEncryptingAmazonS3.Builder in a provider\n","date":"2020-02-26 12:59:53","modifiedFileCount":"5","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2020-05-09 12:53:39","codes":[{"authorDate":"2020-05-09 12:53:39","commitOrder":7,"curCode":"  public void testWithUrisSplit()\n  {\n    S3InputSource inputSource = new S3InputSource(\n        SERVICE,\n        SERVER_SIDE_ENCRYPTING_AMAZON_S3_BUILDER,\n        INPUT_DATA_CONFIG,\n        EXPECTED_URIS,\n        null,\n        null,\n        null\n    );\n\n    Stream<InputSplit<List<CloudObjectLocation>>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null, null),\n        null\n    );\n\n    Assert.assertEquals(EXPECTED_COORDS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","date":"2020-05-09 12:53:39","endLine":371,"groupId":"102873","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithUrisSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8d/d82a97ec9da60d03c0a3314a74490d067f4b51.src","preCode":"  public void testWithUrisSplit()\n  {\n    S3InputSource inputSource = new S3InputSource(\n        SERVICE,\n        SERVER_SIDE_ENCRYPTING_AMAZON_S3_BUILDER,\n        INPUT_DATA_CONFIG,\n        EXPECTED_URIS,\n        null,\n        null,\n        null\n    );\n\n    Stream<InputSplit<List<CloudObjectLocation>>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n\n    Assert.assertEquals(EXPECTED_COORDS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","realPath":"extensions-core/s3-extensions/src/test/java/org/apache/druid/data/input/s3/S3InputSourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":353,"status":"M"},{"authorDate":"2020-05-09 12:53:39","commitOrder":7,"curCode":"  public void testWithUrisSplit()\n  {\n\n    GoogleCloudStorageInputSource inputSource =\n        new GoogleCloudStorageInputSource(STORAGE, INPUT_DATA_CONFIG, EXPECTED_URIS, ImmutableList.of(), null);\n\n    Stream<InputSplit<List<CloudObjectLocation>>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null, null),\n        null\n    );\n    Assert.assertEquals(EXPECTED_OBJECTS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","date":"2020-05-09 12:53:39","endLine":155,"groupId":"102873","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithUrisSplit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/38/88398fa9ea572c3b2a41c1ab0cc2e54eeeabbd.src","preCode":"  public void testWithUrisSplit()\n  {\n\n    GoogleCloudStorageInputSource inputSource =\n        new GoogleCloudStorageInputSource(STORAGE, INPUT_DATA_CONFIG, EXPECTED_URIS, ImmutableList.of(), null);\n\n    Stream<InputSplit<List<CloudObjectLocation>>> splits = inputSource.createSplits(\n        new JsonInputFormat(JSONPathSpec.DEFAULT, null),\n        null\n    );\n    Assert.assertEquals(EXPECTED_OBJECTS, splits.map(InputSplit::get).collect(Collectors.toList()));\n  }\n","realPath":"extensions-core/google-extensions/src/test/java/org/apache/druid/data/input/google/GoogleCloudStorageInputSourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"28be107a1c18ef1fd9fd268c8b04e232efb63695","commitMessage":"@@@add flag to flattenSpec to keep null columns (#9814)\n\n* add flag to flattenSpec to keep null columns\n\n* remove changes to inputFormat interface\n\n* add comment\n\n* change comment message\n\n* update web console e2e test\n\n* move keepNullColmns to JSONParseSpec\n\n* fix merge conflicts\n\n* fix tests\n\n* set keepNullColumns to false by default\n\n* fix lgtm\n\n* change Boolean to boolean.  add keepNullColumns to hash.  add tests for keepKeepNullColumns false + true with no nuulul columns\n\n* Add equals verifier tests","date":"2020-05-09 12:53:39","modifiedFileCount":"41","status":"M","submitter":"mcbrewster"}]
