[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void writeTo(WritableByteChannel channel, FileSmoosher smoosher) throws IOException\n  {\n    writeNumBytesForMax();\n\n    final long numBytesWritten = headerOut.size() + valuesOut.size();\n\n    Preconditions.checkState(\n        headerOut.size() == (numWritten * 4),\n        \"numWritten[%s] number of rows should have [%s] bytes written to headerOut, had[%s]\",\n        numWritten,\n        numWritten * 4,\n        headerOut.size()\n    );\n    Preconditions.checkState(\n        numBytesWritten < Integer.MAX_VALUE - Integer.BYTES,\n        \"Wrote[%s] bytes, which is too many.\",\n        numBytesWritten\n    );\n\n    metaSerdeHelper.writeTo(channel, this);\n    headerOut.writeTo(channel);\n    valuesOut.writeTo(channel);\n  }\n","date":"2018-08-31 00:56:26","endLine":151,"groupId":"2029","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeTo","params":"(WritableByteChannelchannel@FileSmooshersmoosher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d1/83d357437d44058c72b26fe337427119622291.src","preCode":"  public void writeTo(WritableByteChannel channel, FileSmoosher smoosher) throws IOException\n  {\n    writeNumBytesForMax();\n\n    final long numBytesWritten = headerOut.size() + valuesOut.size();\n\n    Preconditions.checkState(\n        headerOut.size() == (numWritten * 4),\n        \"numWritten[%s] number of rows should have [%s] bytes written to headerOut, had[%s]\",\n        numWritten,\n        numWritten * 4,\n        headerOut.size()\n    );\n    Preconditions.checkState(\n        numBytesWritten < Integer.MAX_VALUE - Integer.BYTES,\n        \"Wrote[%s] bytes, which is too many.\",\n        numBytesWritten\n    );\n\n    metaSerdeHelper.writeTo(channel, this);\n    headerOut.writeTo(channel);\n    valuesOut.writeTo(channel);\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/data/VSizeColumnarMultiIntsSerializer.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private void writeToSingleFile(WritableByteChannel channel) throws IOException\n  {\n    final long numBytesWritten = headerOut.size() + valuesOut.size();\n\n    Preconditions.checkState(\n        headerOut.size() == (numWritten * 4),\n        \"numWritten[%s] number of rows should have [%s] bytes written to headerOut, had[%s]\",\n        numWritten,\n        numWritten * 4,\n        headerOut.size()\n    );\n    Preconditions.checkState(\n        numBytesWritten < fileSizeLimit, \"Wrote[%s] bytes, which is too many.\",\n        numBytesWritten\n    );\n\n    singleFileMetaSerdeHelper.writeTo(channel, this);\n    headerOut.writeTo(channel);\n    valuesOut.writeTo(channel);\n  }\n","date":"2018-08-31 00:56:26","endLine":311,"groupId":"22403","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeToSingleFile","params":"(WritableByteChannelchannel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4b/3d0ea76690c86513f99b80b13b140cc81d7136.src","preCode":"  private void writeToSingleFile(WritableByteChannel channel) throws IOException\n  {\n    final long numBytesWritten = headerOut.size() + valuesOut.size();\n\n    Preconditions.checkState(\n        headerOut.size() == (numWritten * 4),\n        \"numWritten[%s] number of rows should have [%s] bytes written to headerOut, had[%s]\",\n        numWritten,\n        numWritten * 4,\n        headerOut.size()\n    );\n    Preconditions.checkState(\n        numBytesWritten < fileSizeLimit, \"Wrote[%s] bytes, which is too many.\",\n        numBytesWritten\n    );\n\n    singleFileMetaSerdeHelper.writeTo(channel, this);\n    headerOut.writeTo(channel);\n    valuesOut.writeTo(channel);\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/data/GenericIndexedWriter.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void writeTo(WritableByteChannel channel, FileSmoosher smoosher) throws IOException\n  {\n    writeNumBytesForMax();\n\n    final long numBytesWritten = headerOut.size() + valuesOut.size();\n\n    Preconditions.checkState(\n        headerOut.size() == (numWritten * 4),\n        \"numWritten[%s] number of rows should have [%s] bytes written to headerOut, had[%s]\",\n        numWritten,\n        numWritten * 4,\n        headerOut.size()\n    );\n    Preconditions.checkState(\n        numBytesWritten < Integer.MAX_VALUE - Integer.BYTES,\n        \"Wrote[%s] bytes, which is too many.\",\n        numBytesWritten\n    );\n\n    META_SERDE_HELPER.writeTo(channel, this);\n    headerOut.writeTo(channel);\n    valuesOut.writeTo(channel);\n  }\n","date":"2019-08-23 18:13:54","endLine":155,"groupId":"2029","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeTo","params":"(WritableByteChannelchannel@FileSmooshersmoosher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/16/fe48ddf68bc9056f725619dec02c8ce29feaa6.src","preCode":"  public void writeTo(WritableByteChannel channel, FileSmoosher smoosher) throws IOException\n  {\n    writeNumBytesForMax();\n\n    final long numBytesWritten = headerOut.size() + valuesOut.size();\n\n    Preconditions.checkState(\n        headerOut.size() == (numWritten * 4),\n        \"numWritten[%s] number of rows should have [%s] bytes written to headerOut, had[%s]\",\n        numWritten,\n        numWritten * 4,\n        headerOut.size()\n    );\n    Preconditions.checkState(\n        numBytesWritten < Integer.MAX_VALUE - Integer.BYTES,\n        \"Wrote[%s] bytes, which is too many.\",\n        numBytesWritten\n    );\n\n    metaSerdeHelper.writeTo(channel, this);\n    headerOut.writeTo(channel);\n    valuesOut.writeTo(channel);\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/data/VSizeColumnarMultiIntsSerializer.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  private void writeToSingleFile(WritableByteChannel channel) throws IOException\n  {\n    final long numBytesWritten = headerOut.size() + valuesOut.size();\n\n    Preconditions.checkState(\n        headerOut.size() == (numWritten * 4),\n        \"numWritten[%s] number of rows should have [%s] bytes written to headerOut, had[%s]\",\n        numWritten,\n        numWritten * 4,\n        headerOut.size()\n    );\n    Preconditions.checkState(\n        numBytesWritten < fileSizeLimit, \"Wrote[%s] bytes, which is too many.\",\n        numBytesWritten\n    );\n\n    SINGLE_FILE_META_SERDE_HELPER.writeTo(channel, this);\n    headerOut.writeTo(channel);\n    valuesOut.writeTo(channel);\n  }\n","date":"2019-08-23 18:13:54","endLine":314,"groupId":"22403","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeToSingleFile","params":"(WritableByteChannelchannel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/97/6c88f3c41cd9e88a7e8aa58be6901dc5e100a3.src","preCode":"  private void writeToSingleFile(WritableByteChannel channel) throws IOException\n  {\n    final long numBytesWritten = headerOut.size() + valuesOut.size();\n\n    Preconditions.checkState(\n        headerOut.size() == (numWritten * 4),\n        \"numWritten[%s] number of rows should have [%s] bytes written to headerOut, had[%s]\",\n        numWritten,\n        numWritten * 4,\n        headerOut.size()\n    );\n    Preconditions.checkState(\n        numBytesWritten < fileSizeLimit, \"Wrote[%s] bytes, which is too many.\",\n        numBytesWritten\n    );\n\n    singleFileMetaSerdeHelper.writeTo(channel, this);\n    headerOut.writeTo(channel);\n    valuesOut.writeTo(channel);\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/data/GenericIndexedWriter.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"},{"authorTime":"2020-04-11 02:47:08","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":3,"curCode":"  public void writeTo(WritableByteChannel channel, FileSmoosher smoosher) throws IOException\n  {\n    writeNumBytesForMax();\n\n    final long numBytesWritten = headerOut.size() + valuesOut.size();\n\n    Preconditions.checkState(\n        headerOut.size() == (numWritten * 4),\n        \"numWritten[%s] number of rows should have [%s] bytes written to headerOut, had[%s]\",\n        numWritten,\n        numWritten * 4,\n        headerOut.size()\n    );\n    Preconditions.checkState(\n        numBytesWritten < Integer.MAX_VALUE - Integer.BYTES,\n        \"Wrote[%s] bytes, which is too many.\",\n        numBytesWritten\n    );\n\n    META_SERDE_HELPER.writeTo(channel, this);\n    headerOut.writeTo(channel);\n    valuesOut.writeTo(channel);\n  }\n","date":"2019-08-23 18:13:54","endLine":155,"groupId":"107172","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"writeTo","params":"(WritableByteChannelchannel@FileSmooshersmoosher)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/16/fe48ddf68bc9056f725619dec02c8ce29feaa6.src","preCode":"  public void writeTo(WritableByteChannel channel, FileSmoosher smoosher) throws IOException\n  {\n    writeNumBytesForMax();\n\n    final long numBytesWritten = headerOut.size() + valuesOut.size();\n\n    Preconditions.checkState(\n        headerOut.size() == (numWritten * 4),\n        \"numWritten[%s] number of rows should have [%s] bytes written to headerOut, had[%s]\",\n        numWritten,\n        numWritten * 4,\n        headerOut.size()\n    );\n    Preconditions.checkState(\n        numBytesWritten < Integer.MAX_VALUE - Integer.BYTES,\n        \"Wrote[%s] bytes, which is too many.\",\n        numBytesWritten\n    );\n\n    META_SERDE_HELPER.writeTo(channel, this);\n    headerOut.writeTo(channel);\n    valuesOut.writeTo(channel);\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/data/VSizeColumnarMultiIntsSerializer.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"N"},{"authorDate":"2020-04-11 02:47:08","commitOrder":3,"curCode":"  private void writeToSingleFile(WritableByteChannel channel) throws IOException\n  {\n    final long numBytesWritten = headerOut.size() + valuesOut.size();\n\n    Preconditions.checkState(\n        headerOut.size() == (numWritten * 4L),\n        \"numWritten[%s] number of rows should have [%s] bytes written to headerOut, had[%s]\",\n        numWritten,\n        numWritten * 4L,\n        headerOut.size()\n    );\n    Preconditions.checkState(\n        numBytesWritten < fileSizeLimit, \"Wrote[%s] bytes, which is too many.\",\n        numBytesWritten\n    );\n\n    SINGLE_FILE_META_SERDE_HELPER.writeTo(channel, this);\n    headerOut.writeTo(channel);\n    valuesOut.writeTo(channel);\n  }\n","date":"2020-04-11 02:47:08","endLine":338,"groupId":"107172","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"writeToSingleFile","params":"(WritableByteChannelchannel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/95/bc141d2a5c57416db9fe35085d2ae9c49e974c.src","preCode":"  private void writeToSingleFile(WritableByteChannel channel) throws IOException\n  {\n    final long numBytesWritten = headerOut.size() + valuesOut.size();\n\n    Preconditions.checkState(\n        headerOut.size() == (numWritten * 4),\n        \"numWritten[%s] number of rows should have [%s] bytes written to headerOut, had[%s]\",\n        numWritten,\n        numWritten * 4,\n        headerOut.size()\n    );\n    Preconditions.checkState(\n        numBytesWritten < fileSizeLimit, \"Wrote[%s] bytes, which is too many.\",\n        numBytesWritten\n    );\n\n    SINGLE_FILE_META_SERDE_HELPER.writeTo(channel, this);\n    headerOut.writeTo(channel);\n    valuesOut.writeTo(channel);\n  }\n","realPath":"processing/src/main/java/org/apache/druid/segment/data/GenericIndexedWriter.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":319,"status":"M"}],"commitId":"332ca196217da4c312775c06ac906a2f8e865c26","commitMessage":"@@@Fix potential integer overflow issues (#9609)\n\nApproximateHistogram - seems unlikely\nSegmentAnalyzer - unclear if this is an actual issue\nGenericIndexedWriter - unclear if this is an actual issue\nIncrementalIndexRow and OnheapIncrementalIndex are non-issues becaus it's very\nunlikely for the number of dims to be large enough to hit the overflow\ncondition","date":"2020-04-11 02:47:08","modifiedFileCount":"5","status":"M","submitter":"Suneet Saldanha"}]
