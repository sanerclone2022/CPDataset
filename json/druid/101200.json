[{"authorTime":"2019-07-17 22:18:48","codes":[{"authorDate":"2019-07-17 22:18:48","commitOrder":1,"curCode":"  public Response getDataSourceWithUsedSegments(@PathParam(\"dataSourceName\") final String dataSourceName)\n  {\n    ImmutableDruidDataSource dataSource =\n        segmentsMetadata.getImmutableDataSourceWithUsedSegments(dataSourceName);\n    if (dataSource == null) {\n      return Response.status(Response.Status.NOT_FOUND).build();\n    }\n\n    return Response.status(Response.Status.OK).entity(dataSource).build();\n  }\n","date":"2019-07-17 22:18:48","endLine":223,"groupId":"21805","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getDataSourceWithUsedSegments","params":"(@PathParam(\"dataSourceName\")finalStringdataSourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f4/cbcfa3088d6f54d5f9a42019283914a2f95fc1.src","preCode":"  public Response getDataSourceWithUsedSegments(@PathParam(\"dataSourceName\") final String dataSourceName)\n  {\n    ImmutableDruidDataSource dataSource =\n        segmentsMetadata.getImmutableDataSourceWithUsedSegments(dataSourceName);\n    if (dataSource == null) {\n      return Response.status(Response.Status.NOT_FOUND).build();\n    }\n\n    return Response.status(Response.Status.OK).entity(dataSource).build();\n  }\n","realPath":"server/src/main/java/org/apache/druid/server/http/MetadataResource.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"B"},{"authorDate":"2019-07-17 22:18:48","commitOrder":1,"curCode":"  public Response isSegmentUsed(\n      @PathParam(\"dataSourceName\") String dataSourceName,\n      @PathParam(\"segmentId\") String segmentId\n  )\n  {\n    ImmutableDruidDataSource dataSource = segmentsMetadata.getImmutableDataSourceWithUsedSegments(dataSourceName);\n    if (dataSource == null) {\n      return Response.status(Response.Status.NOT_FOUND).build();\n    }\n\n    for (SegmentId possibleSegmentId : SegmentId.iteratePossibleParsingsWithDataSource(dataSourceName, segmentId)) {\n      DataSegment segment = dataSource.getSegment(possibleSegmentId);\n      if (segment != null) {\n        return Response.status(Response.Status.OK).entity(segment).build();\n      }\n    }\n    return Response.status(Response.Status.NOT_FOUND).build();\n  }\n","date":"2019-07-17 22:18:48","endLine":293,"groupId":"17939","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"isSegmentUsed","params":"(@PathParam(\"dataSourceName\")StringdataSourceName@@PathParam(\"segmentId\")StringsegmentId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f4/cbcfa3088d6f54d5f9a42019283914a2f95fc1.src","preCode":"  public Response isSegmentUsed(\n      @PathParam(\"dataSourceName\") String dataSourceName,\n      @PathParam(\"segmentId\") String segmentId\n  )\n  {\n    ImmutableDruidDataSource dataSource = segmentsMetadata.getImmutableDataSourceWithUsedSegments(dataSourceName);\n    if (dataSource == null) {\n      return Response.status(Response.Status.NOT_FOUND).build();\n    }\n\n    for (SegmentId possibleSegmentId : SegmentId.iteratePossibleParsingsWithDataSource(dataSourceName, segmentId)) {\n      DataSegment segment = dataSource.getSegment(possibleSegmentId);\n      if (segment != null) {\n        return Response.status(Response.Status.OK).entity(segment).build();\n      }\n    }\n    return Response.status(Response.Status.NOT_FOUND).build();\n  }\n","realPath":"server/src/main/java/org/apache/druid/server/http/MetadataResource.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"B"}],"commitId":"ceb969903f06a72d669bb55ab83223bddb5355ee","commitMessage":"@@@Refactor SQLMetadataSegmentManager; Change contract of REST met? (#7653)\n\n* Refactor SQLMetadataSegmentManager; Change contract of REST methods in DataSourcesResource\n\n* Style fixes\n\n* Unused imports\n\n* Fix tests\n\n* Fix style\n\n* Comments\n\n* Comment fix\n\n* Remove unresolvable Javadoc references; address comments\n\n* Add comments to ImmutableDruidDataSource\n\n* Merge with master\n\n* Fix bad web-console merge\n\n* Fixes in api-reference.md\n\n* Rename in DruidCoordinatorRuntimeParams\n\n* Fix compilation\n\n* Residual changes\n","date":"2019-07-17 22:18:48","modifiedFileCount":"77","status":"B","submitter":"Roman Leventov"},{"authorTime":"2020-01-28 03:24:29","codes":[{"authorDate":"2020-01-28 03:24:29","commitOrder":2,"curCode":"  public Response getDataSourceWithUsedSegments(@PathParam(\"dataSourceName\") final String dataSourceName)\n  {\n    ImmutableDruidDataSource dataSource =\n        segmentsMetadataManager.getImmutableDataSourceWithUsedSegments(dataSourceName);\n    if (dataSource == null) {\n      return Response.status(Response.Status.NOT_FOUND).build();\n    }\n\n    return Response.status(Response.Status.OK).entity(dataSource).build();\n  }\n","date":"2020-01-28 03:24:29","endLine":221,"groupId":"101200","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getDataSourceWithUsedSegments","params":"(@PathParam(\"dataSourceName\")finalStringdataSourceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/14/8299b30a2e5c452dbf81d20c7dc25c6590f543.src","preCode":"  public Response getDataSourceWithUsedSegments(@PathParam(\"dataSourceName\") final String dataSourceName)\n  {\n    ImmutableDruidDataSource dataSource =\n        segmentsMetadata.getImmutableDataSourceWithUsedSegments(dataSourceName);\n    if (dataSource == null) {\n      return Response.status(Response.Status.NOT_FOUND).build();\n    }\n\n    return Response.status(Response.Status.OK).entity(dataSource).build();\n  }\n","realPath":"server/src/main/java/org/apache/druid/server/http/MetadataResource.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"M"},{"authorDate":"2020-01-28 03:24:29","commitOrder":2,"curCode":"  public Response isSegmentUsed(\n      @PathParam(\"dataSourceName\") String dataSourceName,\n      @PathParam(\"segmentId\") String segmentId\n  )\n  {\n    ImmutableDruidDataSource dataSource = segmentsMetadataManager.getImmutableDataSourceWithUsedSegments(dataSourceName);\n    if (dataSource == null) {\n      return Response.status(Response.Status.NOT_FOUND).build();\n    }\n\n    for (SegmentId possibleSegmentId : SegmentId.iteratePossibleParsingsWithDataSource(dataSourceName, segmentId)) {\n      DataSegment segment = dataSource.getSegment(possibleSegmentId);\n      if (segment != null) {\n        return Response.status(Response.Status.OK).entity(segment).build();\n      }\n    }\n    return Response.status(Response.Status.NOT_FOUND).build();\n  }\n","date":"2020-01-28 03:24:29","endLine":292,"groupId":"101200","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"isSegmentUsed","params":"(@PathParam(\"dataSourceName\")StringdataSourceName@@PathParam(\"segmentId\")StringsegmentId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/14/8299b30a2e5c452dbf81d20c7dc25c6590f543.src","preCode":"  public Response isSegmentUsed(\n      @PathParam(\"dataSourceName\") String dataSourceName,\n      @PathParam(\"segmentId\") String segmentId\n  )\n  {\n    ImmutableDruidDataSource dataSource = segmentsMetadata.getImmutableDataSourceWithUsedSegments(dataSourceName);\n    if (dataSource == null) {\n      return Response.status(Response.Status.NOT_FOUND).build();\n    }\n\n    for (SegmentId possibleSegmentId : SegmentId.iteratePossibleParsingsWithDataSource(dataSourceName, segmentId)) {\n      DataSegment segment = dataSource.getSegment(possibleSegmentId);\n      if (segment != null) {\n        return Response.status(Response.Status.OK).entity(segment).build();\n      }\n    }\n    return Response.status(Response.Status.NOT_FOUND).build();\n  }\n","realPath":"server/src/main/java/org/apache/druid/server/http/MetadataResource.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":275,"status":"M"}],"commitId":"b9186f8f9ff2ff52aceda42bc5f24ffd47a7d17e","commitMessage":"@@@Reconcile terminology and method naming to 'used/unused segments'; Rename MetadataSegmentManager to MetadataSegmentsManager (#7306)\n\n* Reconcile terminology and method naming to 'used/unused segments'; Don't use terms 'enable/disable data source'; Rename MetadataSegmentManager to MetadataSegments; Make REST API methods which mark segments as used/unused to return server error instead of an empty response in case of error\n\n* Fix brace\n\n* Import order\n\n* Rename withKillDataSourceWhitelist to withSpecificDataSourcesToKill\n\n* Fix tests\n\n* Fix tests by adding proper methods without interval parameters to IndexerMetadataStorageCoordinator instead of hacking with Intervals.ETERNITY\n\n* More aligned names of DruidCoordinatorHelpers.  rename several CoordinatorDynamicConfig parameters\n\n* Rename ClientCompactTaskQuery to ClientCompactionTaskQuery for consistency with CompactionTask; ClientCompactQueryTuningConfig to ClientCompactionTaskQueryTuningConfig\n\n* More variable and method renames\n\n* Rename MetadataSegments to SegmentsMetadata\n\n* Javadoc update\n\n* Simplify SegmentsMetadata.getUnusedSegmentIntervals().  more javadocs\n\n* Update Javadoc of VersionedIntervalTimeline.iterateAllObjects()\n\n* Reorder imports\n\n* Rename SegmentsMetadata.tryMark... methods to mark... and make them to return boolean and the numbers of segments changed and relay exceptions to callers\n\n* Complete merge\n\n* Add CollectionUtils.newTreeSet(); Refactor DruidCoordinatorRuntimeParams creation in tests\n\n* Remove MetadataSegmentManager\n\n* Rename millisLagSinceCoordinatorBecomesLeaderBeforeCanMarkAsUnusedOvershadowedSegments to leadingTimeMillisBeforeCanMarkAsUnusedOvershadowedSegments\n\n* Fix tests.  refactor DruidCluster creation in tests into DruidClusterBuilder\n\n* Fix inspections\n\n* Fix SQLMetadataSegmentManagerEmptyTest and rename it to SqlSegmentsMetadataEmptyTest\n\n* Rename SegmentsAndMetadata to SegmentsAndCommitMetadata to reduce the similarity with SegmentsMetadata; Rename some methods\n\n* Rename DruidCoordinatorHelper to CoordinatorDuty.  refactor DruidCoordinator\n\n* Unused import\n\n* Optimize imports\n\n* Rename IndexerSQLMetadataStorageCoordinator.getDataSourceMetadata() to retrieveDataSourceMetadata()\n\n* Unused import\n\n* Update terminology in datasource-view.tsx\n\n* Fix label in datasource-view.spec.tsx.snap\n\n* Fix lint errors in datasource-view.tsx\n\n* Doc improvements\n\n* Another attempt to please TSLint\n\n* Another attempt to please TSLint\n\n* Style fixes\n\n* Fix IndexerSQLMetadataStorageCoordinator.createUsedSegmentsSqlQueryForIntervals() (wrong merge)\n\n* Try to fix docs build issue\n\n* Javadoc and spelling fixes\n\n* Rename SegmentsMetadata to SegmentsMetadataManager.  address other comments\n\n* Address more comments\n","date":"2020-01-28 03:24:29","modifiedFileCount":"127","status":"M","submitter":"Roman Leventov"}]
