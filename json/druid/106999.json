[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testJavaScriptDisabledFactorize()\n  {\n    final JavaScriptAggregatorFactory factory = new JavaScriptAggregatorFactory(\n        \"foo\",\n        ImmutableList.of(\"foo\"),\n        scriptDoubleSum.get(\"fnAggregate\"),\n        scriptDoubleSum.get(\"fnReset\"),\n        scriptDoubleSum.get(\"fnCombine\"),\n        new JavaScriptConfig(false)\n    );\n\n    expectedException.expect(IllegalStateException.class);\n    expectedException.expectMessage(\"JavaScript is disabled\");\n    factory.factorize(DUMMY_COLUMN_SELECTOR_FACTORY);\n    Assert.assertTrue(false);\n  }\n","date":"2018-08-31 00:56:26","endLine":269,"groupId":"11783","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testJavaScriptDisabledFactorize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/0e/276f772c0c0f1c6dc99c9e9b8a351fc73c3147.src","preCode":"  public void testJavaScriptDisabledFactorize()\n  {\n    final JavaScriptAggregatorFactory factory = new JavaScriptAggregatorFactory(\n        \"foo\",\n        ImmutableList.of(\"foo\"),\n        scriptDoubleSum.get(\"fnAggregate\"),\n        scriptDoubleSum.get(\"fnReset\"),\n        scriptDoubleSum.get(\"fnCombine\"),\n        new JavaScriptConfig(false)\n    );\n\n    expectedException.expect(IllegalStateException.class);\n    expectedException.expectMessage(\"JavaScript is disabled\");\n    factory.factorize(DUMMY_COLUMN_SELECTOR_FACTORY);\n    Assert.assertTrue(false);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/JavaScriptAggregatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testJavaScriptDisabledFactorizeBuffered()\n  {\n    final JavaScriptAggregatorFactory factory = new JavaScriptAggregatorFactory(\n        \"foo\",\n        ImmutableList.of(\"foo\"),\n        scriptDoubleSum.get(\"fnAggregate\"),\n        scriptDoubleSum.get(\"fnReset\"),\n        scriptDoubleSum.get(\"fnCombine\"),\n        new JavaScriptConfig(false)\n    );\n\n    expectedException.expect(IllegalStateException.class);\n    expectedException.expectMessage(\"JavaScript is disabled\");\n    factory.factorizeBuffered(DUMMY_COLUMN_SELECTOR_FACTORY);\n    Assert.assertTrue(false);\n  }\n","date":"2018-08-31 00:56:26","endLine":287,"groupId":"11783","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testJavaScriptDisabledFactorizeBuffered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/0e/276f772c0c0f1c6dc99c9e9b8a351fc73c3147.src","preCode":"  public void testJavaScriptDisabledFactorizeBuffered()\n  {\n    final JavaScriptAggregatorFactory factory = new JavaScriptAggregatorFactory(\n        \"foo\",\n        ImmutableList.of(\"foo\"),\n        scriptDoubleSum.get(\"fnAggregate\"),\n        scriptDoubleSum.get(\"fnReset\"),\n        scriptDoubleSum.get(\"fnCombine\"),\n        new JavaScriptConfig(false)\n    );\n\n    expectedException.expect(IllegalStateException.class);\n    expectedException.expectMessage(\"JavaScript is disabled\");\n    factory.factorizeBuffered(DUMMY_COLUMN_SELECTOR_FACTORY);\n    Assert.assertTrue(false);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/JavaScriptAggregatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testJavaScriptDisabledFactorize()\n  {\n    final JavaScriptAggregatorFactory factory = new JavaScriptAggregatorFactory(\n        \"foo\",\n        ImmutableList.of(\"foo\"),\n        SCRIPT_DOUBLE_SUM.get(\"fnAggregate\"),\n        SCRIPT_DOUBLE_SUM.get(\"fnReset\"),\n        SCRIPT_DOUBLE_SUM.get(\"fnCombine\"),\n        new JavaScriptConfig(false)\n    );\n\n    expectedException.expect(IllegalStateException.class);\n    expectedException.expectMessage(\"JavaScript is disabled\");\n    factory.factorize(DUMMY_COLUMN_SELECTOR_FACTORY);\n    Assert.assertTrue(false);\n  }\n","date":"2019-08-23 18:13:54","endLine":269,"groupId":"106999","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testJavaScriptDisabledFactorize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/80/8e64dcf21c2667d5c016abd952a66c3d935312.src","preCode":"  public void testJavaScriptDisabledFactorize()\n  {\n    final JavaScriptAggregatorFactory factory = new JavaScriptAggregatorFactory(\n        \"foo\",\n        ImmutableList.of(\"foo\"),\n        scriptDoubleSum.get(\"fnAggregate\"),\n        scriptDoubleSum.get(\"fnReset\"),\n        scriptDoubleSum.get(\"fnCombine\"),\n        new JavaScriptConfig(false)\n    );\n\n    expectedException.expect(IllegalStateException.class);\n    expectedException.expectMessage(\"JavaScript is disabled\");\n    factory.factorize(DUMMY_COLUMN_SELECTOR_FACTORY);\n    Assert.assertTrue(false);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/JavaScriptAggregatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testJavaScriptDisabledFactorizeBuffered()\n  {\n    final JavaScriptAggregatorFactory factory = new JavaScriptAggregatorFactory(\n        \"foo\",\n        ImmutableList.of(\"foo\"),\n        SCRIPT_DOUBLE_SUM.get(\"fnAggregate\"),\n        SCRIPT_DOUBLE_SUM.get(\"fnReset\"),\n        SCRIPT_DOUBLE_SUM.get(\"fnCombine\"),\n        new JavaScriptConfig(false)\n    );\n\n    expectedException.expect(IllegalStateException.class);\n    expectedException.expectMessage(\"JavaScript is disabled\");\n    factory.factorizeBuffered(DUMMY_COLUMN_SELECTOR_FACTORY);\n    Assert.assertTrue(false);\n  }\n","date":"2019-08-23 18:13:54","endLine":287,"groupId":"106999","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testJavaScriptDisabledFactorizeBuffered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/80/8e64dcf21c2667d5c016abd952a66c3d935312.src","preCode":"  public void testJavaScriptDisabledFactorizeBuffered()\n  {\n    final JavaScriptAggregatorFactory factory = new JavaScriptAggregatorFactory(\n        \"foo\",\n        ImmutableList.of(\"foo\"),\n        scriptDoubleSum.get(\"fnAggregate\"),\n        scriptDoubleSum.get(\"fnReset\"),\n        scriptDoubleSum.get(\"fnCombine\"),\n        new JavaScriptConfig(false)\n    );\n\n    expectedException.expect(IllegalStateException.class);\n    expectedException.expectMessage(\"JavaScript is disabled\");\n    factory.factorizeBuffered(DUMMY_COLUMN_SELECTOR_FACTORY);\n    Assert.assertTrue(false);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/aggregation/JavaScriptAggregatorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
