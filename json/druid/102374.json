[{"authorTime":"2018-12-22 03:49:24","codes":[{"authorDate":"2018-12-22 03:49:24","commitOrder":1,"curCode":"  public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KinesisIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        isSkipSequenceNumberAvailabilityCheck(),\n        getRecordBufferSize(),\n        getRecordBufferOfferTimeout(),\n        getRecordBufferFullWait(),\n        getFetchSequenceNumberTimeout(),\n        getFetchThreads(),\n        getSegmentWriteOutMediumFactory(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions(),\n        getMaxRecordsPerPoll(),\n        getIntermediateHandoffPeriod()\n    );\n  }\n","date":"2018-12-22 03:49:24","endLine":211,"groupId":"4543","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convertToTaskTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3c/749be5cffc4f9af23866e45b6b108c8cafba0c.src","preCode":"  public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KinesisIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        isSkipSequenceNumberAvailabilityCheck(),\n        getRecordBufferSize(),\n        getRecordBufferOfferTimeout(),\n        getRecordBufferFullWait(),\n        getFetchSequenceNumberTimeout(),\n        getFetchThreads(),\n        getSegmentWriteOutMediumFactory(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions(),\n        getMaxRecordsPerPoll(),\n        getIntermediateHandoffPeriod()\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"B"},{"authorDate":"2018-12-22 03:49:24","commitOrder":1,"curCode":"  public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KafkaIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        getSegmentWriteOutMediumFactory(),\n        getIntermediateHandoffPeriod(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions()\n    );\n  }\n","date":"2018-12-22 03:49:24","endLine":199,"groupId":"4543","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convertToTaskTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/8e/4c6e9f9137e56c95bfa6f5347bb1896c48029e.src","preCode":"  public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KafkaIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        getSegmentWriteOutMediumFactory(),\n        getIntermediateHandoffPeriod(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions()\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"B"}],"commitId":"7c7997e8a1183a7bffad731ca94e8b4c381e8665","commitMessage":"@@@Add Kinesis Indexing Service to core Druid (#6431)\n\n* created seekablestream classes\n\n* created seekablestreamsupervisor class\n\n* first attempt to integrate kafa indexing service to use SeekableStream\n\n* seekablestream bug fixes\n\n* kafkarecordsupplier\n\n* integrated kafka indexing service with seekablestream\n\n* implemented resume/suspend and refactored some package names\n\n* moved kinesis indexing service into core druid extensions\n\n* merged some changes from kafka supervisor race condition\n\n* integrated kinesis-indexing-service with seekablestream\n\n* unite tests for kinesis-indexing-service\n\n* various bug fixes for kinesis-indexing-service\n\n* refactored kinesisindexingtask\n\n* finished up more kinesis unit tests\n\n* more bug fixes for kinesis-indexing-service\n\n* finsihed refactoring kinesis unit tests\n\n* removed KinesisParititons and KafkaPartitions to use SeekableStreamPartitions\n\n* kinesis-indexing-service code cleanup and docs\n\n* merge #6291\n\nmerge #6337\n\nmerge #6383\n\n* added more docs and reordered methods\n\n* fixd kinesis tests after merging master and added docs in seekablestream\n\n* fix various things from pr comment\n\n* improve recordsupplier and add unit tests\n\n* migrated to aws-java-sdk-kinesis\n\n* merge changes from master\n\n* fix pom files and forbiddenapi checks\n\n* checkpoint JavaType bug fix\n\n* fix pom and stuff\n\n* disable checkpointing in kinesis\n\n* fix kinesis sequence number null in closed shard\n\n* merge changes from master\n\n* fixes for kinesis tasks\n\n* capitalized <partitionType.  sequenceType>\n\n* removed abstract class loggers\n\n* conform to guava api restrictions\n\n* add docker for travis other modules test\n\n* address comments\n\n* improve RecordSupplier to supply records in batch\n\n* fix strict compile issue\n\n* add test scope for localstack dependency\n\n* kinesis indexing task refactoring\n\n* comments\n\n* github comments\n\n* minor fix\n\n* removed unneeded readme\n\n* fix deserialization bug\n\n* fix various bugs\n\n* KinesisRecordSupplier unable to catch up to earliest position in stream bug fix\n\n* minor changes to kinesis\n\n* implement deaggregate for kinesis\n\n* Merge remote-tracking branch 'upstream/master' into seekablestream\n\n* fix kinesis offset discrepancy with kafka\n\n* kinesis record supplier disable getPosition\n\n* pr comments\n\n* mock for kinesis tests and remove docker dependency for unit tests\n\n* PR comments\n\n* avg lag in kafkasupervisor #6587\n\n* refacotred SequenceMetadata in taskRunners\n\n* small fix\n\n* more small fix\n\n* recordsupplier resource leak\n\n* revert .travis.yml formatting\n\n* fix style\n\n* kinesis docs\n\n* doc part2\n\n* more docs\n\n* comments\n\n* comments*2\n\n* revert string replace changes\n\n* comments\n\n* teamcity\n\n* comments part 1\n\n* comments part 2\n\n* comments part 3\n\n* merge #6754\n\n* fix injection binding\n\n* comments\n\n* KinesisRegion refactor\n\n* comments part idk lol\n\n* can't think of a commit msg anymore\n\n* remove possiblyResetDataSourceMetadata() for IncrementalPublishingTaskRunner\n\n* commmmmmmmmmments\n\n* extra error handling in KinesisRecordSupplier getRecords\n\n* comments\n\n* quickfix\n\n* typo\n\n* oof\n","date":"2018-12-22 03:49:24","modifiedFileCount":"22","status":"B","submitter":"Joshua Sun"},{"authorTime":"2019-07-11 03:22:24","codes":[{"authorDate":"2019-07-11 03:22:24","commitOrder":2,"curCode":"  public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KinesisIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        isSkipSequenceNumberAvailabilityCheck(),\n        getRecordBufferSize(),\n        getRecordBufferOfferTimeout(),\n        getRecordBufferFullWait(),\n        getFetchSequenceNumberTimeout(),\n        getFetchThreads(),\n        getSegmentWriteOutMediumFactory(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions(),\n        getMaxRecordsPerPoll(),\n        getIntermediateHandoffPeriod()\n    );\n  }\n","date":"2019-07-11 03:22:24","endLine":214,"groupId":"1372","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"convertToTaskTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/14/4bb80b5ad1762c3f388cae44cf43b890fe4f2c.src","preCode":"  public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KinesisIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        isSkipSequenceNumberAvailabilityCheck(),\n        getRecordBufferSize(),\n        getRecordBufferOfferTimeout(),\n        getRecordBufferFullWait(),\n        getFetchSequenceNumberTimeout(),\n        getFetchThreads(),\n        getSegmentWriteOutMediumFactory(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions(),\n        getMaxRecordsPerPoll(),\n        getIntermediateHandoffPeriod()\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"},{"authorDate":"2019-07-11 03:22:24","commitOrder":2,"curCode":"  public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KafkaIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        getSegmentWriteOutMediumFactory(),\n        getIntermediateHandoffPeriod(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions()\n    );\n  }\n","date":"2019-07-11 03:22:24","endLine":202,"groupId":"1372","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"convertToTaskTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/27/e9b295edfee2318d17cd73534ebbe8b5c9209a.src","preCode":"  public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KafkaIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        getSegmentWriteOutMediumFactory(),\n        getIntermediateHandoffPeriod(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions()\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"}],"commitId":"14aec7fceca90dfaf9b2ce4dae68186d04ffcc47","commitMessage":"@@@add config to optionally disable all compression  in intermediate segment persists while ingestion (#7919)\n\n* disable all compression in intermediate segment persists while ingestion\n\n* more changes and build fix\n\n* by default retain existing indexingSpec for intermediate persisted segments\n\n* document indexSpecForIntermediatePersists index tuning config\n\n* fix build issues\n\n* update serde tests\n","date":"2019-07-11 03:22:24","modifiedFileCount":"56","status":"M","submitter":"Himanshu"},{"authorTime":"2019-08-23 05:51:25","codes":[{"authorDate":"2019-08-23 05:51:25","commitOrder":3,"curCode":"  public KinesisIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KinesisIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        isSkipSequenceNumberAvailabilityCheck(),\n        getRecordBufferSize(),\n        getRecordBufferOfferTimeout(),\n        getRecordBufferFullWait(),\n        getFetchSequenceNumberTimeout(),\n        getFetchThreads(),\n        getSegmentWriteOutMediumFactory(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions(),\n        getMaxRecordsPerPoll(),\n        getIntermediateHandoffPeriod()\n    );\n  }\n","date":"2019-08-23 05:51:25","endLine":213,"groupId":"1372","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"convertToTaskTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4a/f88dc44a1d944f78de6a288bcefabfa70bec92.src","preCode":"  public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KinesisIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        isSkipSequenceNumberAvailabilityCheck(),\n        getRecordBufferSize(),\n        getRecordBufferOfferTimeout(),\n        getRecordBufferFullWait(),\n        getFetchSequenceNumberTimeout(),\n        getFetchThreads(),\n        getSegmentWriteOutMediumFactory(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions(),\n        getMaxRecordsPerPoll(),\n        getIntermediateHandoffPeriod()\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"},{"authorDate":"2019-08-23 05:51:25","commitOrder":3,"curCode":"  public KafkaIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KafkaIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        getSegmentWriteOutMediumFactory(),\n        getIntermediateHandoffPeriod(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions()\n    );\n  }\n","date":"2019-08-23 05:51:25","endLine":201,"groupId":"1372","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"convertToTaskTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/7e/24835056c1ae22d47d9c54df0b937f3355eb78.src","preCode":"  public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KafkaIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        getSegmentWriteOutMediumFactory(),\n        getIntermediateHandoffPeriod(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions()\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"fba92ae469b512cca6cdf86ffc1c1a2090808453","commitMessage":"@@@Fix to always use end sequenceNumber for reset (#8305)\n\n* Fix to always use end sequenceNumber for reset\n\n* fix checkstyle\n\n* fix style and add log\n","date":"2019-08-23 05:51:25","modifiedFileCount":"8","status":"M","submitter":"Jihoon Son"},{"authorTime":"2020-10-24 09:34:26","codes":[{"authorDate":"2020-10-24 09:34:26","commitOrder":4,"curCode":"  public KinesisIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KinesisIndexTaskTuningConfig(\n        getAppendableIndexSpec(),\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        isSkipSequenceNumberAvailabilityCheck(),\n        getRecordBufferSize(),\n        getRecordBufferOfferTimeout(),\n        getRecordBufferFullWait(),\n        getFetchSequenceNumberTimeout(),\n        getFetchThreads(),\n        getSegmentWriteOutMediumFactory(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions(),\n        getMaxRecordsPerPoll(),\n        getIntermediateHandoffPeriod()\n    );\n  }\n","date":"2020-10-24 09:34:26","endLine":282,"groupId":"1372","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"convertToTaskTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/7c/f49a32da8b34cc62e323f9733acbd96b16038b.src","preCode":"  public KinesisIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KinesisIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        isSkipSequenceNumberAvailabilityCheck(),\n        getRecordBufferSize(),\n        getRecordBufferOfferTimeout(),\n        getRecordBufferFullWait(),\n        getFetchSequenceNumberTimeout(),\n        getFetchThreads(),\n        getSegmentWriteOutMediumFactory(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions(),\n        getMaxRecordsPerPoll(),\n        getIntermediateHandoffPeriod()\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"},{"authorDate":"2020-10-24 09:34:26","commitOrder":4,"curCode":"  public KafkaIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KafkaIndexTaskTuningConfig(\n        getAppendableIndexSpec(),\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        getSegmentWriteOutMediumFactory(),\n        getIntermediateHandoffPeriod(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions()\n    );\n  }\n","date":"2020-10-24 09:34:26","endLine":245,"groupId":"1372","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"convertToTaskTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a9/e0bfeeb92ea49f942714be7fb87abd28e65243.src","preCode":"  public KafkaIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KafkaIndexTaskTuningConfig(\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        getSegmentWriteOutMediumFactory(),\n        getIntermediateHandoffPeriod(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions()\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"}],"commitId":"f3a2903218573f5d336b082b1c9b8a60a19e8c54","commitMessage":"@@@Configurable Index Type (#10335)\n\n* Introduce a Configurable Index Type\n\n* Change to @UnstableApi\n\n* Add AppendableIndexSpecTest\n\n* Update doc\n\n* Add spelling exception\n\n* Add tests coverage\n\n* Revert some of the changes to reduce diff\n\n* Minor fixes\n\n* Update getMaxBytesInMemoryOrDefault() comment\n\n* Fix typo.  remove redundant interface\n\n* Remove off-heap spec (postponed to a later PR)\n\n* Add javadocs to AppendableIndexSpec\n\n* Describe testCreateTask()\n\n* Add tests for AppendableIndexSpec within TuningConfig\n\n* Modify hashCode() to conform with equals()\n\n* Add comment where building incremental-index\n\n* Add \"EqualsVerifier\" tests\n\n* Revert some of the API back to AppenderatorConfig\n\n* Don't use multi-line comments\n\n* Remove knob documentation (deferred)","date":"2020-10-24 09:34:26","modifiedFileCount":"72","status":"M","submitter":"Liran Funaro"},{"authorTime":"2021-01-27 16:34:56","codes":[{"authorDate":"2021-01-27 16:34:56","commitOrder":5,"curCode":"  public KinesisIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KinesisIndexTaskTuningConfig(\n        getAppendableIndexSpec(),\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        isSkipBytesInMemoryOverheadCheck(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        isSkipSequenceNumberAvailabilityCheck(),\n        getRecordBufferSize(),\n        getRecordBufferOfferTimeout(),\n        getRecordBufferFullWait(),\n        getFetchSequenceNumberTimeout(),\n        getFetchThreads(),\n        getSegmentWriteOutMediumFactory(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions(),\n        getMaxRecordsPerPoll(),\n        getIntermediateHandoffPeriod()\n    );\n  }\n","date":"2021-01-27 16:34:56","endLine":287,"groupId":"1372","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"convertToTaskTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/56/c94568b7462f7c24bffba5d3a7e583188cc392.src","preCode":"  public KinesisIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KinesisIndexTaskTuningConfig(\n        getAppendableIndexSpec(),\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        isSkipSequenceNumberAvailabilityCheck(),\n        getRecordBufferSize(),\n        getRecordBufferOfferTimeout(),\n        getRecordBufferFullWait(),\n        getFetchSequenceNumberTimeout(),\n        getFetchThreads(),\n        getSegmentWriteOutMediumFactory(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions(),\n        getMaxRecordsPerPoll(),\n        getIntermediateHandoffPeriod()\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"},{"authorDate":"2021-01-27 16:34:56","commitOrder":5,"curCode":"  public KafkaIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KafkaIndexTaskTuningConfig(\n        getAppendableIndexSpec(),\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        isSkipBytesInMemoryOverheadCheck(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        getSegmentWriteOutMediumFactory(),\n        getIntermediateHandoffPeriod(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions()\n    );\n  }\n","date":"2021-01-27 16:34:56","endLine":250,"groupId":"1372","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"convertToTaskTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/04/cc74fa416d758cc177f6ce1678164a38a7d3a8.src","preCode":"  public KafkaIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KafkaIndexTaskTuningConfig(\n        getAppendableIndexSpec(),\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        getSegmentWriteOutMediumFactory(),\n        getIntermediateHandoffPeriod(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions()\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"}],"commitId":"a46d561bd7e2b045a08a2e475847d4a7505a1c93","commitMessage":"@@@Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead (#10740)\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* fix checkstyle\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* fix test\n\n* fix test\n\n* add log\n\n* Fix byte calculation for maxBytesInMemory to take into account of Sink/Hydrant Object overhead\n\n* address comments\n\n* fix checkstyle\n\n* fix checkstyle\n\n* add config to skip overhead memory calculation\n\n* add test for the skipBytesInMemoryOverheadCheck config\n\n* add docs\n\n* fix checkstyle\n\n* fix checkstyle\n\n* fix spelling\n\n* address comments\n\n* fix travis\n\n* address comments","date":"2021-01-27 16:34:56","modifiedFileCount":"50","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-06-24 07:36:46","codes":[{"authorDate":"2021-06-24 07:36:46","commitOrder":6,"curCode":"  public KinesisIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KinesisIndexTaskTuningConfig(\n        getAppendableIndexSpec(),\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        isSkipBytesInMemoryOverheadCheck(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        isSkipSequenceNumberAvailabilityCheck(),\n        getRecordBufferSize(),\n        getRecordBufferOfferTimeout(),\n        getRecordBufferFullWait(),\n        getFetchSequenceNumberTimeout(),\n        getFetchThreads(),\n        getSegmentWriteOutMediumFactory(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions(),\n        getMaxRecordsPerPoll(),\n        getIntermediateHandoffPeriod()\n    );\n  }\n","date":"2021-06-24 07:36:46","endLine":283,"groupId":"102374","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"convertToTaskTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/6f/ba06d611b5fda72f860ff1bcfe6ba4ef5ee010.src","preCode":"  public KinesisIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KinesisIndexTaskTuningConfig(\n        getAppendableIndexSpec(),\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        isSkipBytesInMemoryOverheadCheck(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        isSkipSequenceNumberAvailabilityCheck(),\n        getRecordBufferSize(),\n        getRecordBufferOfferTimeout(),\n        getRecordBufferFullWait(),\n        getFetchSequenceNumberTimeout(),\n        getFetchThreads(),\n        getSegmentWriteOutMediumFactory(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions(),\n        getMaxRecordsPerPoll(),\n        getIntermediateHandoffPeriod()\n    );\n  }\n","realPath":"extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/supervisor/KinesisSupervisorTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"M"},{"authorDate":"2021-06-24 07:36:46","commitOrder":6,"curCode":"  public KafkaIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KafkaIndexTaskTuningConfig(\n        getAppendableIndexSpec(),\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        isSkipBytesInMemoryOverheadCheck(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        getSegmentWriteOutMediumFactory(),\n        getIntermediateHandoffPeriod(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions()\n    );\n  }\n","date":"2021-06-24 07:36:46","endLine":245,"groupId":"102374","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"convertToTaskTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4f/c5489a8d4c3bcc4c412db27f569980546b60b1.src","preCode":"  public KafkaIndexTaskTuningConfig convertToTaskTuningConfig()\n  {\n    return new KafkaIndexTaskTuningConfig(\n        getAppendableIndexSpec(),\n        getMaxRowsInMemory(),\n        getMaxBytesInMemory(),\n        isSkipBytesInMemoryOverheadCheck(),\n        getMaxRowsPerSegment(),\n        getMaxTotalRows(),\n        getIntermediatePersistPeriod(),\n        getBasePersistDirectory(),\n        getMaxPendingPersists(),\n        getIndexSpec(),\n        getIndexSpecForIntermediatePersists(),\n        true,\n        isReportParseExceptions(),\n        getHandoffConditionTimeout(),\n        isResetOffsetAutomatically(),\n        getSegmentWriteOutMediumFactory(),\n        getIntermediateHandoffPeriod(),\n        isLogParseExceptions(),\n        getMaxParseExceptions(),\n        getMaxSavedParseExceptions()\n    );\n  }\n","realPath":"extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTuningConfig.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"}],"commitId":"de8daf8139dcb8a497f1191587dcd5e7ea992092","commitMessage":"@@@Delete buildV9Directly in Kafka and Kinesis Indexing Service (#11351)\n\n* delete_buildV9Directly_in_kafka_and_kinesis_indexing_service\n\n* delete\n\n* delete them from server\n\n* delete buildV9Directly from hadoop indexing\n\n* bug fixed\n\nCo-authored-by: yuanyi <yuanyi@freewheel.tv>","date":"2021-06-24 07:36:46","modifiedFileCount":"38","status":"M","submitter":"Yi Yuan"}]
