[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testDatasourceInjection()\n  {\n    final JsonConfigurator configurator = injector.getBinding(JsonConfigurator.class).getProvider().get();\n    properties.put(propertyBase + \".lookupTierIsDatasource\", \"true\");\n    final JsonConfigProvider<LookupListeningAnnouncerConfig> configProvider = JsonConfigProvider.of(\n        propertyBase,\n        LookupListeningAnnouncerConfig.class\n    );\n    configProvider.inject(properties, configurator);\n    final LookupListeningAnnouncerConfig config = configProvider.get().get();\n    Assert.assertEquals(\"some_datasource\", config.getLookupTier());\n  }\n","date":"2018-08-31 00:56:26","endLine":127,"groupId":"14064","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDatasourceInjection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1c/653d4869c67163d4a461a0ceb01872bbc0f260.src","preCode":"  public void testDatasourceInjection()\n  {\n    final JsonConfigurator configurator = injector.getBinding(JsonConfigurator.class).getProvider().get();\n    properties.put(propertyBase + \".lookupTierIsDatasource\", \"true\");\n    final JsonConfigProvider<LookupListeningAnnouncerConfig> configProvider = JsonConfigProvider.of(\n        propertyBase,\n        LookupListeningAnnouncerConfig.class\n    );\n    configProvider.inject(properties, configurator);\n    final LookupListeningAnnouncerConfig config = configProvider.get().get();\n    Assert.assertEquals(\"some_datasource\", config.getLookupTier());\n  }\n","realPath":"server/src/test/java/org/apache/druid/query/lookup/LookupListeningAnnouncerConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testFailsInjection()\n  {\n    final String lookupTier = \"some_tier\";\n    final JsonConfigurator configurator = injector.getBinding(JsonConfigurator.class).getProvider().get();\n    properties.put(propertyBase + \".lookupTier\", lookupTier);\n    properties.put(propertyBase + \".lookupTierIsDatasource\", \"true\");\n    final JsonConfigProvider<LookupListeningAnnouncerConfig> configProvider = JsonConfigProvider.of(\n        propertyBase,\n        LookupListeningAnnouncerConfig.class\n    );\n    configProvider.inject(properties, configurator);\n    final LookupListeningAnnouncerConfig config = configProvider.get().get();\n    Assert.assertEquals(lookupTier, config.getLookupTier());\n  }\n","date":"2018-08-31 00:56:26","endLine":143,"groupId":"12401","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailsInjection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1c/653d4869c67163d4a461a0ceb01872bbc0f260.src","preCode":"  public void testFailsInjection()\n  {\n    final String lookupTier = \"some_tier\";\n    final JsonConfigurator configurator = injector.getBinding(JsonConfigurator.class).getProvider().get();\n    properties.put(propertyBase + \".lookupTier\", lookupTier);\n    properties.put(propertyBase + \".lookupTierIsDatasource\", \"true\");\n    final JsonConfigProvider<LookupListeningAnnouncerConfig> configProvider = JsonConfigProvider.of(\n        propertyBase,\n        LookupListeningAnnouncerConfig.class\n    );\n    configProvider.inject(properties, configurator);\n    final LookupListeningAnnouncerConfig config = configProvider.get().get();\n    Assert.assertEquals(lookupTier, config.getLookupTier());\n  }\n","realPath":"server/src/test/java/org/apache/druid/query/lookup/LookupListeningAnnouncerConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testDatasourceInjection()\n  {\n    final JsonConfigurator configurator = injector.getBinding(JsonConfigurator.class).getProvider().get();\n    properties.put(PROPERTY_BASE + \".lookupTierIsDatasource\", \"true\");\n    final JsonConfigProvider<LookupListeningAnnouncerConfig> configProvider = JsonConfigProvider.of(\n        PROPERTY_BASE,\n        LookupListeningAnnouncerConfig.class\n    );\n    configProvider.inject(properties, configurator);\n    final LookupListeningAnnouncerConfig config = configProvider.get().get();\n    Assert.assertEquals(\"some_datasource\", config.getLookupTier());\n  }\n","date":"2019-08-23 18:13:54","endLine":128,"groupId":"101000","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testDatasourceInjection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/24/e2e60b355adf06091706b8112c7c1019bd7b8b.src","preCode":"  public void testDatasourceInjection()\n  {\n    final JsonConfigurator configurator = injector.getBinding(JsonConfigurator.class).getProvider().get();\n    properties.put(propertyBase + \".lookupTierIsDatasource\", \"true\");\n    final JsonConfigProvider<LookupListeningAnnouncerConfig> configProvider = JsonConfigProvider.of(\n        propertyBase,\n        LookupListeningAnnouncerConfig.class\n    );\n    configProvider.inject(properties, configurator);\n    final LookupListeningAnnouncerConfig config = configProvider.get().get();\n    Assert.assertEquals(\"some_datasource\", config.getLookupTier());\n  }\n","realPath":"server/src/test/java/org/apache/druid/query/lookup/LookupListeningAnnouncerConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testFailsInjection()\n  {\n    final String lookupTier = \"some_tier\";\n    final JsonConfigurator configurator = injector.getBinding(JsonConfigurator.class).getProvider().get();\n    properties.put(PROPERTY_BASE + \".lookupTier\", lookupTier);\n    properties.put(PROPERTY_BASE + \".lookupTierIsDatasource\", \"true\");\n    final JsonConfigProvider<LookupListeningAnnouncerConfig> configProvider = JsonConfigProvider.of(\n        PROPERTY_BASE,\n        LookupListeningAnnouncerConfig.class\n    );\n    configProvider.inject(properties, configurator);\n    final LookupListeningAnnouncerConfig config = configProvider.get().get();\n    Assert.assertEquals(lookupTier, config.getLookupTier());\n  }\n","date":"2019-08-23 18:13:54","endLine":144,"groupId":"101000","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testFailsInjection","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/24/e2e60b355adf06091706b8112c7c1019bd7b8b.src","preCode":"  public void testFailsInjection()\n  {\n    final String lookupTier = \"some_tier\";\n    final JsonConfigurator configurator = injector.getBinding(JsonConfigurator.class).getProvider().get();\n    properties.put(propertyBase + \".lookupTier\", lookupTier);\n    properties.put(propertyBase + \".lookupTierIsDatasource\", \"true\");\n    final JsonConfigProvider<LookupListeningAnnouncerConfig> configProvider = JsonConfigProvider.of(\n        propertyBase,\n        LookupListeningAnnouncerConfig.class\n    );\n    configProvider.inject(properties, configurator);\n    final LookupListeningAnnouncerConfig config = configProvider.get().get();\n    Assert.assertEquals(lookupTier, config.getLookupTier());\n  }\n","realPath":"server/src/test/java/org/apache/druid/query/lookup/LookupListeningAnnouncerConfigTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
