[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testDecoratorWithWhitelist()\n  {\n    ListFilteredDimensionSpec spec = new ListFilteredDimensionSpec(\n        new DefaultDimensionSpec(\"foo\", \"bar\"),\n        ImmutableSet.of(\"c\", \"g\"),\n        true\n    );\n\n    DimensionSelector selector = spec.decorate(TestDimensionSelector.instance);\n\n    Assert.assertEquals(2, selector.getValueCardinality());\n\n    IndexedInts row = selector.getRow();\n    Assert.assertEquals(2, row.size());\n    Assert.assertEquals(0, row.get(0));\n    Assert.assertEquals(1, row.get(1));\n\n    Assert.assertEquals(\"c\", selector.lookupName(0));\n    Assert.assertEquals(\"g\", selector.lookupName(1));\n\n    Assert.assertEquals(0, selector.idLookup().lookupId(\"c\"));\n    Assert.assertEquals(1, selector.idLookup().lookupId(\"g\"));\n  }\n","date":"2018-08-31 00:56:26","endLine":139,"groupId":"4375","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDecoratorWithWhitelist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/75/bdba360cd361ddd6838475997ba8e992adf1cd.src","preCode":"  public void testDecoratorWithWhitelist()\n  {\n    ListFilteredDimensionSpec spec = new ListFilteredDimensionSpec(\n        new DefaultDimensionSpec(\"foo\", \"bar\"),\n        ImmutableSet.of(\"c\", \"g\"),\n        true\n    );\n\n    DimensionSelector selector = spec.decorate(TestDimensionSelector.instance);\n\n    Assert.assertEquals(2, selector.getValueCardinality());\n\n    IndexedInts row = selector.getRow();\n    Assert.assertEquals(2, row.size());\n    Assert.assertEquals(0, row.get(0));\n    Assert.assertEquals(1, row.get(1));\n\n    Assert.assertEquals(\"c\", selector.lookupName(0));\n    Assert.assertEquals(\"g\", selector.lookupName(1));\n\n    Assert.assertEquals(0, selector.idLookup().lookupId(\"c\"));\n    Assert.assertEquals(1, selector.idLookup().lookupId(\"g\"));\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/dimension/ListFilteredDimensionSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testDecorator()\n  {\n    RegexFilteredDimensionSpec spec = new RegexFilteredDimensionSpec(\n        new DefaultDimensionSpec(\"foo\", \"bar\"),\n        \"[c,g]\"\n    );\n\n    DimensionSelector selector = spec.decorate(TestDimensionSelector.instance);\n\n    Assert.assertEquals(2, selector.getValueCardinality());\n\n    IndexedInts row = selector.getRow();\n    Assert.assertEquals(2, row.size());\n    Assert.assertEquals(0, row.get(0));\n    Assert.assertEquals(1, row.get(1));\n\n    Assert.assertEquals(\"c\", selector.lookupName(0));\n    Assert.assertEquals(\"g\", selector.lookupName(1));\n\n    Assert.assertEquals(0, selector.idLookup().lookupId(\"c\"));\n    Assert.assertEquals(1, selector.idLookup().lookupId(\"g\"));\n  }\n","date":"2018-08-31 00:56:26","endLine":101,"groupId":"4375","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDecorator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/14/7c124a9c325b6510e9a6013bdf42e8bb5a8bbf.src","preCode":"  public void testDecorator()\n  {\n    RegexFilteredDimensionSpec spec = new RegexFilteredDimensionSpec(\n        new DefaultDimensionSpec(\"foo\", \"bar\"),\n        \"[c,g]\"\n    );\n\n    DimensionSelector selector = spec.decorate(TestDimensionSelector.instance);\n\n    Assert.assertEquals(2, selector.getValueCardinality());\n\n    IndexedInts row = selector.getRow();\n    Assert.assertEquals(2, row.size());\n    Assert.assertEquals(0, row.get(0));\n    Assert.assertEquals(1, row.get(1));\n\n    Assert.assertEquals(\"c\", selector.lookupName(0));\n    Assert.assertEquals(\"g\", selector.lookupName(1));\n\n    Assert.assertEquals(0, selector.idLookup().lookupId(\"c\"));\n    Assert.assertEquals(1, selector.idLookup().lookupId(\"g\"));\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/dimension/RegexFilteredDimensionSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testDecoratorWithWhitelist()\n  {\n    ListFilteredDimensionSpec spec = new ListFilteredDimensionSpec(\n        new DefaultDimensionSpec(\"foo\", \"bar\"),\n        ImmutableSet.of(\"c\", \"g\"),\n        true\n    );\n\n    DimensionSelector selector = spec.decorate(TestDimensionSelector.INSTANCE);\n\n    Assert.assertEquals(2, selector.getValueCardinality());\n\n    IndexedInts row = selector.getRow();\n    Assert.assertEquals(2, row.size());\n    Assert.assertEquals(0, row.get(0));\n    Assert.assertEquals(1, row.get(1));\n\n    Assert.assertEquals(\"c\", selector.lookupName(0));\n    Assert.assertEquals(\"g\", selector.lookupName(1));\n\n    Assert.assertEquals(0, selector.idLookup().lookupId(\"c\"));\n    Assert.assertEquals(1, selector.idLookup().lookupId(\"g\"));\n  }\n","date":"2019-08-23 18:13:54","endLine":139,"groupId":"106704","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDecoratorWithWhitelist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/63/6da053212b1f8a3d468e963cca7f0ad7343025.src","preCode":"  public void testDecoratorWithWhitelist()\n  {\n    ListFilteredDimensionSpec spec = new ListFilteredDimensionSpec(\n        new DefaultDimensionSpec(\"foo\", \"bar\"),\n        ImmutableSet.of(\"c\", \"g\"),\n        true\n    );\n\n    DimensionSelector selector = spec.decorate(TestDimensionSelector.instance);\n\n    Assert.assertEquals(2, selector.getValueCardinality());\n\n    IndexedInts row = selector.getRow();\n    Assert.assertEquals(2, row.size());\n    Assert.assertEquals(0, row.get(0));\n    Assert.assertEquals(1, row.get(1));\n\n    Assert.assertEquals(\"c\", selector.lookupName(0));\n    Assert.assertEquals(\"g\", selector.lookupName(1));\n\n    Assert.assertEquals(0, selector.idLookup().lookupId(\"c\"));\n    Assert.assertEquals(1, selector.idLookup().lookupId(\"g\"));\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/dimension/ListFilteredDimensionSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testDecorator()\n  {\n    RegexFilteredDimensionSpec spec = new RegexFilteredDimensionSpec(\n        new DefaultDimensionSpec(\"foo\", \"bar\"),\n        \"[c,g]\"\n    );\n\n    DimensionSelector selector = spec.decorate(TestDimensionSelector.INSTANCE);\n\n    Assert.assertEquals(2, selector.getValueCardinality());\n\n    IndexedInts row = selector.getRow();\n    Assert.assertEquals(2, row.size());\n    Assert.assertEquals(0, row.get(0));\n    Assert.assertEquals(1, row.get(1));\n\n    Assert.assertEquals(\"c\", selector.lookupName(0));\n    Assert.assertEquals(\"g\", selector.lookupName(1));\n\n    Assert.assertEquals(0, selector.idLookup().lookupId(\"c\"));\n    Assert.assertEquals(1, selector.idLookup().lookupId(\"g\"));\n  }\n","date":"2019-08-23 18:13:54","endLine":101,"groupId":"106704","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDecorator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/fb/a5ab9e6a70012c7e40ef9a23e056ccf00f607b.src","preCode":"  public void testDecorator()\n  {\n    RegexFilteredDimensionSpec spec = new RegexFilteredDimensionSpec(\n        new DefaultDimensionSpec(\"foo\", \"bar\"),\n        \"[c,g]\"\n    );\n\n    DimensionSelector selector = spec.decorate(TestDimensionSelector.instance);\n\n    Assert.assertEquals(2, selector.getValueCardinality());\n\n    IndexedInts row = selector.getRow();\n    Assert.assertEquals(2, row.size());\n    Assert.assertEquals(0, row.get(0));\n    Assert.assertEquals(1, row.get(1));\n\n    Assert.assertEquals(\"c\", selector.lookupName(0));\n    Assert.assertEquals(\"g\", selector.lookupName(1));\n\n    Assert.assertEquals(0, selector.idLookup().lookupId(\"c\"));\n    Assert.assertEquals(1, selector.idLookup().lookupId(\"g\"));\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/dimension/RegexFilteredDimensionSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
