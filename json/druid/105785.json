[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2020-02-14 06:58:32","commitOrder":2,"curCode":"  private final int numProcessingThreads = 4;\n\n  static {\n    JSON_MAPPER = new DefaultObjectMapper();\n    JSON_MAPPER.setInjectableValues(\n        new Std()\n            .addValue(ExprMacroTable.class.getName(), TestExprMacroTable.INSTANCE)\n            .addValue(ObjectMapper.class.getName(), JSON_MAPPER)\n            .addValue(PruneSpecsHolder.class, PruneSpecsHolder.DEFAULT)\n    );\n  }\n","date":"2020-02-14 06:58:32","endLine":197,"groupId":"3136","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"numProcessingThreads","params":"default","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b8/9ae495b7de8d437caac15e13960fdc735de459.src","preCode":"  private final int numProcessingThreads = 4;\n\n  static {\n    JSON_MAPPER = new DefaultObjectMapper();\n    JSON_MAPPER.setInjectableValues(\n        new Std()\n            .addValue(ExprMacroTable.class.getName(), TestExprMacroTable.INSTANCE)\n            .addValue(ObjectMapper.class.getName(), JSON_MAPPER)\n            .addValue(PruneSpecsHolder.class, PruneSpecsHolder.DEFAULT)\n    );\n  }\n","realPath":"benchmarks/src/test/java/org/apache/druid/benchmark/query/CachingClusteredClientBenchmark.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public static ObjectMapper makeSmileMapper()\n  {\n    final ObjectMapper mapper = new DefaultObjectMapper();\n    mapper.setInjectableValues(\n        new InjectableValues.Std()\n            .addValue(ExprMacroTable.class.getName(), TestExprMacroTable.INSTANCE)\n            .addValue(ObjectMapper.class.getName(), mapper)\n    );\n    return mapper;\n  }\n","date":"2018-08-31 00:56:26","endLine":96,"groupId":"3136","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSmileMapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/78/554660e250d1441e78645b7dfe3dec40b68877.src","preCode":"  public static ObjectMapper makeSmileMapper()\n  {\n    final ObjectMapper mapper = new DefaultObjectMapper();\n    mapper.setInjectableValues(\n        new InjectableValues.Std()\n            .addValue(ExprMacroTable.class.getName(), TestExprMacroTable.INSTANCE)\n            .addValue(ObjectMapper.class.getName(), mapper)\n    );\n    return mapper;\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/TestHelper.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"NB"}],"commitId":"e9aebd994aa0e243446b4f76d819a503401104e3","commitMessage":"@@@Fix for building in Eclipse & VS Code. (#7481)\n\nFixes #6866\nReverse dependencies from /main/ to /test/\nAdd generated-test-sources to source path for Eclipse","date":"2020-02-14 06:58:32","modifiedFileCount":"1","status":"M","submitter":"Adam Peck"},{"authorTime":"2021-02-05 03:21:43","codes":[{"authorDate":"2020-02-14 06:58:32","commitOrder":3,"curCode":"  private final int numProcessingThreads = 4;\n\n  static {\n    JSON_MAPPER = new DefaultObjectMapper();\n    JSON_MAPPER.setInjectableValues(\n        new Std()\n            .addValue(ExprMacroTable.class.getName(), TestExprMacroTable.INSTANCE)\n            .addValue(ObjectMapper.class.getName(), JSON_MAPPER)\n            .addValue(PruneSpecsHolder.class, PruneSpecsHolder.DEFAULT)\n    );\n  }\n","date":"2020-02-14 06:58:32","endLine":197,"groupId":"105785","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"numProcessingThreads","params":"default","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b8/9ae495b7de8d437caac15e13960fdc735de459.src","preCode":"  private final int numProcessingThreads = 4;\n\n  static {\n    JSON_MAPPER = new DefaultObjectMapper();\n    JSON_MAPPER.setInjectableValues(\n        new Std()\n            .addValue(ExprMacroTable.class.getName(), TestExprMacroTable.INSTANCE)\n            .addValue(ObjectMapper.class.getName(), JSON_MAPPER)\n            .addValue(PruneSpecsHolder.class, PruneSpecsHolder.DEFAULT)\n    );\n  }\n","realPath":"benchmarks/src/test/java/org/apache/druid/benchmark/query/CachingClusteredClientBenchmark.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"N"},{"authorDate":"2021-02-05 03:21:43","commitOrder":3,"curCode":"  public static ObjectMapper makeSmileMapper()\n  {\n    final ObjectMapper mapper = new DefaultObjectMapper();\n    DruidSecondaryModule.setupAnnotationIntrospector(mapper, makeAnnotationIntrospector());\n    mapper.setInjectableValues(\n        new InjectableValues.Std()\n            .addValue(ExprMacroTable.class.getName(), TestExprMacroTable.INSTANCE)\n            .addValue(ObjectMapper.class.getName(), mapper)\n    );\n    return mapper;\n  }\n","date":"2021-02-05 03:21:43","endLine":117,"groupId":"105785","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"makeSmileMapper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/83/5d8b098d996020d94ce0142281d65fca515742.src","preCode":"  public static ObjectMapper makeSmileMapper()\n  {\n    final ObjectMapper mapper = new DefaultObjectMapper();\n    mapper.setInjectableValues(\n        new InjectableValues.Std()\n            .addValue(ExprMacroTable.class.getName(), TestExprMacroTable.INSTANCE)\n            .addValue(ObjectMapper.class.getName(), mapper)\n    );\n    return mapper;\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/TestHelper.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"3f8f00a231c4b47981e0e2e48f18f1221249e6f3","commitMessage":"@@@Fix CVE-2021-25646 (#10818)\n\n","date":"2021-02-05 03:21:43","modifiedFileCount":"5","status":"M","submitter":"Jihoon Son"}]
