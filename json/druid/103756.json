[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testIntersection12()\n  {\n    ConciseSet set1 = new ConciseSet();\n    set1.add(2005);\n    for (int i = 2800; i < 3500; i++) {\n      set1.add(i);\n    }\n    set1.add(10005);\n\n    ConciseSet set2 = new ConciseSet();\n    for (int i = 0; i < 3007; i++) {\n      set2.add(i);\n    }\n    set2.add(10005);\n\n    List<Integer> expected = Lists.newArrayList();\n    expected.add(2005);\n    for (int i = 2800; i < 3007; i++) {\n      expected.add(i);\n    }\n    expected.add(10005);\n\n    verifyIntersection(expected, set1, set2);\n  }\n","date":"2018-08-31 00:56:26","endLine":326,"groupId":"22325","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIntersection12","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e2/70015e193a0adc589e66bb373b2edc509b1d8f.src","preCode":"  public void testIntersection12()\n  {\n    ConciseSet set1 = new ConciseSet();\n    set1.add(2005);\n    for (int i = 2800; i < 3500; i++) {\n      set1.add(i);\n    }\n    set1.add(10005);\n\n    ConciseSet set2 = new ConciseSet();\n    for (int i = 0; i < 3007; i++) {\n      set2.add(i);\n    }\n    set2.add(10005);\n\n    List<Integer> expected = Lists.newArrayList();\n    expected.add(2005);\n    for (int i = 2800; i < 3007; i++) {\n      expected.add(i);\n    }\n    expected.add(10005);\n\n    verifyIntersection(expected, set1, set2);\n  }\n","realPath":"extendedset/src/test/java/org/apache/druid/extendedset/intset/ImmutableConciseSetIntersectionTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testIntersection14()\n  {\n    ConciseSet set1 = new ConciseSet();\n    for (int i = 0; i < 1000; i++) {\n      set1.add(i);\n    }\n\n    ConciseSet set2 = new ConciseSet();\n    set2.add(0);\n    set2.add(3);\n    set2.add(5);\n    set2.add(100);\n    set2.add(101);\n\n    List<Integer> expected = Lists.newArrayList();\n    expected.add(0);\n    expected.add(3);\n    expected.add(5);\n    expected.add(100);\n    expected.add(101);\n\n    verifyIntersection(expected, set1, set2);\n  }\n","date":"2018-08-31 00:56:26","endLine":367,"groupId":"14161","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIntersection14","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e2/70015e193a0adc589e66bb373b2edc509b1d8f.src","preCode":"  public void testIntersection14()\n  {\n    ConciseSet set1 = new ConciseSet();\n    for (int i = 0; i < 1000; i++) {\n      set1.add(i);\n    }\n\n    ConciseSet set2 = new ConciseSet();\n    set2.add(0);\n    set2.add(3);\n    set2.add(5);\n    set2.add(100);\n    set2.add(101);\n\n    List<Integer> expected = Lists.newArrayList();\n    expected.add(0);\n    expected.add(3);\n    expected.add(5);\n    expected.add(100);\n    expected.add(101);\n\n    verifyIntersection(expected, set1, set2);\n  }\n","realPath":"extendedset/src/test/java/org/apache/druid/extendedset/intset/ImmutableConciseSetIntersectionTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-10-29 20:02:43","codes":[{"authorDate":"2018-10-29 20:02:43","commitOrder":2,"curCode":"  public void testIntersection12()\n  {\n    ConciseSet set1 = new ConciseSet();\n    set1.add(2005);\n    for (int i = 2800; i < 3500; i++) {\n      set1.add(i);\n    }\n    set1.add(10005);\n\n    ConciseSet set2 = new ConciseSet();\n    for (int i = 0; i < 3007; i++) {\n      set2.add(i);\n    }\n    set2.add(10005);\n\n    List<Integer> expected = new ArrayList<>();\n    expected.add(2005);\n    for (int i = 2800; i < 3007; i++) {\n      expected.add(i);\n    }\n    expected.add(10005);\n\n    verifyIntersection(expected, set1, set2);\n  }\n","date":"2018-10-29 20:02:43","endLine":325,"groupId":"103756","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testIntersection12","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/e347ea67aca627078c7d93bf4531dd5bffdba3.src","preCode":"  public void testIntersection12()\n  {\n    ConciseSet set1 = new ConciseSet();\n    set1.add(2005);\n    for (int i = 2800; i < 3500; i++) {\n      set1.add(i);\n    }\n    set1.add(10005);\n\n    ConciseSet set2 = new ConciseSet();\n    for (int i = 0; i < 3007; i++) {\n      set2.add(i);\n    }\n    set2.add(10005);\n\n    List<Integer> expected = Lists.newArrayList();\n    expected.add(2005);\n    for (int i = 2800; i < 3007; i++) {\n      expected.add(i);\n    }\n    expected.add(10005);\n\n    verifyIntersection(expected, set1, set2);\n  }\n","realPath":"extendedset/src/test/java/org/apache/druid/extendedset/intset/ImmutableConciseSetIntersectionTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"M"},{"authorDate":"2018-10-29 20:02:43","commitOrder":2,"curCode":"  public void testIntersection14()\n  {\n    ConciseSet set1 = new ConciseSet();\n    for (int i = 0; i < 1000; i++) {\n      set1.add(i);\n    }\n\n    ConciseSet set2 = new ConciseSet();\n    set2.add(0);\n    set2.add(3);\n    set2.add(5);\n    set2.add(100);\n    set2.add(101);\n\n    List<Integer> expected = new ArrayList<>();\n    expected.add(0);\n    expected.add(3);\n    expected.add(5);\n    expected.add(100);\n    expected.add(101);\n\n    verifyIntersection(expected, set1, set2);\n  }\n","date":"2018-10-29 20:02:43","endLine":366,"groupId":"103756","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testIntersection14","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/e347ea67aca627078c7d93bf4531dd5bffdba3.src","preCode":"  public void testIntersection14()\n  {\n    ConciseSet set1 = new ConciseSet();\n    for (int i = 0; i < 1000; i++) {\n      set1.add(i);\n    }\n\n    ConciseSet set2 = new ConciseSet();\n    set2.add(0);\n    set2.add(3);\n    set2.add(5);\n    set2.add(100);\n    set2.add(101);\n\n    List<Integer> expected = Lists.newArrayList();\n    expected.add(0);\n    expected.add(3);\n    expected.add(5);\n    expected.add(100);\n    expected.add(101);\n\n    verifyIntersection(expected, set1, set2);\n  }\n","realPath":"extendedset/src/test/java/org/apache/druid/extendedset/intset/ImmutableConciseSetIntersectionTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"M"}],"commitId":"676f5e6d7f184101b8763e4249b18b237bbe0ec7","commitMessage":"@@@Prohibit some guava collection APIs and use JDK collection APIs directly (#6511)\n\n* Prohibit some guava collection APIs and use JDK APIs directly\n\n* reset files that changed by accident\n\n* sort codestyle/druid-forbidden-apis.txt alphabetically\n","date":"2018-10-29 20:02:43","modifiedFileCount":"427","status":"M","submitter":"QiuMM"}]
