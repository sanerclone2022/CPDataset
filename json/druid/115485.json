[{"authorTime":"2018-10-15 11:37:37","codes":[{"authorDate":"2018-10-15 11:37:37","commitOrder":1,"curCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          return this;\n        case LONG:\n          return ExprEval.of(value == null ? null : asLong());\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","date":"2018-10-15 11:37:37","endLine":188,"groupId":"20606","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"castTo","params":"(ExprTypecastTo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/20/982e6b0f9ab45ea0169e0ecb167aecdab6b68a.src","preCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          return this;\n        case LONG:\n          return ExprEval.of(value == null ? null : asLong());\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","realPath":"core/src/main/java/org/apache/druid/math/expr/ExprEval.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"B"},{"authorDate":"2018-10-15 11:37:37","commitOrder":1,"curCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          return ExprEval.of(value == null ? null : asDouble());\n        case LONG:\n          return this;\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","date":"2018-10-15 11:37:37","endLine":228,"groupId":"20607","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"castTo","params":"(ExprTypecastTo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/20/982e6b0f9ab45ea0169e0ecb167aecdab6b68a.src","preCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          return ExprEval.of(value == null ? null : asDouble());\n        case LONG:\n          return this;\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","realPath":"core/src/main/java/org/apache/druid/math/expr/ExprEval.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"B"}],"commitId":"84598fba3b283cbfd6a5addd2602c7b12ba8c00c","commitMessage":"@@@combine druid-api.  druid-common.  java-util into druid-core (#6443)\n\n* combine druid-api.  druid-common.  java-util\n\n* spacing\n","date":"2018-10-15 11:37:37","modifiedFileCount":"0","status":"B","submitter":"Clint Wylie"},{"authorTime":"2018-11-07 06:38:08","codes":[{"authorDate":"2018-11-07 06:38:08","commitOrder":2,"curCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          return this;\n        case LONG:\n          if (value == null) {\n            return ExprEval.of(null);\n          } else {\n            return ExprEval.of(asLong());\n          }\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","date":"2018-11-07 06:38:08","endLine":195,"groupId":"7683","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"castTo","params":"(ExprTypecastTo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/60/009122de19b0463898e080fa2b2c8a3f200269.src","preCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          return this;\n        case LONG:\n          return ExprEval.of(value == null ? null : asLong());\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","realPath":"core/src/main/java/org/apache/druid/math/expr/ExprEval.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"},{"authorDate":"2018-11-07 06:38:08","commitOrder":2,"curCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          if (value == null) {\n            return ExprEval.of(null);\n          } else {\n            return ExprEval.of(asDouble());\n          }\n        case LONG:\n          return this;\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","date":"2018-11-07 06:38:08","endLine":239,"groupId":"12249","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"castTo","params":"(ExprTypecastTo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/60/009122de19b0463898e080fa2b2c8a3f200269.src","preCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          return ExprEval.of(value == null ? null : asDouble());\n        case LONG:\n          return this;\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","realPath":"core/src/main/java/org/apache/druid/math/expr/ExprEval.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"}],"commitId":"54351a5c75d8902d1d4c2eb2f6590bcf126348d4","commitMessage":"@@@Fix various bugs; Enable more IntelliJ inspections and update error-prone (#6490)\n\n* Fix various bugs; Enable more IntelliJ inspections and update error-prone\n\n* Fix NPE\n\n* Fix inspections\n\n* Remove unused imports\n","date":"2018-11-07 06:38:08","modifiedFileCount":"93","status":"M","submitter":"Roman Leventov"},{"authorTime":"2018-11-15 07:20:52","codes":[{"authorDate":"2018-11-15 07:20:52","commitOrder":3,"curCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          return this;\n        case LONG:\n          if (value == null) {\n            return ExprEval.ofLong(null);\n          } else {\n            return ExprEval.of(asLong());\n          }\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","date":"2018-11-15 07:20:52","endLine":208,"groupId":"7688","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"castTo","params":"(ExprTypecastTo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4d/ad8100c9529d1dd70841ca174c4c07be80d39a.src","preCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          return this;\n        case LONG:\n          if (value == null) {\n            return ExprEval.of(null);\n          } else {\n            return ExprEval.of(asLong());\n          }\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","realPath":"core/src/main/java/org/apache/druid/math/expr/ExprEval.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"},{"authorDate":"2018-11-15 07:20:52","commitOrder":3,"curCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          if (value == null) {\n            return ExprEval.ofDouble(null);\n          } else {\n            return ExprEval.of(asDouble());\n          }\n        case LONG:\n          return this;\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","date":"2018-11-15 07:20:52","endLine":252,"groupId":"12249","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"castTo","params":"(ExprTypecastTo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4d/ad8100c9529d1dd70841ca174c4c07be80d39a.src","preCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          if (value == null) {\n            return ExprEval.of(null);\n          } else {\n            return ExprEval.of(asDouble());\n          }\n        case LONG:\n          return this;\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","realPath":"core/src/main/java/org/apache/druid/math/expr/ExprEval.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"0b70c36eb0dff06c81010d1569797c727712bddd","commitMessage":"@@@Fix bugs in ExprEval (#6617)\n\n","date":"2018-11-15 07:20:52","modifiedFileCount":"1","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-06-20 04:57:37","codes":[{"authorDate":"2019-06-20 04:57:37","commitOrder":4,"curCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          return this;\n        case LONG:\n          if (value == null) {\n            return ExprEval.ofLong(null);\n          } else {\n            return ExprEval.of(asLong());\n          }\n        case STRING:\n          return ExprEval.of(asString());\n        case DOUBLE_ARRAY:\n          return ExprEval.ofDoubleArray(asDoubleArray());\n        case LONG_ARRAY:\n          return ExprEval.ofLongArray(asLongArray());\n        case STRING_ARRAY:\n          return ExprEval.ofStringArray(asStringArray());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","date":"2019-06-20 04:57:37","endLine":292,"groupId":"115485","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"castTo","params":"(ExprTypecastTo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1c/afb17a750c7e62667861e3e2e9f2899b72e14c.src","preCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          return this;\n        case LONG:\n          if (value == null) {\n            return ExprEval.ofLong(null);\n          } else {\n            return ExprEval.of(asLong());\n          }\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","realPath":"core/src/main/java/org/apache/druid/math/expr/ExprEval.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"M"},{"authorDate":"2019-06-20 04:57:37","commitOrder":4,"curCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          if (value == null) {\n            return ExprEval.ofDouble(null);\n          } else {\n            return ExprEval.of(asDouble());\n          }\n        case LONG:\n          return this;\n        case STRING:\n          return ExprEval.of(asString());\n        case DOUBLE_ARRAY:\n          return ExprEval.ofDoubleArray(asDoubleArray());\n        case LONG_ARRAY:\n          return ExprEval.ofLongArray(asLongArray());\n        case STRING_ARRAY:\n          return ExprEval.ofStringArray(asStringArray());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","date":"2019-06-20 04:57:37","endLine":356,"groupId":"115485","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"castTo","params":"(ExprTypecastTo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1c/afb17a750c7e62667861e3e2e9f2899b72e14c.src","preCode":"    public final ExprEval castTo(ExprType castTo)\n    {\n      switch (castTo) {\n        case DOUBLE:\n          if (value == null) {\n            return ExprEval.ofDouble(null);\n          } else {\n            return ExprEval.of(asDouble());\n          }\n        case LONG:\n          return this;\n        case STRING:\n          return ExprEval.of(asString());\n      }\n      throw new IAE(\"invalid type \" + castTo);\n    }\n","realPath":"core/src/main/java/org/apache/druid/math/expr/ExprEval.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":335,"status":"M"}],"commitId":"494b8ebe56308fe69c2a758f80f1ae56bf17d54d","commitMessage":"@@@multi-value string column support for expressions (#7588)\n\n* array support for expression language for multi-value string columns\n\n* fix tests?\n\n* fixes\n\n* more tests\n\n* fixes\n\n* cleanup\n\n* more better.  more test\n\n* ignore inspection\n\n* license\n\n* license fix\n\n* inspection\n\n* remove dumb import\n\n* more better\n\n* some comments\n\n* add expr rewrite for arrayfn args for more magic.  tests\n\n* test stuff\n\n* more tests\n\n* fix test\n\n* fix test\n\n* castfunc can deal with arrays\n\n* needs more empty array\n\n* more tests.  make cast to long array more forgiving\n\n* refactor\n\n* simplify ExprMacro Expr implementations with base classes in core\n\n* oops\n\n* more test\n\n* use Shuttle for Parser.flatten.  javadoc.  cleanup\n\n* fixes and more tests\n\n* unused import\n\n* fixes\n\n* javadocs.  cleanup.  refactors\n\n* fix imports\n\n* more javadoc\n\n* more javadoc\n\n* more\n\n* more javadocs.  nonnullbydefault.  minor refactor\n\n* markdown fix\n\n* adjustments\n\n* more doc\n\n* move initial filter out\n\n* docs\n\n* map empty arg lambda.  apply function argument validation\n\n* check function args at parse time instead of eval time\n\n* more immutable\n\n* more more immutable\n\n* clarify grammar\n\n* fix docs\n\n* empty array is string test.  we need a way to make arrays better maybe in the future.  or define empty arrays as other types..\n","date":"2019-06-20 04:57:37","modifiedFileCount":"43","status":"M","submitter":"Clint Wylie"}]
