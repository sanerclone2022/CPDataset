[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testDimSelectorHavingClauseSerde()\n  {\n    HavingSpec dimHavingSpec = new DimensionSelectorHavingSpec(\"dim\", \"v\", null);\n\n    Map<String, Object> dimSelectMap = ImmutableMap.of(\n        \"type\", \"dimSelector\",\n        \"dimension\", \"dim\",\n        \"value\", \"v\"\n    );\n\n    ObjectMapper mapper = new DefaultObjectMapper();\n    assertEquals(dimHavingSpec, mapper.convertValue(dimSelectMap, DimensionSelectorHavingSpec.class));\n  }\n","date":"2018-08-31 00:56:26","endLine":62,"groupId":"9491","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDimSelectorHavingClauseSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3e/6236a283f15241efbf5e0afd324c0855422a23.src","preCode":"  public void testDimSelectorHavingClauseSerde()\n  {\n    HavingSpec dimHavingSpec = new DimensionSelectorHavingSpec(\"dim\", \"v\", null);\n\n    Map<String, Object> dimSelectMap = ImmutableMap.of(\n        \"type\", \"dimSelector\",\n        \"dimension\", \"dim\",\n        \"value\", \"v\"\n    );\n\n    ObjectMapper mapper = new DefaultObjectMapper();\n    assertEquals(dimHavingSpec, mapper.convertValue(dimSelectMap, DimensionSelectorHavingSpec.class));\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/having/DimensionSelectorHavingSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTypeTypo()\n  {\n    Map<String, Object> greaterMap = ImmutableMap.of(\n        \"type\", \"nonExistingType\",\n        \"aggregation\", \"agg\",\n        \"value\", 1.3\n    );\n    ObjectMapper mapper = new DefaultObjectMapper();\n    \r\n    HavingSpec spec = mapper.convertValue(greaterMap, HavingSpec.class);\n  }\n","date":"2018-08-31 00:56:26","endLine":106,"groupId":"7873","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTypeTypo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ec/44b7f191dfb1b87b4208172ec5ebc6da5ca5bb.src","preCode":"  public void testTypeTypo()\n  {\n    Map<String, Object> greaterMap = ImmutableMap.of(\n        \"type\", \"nonExistingType\",\n        \"aggregation\", \"agg\",\n        \"value\", 1.3\n    );\n    ObjectMapper mapper = new DefaultObjectMapper();\n    \r\n    HavingSpec spec = mapper.convertValue(greaterMap, HavingSpec.class);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/having/HavingSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2019-07-07 00:33:12","commitOrder":2,"curCode":"  public void testDimSelectorHavingClauseSerde()\n  {\n    HavingSpec dimHavingSpec = new DimensionSelectorHavingSpec(\"dim\", \"v\", null);\n\n    Map<String, Object> dimSelectMap = ImmutableMap.of(\n        \"type\", \"dimSelector\",\n        \"dimension\", \"dim\",\n        \"value\", \"v\"\n    );\n\n    ObjectMapper mapper = new DefaultObjectMapper();\n    Assert.assertEquals(dimHavingSpec, mapper.convertValue(dimSelectMap, DimensionSelectorHavingSpec.class));\n  }\n","date":"2019-07-07 00:33:12","endLine":56,"groupId":"106606","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDimSelectorHavingClauseSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b0/3be7bf3869cb65e3b4973148d804455ed5f614.src","preCode":"  public void testDimSelectorHavingClauseSerde()\n  {\n    HavingSpec dimHavingSpec = new DimensionSelectorHavingSpec(\"dim\", \"v\", null);\n\n    Map<String, Object> dimSelectMap = ImmutableMap.of(\n        \"type\", \"dimSelector\",\n        \"dimension\", \"dim\",\n        \"value\", \"v\"\n    );\n\n    ObjectMapper mapper = new DefaultObjectMapper();\n    assertEquals(dimHavingSpec, mapper.convertValue(dimSelectMap, DimensionSelectorHavingSpec.class));\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/having/DimensionSelectorHavingSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void testTypeTypo()\n  {\n    Map<String, Object> greaterMap = ImmutableMap.of(\n        \"type\", \"nonExistingType\",\n        \"aggregation\", \"agg\",\n        \"value\", 1.3\n    );\n    ObjectMapper mapper = new DefaultObjectMapper();\n    \r\n    HavingSpec spec = mapper.convertValue(greaterMap, HavingSpec.class);\n  }\n","date":"2018-08-31 00:56:26","endLine":106,"groupId":"106606","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTypeTypo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ec/44b7f191dfb1b87b4208172ec5ebc6da5ca5bb.src","preCode":"  public void testTypeTypo()\n  {\n    Map<String, Object> greaterMap = ImmutableMap.of(\n        \"type\", \"nonExistingType\",\n        \"aggregation\", \"agg\",\n        \"value\", 1.3\n    );\n    ObjectMapper mapper = new DefaultObjectMapper();\n    \r\n    HavingSpec spec = mapper.convertValue(greaterMap, HavingSpec.class);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/groupby/having/HavingSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"N"}],"commitId":"1166bbcb75d432817715fdd429737f86730b5591","commitMessage":"@@@Remove static imports from tests (#8036)\n\nMake static imports forbidden in tests and remove all occurrences to be\nconsistent with the non-test code.\n\nAlso.  various changes to files affected by above:\n- Reformat to adhere to druid style guide\n- Fix various IntelliJ warnings\n- Fix various SonarLint warnings (e.g..  the expected/actual args to\n  Assert.assertEquals() were flipped)","date":"2019-07-07 00:33:12","modifiedFileCount":"98","status":"M","submitter":"Chi Cao Minh"}]
