[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newDataSourceMetadataQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2018-08-31 00:56:26","endLine":71,"groupId":"23286","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b6/fad6066c6c3a0cd3abb105bf014e8658307d75.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newDataSourceMetadataQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/datasourcemetadata/DataSourceMetadataQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeseriesQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.dayGran)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(QueryRunnerTestHelper.rowsCount, QueryRunnerTestHelper.indexDoubleSum)\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .descending(descending)\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2018-08-31 00:56:26","endLine":69,"groupId":"22350","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/74/63ca85951f79ebe0ca94bb64296ccf48bb24d1.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeseriesQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.dayGran)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(QueryRunnerTestHelper.rowsCount, QueryRunnerTestHelper.indexDoubleSum)\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .descending(descending)\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-01-22 03:11:10","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newDataSourceMetadataQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2018-08-31 00:56:26","endLine":71,"groupId":"23286","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b6/fad6066c6c3a0cd3abb105bf014e8658307d75.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newDataSourceMetadataQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/datasourcemetadata/DataSourceMetadataQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"},{"authorDate":"2019-01-22 03:11:10","commitOrder":2,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeseriesQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.dayGran)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(QueryRunnerTestHelper.rowsCount, QueryRunnerTestHelper.indexDoubleSum)\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .descending(descending)\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2019-01-22 03:11:10","endLine":69,"groupId":"23286","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/12/40dfc86e92eeeaceb05c3438e9b7c23f175cb6.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeseriesQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.dayGran)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(QueryRunnerTestHelper.rowsCount, QueryRunnerTestHelper.indexDoubleSum)\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .descending(descending)\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"8eae26fd4e7572060d112864dd3d5f6a865b9c89","commitMessage":"@@@Introduce SegmentId class (#6370)\n\n* Introduce SegmentId class\n\n* tmp\n\n* Fix SelectQueryRunnerTest\n\n* Fix indentation\n\n* Fixes\n\n* Remove Comparators.inverse() tests\n\n* Refinements\n\n* Fix tests\n\n* Fix more tests\n\n* Remove duplicate DataSegmentTest.  fixes #6064\n\n* SegmentDescriptor doc\n\n* Fix SQLMetadataStorageUpdaterJobHandler\n\n* Fix DataSegment deserialization for ignoring id\n\n* Add comments\n\n* More comments\n\n* Address more comments\n\n* Fix compilation\n\n* Restore segment2 in SystemSchemaTest according to a comment\n\n* Fix style\n\n* fix testServerSegmentsTable\n\n* Fix compilation\n\n* Add comments about why SegmentId and SegmentIdWithShardSpec are separate classes\n\n* Fix SystemSchemaTest\n\n* Fix style\n\n* Compare SegmentDescriptor with SegmentId in Javadoc and comments rather than with DataSegment\n\n* Remove a link.  see https://youtrack.jetbrains.com/issue/IDEA-205164\n\n* Fix compilation\n","date":"2019-01-22 03:11:10","modifiedFileCount":"308","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":3,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newDataSourceMetadataQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = JSON_MAPPER.writeValueAsString(query);\n    Query serdeQuery = JSON_MAPPER.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2019-08-23 18:13:54","endLine":72,"groupId":"106305","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d2/2ba99efe9467be40871a1751f3dbdf147d8bf2.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newDataSourceMetadataQueryBuilder()\n                        .dataSource(\"testing\")\n                        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/datasourcemetadata/DataSourceMetadataQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":3,"curCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeseriesQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.DATA_SOURCE)\n        .granularity(QueryRunnerTestHelper.DAY_GRAN)\n        .intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC)\n        .aggregators(QueryRunnerTestHelper.ROWS_COUNT, QueryRunnerTestHelper.INDEX_DOUBLE_SUM)\n        .postAggregators(QueryRunnerTestHelper.ADD_ROWS_INDEX_CONSTANT)\n        .descending(descending)\n        .build();\n\n    String json = JSON_MAPPER.writeValueAsString(query);\n    Query serdeQuery = JSON_MAPPER.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","date":"2019-08-23 18:13:54","endLine":69,"groupId":"106305","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testQuerySerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/31/0880244e29ac66182b1fd56cd6e8a33b9251f6.src","preCode":"  public void testQuerySerialization() throws IOException\n  {\n    Query query = Druids.newTimeseriesQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.dayGran)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(QueryRunnerTestHelper.rowsCount, QueryRunnerTestHelper.indexDoubleSum)\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .descending(descending)\n        .build();\n\n    String json = jsonMapper.writeValueAsString(query);\n    Query serdeQuery = jsonMapper.readValue(json, Query.class);\n\n    Assert.assertEquals(query, serdeQuery);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/timeseries/TimeseriesQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
