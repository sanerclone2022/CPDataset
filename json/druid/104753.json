[{"authorTime":"2019-11-21 09:24:12","codes":[{"authorDate":"2019-12-10 15:05:49","commitOrder":5,"curCode":"  private void sendReport(DimensionDistributionReport report)\n  {\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n    taskClient.report(supervisorTaskId, report);\n  }\n","date":"2019-12-10 15:05:49","endLine":320,"groupId":"13980","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sendReport","params":"(DimensionDistributionReportreport)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/60/c2d185162c56a64bb053e9f136efe872c280c5.src","preCode":"  private void sendReport(DimensionDistributionReport report)\n  {\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n    taskClient.report(supervisorTaskId, report);\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialDimensionDistributionTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"B"},{"authorDate":"2019-11-21 09:24:12","commitOrder":5,"curCode":"  public final TaskStatus runTask(TaskToolbox toolbox) throws Exception\n  {\n    final InputSource inputSource = ingestionSchema.getIOConfig().getNonNullInputSource(\n        ingestionSchema.getDataSchema().getParser()\n    );\n\n    final File tmpDir = toolbox.getIndexingTmpDir();\n    \r\n    FileUtils.forceMkdir(tmpDir);\n\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n\n    final List<DataSegment> segments = generateSegments(toolbox, inputSource, tmpDir);\n    taskClient.report(supervisorTaskId, createGeneratedPartitionsReport(toolbox, segments));\n\n    return TaskStatus.success(getId());\n  }\n","date":"2019-11-21 09:24:12","endLine":124,"groupId":"917","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"runTask","params":"(TaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4d/abf7ea02c53820515ed47fa74a20932199fb54.src","preCode":"  public final TaskStatus runTask(TaskToolbox toolbox) throws Exception\n  {\n    final InputSource inputSource = ingestionSchema.getIOConfig().getNonNullInputSource(\n        ingestionSchema.getDataSchema().getParser()\n    );\n\n    final File tmpDir = toolbox.getIndexingTmpDir();\n    \r\n    FileUtils.forceMkdir(tmpDir);\n\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n\n    final List<DataSegment> segments = generateSegments(toolbox, inputSource, tmpDir);\n    taskClient.report(supervisorTaskId, createGeneratedPartitionsReport(toolbox, segments));\n\n    return TaskStatus.success(getId());\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialSegmentGenerateTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"NB"}],"commitId":"bab78fc80e8ee2929d6d2c277d3999695c8402a4","commitMessage":"@@@Parallel indexing single dim partitions (#8925)\n\n* Parallel indexing single dim partitions\n\nImplements single dimension range partitioning for native parallel batch\nindexing as described in #8769. This initial version requires the\ndruid-datasketches extension to be loaded.\n\nThe algorithm has 5 phases that are orchestrated by the supervisor in\n`ParallelIndexSupervisorTask#runRangePartitionMultiPhaseParallel()`.\nThese phases and the main classes involved are described below:\n\n1) In parallel.  determine the distribution of dimension values for each\n   input source split.\n\n   `PartialDimensionDistributionTask` uses `StringSketch` to generate\n   the approximate distribution of dimension values for each input\n   source split. If the rows are ungrouped. \n   `PartialDimensionDistributionTask.UngroupedRowDimensionValueFilter`\n   uses a Bloom filter to skip rows that would be grouped. The final\n   distribution is sent back to the supervisor via\n   `DimensionDistributionReport`.\n\n2) The range partitions are determined.\n\n   In `ParallelIndexSupervisorTask#determineAllRangePartitions()`.  the\n   supervisor uses `StringSketchMerger` to merge the individual\n   `StringSketch`es created in the preceding phase. The merged sketch is\n   then used to create the range partitions.\n\n3) In parallel.  generate partial range-partitioned segments.\n\n   `PartialRangeSegmentGenerateTask` uses the range partitions\n   determined in the preceding phase and\n   `RangePartitionCachingLocalSegmentAllocator` to generate\n   `SingleDimensionShardSpec`s.  The partition information is sent back\n   to the supervisor via `GeneratedGenericPartitionsReport`.\n\n4) The partial range segments are grouped.\n\n   In `ParallelIndexSupervisorTask#groupGenericPartitionLocationsPerPartition()`. \n   the supervisor creates the `PartialGenericSegmentMergeIOConfig`s\n   necessary for the next phase.\n\n5) In parallel.  merge partial range-partitioned segments.\n\n   `PartialGenericSegmentMergeTask` uses `GenericPartitionLocation` to\n   retrieve the partial range-partitioned segments generated earlier and\n   then merges and publishes them.\n\n* Fix dependencies & forbidden apis\n\n* Fixes for integration test\n\n* Address review comments\n\n* Fix docs.  strict compile.  sketch check.  rollup check\n\n* Fix first shard spec.  partition serde.  single subtask\n\n* Fix first partition check in test\n\n* Misc rewording/refactoring to address code review\n\n* Fix doc link\n\n* Split batch index integration test\n\n* Do not run parallel-batch-index twice\n\n* Adjust last partition\n\n* Split ITParallelIndexTest to reduce runtime\n\n* Rename test class\n\n* Allow null values in range partitions\n\n* Indicate which phase failed\n\n* Improve asserts in tests\n","date":"2019-12-10 15:05:49","modifiedFileCount":"18","status":"M","submitter":"Chi Cao Minh"},{"authorTime":"2020-02-08 08:23:07","codes":[{"authorDate":"2019-12-10 15:05:49","commitOrder":6,"curCode":"  private void sendReport(DimensionDistributionReport report)\n  {\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n    taskClient.report(supervisorTaskId, report);\n  }\n","date":"2019-12-10 15:05:49","endLine":320,"groupId":"13980","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sendReport","params":"(DimensionDistributionReportreport)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/60/c2d185162c56a64bb053e9f136efe872c280c5.src","preCode":"  private void sendReport(DimensionDistributionReport report)\n  {\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n    taskClient.report(supervisorTaskId, report);\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialDimensionDistributionTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"N"},{"authorDate":"2020-02-08 08:23:07","commitOrder":6,"curCode":"  public final TaskStatus runTask(TaskToolbox toolbox) throws Exception\n  {\n    final InputSource inputSource = ingestionSchema.getIOConfig().getNonNullInputSource(\n        ingestionSchema.getDataSchema().getParser()\n    );\n\n    final File tmpDir = toolbox.getIndexingTmpDir();\n    \r\n    FileUtils.forceMkdir(tmpDir);\n\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n\n    final List<DataSegment> segments = generateSegments(toolbox, taskClient, inputSource, tmpDir);\n    taskClient.report(supervisorTaskId, createGeneratedPartitionsReport(toolbox, segments));\n\n    return TaskStatus.success(getId());\n  }\n","date":"2020-02-08 08:23:07","endLine":127,"groupId":"917","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"runTask","params":"(TaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/65/e570a9d84d58f3b7b0b3cbaec3fb37cdd21aea.src","preCode":"  public final TaskStatus runTask(TaskToolbox toolbox) throws Exception\n  {\n    final InputSource inputSource = ingestionSchema.getIOConfig().getNonNullInputSource(\n        ingestionSchema.getDataSchema().getParser()\n    );\n\n    final File tmpDir = toolbox.getIndexingTmpDir();\n    \r\n    FileUtils.forceMkdir(tmpDir);\n\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n\n    final List<DataSegment> segments = generateSegments(toolbox, inputSource, tmpDir);\n    taskClient.report(supervisorTaskId, createGeneratedPartitionsReport(toolbox, segments));\n\n    return TaskStatus.success(getId());\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialSegmentGenerateTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"e81230f9abd092b2ac742258abf534f6e17f35e8","commitMessage":"@@@Refactoring some codes around ingestion (#9274)\n\n* Refactoring codes around ingestion:\n\n- Parallel index task and simple task now use the same segment allocator implementation. This is reusable for the future implementation as well.\n- Added PartitionAnalysis to store the analysis of the partitioning\n- Move some util methods to SegmentLockHelper and rename it to TaskLockHelper\n\n* fix build\n\n* fix SingleDimensionShardSpecFactory\n\n* optimize SingledimensionShardSpecFactory\n\n* fix test\n\n* shard spec builder\n\n* import order\n\n* shardSpecBuilder -> partialShardSpec\n\n* build -> complete\n\n* fix comment; add unit tests for partitionBoundaries\n\n* add more tests and fix javadoc\n\n* fix toString(); add serde tests for HashBasedNumberedPartialShardSpec and SegmentAllocateAction\n\n* fix test\n\n* add equality test for hash and range partial shard specs\n","date":"2020-02-08 08:23:07","modifiedFileCount":"49","status":"M","submitter":"Jihoon Son"},{"authorTime":"2020-06-26 05:41:22","codes":[{"authorDate":"2019-12-10 15:05:49","commitOrder":7,"curCode":"  private void sendReport(DimensionDistributionReport report)\n  {\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n    taskClient.report(supervisorTaskId, report);\n  }\n","date":"2019-12-10 15:05:49","endLine":320,"groupId":"13980","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"sendReport","params":"(DimensionDistributionReportreport)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/60/c2d185162c56a64bb053e9f136efe872c280c5.src","preCode":"  private void sendReport(DimensionDistributionReport report)\n  {\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n    taskClient.report(supervisorTaskId, report);\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialDimensionDistributionTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"N"},{"authorDate":"2020-06-26 05:41:22","commitOrder":7,"curCode":"  public final TaskStatus runTask(TaskToolbox toolbox) throws Exception\n  {\n    final InputSource inputSource = ingestionSchema.getIOConfig().getNonNullInputSource(\n        ingestionSchema.getDataSchema().getParser()\n    );\n\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n\n    final List<DataSegment> segments = generateSegments(\n        toolbox,\n        taskClient,\n        inputSource,\n        toolbox.getIndexingTmpDir()\n    );\n    taskClient.report(supervisorTaskId, createGeneratedPartitionsReport(toolbox, segments));\n\n    return TaskStatus.success(getId());\n  }\n","date":"2020-06-26 05:41:22","endLine":126,"groupId":"22245","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"runTask","params":"(TaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/44/b788e44dfd45f3becd7ab9406c07ce84944db0.src","preCode":"  public final TaskStatus runTask(TaskToolbox toolbox) throws Exception\n  {\n    final InputSource inputSource = ingestionSchema.getIOConfig().getNonNullInputSource(\n        ingestionSchema.getDataSchema().getParser()\n    );\n\n    final File tmpDir = toolbox.getIndexingTmpDir();\n    \r\n    FileUtils.forceMkdir(tmpDir);\n\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n\n    final List<DataSegment> segments = generateSegments(toolbox, taskClient, inputSource, tmpDir);\n    taskClient.report(supervisorTaskId, createGeneratedPartitionsReport(toolbox, segments));\n\n    return TaskStatus.success(getId());\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialSegmentGenerateTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"f6594fff608d4b2e071c7bdd6d86d7f87398ce4f","commitMessage":"@@@Fix missing temp dir for native single_dim (#10046)\n\n* Fix missing temp dir for native single_dim\n\nNative single dim indexing throws a file not found exception from\nInputEntityIteratingReader.java:81.  This MR creates the required\ntemporary directory when setting up the\nPartialDimensionDistributionTask.  The change was tested on a Druid\ncluster.  After installing the change native single_dim indexing\ncompletes successfully.\n\n* Fix indentation\n\n* Use SinglePhaseSubTask as example for creating the temp dir\n\n* Move temporary indexing dir creation in to TaskToolbox\n\n* Remove unused dependency\n\nCo-authored-by: Morri Feldman <morri@appsflyer.com>","date":"2020-06-26 05:41:22","modifiedFileCount":"6","status":"M","submitter":"morrifeldman"},{"authorTime":"2020-08-27 08:08:12","codes":[{"authorDate":"2020-08-27 08:08:12","commitOrder":8,"curCode":"  private void sendReport(TaskToolbox toolbox, DimensionDistributionReport report)\n  {\n    final ParallelIndexSupervisorTaskClient taskClient = toolbox.getSupervisorTaskClientFactory().build(\n        new ClientBasedTaskInfoProvider(toolbox.getIndexingServiceClient()),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n    taskClient.report(supervisorTaskId, report);\n  }\n","date":"2020-08-27 08:08:12","endLine":302,"groupId":"104753","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"sendReport","params":"(TaskToolboxtoolbox@DimensionDistributionReportreport)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d7/1102bc1a24878bb335bbe714944934a6ace0f7.src","preCode":"  private void sendReport(DimensionDistributionReport report)\n  {\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n    taskClient.report(supervisorTaskId, report);\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialDimensionDistributionTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"M"},{"authorDate":"2020-08-27 08:08:12","commitOrder":8,"curCode":"  public final TaskStatus runTask(TaskToolbox toolbox) throws Exception\n  {\n    final InputSource inputSource = ingestionSchema.getIOConfig().getNonNullInputSource(\n        ingestionSchema.getDataSchema().getParser()\n    );\n\n    final ParallelIndexSupervisorTaskClient taskClient = toolbox.getSupervisorTaskClientFactory().build(\n        new ClientBasedTaskInfoProvider(toolbox.getIndexingServiceClient()),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n\n    final List<DataSegment> segments = generateSegments(\n        toolbox,\n        taskClient,\n        inputSource,\n        toolbox.getIndexingTmpDir()\n    );\n    taskClient.report(supervisorTaskId, createGeneratedPartitionsReport(toolbox, segments));\n\n    return TaskStatus.success(getId());\n  }\n","date":"2020-08-27 08:08:12","endLine":112,"groupId":"104753","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"runTask","params":"(TaskToolboxtoolbox)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b6/5d4f2eeec1adcf27d5ff7d9b44b4162cd4ba1d.src","preCode":"  public final TaskStatus runTask(TaskToolbox toolbox) throws Exception\n  {\n    final InputSource inputSource = ingestionSchema.getIOConfig().getNonNullInputSource(\n        ingestionSchema.getDataSchema().getParser()\n    );\n\n    final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(\n        new ClientBasedTaskInfoProvider(indexingServiceClient),\n        getId(),\n        1, \r\n        ingestionSchema.getTuningConfig().getChatHandlerTimeout(),\n        ingestionSchema.getTuningConfig().getChatHandlerNumRetries()\n    );\n\n    final List<DataSegment> segments = generateSegments(\n        toolbox,\n        taskClient,\n        inputSource,\n        toolbox.getIndexingTmpDir()\n    );\n    taskClient.report(supervisorTaskId, createGeneratedPartitionsReport(toolbox, segments));\n\n    return TaskStatus.success(getId());\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/PartialSegmentGenerateTask.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"f82fd22fa7de175200b7127c34c2eb2900bf7317","commitMessage":"@@@Move tools for indexing to TaskToolbox instead of injecting them in constructor (#10308)\n\n* Move tools for indexing to TaskToolbox instead of injecting them in constructor\n\n* oops.  other changes\n\n* fix test\n\n* unnecessary new file\n\n* fix test\n\n* fix build","date":"2020-08-27 08:08:12","modifiedFileCount":"67","status":"M","submitter":"Jihoon Son"}]
