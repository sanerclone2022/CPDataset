[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testHashPassword()\n  {\n    char[] password = \"HELLO\".toCharArray();\n    int iterations = BasicAuthUtils.DEFAULT_KEY_ITERATIONS;\n    byte[] salt = BasicAuthUtils.generateSalt();\n    byte[] hash = BasicAuthUtils.hashPassword(password, salt, iterations);\n\n    Assert.assertEquals(BasicAuthUtils.SALT_LENGTH, salt.length);\n    Assert.assertEquals(BasicAuthUtils.KEY_LENGTH / 8, hash.length);\n  }\n","date":"2018-08-31 00:56:26","endLine":38,"groupId":"17829","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testHashPassword","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/14/2e44afb4bbb35fceceb9318aac386fb617c6cf.src","preCode":"  public void testHashPassword()\n  {\n    char[] password = \"HELLO\".toCharArray();\n    int iterations = BasicAuthUtils.DEFAULT_KEY_ITERATIONS;\n    byte[] salt = BasicAuthUtils.generateSalt();\n    byte[] hash = BasicAuthUtils.hashPassword(password, salt, iterations);\n\n    Assert.assertEquals(BasicAuthUtils.SALT_LENGTH, salt.length);\n    Assert.assertEquals(BasicAuthUtils.KEY_LENGTH / 8, hash.length);\n  }\n","realPath":"extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/BasicAuthUtilsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":29,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testCreateDeleteUser()\n  {\n    Response response = resource.createUser(req, AUTHORIZER_NAME, \"druid\");\n    Assert.assertEquals(200, response.getStatus());\n\n    response = resource.getUser(req, AUTHORIZER_NAME, \"druid\", null);\n    Assert.assertEquals(200, response.getStatus());\n\n    BasicAuthorizerUser expectedUser = new BasicAuthorizerUser(\n        \"druid\",\n        ImmutableSet.of()\n    );\n    Assert.assertEquals(expectedUser, response.getEntity());\n\n    response = resource.deleteUser(req, AUTHORIZER_NAME, \"druid\");\n    Assert.assertEquals(200, response.getStatus());\n\n    response = resource.deleteUser(req, AUTHORIZER_NAME, \"druid\");\n    Assert.assertEquals(400, response.getStatus());\n    Assert.assertEquals(errorMapWithMsg(\"User [druid] does not exist.\"), response.getEntity());\n\n    response = resource.getUser(req, AUTHORIZER_NAME, \"druid\", null);\n    Assert.assertEquals(400, response.getStatus());\n    Assert.assertEquals(errorMapWithMsg(\"User [druid] does not exist.\"), response.getEntity());\n  }\n","date":"2018-08-31 00:56:26","endLine":265,"groupId":"19902","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateDeleteUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ef/10dcc30deeb27a9629568861cc08914e898b5e.src","preCode":"  public void testCreateDeleteUser()\n  {\n    Response response = resource.createUser(req, AUTHORIZER_NAME, \"druid\");\n    Assert.assertEquals(200, response.getStatus());\n\n    response = resource.getUser(req, AUTHORIZER_NAME, \"druid\", null);\n    Assert.assertEquals(200, response.getStatus());\n\n    BasicAuthorizerUser expectedUser = new BasicAuthorizerUser(\n        \"druid\",\n        ImmutableSet.of()\n    );\n    Assert.assertEquals(expectedUser, response.getEntity());\n\n    response = resource.deleteUser(req, AUTHORIZER_NAME, \"druid\");\n    Assert.assertEquals(200, response.getStatus());\n\n    response = resource.deleteUser(req, AUTHORIZER_NAME, \"druid\");\n    Assert.assertEquals(400, response.getStatus());\n    Assert.assertEquals(errorMapWithMsg(\"User [druid] does not exist.\"), response.getEntity());\n\n    response = resource.getUser(req, AUTHORIZER_NAME, \"druid\", null);\n    Assert.assertEquals(400, response.getStatus());\n    Assert.assertEquals(errorMapWithMsg(\"User [druid] does not exist.\"), response.getEntity());\n  }\n","realPath":"extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-05-16 03:59:32","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void testHashPassword()\n  {\n    char[] password = \"HELLO\".toCharArray();\n    int iterations = BasicAuthUtils.DEFAULT_KEY_ITERATIONS;\n    byte[] salt = BasicAuthUtils.generateSalt();\n    byte[] hash = BasicAuthUtils.hashPassword(password, salt, iterations);\n\n    Assert.assertEquals(BasicAuthUtils.SALT_LENGTH, salt.length);\n    Assert.assertEquals(BasicAuthUtils.KEY_LENGTH / 8, hash.length);\n  }\n","date":"2018-08-31 00:56:26","endLine":38,"groupId":"103008","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testHashPassword","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/14/2e44afb4bbb35fceceb9318aac386fb617c6cf.src","preCode":"  public void testHashPassword()\n  {\n    char[] password = \"HELLO\".toCharArray();\n    int iterations = BasicAuthUtils.DEFAULT_KEY_ITERATIONS;\n    byte[] salt = BasicAuthUtils.generateSalt();\n    byte[] hash = BasicAuthUtils.hashPassword(password, salt, iterations);\n\n    Assert.assertEquals(BasicAuthUtils.SALT_LENGTH, salt.length);\n    Assert.assertEquals(BasicAuthUtils.KEY_LENGTH / 8, hash.length);\n  }\n","realPath":"extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/BasicAuthUtilsTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":29,"status":"N"},{"authorDate":"2019-05-16 03:59:32","commitOrder":2,"curCode":"  public void testCreateDeleteUser()\n  {\n    Response response = resource.createUser(req, AUTHORIZER_NAME, \"druid\");\n    Assert.assertEquals(200, response.getStatus());\n\n    response = resource.getUser(req, AUTHORIZER_NAME, \"druid\", null, null);\n    Assert.assertEquals(200, response.getStatus());\n\n    BasicAuthorizerUser expectedUser = new BasicAuthorizerUser(\n        \"druid\",\n        ImmutableSet.of()\n    );\n    Assert.assertEquals(expectedUser, response.getEntity());\n\n    response = resource.deleteUser(req, AUTHORIZER_NAME, \"druid\");\n    Assert.assertEquals(200, response.getStatus());\n\n    response = resource.deleteUser(req, AUTHORIZER_NAME, \"druid\");\n    Assert.assertEquals(400, response.getStatus());\n    Assert.assertEquals(errorMapWithMsg(\"User [druid] does not exist.\"), response.getEntity());\n\n    response = resource.getUser(req, AUTHORIZER_NAME, \"druid\", null, null);\n    Assert.assertEquals(400, response.getStatus());\n    Assert.assertEquals(errorMapWithMsg(\"User [druid] does not exist.\"), response.getEntity());\n  }\n","date":"2019-05-16 03:59:32","endLine":267,"groupId":"103008","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateDeleteUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/15/6273c531621f0a8fc2e7afc48512a9e8707756.src","preCode":"  public void testCreateDeleteUser()\n  {\n    Response response = resource.createUser(req, AUTHORIZER_NAME, \"druid\");\n    Assert.assertEquals(200, response.getStatus());\n\n    response = resource.getUser(req, AUTHORIZER_NAME, \"druid\", null);\n    Assert.assertEquals(200, response.getStatus());\n\n    BasicAuthorizerUser expectedUser = new BasicAuthorizerUser(\n        \"druid\",\n        ImmutableSet.of()\n    );\n    Assert.assertEquals(expectedUser, response.getEntity());\n\n    response = resource.deleteUser(req, AUTHORIZER_NAME, \"druid\");\n    Assert.assertEquals(200, response.getStatus());\n\n    response = resource.deleteUser(req, AUTHORIZER_NAME, \"druid\");\n    Assert.assertEquals(400, response.getStatus());\n    Assert.assertEquals(errorMapWithMsg(\"User [druid] does not exist.\"), response.getEntity());\n\n    response = resource.getUser(req, AUTHORIZER_NAME, \"druid\", null);\n    Assert.assertEquals(400, response.getStatus());\n    Assert.assertEquals(errorMapWithMsg(\"User [druid] does not exist.\"), response.getEntity());\n  }\n","realPath":"extensions-core/druid-basic-security/src/test/java/org/apache/druid/security/authorization/CoordinatorBasicAuthorizerResourceTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"M"}],"commitId":"e874da7cea6db590e88ff847b47dfc2ad878baad","commitMessage":"@@@Add simpler permissions option to BasicAuthorizer GET APIs (#7635)\n\n* Add simpler permissions option to BasicAuthorizer GET APIs\n\n* Adjust log message\n\nCo-Authored-By: Himanshu <g.himanshu@gmail.com>\n\n* Adjust log message\n\nCo-Authored-By: Himanshu <g.himanshu@gmail.com>\n","date":"2019-05-16 03:59:32","modifiedFileCount":"7","status":"M","submitter":"Jonathan Wei"}]
