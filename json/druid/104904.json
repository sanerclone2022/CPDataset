[{"authorTime":"2018-10-15 11:37:37","codes":[{"authorDate":"2018-10-15 11:37:37","commitOrder":1,"curCode":"  public void testWithCacheAndFetch() throws IOException\n  {\n    final TestPrefetchableTextFilesFirehoseFactory factory =\n        TestPrefetchableTextFilesFirehoseFactory.of(TEST_DIR);\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithCacheAndFetch\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 2);\n  }\n","date":"2018-10-15 11:37:37","endLine":250,"groupId":"13011","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithCacheAndFetch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/9c/3508e8e0dd0ede35261b6936b576f7e75cc2cc.src","preCode":"  public void testWithCacheAndFetch() throws IOException\n  {\n    final TestPrefetchableTextFilesFirehoseFactory factory =\n        TestPrefetchableTextFilesFirehoseFactory.of(TEST_DIR);\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithCacheAndFetch\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 2);\n  }\n","realPath":"core/src/test/java/org/apache/druid/data/input/impl/prefetch/PrefetchableTextFilesFirehoseFactoryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"B"},{"authorDate":"2018-10-15 11:37:37","commitOrder":1,"curCode":"  public void testWithSmallCacheAndLargeFetch() throws IOException\n  {\n    final TestPrefetchableTextFilesFirehoseFactory factory =\n        TestPrefetchableTextFilesFirehoseFactory.with(TEST_DIR, 1024, 2048);\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithSmallCacheAndLargeFetch\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 1);\n  }\n","date":"2018-10-15 11:37:37","endLine":286,"groupId":"13011","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithSmallCacheAndLargeFetch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/9c/3508e8e0dd0ede35261b6936b576f7e75cc2cc.src","preCode":"  public void testWithSmallCacheAndLargeFetch() throws IOException\n  {\n    final TestPrefetchableTextFilesFirehoseFactory factory =\n        TestPrefetchableTextFilesFirehoseFactory.with(TEST_DIR, 1024, 2048);\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithSmallCacheAndLargeFetch\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 1);\n  }\n","realPath":"core/src/test/java/org/apache/druid/data/input/impl/prefetch/PrefetchableTextFilesFirehoseFactoryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"B"}],"commitId":"84598fba3b283cbfd6a5addd2602c7b12ba8c00c","commitMessage":"@@@combine druid-api.  druid-common.  java-util into druid-core (#6443)\n\n* combine druid-api.  druid-common.  java-util\n\n* spacing\n","date":"2018-10-15 11:37:37","modifiedFileCount":"0","status":"B","submitter":"Clint Wylie"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testWithCacheAndFetch() throws IOException\n  {\n    final TestPrefetchableTextFilesFirehoseFactory factory =\n        TestPrefetchableTextFilesFirehoseFactory.of(TEST_DIR);\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithCacheAndFetch\");\n    try (Firehose firehose = factory.connect(PARSER, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 2);\n  }\n","date":"2019-08-23 18:13:54","endLine":249,"groupId":"104904","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithCacheAndFetch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/15/64daca5350b9f0799a07f9f47d6b17b56e70b1.src","preCode":"  public void testWithCacheAndFetch() throws IOException\n  {\n    final TestPrefetchableTextFilesFirehoseFactory factory =\n        TestPrefetchableTextFilesFirehoseFactory.of(TEST_DIR);\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithCacheAndFetch\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 2);\n  }\n","realPath":"core/src/test/java/org/apache/druid/data/input/impl/prefetch/PrefetchableTextFilesFirehoseFactoryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void testWithSmallCacheAndLargeFetch() throws IOException\n  {\n    final TestPrefetchableTextFilesFirehoseFactory factory =\n        TestPrefetchableTextFilesFirehoseFactory.with(TEST_DIR, 1024, 2048);\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithSmallCacheAndLargeFetch\");\n    try (Firehose firehose = factory.connect(PARSER, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 1);\n  }\n","date":"2019-08-23 18:13:54","endLine":285,"groupId":"104904","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWithSmallCacheAndLargeFetch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/15/64daca5350b9f0799a07f9f47d6b17b56e70b1.src","preCode":"  public void testWithSmallCacheAndLargeFetch() throws IOException\n  {\n    final TestPrefetchableTextFilesFirehoseFactory factory =\n        TestPrefetchableTextFilesFirehoseFactory.with(TEST_DIR, 1024, 2048);\n\n    final List<Row> rows = new ArrayList<>();\n    final File firehoseTmpDir = createFirehoseTmpDir(\"testWithSmallCacheAndLargeFetch\");\n    try (Firehose firehose = factory.connect(parser, firehoseTmpDir)) {\n      while (firehose.hasMore()) {\n        rows.add(firehose.nextRow());\n      }\n    }\n\n    assertResult(rows);\n    assertNumRemainingCacheFiles(firehoseTmpDir, 1);\n  }\n","realPath":"core/src/test/java/org/apache/druid/data/input/impl/prefetch/PrefetchableTextFilesFirehoseFactoryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
