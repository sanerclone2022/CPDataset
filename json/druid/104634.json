[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  void setUp() throws Exception\n  {\n    testingCluster = new TestingCluster(1);\n    testingCluster.start();\n\n    cf = CuratorFrameworkFactory.builder()\n                                .connectString(testingCluster.getConnectString())\n                                .retryPolicy(new ExponentialBackoffRetry(1, 10))\n                                .compressionProvider(new PotentiallyGzippedCompressionProvider(false))\n                                .build();\n    cf.start();\n    cf.blockUntilConnected();\n    cf.create().creatingParentsIfNeeded().forPath(basePath);\n    cf.create().creatingParentsIfNeeded().forPath(tasksPath);\n  }\n","date":"2018-08-31 00:56:26","endLine":100,"groupId":"5578","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/89/95c9fd6e0910ba8908fcf8fc980bd9bd56d271.src","preCode":"  void setUp() throws Exception\n  {\n    testingCluster = new TestingCluster(1);\n    testingCluster.start();\n\n    cf = CuratorFrameworkFactory.builder()\n                                .connectString(testingCluster.getConnectString())\n                                .retryPolicy(new ExponentialBackoffRetry(1, 10))\n                                .compressionProvider(new PotentiallyGzippedCompressionProvider(false))\n                                .build();\n    cf.start();\n    cf.blockUntilConnected();\n    cf.create().creatingParentsIfNeeded().forPath(basePath);\n    cf.create().creatingParentsIfNeeded().forPath(tasksPath);\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTestUtils.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void setUp() throws Exception\n  {\n    testingCluster = new TestingCluster(1);\n    testingCluster.start();\n\n    cf = CuratorFrameworkFactory.builder()\n                                .connectString(testingCluster.getConnectString())\n                                .retryPolicy(new ExponentialBackoffRetry(1, 10))\n                                .compressionProvider(new PotentiallyGzippedCompressionProvider(false))\n                                .build();\n    cf.start();\n    cf.blockUntilConnected();\n    cf.create().creatingParentsIfNeeded().forPath(basePath);\n\n    worker = new Worker(\n        \"http\",\n        \"worker\",\n        \"localhost\",\n        3,\n        \"0\"\n    );\n\n    workerCuratorCoordinator = new WorkerCuratorCoordinator(\n        jsonMapper,\n        new IndexerZkConfig(\n            new ZkPathsConfig()\n            {\n              @Override\n              public String getBase()\n              {\n                return basePath;\n              }\n            }, null, null, null, null\n        ),\n        new TestRemoteTaskRunnerConfig(new Period(\"PT1S\")),\n        cf,\n        worker\n    );\n    workerCuratorCoordinator.start();\n\n\n    \r\n    workerTaskMonitor = createTaskMonitor();\n    TestTasks.registerSubtypes(jsonMapper);\n    jsonMapper.registerSubtypes(new NamedType(TestRealtimeTask.class, \"test_realtime\"));\n    workerTaskMonitor.start();\n\n    task = TestTasks.immediateSuccess(\"test\");\n  }\n","date":"2018-08-31 00:56:26","endLine":147,"groupId":"5224","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ea/c46c5729206d26c70edcc1870244366f8b656e.src","preCode":"  public void setUp() throws Exception\n  {\n    testingCluster = new TestingCluster(1);\n    testingCluster.start();\n\n    cf = CuratorFrameworkFactory.builder()\n                                .connectString(testingCluster.getConnectString())\n                                .retryPolicy(new ExponentialBackoffRetry(1, 10))\n                                .compressionProvider(new PotentiallyGzippedCompressionProvider(false))\n                                .build();\n    cf.start();\n    cf.blockUntilConnected();\n    cf.create().creatingParentsIfNeeded().forPath(basePath);\n\n    worker = new Worker(\n        \"http\",\n        \"worker\",\n        \"localhost\",\n        3,\n        \"0\"\n    );\n\n    workerCuratorCoordinator = new WorkerCuratorCoordinator(\n        jsonMapper,\n        new IndexerZkConfig(\n            new ZkPathsConfig()\n            {\n              @Override\n              public String getBase()\n              {\n                return basePath;\n              }\n            }, null, null, null, null\n        ),\n        new TestRemoteTaskRunnerConfig(new Period(\"PT1S\")),\n        cf,\n        worker\n    );\n    workerCuratorCoordinator.start();\n\n\n    \r\n    workerTaskMonitor = createTaskMonitor();\n    TestTasks.registerSubtypes(jsonMapper);\n    jsonMapper.registerSubtypes(new NamedType(TestRealtimeTask.class, \"test_realtime\"));\n    workerTaskMonitor.start();\n\n    task = TestTasks.immediateSuccess(\"test\");\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  void setUp() throws Exception\n  {\n    testingCluster = new TestingCluster(1);\n    testingCluster.start();\n\n    cf = CuratorFrameworkFactory.builder()\n                                .connectString(testingCluster.getConnectString())\n                                .retryPolicy(new ExponentialBackoffRetry(1, 10))\n                                .compressionProvider(new PotentiallyGzippedCompressionProvider(false))\n                                .build();\n    cf.start();\n    cf.blockUntilConnected();\n    cf.create().creatingParentsIfNeeded().forPath(BASE_PATH);\n    cf.create().creatingParentsIfNeeded().forPath(TASKS_PATH);\n  }\n","date":"2019-08-23 18:13:54","endLine":99,"groupId":"5578","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ed/0713dd23bd94265b68c02044e37521aba5278f.src","preCode":"  void setUp() throws Exception\n  {\n    testingCluster = new TestingCluster(1);\n    testingCluster.start();\n\n    cf = CuratorFrameworkFactory.builder()\n                                .connectString(testingCluster.getConnectString())\n                                .retryPolicy(new ExponentialBackoffRetry(1, 10))\n                                .compressionProvider(new PotentiallyGzippedCompressionProvider(false))\n                                .build();\n    cf.start();\n    cf.blockUntilConnected();\n    cf.create().creatingParentsIfNeeded().forPath(basePath);\n    cf.create().creatingParentsIfNeeded().forPath(tasksPath);\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTestUtils.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":2,"curCode":"  public void setUp() throws Exception\n  {\n    testingCluster = new TestingCluster(1);\n    testingCluster.start();\n\n    cf = CuratorFrameworkFactory.builder()\n                                .connectString(testingCluster.getConnectString())\n                                .retryPolicy(new ExponentialBackoffRetry(1, 10))\n                                .compressionProvider(new PotentiallyGzippedCompressionProvider(false))\n                                .build();\n    cf.start();\n    cf.blockUntilConnected();\n    cf.create().creatingParentsIfNeeded().forPath(BASE_PATH);\n\n    worker = new Worker(\n        \"http\",\n        \"worker\",\n        \"localhost\",\n        3,\n        \"0\"\n    );\n\n    workerCuratorCoordinator = new WorkerCuratorCoordinator(\n        jsonMapper,\n        new IndexerZkConfig(\n            new ZkPathsConfig()\n            {\n              @Override\n              public String getBase()\n              {\n                return BASE_PATH;\n              }\n            }, null, null, null, null\n        ),\n        new TestRemoteTaskRunnerConfig(new Period(\"PT1S\")),\n        cf,\n        worker\n    );\n    workerCuratorCoordinator.start();\n\n\n    \r\n    workerTaskMonitor = createTaskMonitor();\n    TestTasks.registerSubtypes(jsonMapper);\n    jsonMapper.registerSubtypes(new NamedType(TestRealtimeTask.class, \"test_realtime\"));\n    workerTaskMonitor.start();\n\n    task = TestTasks.immediateSuccess(\"test\");\n  }\n","date":"2019-08-23 18:13:54","endLine":144,"groupId":"5224","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a5/bddbea4a459ea68aa26bd421eb1756a40ffed1.src","preCode":"  public void setUp() throws Exception\n  {\n    testingCluster = new TestingCluster(1);\n    testingCluster.start();\n\n    cf = CuratorFrameworkFactory.builder()\n                                .connectString(testingCluster.getConnectString())\n                                .retryPolicy(new ExponentialBackoffRetry(1, 10))\n                                .compressionProvider(new PotentiallyGzippedCompressionProvider(false))\n                                .build();\n    cf.start();\n    cf.blockUntilConnected();\n    cf.create().creatingParentsIfNeeded().forPath(basePath);\n\n    worker = new Worker(\n        \"http\",\n        \"worker\",\n        \"localhost\",\n        3,\n        \"0\"\n    );\n\n    workerCuratorCoordinator = new WorkerCuratorCoordinator(\n        jsonMapper,\n        new IndexerZkConfig(\n            new ZkPathsConfig()\n            {\n              @Override\n              public String getBase()\n              {\n                return basePath;\n              }\n            }, null, null, null, null\n        ),\n        new TestRemoteTaskRunnerConfig(new Period(\"PT1S\")),\n        cf,\n        worker\n    );\n    workerCuratorCoordinator.start();\n\n\n    \r\n    workerTaskMonitor = createTaskMonitor();\n    TestTasks.registerSubtypes(jsonMapper);\n    jsonMapper.registerSubtypes(new NamedType(TestRealtimeTask.class, \"test_realtime\"));\n    workerTaskMonitor.start();\n\n    task = TestTasks.immediateSuccess(\"test\");\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"},{"authorTime":"2019-10-18 03:57:19","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":3,"curCode":"  void setUp() throws Exception\n  {\n    testingCluster = new TestingCluster(1);\n    testingCluster.start();\n\n    cf = CuratorFrameworkFactory.builder()\n                                .connectString(testingCluster.getConnectString())\n                                .retryPolicy(new ExponentialBackoffRetry(1, 10))\n                                .compressionProvider(new PotentiallyGzippedCompressionProvider(false))\n                                .build();\n    cf.start();\n    cf.blockUntilConnected();\n    cf.create().creatingParentsIfNeeded().forPath(BASE_PATH);\n    cf.create().creatingParentsIfNeeded().forPath(TASKS_PATH);\n  }\n","date":"2019-08-23 18:13:54","endLine":99,"groupId":"104634","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ed/0713dd23bd94265b68c02044e37521aba5278f.src","preCode":"  void setUp() throws Exception\n  {\n    testingCluster = new TestingCluster(1);\n    testingCluster.start();\n\n    cf = CuratorFrameworkFactory.builder()\n                                .connectString(testingCluster.getConnectString())\n                                .retryPolicy(new ExponentialBackoffRetry(1, 10))\n                                .compressionProvider(new PotentiallyGzippedCompressionProvider(false))\n                                .build();\n    cf.start();\n    cf.blockUntilConnected();\n    cf.create().creatingParentsIfNeeded().forPath(BASE_PATH);\n    cf.create().creatingParentsIfNeeded().forPath(TASKS_PATH);\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/overlord/RemoteTaskRunnerTestUtils.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2019-10-18 03:57:19","commitOrder":3,"curCode":"  public void setUp() throws Exception\n  {\n    testingCluster = new TestingCluster(1);\n    testingCluster.start();\n\n    cf = CuratorFrameworkFactory.builder()\n                                .connectString(testingCluster.getConnectString())\n                                .retryPolicy(new ExponentialBackoffRetry(1, 10))\n                                .compressionProvider(new PotentiallyGzippedCompressionProvider(false))\n                                .build();\n    cf.start();\n    cf.blockUntilConnected();\n    cf.create().creatingParentsIfNeeded().forPath(BASE_PATH);\n\n    worker = new Worker(\n        \"http\",\n        \"worker\",\n        \"localhost\",\n        3,\n        \"0\",\n        WorkerConfig.DEFAULT_CATEGORY\n    );\n\n    workerCuratorCoordinator = new WorkerCuratorCoordinator(\n        jsonMapper,\n        new IndexerZkConfig(\n            new ZkPathsConfig()\n            {\n              @Override\n              public String getBase()\n              {\n                return BASE_PATH;\n              }\n            }, null, null, null, null\n        ),\n        new TestRemoteTaskRunnerConfig(new Period(\"PT1S\")),\n        cf,\n        worker\n    );\n    workerCuratorCoordinator.start();\n\n\n    \r\n    workerTaskMonitor = createTaskMonitor();\n    TestTasks.registerSubtypes(jsonMapper);\n    jsonMapper.registerSubtypes(new NamedType(TestRealtimeTask.class, \"test_realtime\"));\n    workerTaskMonitor.start();\n\n    task = TestTasks.immediateSuccess(\"test\");\n  }\n","date":"2019-10-18 03:57:19","endLine":146,"groupId":"104634","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/93/379f84332628fefaa92c1f11cee5990c93bee5.src","preCode":"  public void setUp() throws Exception\n  {\n    testingCluster = new TestingCluster(1);\n    testingCluster.start();\n\n    cf = CuratorFrameworkFactory.builder()\n                                .connectString(testingCluster.getConnectString())\n                                .retryPolicy(new ExponentialBackoffRetry(1, 10))\n                                .compressionProvider(new PotentiallyGzippedCompressionProvider(false))\n                                .build();\n    cf.start();\n    cf.blockUntilConnected();\n    cf.create().creatingParentsIfNeeded().forPath(BASE_PATH);\n\n    worker = new Worker(\n        \"http\",\n        \"worker\",\n        \"localhost\",\n        3,\n        \"0\"\n    );\n\n    workerCuratorCoordinator = new WorkerCuratorCoordinator(\n        jsonMapper,\n        new IndexerZkConfig(\n            new ZkPathsConfig()\n            {\n              @Override\n              public String getBase()\n              {\n                return BASE_PATH;\n              }\n            }, null, null, null, null\n        ),\n        new TestRemoteTaskRunnerConfig(new Period(\"PT1S\")),\n        cf,\n        worker\n    );\n    workerCuratorCoordinator.start();\n\n\n    \r\n    workerTaskMonitor = createTaskMonitor();\n    TestTasks.registerSubtypes(jsonMapper);\n    jsonMapper.registerSubtypes(new NamedType(TestRealtimeTask.class, \"test_realtime\"));\n    workerTaskMonitor.start();\n\n    task = TestTasks.immediateSuccess(\"test\");\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/worker/WorkerTaskMonitorTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"2c758ef5ff07891619b7ffedfb28dc31a6850c59","commitMessage":"@@@Support assign tasks to run on different categories of MiddleManagers (#7066)\n\n* Support assign tasks to run on different tiers of MiddleManagers\n\n* address comments\n\n* address comments\n\n* rename tier to category and docs\n\n* doc\n\n* fix doc\n\n* fix spelling errors\n\n* docs\n","date":"2019-10-18 03:57:19","modifiedFileCount":"27","status":"M","submitter":"Mingming Qiu"}]
