[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private void initAssignedTasks()\n  {\n    File assignedTaskDir = getAssignedTaskDir();\n\n    log.info(\"Looking for any previously assigned tasks on disk[%s].\", assignedTaskDir);\n\n    assignedTaskDir.mkdirs();\n\n    if (!assignedTaskDir.isDirectory()) {\n      throw new ISE(\"Assigned Tasks Dir [%s] does not exist/not-a-directory.\", assignedTaskDir);\n    }\n\n    for (File taskFile : assignedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        Task task = jsonMapper.readValue(taskFile, Task.class);\n        if (taskId.equals(task.getId())) {\n          assignedTasks.put(taskId, task);\n          log.info(\"Found assigned task[%s].\", taskId);\n        } else {\n          throw new ISE(\"Corrupted assigned task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        throw new ISE(ex, \"Failed to read assigned task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n\n    for (Task task : assignedTasks.values()) {\n      submitNoticeToExec(new RunNotice(task));\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":326,"groupId":"987","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"initAssignedTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a8/58f88fd7e1eb200c3659cfd149ad8468cf2515.src","preCode":"  private void initAssignedTasks()\n  {\n    File assignedTaskDir = getAssignedTaskDir();\n\n    log.info(\"Looking for any previously assigned tasks on disk[%s].\", assignedTaskDir);\n\n    assignedTaskDir.mkdirs();\n\n    if (!assignedTaskDir.isDirectory()) {\n      throw new ISE(\"Assigned Tasks Dir [%s] does not exist/not-a-directory.\", assignedTaskDir);\n    }\n\n    for (File taskFile : assignedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        Task task = jsonMapper.readValue(taskFile, Task.class);\n        if (taskId.equals(task.getId())) {\n          assignedTasks.put(taskId, task);\n          log.info(\"Found assigned task[%s].\", taskId);\n        } else {\n          throw new ISE(\"Corrupted assigned task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        throw new ISE(ex, \"Failed to read assigned task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n\n    for (Task task : assignedTasks.values()) {\n      submitNoticeToExec(new RunNotice(task));\n    }\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/worker/WorkerTaskManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private void initCompletedTasks()\n  {\n    File completedTaskDir = getCompletedTaskDir();\n    log.info(\"Looking for any previously completed tasks on disk[%s].\", completedTaskDir);\n\n    completedTaskDir.mkdirs();\n\n    if (!completedTaskDir.isDirectory()) {\n      throw new ISE(\"Completed Tasks Dir [%s] does not exist/not-a-directory.\", completedTaskDir);\n    }\n\n    for (File taskFile : completedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        TaskAnnouncement taskAnnouncement = jsonMapper.readValue(taskFile, TaskAnnouncement.class);\n        if (taskId.equals(taskAnnouncement.getTaskId())) {\n          completedTasks.put(taskId, taskAnnouncement);\n          log.info(\"Found completed task[%s] with status[%s].\", taskId, taskAnnouncement.getStatus());\n        } else {\n          throw new ISE(\"Corrupted completed task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        throw new ISE(ex, \"Failed to read completed task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n  }\n","date":"2018-08-31 00:56:26","endLine":434,"groupId":"991","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initCompletedTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a8/58f88fd7e1eb200c3659cfd149ad8468cf2515.src","preCode":"  private void initCompletedTasks()\n  {\n    File completedTaskDir = getCompletedTaskDir();\n    log.info(\"Looking for any previously completed tasks on disk[%s].\", completedTaskDir);\n\n    completedTaskDir.mkdirs();\n\n    if (!completedTaskDir.isDirectory()) {\n      throw new ISE(\"Completed Tasks Dir [%s] does not exist/not-a-directory.\", completedTaskDir);\n    }\n\n    for (File taskFile : completedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        TaskAnnouncement taskAnnouncement = jsonMapper.readValue(taskFile, TaskAnnouncement.class);\n        if (taskId.equals(taskAnnouncement.getTaskId())) {\n          completedTasks.put(taskId, taskAnnouncement);\n          log.info(\"Found completed task[%s] with status[%s].\", taskId, taskAnnouncement.getStatus());\n        } else {\n          throw new ISE(\"Corrupted completed task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        throw new ISE(ex, \"Failed to read completed task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/worker/WorkerTaskManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":408,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2019-06-19 00:18:43","codes":[{"authorDate":"2019-06-19 00:18:43","commitOrder":2,"curCode":"  private void initAssignedTasks()\n  {\n    File assignedTaskDir = getAssignedTaskDir();\n\n    log.info(\"Looking for any previously assigned tasks on disk[%s].\", assignedTaskDir);\n\n    assignedTaskDir.mkdirs();\n\n    if (!assignedTaskDir.isDirectory()) {\n      throw new ISE(\"Assigned Tasks Dir [%s] does not exist/not-a-directory.\", assignedTaskDir);\n    }\n\n    for (File taskFile : assignedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        Task task = jsonMapper.readValue(taskFile, Task.class);\n        if (taskId.equals(task.getId())) {\n          assignedTasks.put(taskId, task);\n          log.info(\"Found assigned task[%s].\", taskId);\n        } else {\n          throw new ISE(\"WTF! Corrupted assigned task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        log.error(ex, \"Failed to read assigned task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n\n    for (Task task : assignedTasks.values()) {\n      submitNoticeToExec(new RunNotice(task));\n    }\n  }\n","date":"2019-06-19 00:18:43","endLine":354,"groupId":"987","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"initAssignedTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ac/5c15c09fac01930ccc53ac14dfc88174c11d73.src","preCode":"  private void initAssignedTasks()\n  {\n    File assignedTaskDir = getAssignedTaskDir();\n\n    log.info(\"Looking for any previously assigned tasks on disk[%s].\", assignedTaskDir);\n\n    assignedTaskDir.mkdirs();\n\n    if (!assignedTaskDir.isDirectory()) {\n      throw new ISE(\"Assigned Tasks Dir [%s] does not exist/not-a-directory.\", assignedTaskDir);\n    }\n\n    for (File taskFile : assignedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        Task task = jsonMapper.readValue(taskFile, Task.class);\n        if (taskId.equals(task.getId())) {\n          assignedTasks.put(taskId, task);\n          log.info(\"Found assigned task[%s].\", taskId);\n        } else {\n          throw new ISE(\"Corrupted assigned task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        throw new ISE(ex, \"Failed to read assigned task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n\n    for (Task task : assignedTasks.values()) {\n      submitNoticeToExec(new RunNotice(task));\n    }\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/worker/WorkerTaskManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":323,"status":"M"},{"authorDate":"2019-06-19 00:18:43","commitOrder":2,"curCode":"  private void initCompletedTasks()\n  {\n    File completedTaskDir = getCompletedTaskDir();\n    log.info(\"Looking for any previously completed tasks on disk[%s].\", completedTaskDir);\n\n    completedTaskDir.mkdirs();\n\n    if (!completedTaskDir.isDirectory()) {\n      throw new ISE(\"Completed Tasks Dir [%s] does not exist/not-a-directory.\", completedTaskDir);\n    }\n\n    for (File taskFile : completedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        TaskAnnouncement taskAnnouncement = jsonMapper.readValue(taskFile, TaskAnnouncement.class);\n        if (taskId.equals(taskAnnouncement.getTaskId())) {\n          completedTasks.put(taskId, taskAnnouncement);\n          log.info(\"Found completed task[%s] with status[%s].\", taskId, taskAnnouncement.getStatus());\n        } else {\n          throw new ISE(\"WTF! Corrupted completed task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        log.error(ex, \"Failed to read completed task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n  }\n","date":"2019-06-19 00:18:43","endLine":467,"groupId":"991","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initCompletedTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ac/5c15c09fac01930ccc53ac14dfc88174c11d73.src","preCode":"  private void initCompletedTasks()\n  {\n    File completedTaskDir = getCompletedTaskDir();\n    log.info(\"Looking for any previously completed tasks on disk[%s].\", completedTaskDir);\n\n    completedTaskDir.mkdirs();\n\n    if (!completedTaskDir.isDirectory()) {\n      throw new ISE(\"Completed Tasks Dir [%s] does not exist/not-a-directory.\", completedTaskDir);\n    }\n\n    for (File taskFile : completedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        TaskAnnouncement taskAnnouncement = jsonMapper.readValue(taskFile, TaskAnnouncement.class);\n        if (taskId.equals(taskAnnouncement.getTaskId())) {\n          completedTasks.put(taskId, taskAnnouncement);\n          log.info(\"Found completed task[%s] with status[%s].\", taskId, taskAnnouncement.getStatus());\n        } else {\n          throw new ISE(\"Corrupted completed task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        throw new ISE(ex, \"Failed to read completed task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/worker/WorkerTaskManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":441,"status":"M"}],"commitId":"417fcef38547621e7874c607869a2c440013838c","commitMessage":"@@@WorkerTaskManager to create disk files atomically and ignore task file corruption (#7917)\n\n* WorkerTaskManager to create disk files atomically and ignore task file\ncorruptions\n\n* fixing weird checkstyle lambda indentation issues\n","date":"2019-06-19 00:18:43","modifiedFileCount":"2","status":"M","submitter":"Himanshu"},{"authorTime":"2019-11-20 05:57:58","codes":[{"authorDate":"2019-11-20 05:57:58","commitOrder":3,"curCode":"  private void initAssignedTasks()\n  {\n    File assignedTaskDir = getAssignedTaskDir();\n\n    log.debug(\"Looking for any previously assigned tasks on disk[%s].\", assignedTaskDir);\n\n    assignedTaskDir.mkdirs();\n\n    if (!assignedTaskDir.isDirectory()) {\n      throw new ISE(\"Assigned Tasks Dir [%s] does not exist/not-a-directory.\", assignedTaskDir);\n    }\n\n    for (File taskFile : assignedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        Task task = jsonMapper.readValue(taskFile, Task.class);\n        if (taskId.equals(task.getId())) {\n          assignedTasks.put(taskId, task);\n        } else {\n          throw new ISE(\"WTF! Corrupted assigned task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        log.noStackTrace()\n           .error(ex, \"Failed to read assigned task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n\n    if (!assignedTasks.isEmpty()) {\n      log.info(\n          \"Found %,d running tasks from previous run: %s\",\n          assignedTasks.size(),\n          assignedTasks.values().stream().map(Task::getId).collect(Collectors.joining(\", \"))\n      );\n    }\n\n    for (Task task : assignedTasks.values()) {\n      submitNoticeToExec(new RunNotice(task));\n    }\n  }\n","date":"2019-11-20 05:57:58","endLine":368,"groupId":"987","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"initAssignedTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bd/84c8c5da0b423bc0cf78e8434d89a49d765bb8.src","preCode":"  private void initAssignedTasks()\n  {\n    File assignedTaskDir = getAssignedTaskDir();\n\n    log.info(\"Looking for any previously assigned tasks on disk[%s].\", assignedTaskDir);\n\n    assignedTaskDir.mkdirs();\n\n    if (!assignedTaskDir.isDirectory()) {\n      throw new ISE(\"Assigned Tasks Dir [%s] does not exist/not-a-directory.\", assignedTaskDir);\n    }\n\n    for (File taskFile : assignedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        Task task = jsonMapper.readValue(taskFile, Task.class);\n        if (taskId.equals(task.getId())) {\n          assignedTasks.put(taskId, task);\n          log.info(\"Found assigned task[%s].\", taskId);\n        } else {\n          throw new ISE(\"WTF! Corrupted assigned task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        log.error(ex, \"Failed to read assigned task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n\n    for (Task task : assignedTasks.values()) {\n      submitNoticeToExec(new RunNotice(task));\n    }\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/worker/WorkerTaskManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"M"},{"authorDate":"2019-11-20 05:57:58","commitOrder":3,"curCode":"  private void initCompletedTasks()\n  {\n    File completedTaskDir = getCompletedTaskDir();\n    log.debug(\"Looking for any previously completed tasks on disk[%s].\", completedTaskDir);\n\n    completedTaskDir.mkdirs();\n\n    if (!completedTaskDir.isDirectory()) {\n      throw new ISE(\"Completed Tasks Dir [%s] does not exist/not-a-directory.\", completedTaskDir);\n    }\n\n    for (File taskFile : completedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        TaskAnnouncement taskAnnouncement = jsonMapper.readValue(taskFile, TaskAnnouncement.class);\n        if (taskId.equals(taskAnnouncement.getTaskId())) {\n          completedTasks.put(taskId, taskAnnouncement);\n        } else {\n          throw new ISE(\"WTF! Corrupted completed task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        log.error(ex, \"Failed to read completed task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n\n    if (!completedTasks.isEmpty()) {\n      log.info(\n          \"Found %,d complete tasks from previous run: %s\",\n          completedTasks.size(),\n          completedTasks.values().stream().map(\n              taskAnnouncement ->\n                  StringUtils.format(\"%s (%s)\", taskAnnouncement.getTaskId(), taskAnnouncement.getStatus())\n          ).collect(Collectors.joining(\", \"))\n      );\n    }\n  }\n","date":"2019-11-20 05:57:58","endLine":492,"groupId":"991","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"initCompletedTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bd/84c8c5da0b423bc0cf78e8434d89a49d765bb8.src","preCode":"  private void initCompletedTasks()\n  {\n    File completedTaskDir = getCompletedTaskDir();\n    log.info(\"Looking for any previously completed tasks on disk[%s].\", completedTaskDir);\n\n    completedTaskDir.mkdirs();\n\n    if (!completedTaskDir.isDirectory()) {\n      throw new ISE(\"Completed Tasks Dir [%s] does not exist/not-a-directory.\", completedTaskDir);\n    }\n\n    for (File taskFile : completedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        TaskAnnouncement taskAnnouncement = jsonMapper.readValue(taskFile, TaskAnnouncement.class);\n        if (taskId.equals(taskAnnouncement.getTaskId())) {\n          completedTasks.put(taskId, taskAnnouncement);\n          log.info(\"Found completed task[%s] with status[%s].\", taskId, taskAnnouncement.getStatus());\n        } else {\n          throw new ISE(\"WTF! Corrupted completed task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        log.error(ex, \"Failed to read completed task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/worker/WorkerTaskManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"M"}],"commitId":"c44452f0c1b051b03343d8bb479828f01461d68f","commitMessage":"@@@Tidy up lifecycle.  query.  and ingestion logging. (#8889)\n\n* Tidy up lifecycle.  query.  and ingestion logging.\n\nThe goal of this patch is to improve the clarity and usefulness of\nDruid's logging for cluster operators. For more information.  see\nhttps://twitter.com/cowtowncoder/status/1195469299814555648.\n\nConcretely.  this patch does the following:\n\n- Changes a lot of INFO logs to DEBUG.  and DEBUG to TRACE.  with the\n  goal of reducing redundancy and improving clarity by avoiding\n  showing rarely-useful log messages. This includes most \"starting\"\n  and \"stopping\" messages.  and most messages related to individual\n  columns.\n- Adds new log4j2 templates that show operators how to enabled DEBUG\n  logging for certain important packages.\n- Eliminate stack traces for query errors.  unless log level is DEBUG\n  or more. This is useful because query errors often indicate user\n  error rather than system error.  but dumping stack trace often gave\n  operators the impression that there was a system failure.\n- Adds task id to Appenderator.  AppenderatorDriver thread names. In\n  the default log4j2 configuration.  this will put them in log lines\n  as well. It's very useful if a user is using the Indexer.  where\n  multiple tasks run in the same JVM.\n- More consistent terminology when it comes to \"sequences\" (sets of\n  segments that are handed-off together by Kafka ingestion) and\n  \"offsets\" (cursors in partitions). These terms had been confused in\n  some log messages due to the fact that Kinesis calls offsets\n  \"sequence numbers\".\n- Replaces some ugly toString calls with either the JSONification or\n  something more operator-accessible (like a URL or segment identifier. \n  instead of JSON object representing the same).\n\n* Adjustments.\n\n* Adjust integration test.\n","date":"2019-11-20 05:57:58","modifiedFileCount":"101","status":"M","submitter":"Gian Merlino"},{"authorTime":"2020-08-29 02:38:50","codes":[{"authorDate":"2020-08-29 02:38:50","commitOrder":4,"curCode":"  private void initAssignedTasks()\n  {\n    File assignedTaskDir = getAssignedTaskDir();\n\n    log.debug(\"Looking for any previously assigned tasks on disk[%s].\", assignedTaskDir);\n\n    assignedTaskDir.mkdirs();\n\n    if (!assignedTaskDir.isDirectory()) {\n      throw new ISE(\"Assigned Tasks Dir [%s] does not exist/not-a-directory.\", assignedTaskDir);\n    }\n\n    for (File taskFile : assignedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        Task task = jsonMapper.readValue(taskFile, Task.class);\n        if (taskId.equals(task.getId())) {\n          assignedTasks.put(taskId, task);\n        } else {\n          throw new ISE(\"Corrupted assigned task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        log.noStackTrace()\n           .error(ex, \"Failed to read assigned task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n\n    if (!assignedTasks.isEmpty()) {\n      log.info(\n          \"Found %,d running tasks from previous run: %s\",\n          assignedTasks.size(),\n          assignedTasks.values().stream().map(Task::getId).collect(Collectors.joining(\", \"))\n      );\n    }\n\n    for (Task task : assignedTasks.values()) {\n      submitNoticeToExec(new RunNotice(task));\n    }\n  }\n","date":"2020-08-29 02:38:50","endLine":368,"groupId":"104815","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"initAssignedTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3f/497768eaad8f72ab795fb27dc2176ef235fb83.src","preCode":"  private void initAssignedTasks()\n  {\n    File assignedTaskDir = getAssignedTaskDir();\n\n    log.debug(\"Looking for any previously assigned tasks on disk[%s].\", assignedTaskDir);\n\n    assignedTaskDir.mkdirs();\n\n    if (!assignedTaskDir.isDirectory()) {\n      throw new ISE(\"Assigned Tasks Dir [%s] does not exist/not-a-directory.\", assignedTaskDir);\n    }\n\n    for (File taskFile : assignedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        Task task = jsonMapper.readValue(taskFile, Task.class);\n        if (taskId.equals(task.getId())) {\n          assignedTasks.put(taskId, task);\n        } else {\n          throw new ISE(\"WTF! Corrupted assigned task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        log.noStackTrace()\n           .error(ex, \"Failed to read assigned task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n\n    if (!assignedTasks.isEmpty()) {\n      log.info(\n          \"Found %,d running tasks from previous run: %s\",\n          assignedTasks.size(),\n          assignedTasks.values().stream().map(Task::getId).collect(Collectors.joining(\", \"))\n      );\n    }\n\n    for (Task task : assignedTasks.values()) {\n      submitNoticeToExec(new RunNotice(task));\n    }\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/worker/WorkerTaskManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"M"},{"authorDate":"2020-08-29 02:38:50","commitOrder":4,"curCode":"  private void initCompletedTasks()\n  {\n    File completedTaskDir = getCompletedTaskDir();\n    log.debug(\"Looking for any previously completed tasks on disk[%s].\", completedTaskDir);\n\n    completedTaskDir.mkdirs();\n\n    if (!completedTaskDir.isDirectory()) {\n      throw new ISE(\"Completed Tasks Dir [%s] does not exist/not-a-directory.\", completedTaskDir);\n    }\n\n    for (File taskFile : completedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        TaskAnnouncement taskAnnouncement = jsonMapper.readValue(taskFile, TaskAnnouncement.class);\n        if (taskId.equals(taskAnnouncement.getTaskId())) {\n          completedTasks.put(taskId, taskAnnouncement);\n        } else {\n          throw new ISE(\"Corrupted completed task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        log.error(ex, \"Failed to read completed task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n\n    if (!completedTasks.isEmpty()) {\n      log.info(\n          \"Found %,d complete tasks from previous run: %s\",\n          completedTasks.size(),\n          completedTasks.values().stream().map(\n              taskAnnouncement ->\n                  StringUtils.format(\"%s (%s)\", taskAnnouncement.getTaskId(), taskAnnouncement.getStatus())\n          ).collect(Collectors.joining(\", \"))\n      );\n    }\n  }\n","date":"2020-08-29 02:38:50","endLine":492,"groupId":"104815","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"initCompletedTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/3f/497768eaad8f72ab795fb27dc2176ef235fb83.src","preCode":"  private void initCompletedTasks()\n  {\n    File completedTaskDir = getCompletedTaskDir();\n    log.debug(\"Looking for any previously completed tasks on disk[%s].\", completedTaskDir);\n\n    completedTaskDir.mkdirs();\n\n    if (!completedTaskDir.isDirectory()) {\n      throw new ISE(\"Completed Tasks Dir [%s] does not exist/not-a-directory.\", completedTaskDir);\n    }\n\n    for (File taskFile : completedTaskDir.listFiles()) {\n      try {\n        String taskId = taskFile.getName();\n        TaskAnnouncement taskAnnouncement = jsonMapper.readValue(taskFile, TaskAnnouncement.class);\n        if (taskId.equals(taskAnnouncement.getTaskId())) {\n          completedTasks.put(taskId, taskAnnouncement);\n        } else {\n          throw new ISE(\"WTF! Corrupted completed task on disk[%s].\", taskFile.getAbsoluteFile());\n        }\n      }\n      catch (IOException ex) {\n        log.error(ex, \"Failed to read completed task from disk at [%s]. Ignored.\", taskFile.getAbsoluteFile());\n      }\n    }\n\n    if (!completedTasks.isEmpty()) {\n      log.info(\n          \"Found %,d complete tasks from previous run: %s\",\n          completedTasks.size(),\n          completedTasks.values().stream().map(\n              taskAnnouncement ->\n                  StringUtils.format(\"%s (%s)\", taskAnnouncement.getTaskId(), taskAnnouncement.getStatus())\n          ).collect(Collectors.joining(\", \"))\n      );\n    }\n  }\n","realPath":"indexing-service/src/main/java/org/apache/druid/indexing/worker/WorkerTaskManager.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"M"}],"commitId":"8ab19793043c65bd79315de6fb26683f561a8a58","commitMessage":"@@@Remove implied profanity from error messages. (#10270)\n\ni.e. WTF.  WTH.","date":"2020-08-29 02:38:50","modifiedFileCount":"76","status":"M","submitter":"Gian Merlino"}]
