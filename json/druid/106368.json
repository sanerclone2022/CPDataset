[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTopNCollapsingDimExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                QueryRunnerTestHelper.qualityDimension, QueryRunnerTestHelper.qualityDimension,\n                new RegexDimExtractionFn(\".(.)\", false, null)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"e\",\n                        \"rows\", 558L,\n                        \"index\", 246645.1204032898,\n                        \"addRowsIndexConstant\", 247204.1204032898\n                    ),\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"r\",\n                        \"rows\", 372L,\n                        \"index\", 222051.08961486816,\n                        \"addRowsIndexConstant\", 222424.08961486816\n                    )\n                )\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n\n    query = query.withAggregatorSpecs(\n        Arrays.asList(\n            QueryRunnerTestHelper.rowsCount,\n            new DoubleSumAggregatorFactory(\"index\", null, \"-index + 100\", ExprMacroTable.nil())\n        )\n    );\n\n    expectedResults = Collections.singletonList(\n        TopNQueryRunnerTestHelper.createExpectedRows(\n            \"2011-01-12T00:00:00.000Z\",\n            new String[] {QueryRunnerTestHelper.qualityDimension, \"rows\", \"index\", \"addRowsIndexConstant\"},\n            Arrays.asList(\n                new Object[] {\"n\", 93L, -2786.4727909999997, -2692.4727909999997},\n                new Object[] {\"u\", 186L, -3949.824348000002, -3762.824348000002}\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2018-08-31 00:56:26","endLine":2437,"groupId":"11054","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopNCollapsingDimExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d8/05065b1a763d6958ac6c554b91a76be76340a5.src","preCode":"  public void testTopNCollapsingDimExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                QueryRunnerTestHelper.qualityDimension, QueryRunnerTestHelper.qualityDimension,\n                new RegexDimExtractionFn(\".(.)\", false, null)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"e\",\n                        \"rows\", 558L,\n                        \"index\", 246645.1204032898,\n                        \"addRowsIndexConstant\", 247204.1204032898\n                    ),\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"r\",\n                        \"rows\", 372L,\n                        \"index\", 222051.08961486816,\n                        \"addRowsIndexConstant\", 222424.08961486816\n                    )\n                )\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n\n    query = query.withAggregatorSpecs(\n        Arrays.asList(\n            QueryRunnerTestHelper.rowsCount,\n            new DoubleSumAggregatorFactory(\"index\", null, \"-index + 100\", ExprMacroTable.nil())\n        )\n    );\n\n    expectedResults = Collections.singletonList(\n        TopNQueryRunnerTestHelper.createExpectedRows(\n            \"2011-01-12T00:00:00.000Z\",\n            new String[] {QueryRunnerTestHelper.qualityDimension, \"rows\", \"index\", \"addRowsIndexConstant\"},\n            Arrays.asList(\n                new Object[] {\"n\", 93L, -2786.4727909999997, -2692.4727909999997},\n                new Object[] {\"u\", 186L, -3949.824348000002, -3762.824348000002}\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2371,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testTopNTimeExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                Column.TIME_COLUMN_NAME,\n                \"dayOfWeek\",\n                new TimeFormatExtractionFn(\"EEEE\", null, null, null, false)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Wednesday\",\n                        \"rows\", 182L,\n                        \"index\", 76010.28100585938,\n                        \"addRowsIndexConstant\", 76193.28100585938\n                    ),\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Thursday\",\n                        \"rows\", 182L,\n                        \"index\", 75203.26300811768,\n                        \"addRowsIndexConstant\", 75386.26300811768\n                    )\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2018-08-31 00:56:26","endLine":3895,"groupId":"10422","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopNTimeExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d8/05065b1a763d6958ac6c554b91a76be76340a5.src","preCode":"  public void testTopNTimeExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                Column.TIME_COLUMN_NAME,\n                \"dayOfWeek\",\n                new TimeFormatExtractionFn(\"EEEE\", null, null, null, false)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Wednesday\",\n                        \"rows\", 182L,\n                        \"index\", 76010.28100585938,\n                        \"addRowsIndexConstant\", 76193.28100585938\n                    ),\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Thursday\",\n                        \"rows\", 182L,\n                        \"index\", 75203.26300811768,\n                        \"addRowsIndexConstant\", 75386.26300811768\n                    )\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3849,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-10-03 01:50:22","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void testTopNCollapsingDimExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                QueryRunnerTestHelper.qualityDimension, QueryRunnerTestHelper.qualityDimension,\n                new RegexDimExtractionFn(\".(.)\", false, null)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"e\",\n                        \"rows\", 558L,\n                        \"index\", 246645.1204032898,\n                        \"addRowsIndexConstant\", 247204.1204032898\n                    ),\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"r\",\n                        \"rows\", 372L,\n                        \"index\", 222051.08961486816,\n                        \"addRowsIndexConstant\", 222424.08961486816\n                    )\n                )\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n\n    query = query.withAggregatorSpecs(\n        Arrays.asList(\n            QueryRunnerTestHelper.rowsCount,\n            new DoubleSumAggregatorFactory(\"index\", null, \"-index + 100\", ExprMacroTable.nil())\n        )\n    );\n\n    expectedResults = Collections.singletonList(\n        TopNQueryRunnerTestHelper.createExpectedRows(\n            \"2011-01-12T00:00:00.000Z\",\n            new String[] {QueryRunnerTestHelper.qualityDimension, \"rows\", \"index\", \"addRowsIndexConstant\"},\n            Arrays.asList(\n                new Object[] {\"n\", 93L, -2786.4727909999997, -2692.4727909999997},\n                new Object[] {\"u\", 186L, -3949.824348000002, -3762.824348000002}\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2018-08-31 00:56:26","endLine":2437,"groupId":"11054","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopNCollapsingDimExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d8/05065b1a763d6958ac6c554b91a76be76340a5.src","preCode":"  public void testTopNCollapsingDimExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                QueryRunnerTestHelper.qualityDimension, QueryRunnerTestHelper.qualityDimension,\n                new RegexDimExtractionFn(\".(.)\", false, null)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"e\",\n                        \"rows\", 558L,\n                        \"index\", 246645.1204032898,\n                        \"addRowsIndexConstant\", 247204.1204032898\n                    ),\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"r\",\n                        \"rows\", 372L,\n                        \"index\", 222051.08961486816,\n                        \"addRowsIndexConstant\", 222424.08961486816\n                    )\n                )\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n\n    query = query.withAggregatorSpecs(\n        Arrays.asList(\n            QueryRunnerTestHelper.rowsCount,\n            new DoubleSumAggregatorFactory(\"index\", null, \"-index + 100\", ExprMacroTable.nil())\n        )\n    );\n\n    expectedResults = Collections.singletonList(\n        TopNQueryRunnerTestHelper.createExpectedRows(\n            \"2011-01-12T00:00:00.000Z\",\n            new String[] {QueryRunnerTestHelper.qualityDimension, \"rows\", \"index\", \"addRowsIndexConstant\"},\n            Arrays.asList(\n                new Object[] {\"n\", 93L, -2786.4727909999997, -2692.4727909999997},\n                new Object[] {\"u\", 186L, -3949.824348000002, -3762.824348000002}\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2371,"status":"N"},{"authorDate":"2018-10-03 01:50:22","commitOrder":2,"curCode":"  public void testTopNTimeExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                ColumnHolder.TIME_COLUMN_NAME,\n                \"dayOfWeek\",\n                new TimeFormatExtractionFn(\"EEEE\", null, null, null, false)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Wednesday\",\n                        \"rows\", 182L,\n                        \"index\", 76010.28100585938,\n                        \"addRowsIndexConstant\", 76193.28100585938\n                    ),\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Thursday\",\n                        \"rows\", 182L,\n                        \"index\", 75203.26300811768,\n                        \"addRowsIndexConstant\", 75386.26300811768\n                    )\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2018-10-03 01:50:22","endLine":3895,"groupId":"10422","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopNTimeExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/be/47ae5156a9eb86442762d4053cc788feae584e.src","preCode":"  public void testTopNTimeExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                Column.TIME_COLUMN_NAME,\n                \"dayOfWeek\",\n                new TimeFormatExtractionFn(\"EEEE\", null, null, null, false)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Wednesday\",\n                        \"rows\", 182L,\n                        \"index\", 76010.28100585938,\n                        \"addRowsIndexConstant\", 76193.28100585938\n                    ),\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Thursday\",\n                        \"rows\", 182L,\n                        \"index\", 75203.26300811768,\n                        \"addRowsIndexConstant\", 75386.26300811768\n                    )\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3849,"status":"M"}],"commitId":"3ae563263a23000560749071d262727d47296856","commitMessage":"@@@Renamed 'Generic Column' -> 'Numeric Column'; Fixed a few resource leaks in processing; misc refinements (#5957)\n\nThis PR accumulates many refactorings and small improvements that I did while preparing the next change set of https://github.com/druid-io/druid/projects/2. I finally decided to make them a separate PR to minimize the volume of the main PR.\n\nSome of the changes:\n - Renamed confusing \"Generic Column\" term to \"Numeric Column\" (what it actually implies) in many class names.\n - Generified `ComplexMetricExtractor`","date":"2018-10-03 01:50:22","modifiedFileCount":"776","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-01-22 03:11:10","codes":[{"authorDate":"2019-01-22 03:11:10","commitOrder":3,"curCode":"  public void testTopNCollapsingDimExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                QueryRunnerTestHelper.qualityDimension,\n                QueryRunnerTestHelper.qualityDimension,\n                new RegexDimExtractionFn(\".(.)\", false, null)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"e\",\n                        \"rows\", 558L,\n                        \"index\", 246645.1204032898,\n                        \"addRowsIndexConstant\", 247204.1204032898\n                    ),\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"r\",\n                        \"rows\", 372L,\n                        \"index\", 222051.08961486816,\n                        \"addRowsIndexConstant\", 222424.08961486816\n                    )\n                )\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n\n    query = query.withAggregatorSpecs(\n        Arrays.asList(\n            QueryRunnerTestHelper.rowsCount,\n            new DoubleSumAggregatorFactory(\"index\", null, \"-index + 100\", ExprMacroTable.nil())\n        )\n    );\n\n    expectedResults = Collections.singletonList(\n        TopNQueryRunnerTestHelper.createExpectedRows(\n            \"2011-01-12T00:00:00.000Z\",\n            new String[] {QueryRunnerTestHelper.qualityDimension, \"rows\", \"index\", \"addRowsIndexConstant\"},\n            Arrays.asList(\n                new Object[] {\"n\", 93L, -2786.4727909999997, -2692.4727909999997},\n                new Object[] {\"u\", 186L, -3949.824348000002, -3762.824348000002}\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2019-01-22 03:11:10","endLine":2435,"groupId":"11054","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopNCollapsingDimExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/da/23ca673a73841a537a373894cd2e3a58281cc4.src","preCode":"  public void testTopNCollapsingDimExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                QueryRunnerTestHelper.qualityDimension,\n                QueryRunnerTestHelper.qualityDimension,\n                new RegexDimExtractionFn(\".(.)\", false, null)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"e\",\n                        \"rows\", 558L,\n                        \"index\", 246645.1204032898,\n                        \"addRowsIndexConstant\", 247204.1204032898\n                    ),\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"r\",\n                        \"rows\", 372L,\n                        \"index\", 222051.08961486816,\n                        \"addRowsIndexConstant\", 222424.08961486816\n                    )\n                )\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n\n    query = query.withAggregatorSpecs(\n        Arrays.asList(\n            QueryRunnerTestHelper.rowsCount,\n            new DoubleSumAggregatorFactory(\"index\", null, \"-index + 100\", ExprMacroTable.nil())\n        )\n    );\n\n    expectedResults = Collections.singletonList(\n        TopNQueryRunnerTestHelper.createExpectedRows(\n            \"2011-01-12T00:00:00.000Z\",\n            new String[] {QueryRunnerTestHelper.qualityDimension, \"rows\", \"index\", \"addRowsIndexConstant\"},\n            Arrays.asList(\n                new Object[] {\"n\", 93L, -2786.4727909999997, -2692.4727909999997},\n                new Object[] {\"u\", 186L, -3949.824348000002, -3762.824348000002}\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2368,"status":"M"},{"authorDate":"2019-01-22 03:11:10","commitOrder":3,"curCode":"  public void testTopNTimeExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                ColumnHolder.TIME_COLUMN_NAME,\n                \"dayOfWeek\",\n                new TimeFormatExtractionFn(\"EEEE\", null, null, null, false)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Wednesday\",\n                        \"rows\", 182L,\n                        \"index\", 76010.28100585938,\n                        \"addRowsIndexConstant\", 76193.28100585938\n                    ),\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Thursday\",\n                        \"rows\", 182L,\n                        \"index\", 75203.26300811768,\n                        \"addRowsIndexConstant\", 75386.26300811768\n                    )\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2019-01-22 03:11:10","endLine":3889,"groupId":"10422","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopNTimeExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/da/23ca673a73841a537a373894cd2e3a58281cc4.src","preCode":"  public void testTopNTimeExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                ColumnHolder.TIME_COLUMN_NAME,\n                \"dayOfWeek\",\n                new TimeFormatExtractionFn(\"EEEE\", null, null, null, false)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnInterval)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Wednesday\",\n                        \"rows\", 182L,\n                        \"index\", 76010.28100585938,\n                        \"addRowsIndexConstant\", 76193.28100585938\n                    ),\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Thursday\",\n                        \"rows\", 182L,\n                        \"index\", 75203.26300811768,\n                        \"addRowsIndexConstant\", 75386.26300811768\n                    )\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3843,"status":"M"}],"commitId":"8eae26fd4e7572060d112864dd3d5f6a865b9c89","commitMessage":"@@@Introduce SegmentId class (#6370)\n\n* Introduce SegmentId class\n\n* tmp\n\n* Fix SelectQueryRunnerTest\n\n* Fix indentation\n\n* Fixes\n\n* Remove Comparators.inverse() tests\n\n* Refinements\n\n* Fix tests\n\n* Fix more tests\n\n* Remove duplicate DataSegmentTest.  fixes #6064\n\n* SegmentDescriptor doc\n\n* Fix SQLMetadataStorageUpdaterJobHandler\n\n* Fix DataSegment deserialization for ignoring id\n\n* Add comments\n\n* More comments\n\n* Address more comments\n\n* Fix compilation\n\n* Restore segment2 in SystemSchemaTest according to a comment\n\n* Fix style\n\n* fix testServerSegmentsTable\n\n* Fix compilation\n\n* Add comments about why SegmentId and SegmentIdWithShardSpec are separate classes\n\n* Fix SystemSchemaTest\n\n* Fix style\n\n* Compare SegmentDescriptor with SegmentId in Javadoc and comments rather than with DataSegment\n\n* Remove a link.  see https://youtrack.jetbrains.com/issue/IDEA-205164\n\n* Fix compilation\n","date":"2019-01-22 03:11:10","modifiedFileCount":"308","status":"M","submitter":"Roman Leventov"},{"authorTime":"2019-07-19 04:16:28","codes":[{"authorDate":"2019-07-19 04:16:28","commitOrder":4,"curCode":"  public void testTopNCollapsingDimExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                QueryRunnerTestHelper.qualityDimension,\n                QueryRunnerTestHelper.qualityDimension,\n                new RegexDimExtractionFn(\".(.)\", false, null)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            QueryRunnerTestHelper.rowsCount,\n            QueryRunnerTestHelper.indexDoubleSum\n        )\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"e\",\n                        \"rows\", 558L,\n                        \"index\", 246645.1204032898,\n                        \"addRowsIndexConstant\", 247204.1204032898\n                    ),\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"r\",\n                        \"rows\", 372L,\n                        \"index\", 222051.08961486816,\n                        \"addRowsIndexConstant\", 222424.08961486816\n                    )\n                )\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n\n    query = query.withAggregatorSpecs(\n        Arrays.asList(\n            QueryRunnerTestHelper.rowsCount,\n            new DoubleSumAggregatorFactory(\"index\", null, \"-index + 100\", ExprMacroTable.nil())\n        )\n    );\n\n    expectedResults = Collections.singletonList(\n        TopNQueryRunnerTestHelper.createExpectedRows(\n            \"2011-01-12T00:00:00.000Z\",\n            new String[] {QueryRunnerTestHelper.qualityDimension, \"rows\", \"index\", \"addRowsIndexConstant\"},\n            Arrays.asList(\n                new Object[] {\"n\", 93L, -2786.4727909999997, -2692.4727909999997},\n                new Object[] {\"u\", 186L, -3949.824348000002, -3762.824348000002}\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2019-07-19 04:16:28","endLine":2462,"groupId":"11054","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopNCollapsingDimExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4b/9fb51afb036dca9148a4c39b6dbecbf810868c.src","preCode":"  public void testTopNCollapsingDimExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                QueryRunnerTestHelper.qualityDimension,\n                QueryRunnerTestHelper.qualityDimension,\n                new RegexDimExtractionFn(\".(.)\", false, null)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"e\",\n                        \"rows\", 558L,\n                        \"index\", 246645.1204032898,\n                        \"addRowsIndexConstant\", 247204.1204032898\n                    ),\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"r\",\n                        \"rows\", 372L,\n                        \"index\", 222051.08961486816,\n                        \"addRowsIndexConstant\", 222424.08961486816\n                    )\n                )\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n\n    query = query.withAggregatorSpecs(\n        Arrays.asList(\n            QueryRunnerTestHelper.rowsCount,\n            new DoubleSumAggregatorFactory(\"index\", null, \"-index + 100\", ExprMacroTable.nil())\n        )\n    );\n\n    expectedResults = Collections.singletonList(\n        TopNQueryRunnerTestHelper.createExpectedRows(\n            \"2011-01-12T00:00:00.000Z\",\n            new String[] {QueryRunnerTestHelper.qualityDimension, \"rows\", \"index\", \"addRowsIndexConstant\"},\n            Arrays.asList(\n                new Object[] {\"n\", 93L, -2786.4727909999997, -2692.4727909999997},\n                new Object[] {\"u\", 186L, -3949.824348000002, -3762.824348000002}\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2397,"status":"M"},{"authorDate":"2019-07-19 04:16:28","commitOrder":4,"curCode":"  public void testTopNTimeExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                ColumnHolder.TIME_COLUMN_NAME,\n                \"dayOfWeek\",\n                new TimeFormatExtractionFn(\"EEEE\", null, null, null, false)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            QueryRunnerTestHelper.rowsCount,\n            QueryRunnerTestHelper.indexDoubleSum\n        )\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Wednesday\",\n                        \"rows\", 182L,\n                        \"index\", 76010.28100585938,\n                        \"addRowsIndexConstant\", 76193.28100585938\n                    ),\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Thursday\",\n                        \"rows\", 182L,\n                        \"index\", 75203.26300811768,\n                        \"addRowsIndexConstant\", 75386.26300811768\n                    )\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2019-07-19 04:16:28","endLine":3908,"groupId":"10422","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopNTimeExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4b/9fb51afb036dca9148a4c39b6dbecbf810868c.src","preCode":"  public void testTopNTimeExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                ColumnHolder.TIME_COLUMN_NAME,\n                \"dayOfWeek\",\n                new TimeFormatExtractionFn(\"EEEE\", null, null, null, false)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            Arrays.asList(\n                QueryRunnerTestHelper.rowsCount,\n                QueryRunnerTestHelper.indexDoubleSum\n            )\n        )\n        .postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Wednesday\",\n                        \"rows\", 182L,\n                        \"index\", 76010.28100585938,\n                        \"addRowsIndexConstant\", 76193.28100585938\n                    ),\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Thursday\",\n                        \"rows\", 182L,\n                        \"index\", 75203.26300811768,\n                        \"addRowsIndexConstant\", 75386.26300811768\n                    )\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3864,"status":"M"}],"commitId":"03e55d30ebcac9ec97edb1a638a5a99886c41374","commitMessage":"@@@add CachingClusteredClient benchmark.  refactor some stuff (#8089)\n\n* add CachingClusteredClient benchmark.  refactor some stuff\n\n* revert WeightedServerSelectorStrategy to ConnectionCountServerSelectorStrategy and remove getWeight since felt artificial.  default mergeResults in toolchest implementation for topn.  search.  select\n\n* adjust javadoc\n\n* adjustments\n\n* oops\n\n* use it\n\n* use BinaryOperator.  remove CombiningFunction.  use Comparator instead of Ordering.  other review adjustments\n\n* rename createComparator to createResultComparator.  fix typo.  firstNonNull nullable parameters\n","date":"2019-07-19 04:16:28","modifiedFileCount":"50","status":"M","submitter":"Clint Wylie"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":5,"curCode":"  public void testTopNCollapsingDimExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.DATA_SOURCE)\n        .granularity(QueryRunnerTestHelper.ALL_GRAN)\n        .dimension(\n            new ExtractionDimensionSpec(\n                QueryRunnerTestHelper.QUALITY_DIMENSION,\n                QueryRunnerTestHelper.QUALITY_DIMENSION,\n                new RegexDimExtractionFn(\".(.)\", false, null)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC)\n        .aggregators(\n            QueryRunnerTestHelper.ROWS_COUNT,\n            QueryRunnerTestHelper.INDEX_DOUBLE_SUM\n        )\n        .postAggregators(QueryRunnerTestHelper.ADD_ROWS_INDEX_CONSTANT)\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.QUALITY_DIMENSION, \"e\",\n                        \"rows\", 558L,\n                        \"index\", 246645.1204032898,\n                        \"addRowsIndexConstant\", 247204.1204032898\n                    ),\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.QUALITY_DIMENSION, \"r\",\n                        \"rows\", 372L,\n                        \"index\", 222051.08961486816,\n                        \"addRowsIndexConstant\", 222424.08961486816\n                    )\n                )\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n\n    query = query.withAggregatorSpecs(\n        Arrays.asList(\n            QueryRunnerTestHelper.ROWS_COUNT,\n            new DoubleSumAggregatorFactory(\"index\", null, \"-index + 100\", ExprMacroTable.nil())\n        )\n    );\n\n    expectedResults = Collections.singletonList(\n        TopNQueryRunnerTestHelper.createExpectedRows(\n            \"2011-01-12T00:00:00.000Z\",\n            new String[] {QueryRunnerTestHelper.QUALITY_DIMENSION, \"rows\", \"index\", \"addRowsIndexConstant\"},\n            Arrays.asList(\n                new Object[] {\"n\", 93L, -2786.4727909999997, -2692.4727909999997},\n                new Object[] {\"u\", 186L, -3949.824348000002, -3762.824348000002}\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2019-08-23 18:13:54","endLine":2459,"groupId":"106368","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testTopNCollapsingDimExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c6/f894ad5ddd5fccc9520230d8961edd721a636c.src","preCode":"  public void testTopNCollapsingDimExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                QueryRunnerTestHelper.qualityDimension,\n                QueryRunnerTestHelper.qualityDimension,\n                new RegexDimExtractionFn(\".(.)\", false, null)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            QueryRunnerTestHelper.rowsCount,\n            QueryRunnerTestHelper.indexDoubleSum\n        )\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"e\",\n                        \"rows\", 558L,\n                        \"index\", 246645.1204032898,\n                        \"addRowsIndexConstant\", 247204.1204032898\n                    ),\n                    ImmutableMap.of(\n                        QueryRunnerTestHelper.qualityDimension, \"r\",\n                        \"rows\", 372L,\n                        \"index\", 222051.08961486816,\n                        \"addRowsIndexConstant\", 222424.08961486816\n                    )\n                )\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n\n    query = query.withAggregatorSpecs(\n        Arrays.asList(\n            QueryRunnerTestHelper.rowsCount,\n            new DoubleSumAggregatorFactory(\"index\", null, \"-index + 100\", ExprMacroTable.nil())\n        )\n    );\n\n    expectedResults = Collections.singletonList(\n        TopNQueryRunnerTestHelper.createExpectedRows(\n            \"2011-01-12T00:00:00.000Z\",\n            new String[] {QueryRunnerTestHelper.qualityDimension, \"rows\", \"index\", \"addRowsIndexConstant\"},\n            Arrays.asList(\n                new Object[] {\"n\", 93L, -2786.4727909999997, -2692.4727909999997},\n                new Object[] {\"u\", 186L, -3949.824348000002, -3762.824348000002}\n            )\n        )\n    );\n\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":2394,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":5,"curCode":"  public void testTopNTimeExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.DATA_SOURCE)\n        .granularity(QueryRunnerTestHelper.ALL_GRAN)\n        .dimension(\n            new ExtractionDimensionSpec(\n                ColumnHolder.TIME_COLUMN_NAME,\n                \"dayOfWeek\",\n                new TimeFormatExtractionFn(\"EEEE\", null, null, null, false)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC)\n        .aggregators(\n            QueryRunnerTestHelper.ROWS_COUNT,\n            QueryRunnerTestHelper.INDEX_DOUBLE_SUM\n        )\n        .postAggregators(QueryRunnerTestHelper.ADD_ROWS_INDEX_CONSTANT)\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Wednesday\",\n                        \"rows\", 182L,\n                        \"index\", 76010.28100585938,\n                        \"addRowsIndexConstant\", 76193.28100585938\n                    ),\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Thursday\",\n                        \"rows\", 182L,\n                        \"index\", 75203.26300811768,\n                        \"addRowsIndexConstant\", 75386.26300811768\n                    )\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","date":"2019-08-23 18:13:54","endLine":3905,"groupId":"106368","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testTopNTimeExtraction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/c6/f894ad5ddd5fccc9520230d8961edd721a636c.src","preCode":"  public void testTopNTimeExtraction()\n  {\n    TopNQuery query = new TopNQueryBuilder()\n        .dataSource(QueryRunnerTestHelper.dataSource)\n        .granularity(QueryRunnerTestHelper.allGran)\n        .dimension(\n            new ExtractionDimensionSpec(\n                ColumnHolder.TIME_COLUMN_NAME,\n                \"dayOfWeek\",\n                new TimeFormatExtractionFn(\"EEEE\", null, null, null, false)\n            )\n        )\n        .metric(\"index\")\n        .threshold(2)\n        .intervals(QueryRunnerTestHelper.fullOnIntervalSpec)\n        .aggregators(\n            QueryRunnerTestHelper.rowsCount,\n            QueryRunnerTestHelper.indexDoubleSum\n        )\n        .postAggregators(QueryRunnerTestHelper.addRowsIndexConstant)\n        .build();\n\n    List<Result<TopNResultValue>> expectedResults = Collections.singletonList(\n        new Result<>(\n            DateTimes.of(\"2011-01-12T00:00:00.000Z\"),\n            new TopNResultValue(\n                Arrays.<Map<String, Object>>asList(\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Wednesday\",\n                        \"rows\", 182L,\n                        \"index\", 76010.28100585938,\n                        \"addRowsIndexConstant\", 76193.28100585938\n                    ),\n                    ImmutableMap.of(\n                        \"dayOfWeek\", \"Thursday\",\n                        \"rows\", 182L,\n                        \"index\", 75203.26300811768,\n                        \"addRowsIndexConstant\", 75386.26300811768\n                    )\n                )\n            )\n        )\n    );\n    assertExpectedResults(expectedResults, query);\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/topn/TopNQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":3861,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"}]
