[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private static IncrementalIndex newIndex(String minTimeStamp, int maxRowCount)\n  {\n    final IncrementalIndexSchema schema = new IncrementalIndexSchema.Builder()\n        .withMinTimestamp(DateTimes.of(minTimeStamp).getMillis())\n        .withQueryGranularity(Granularities.HOUR)\n        .withMetrics(TestIndex.METRIC_AGGS)\n        .build();\n    return new IncrementalIndex.Builder()\n        .setIndexSchema(schema)\n        .setMaxRowCount(maxRowCount)\n        .buildOnheap();\n  }\n","date":"2018-08-31 00:56:26","endLine":158,"groupId":"1226","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newIndex","params":"(StringminTimeStamp@intmaxRowCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/36/cfe3e1e774c87db6deac2a1dc37fddaf54eb94.src","preCode":"  private static IncrementalIndex newIndex(String minTimeStamp, int maxRowCount)\n  {\n    final IncrementalIndexSchema schema = new IncrementalIndexSchema.Builder()\n        .withMinTimestamp(DateTimes.of(minTimeStamp).getMillis())\n        .withQueryGranularity(Granularities.HOUR)\n        .withMetrics(TestIndex.METRIC_AGGS)\n        .build();\n    return new IncrementalIndex.Builder()\n        .setIndexSchema(schema)\n        .setMaxRowCount(maxRowCount)\n        .buildOnheap();\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/scan/MultiSegmentScanQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private static IncrementalIndex newIndex(String minTimeStamp, int maxRowCount)\n  {\n    final IncrementalIndexSchema schema = new IncrementalIndexSchema.Builder()\n        .withMinTimestamp(DateTimes.of(minTimeStamp).getMillis())\n        .withQueryGranularity(Granularities.HOUR)\n        .withMetrics(TestIndex.METRIC_AGGS)\n        .build();\n    return new IncrementalIndex.Builder()\n        .setIndexSchema(schema)\n        .setMaxRowCount(maxRowCount)\n        .buildOnheap();\n  }\n","date":"2018-08-31 00:56:26","endLine":127,"groupId":"1226","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newIndex","params":"(StringminTimeStamp@intmaxRowCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/16/d30acf5134ce3ec2dd44bbe185527487bbe6e2.src","preCode":"  private static IncrementalIndex newIndex(String minTimeStamp, int maxRowCount)\n  {\n    final IncrementalIndexSchema schema = new IncrementalIndexSchema.Builder()\n        .withMinTimestamp(DateTimes.of(minTimeStamp).getMillis())\n        .withQueryGranularity(Granularities.HOUR)\n        .withMetrics(TestIndex.METRIC_AGGS)\n        .build();\n    return new IncrementalIndex.Builder()\n        .setIndexSchema(schema)\n        .setMaxRowCount(maxRowCount)\n        .buildOnheap();\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2021-01-08 14:18:47","codes":[{"authorDate":"2021-01-08 14:18:47","commitOrder":2,"curCode":"  private static IncrementalIndex newIndex(String minTimeStamp, int maxRowCount)\n  {\n    final IncrementalIndexSchema schema = new IncrementalIndexSchema.Builder()\n        .withMinTimestamp(DateTimes.of(minTimeStamp).getMillis())\n        .withQueryGranularity(Granularities.HOUR)\n        .withMetrics(TestIndex.METRIC_AGGS)\n        .build();\n    return new OnheapIncrementalIndex.Builder()\n        .setIndexSchema(schema)\n        .setMaxRowCount(maxRowCount)\n        .build();\n  }\n","date":"2021-01-08 14:18:47","endLine":159,"groupId":"106663","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"newIndex","params":"(StringminTimeStamp@intmaxRowCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/93/f46d313958fa5674ff75ec21b2c080fe33b7fb.src","preCode":"  private static IncrementalIndex newIndex(String minTimeStamp, int maxRowCount)\n  {\n    final IncrementalIndexSchema schema = new IncrementalIndexSchema.Builder()\n        .withMinTimestamp(DateTimes.of(minTimeStamp).getMillis())\n        .withQueryGranularity(Granularities.HOUR)\n        .withMetrics(TestIndex.METRIC_AGGS)\n        .build();\n    return new IncrementalIndex.Builder()\n        .setIndexSchema(schema)\n        .setMaxRowCount(maxRowCount)\n        .buildOnheap();\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/scan/MultiSegmentScanQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2021-01-08 14:18:47","commitOrder":2,"curCode":"  private static IncrementalIndex newIndex(String minTimeStamp, int maxRowCount)\n  {\n    final IncrementalIndexSchema schema = new IncrementalIndexSchema.Builder()\n        .withMinTimestamp(DateTimes.of(minTimeStamp).getMillis())\n        .withQueryGranularity(Granularities.HOUR)\n        .withMetrics(TestIndex.METRIC_AGGS)\n        .build();\n    return new OnheapIncrementalIndex.Builder()\n        .setIndexSchema(schema)\n        .setMaxRowCount(maxRowCount)\n        .build();\n  }\n","date":"2021-01-08 14:18:47","endLine":125,"groupId":"106663","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"newIndex","params":"(StringminTimeStamp@intmaxRowCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/68/34cec5e178eed11588f6741a6b939f2bfc3e5a.src","preCode":"  private static IncrementalIndex newIndex(String minTimeStamp, int maxRowCount)\n  {\n    final IncrementalIndexSchema schema = new IncrementalIndexSchema.Builder()\n        .withMinTimestamp(DateTimes.of(minTimeStamp).getMillis())\n        .withQueryGranularity(Granularities.HOUR)\n        .withMetrics(TestIndex.METRIC_AGGS)\n        .build();\n    return new IncrementalIndex.Builder()\n        .setIndexSchema(schema)\n        .setMaxRowCount(maxRowCount)\n        .buildOnheap();\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/timeboundary/TimeBoundaryQueryRunnerTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"08ab82f55ca856d60dfe1088c1c0393428b0bb6d","commitMessage":"@@@IncrementalIndex Tests and Benchmarks Parametrization (#10593)\n\n* Remove redundant IncrementalIndex.Builder\n\n* Parametrize incremental index tests and benchmarks\n\n- Reveal and fix a bug in OffheapIncrementalIndex\n\n* Fix forbiddenapis error: Forbidden method invocation: java.lang.String#format(java.lang.String. java.lang.Object[]) [Uses default locale]\n\n* Fix Intellij errors: declared exception is never thrown\n\n* Add documentation and validate before closing objects on tearDown.\n\n* Add documentation to OffheapIncrementalIndexTestSpec\n\n* Doc corrections and minor changes.\n\n* Add logging for generated rows.\n\n* Refactor new tests/benchmarks.\n\n* Improve IncrementalIndexCreator documentation\n\n* Add required tests for DataGenerator\n\n* Revert \"rollupOpportunity\" to be a string","date":"2021-01-08 14:18:47","modifiedFileCount":"62","status":"M","submitter":"Liran Funaro"}]
