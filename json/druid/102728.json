[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testGroupByVarianceOnly()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.indexVarianceAggr)\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"\");\n  }\n","date":"2018-08-31 00:56:26","endLine":118,"groupId":"16295","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGroupByVarianceOnly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4f/327e75793d368c6c87a9cfb9e398f1042c6ce4.src","preCode":"  public void testGroupByVarianceOnly()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.indexVarianceAggr)\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"\");\n  }\n","realPath":"extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testGroupBy()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.rowsCount,\n                            VarianceTestHelper.indexVarianceAggr,\n                            new LongSumAggregatorFactory(\"idx\", \"index\"))\n        .setPostAggregatorSpecs(\n            Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr)\n        )\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"rows\", \"idx\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 1L, 135L, 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 1L, 118L, 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 1L, 158L, 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 1L, 120L, 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 3L, 2870L, 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 1L, 121L, 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 3L, 2900L, 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 1L, 78L, 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 1L, 119L, 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 1L, 147L, 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 1L, 112L, 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 1L, 166L, 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 1L, 113L, 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 3L, 2447L, 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 1L, 114L, 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 3L, 2505L, 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 1L, 97L, 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 1L, 126L, 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"\");\n  }\n","date":"2018-08-31 00:56:26","endLine":164,"groupId":"16295","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGroupBy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4f/327e75793d368c6c87a9cfb9e398f1042c6ce4.src","preCode":"  public void testGroupBy()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.rowsCount,\n                            VarianceTestHelper.indexVarianceAggr,\n                            new LongSumAggregatorFactory(\"idx\", \"index\"))\n        .setPostAggregatorSpecs(\n            Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr)\n        )\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"rows\", \"idx\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 1L, 135L, 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 1L, 118L, 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 1L, 158L, 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 1L, 120L, 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 3L, 2870L, 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 1L, 121L, 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 3L, 2900L, 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 1L, 78L, 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 1L, 119L, 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 1L, 147L, 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 1L, 112L, 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 1L, 166L, 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 1L, 113L, 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 3L, 2447L, 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 1L, 114L, 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 3L, 2505L, 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 1L, 97L, 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 1L, 126L, 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"\");\n  }\n","realPath":"extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-11-07 06:38:08","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":2,"curCode":"  public void testGroupByVarianceOnly()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.indexVarianceAggr)\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"\");\n  }\n","date":"2018-08-31 00:56:26","endLine":118,"groupId":"16295","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGroupByVarianceOnly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/4f/327e75793d368c6c87a9cfb9e398f1042c6ce4.src","preCode":"  public void testGroupByVarianceOnly()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.indexVarianceAggr)\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"\");\n  }\n","realPath":"extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"N"},{"authorDate":"2018-11-07 06:38:08","commitOrder":2,"curCode":"  public void testGroupBy()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(\n            QueryRunnerTestHelper.rowsCount,\n            VarianceTestHelper.indexVarianceAggr,\n            new LongSumAggregatorFactory(\"idx\", \"index\")\n        )\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"rows\", \"idx\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 1L, 135L, 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 1L, 118L, 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 1L, 158L, 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 1L, 120L, 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 3L, 2870L, 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 1L, 121L, 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 3L, 2900L, 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 1L, 78L, 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 1L, 119L, 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 1L, 147L, 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 1L, 112L, 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 1L, 166L, 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 1L, 113L, 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 3L, 2447L, 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 1L, 114L, 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 3L, 2505L, 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 1L, 97L, 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 1L, 126L, 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"\");\n  }\n","date":"2018-11-07 06:38:08","endLine":164,"groupId":"16295","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGroupBy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/90/f61128da6b1313e3eda755a9ee6a48842d98b1.src","preCode":"  public void testGroupBy()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.rowsCount,\n                            VarianceTestHelper.indexVarianceAggr,\n                            new LongSumAggregatorFactory(\"idx\", \"index\"))\n        .setPostAggregatorSpecs(\n            Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr)\n        )\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"rows\", \"idx\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 1L, 135L, 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 1L, 118L, 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 1L, 158L, 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 1L, 120L, 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 3L, 2870L, 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 1L, 121L, 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 3L, 2900L, 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 1L, 78L, 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 1L, 119L, 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 1L, 147L, 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 1L, 112L, 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 1L, 166L, 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 1L, 113L, 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 3L, 2447L, 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 1L, 114L, 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 3L, 2505L, 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 1L, 97L, 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 1L, 126L, 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"\");\n  }\n","realPath":"extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"54351a5c75d8902d1d4c2eb2f6590bcf126348d4","commitMessage":"@@@Fix various bugs; Enable more IntelliJ inspections and update error-prone (#6490)\n\n* Fix various bugs; Enable more IntelliJ inspections and update error-prone\n\n* Fix NPE\n\n* Fix inspections\n\n* Remove unused imports\n","date":"2018-11-07 06:38:08","modifiedFileCount":"93","status":"M","submitter":"Roman Leventov"},{"authorTime":"2018-12-12 00:05:50","codes":[{"authorDate":"2018-12-12 00:05:50","commitOrder":3,"curCode":"  public void testGroupByVarianceOnly()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.indexVarianceAggr)\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"variance\");\n  }\n","date":"2018-12-12 00:05:50","endLine":118,"groupId":"16295","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGroupByVarianceOnly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bd/19c74d0f19350c04893d21ecba3051c47cf0ca.src","preCode":"  public void testGroupByVarianceOnly()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.indexVarianceAggr)\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"\");\n  }\n","realPath":"extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2018-12-12 00:05:50","commitOrder":3,"curCode":"  public void testGroupBy()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(\n            QueryRunnerTestHelper.rowsCount,\n            VarianceTestHelper.indexVarianceAggr,\n            new LongSumAggregatorFactory(\"idx\", \"index\")\n        )\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"rows\", \"idx\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 1L, 135L, 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 1L, 118L, 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 1L, 158L, 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 1L, 120L, 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 3L, 2870L, 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 1L, 121L, 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 3L, 2900L, 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 1L, 78L, 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 1L, 119L, 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 1L, 147L, 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 1L, 112L, 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 1L, 166L, 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 1L, 113L, 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 3L, 2447L, 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 1L, 114L, 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 3L, 2505L, 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 1L, 97L, 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 1L, 126L, 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"groupBy\");\n  }\n","date":"2018-12-12 00:05:50","endLine":164,"groupId":"16295","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGroupBy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/bd/19c74d0f19350c04893d21ecba3051c47cf0ca.src","preCode":"  public void testGroupBy()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(\n            QueryRunnerTestHelper.rowsCount,\n            VarianceTestHelper.indexVarianceAggr,\n            new LongSumAggregatorFactory(\"idx\", \"index\")\n        )\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"rows\", \"idx\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 1L, 135L, 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 1L, 118L, 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 1L, 158L, 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 1L, 120L, 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 3L, 2870L, 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 1L, 121L, 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 3L, 2900L, 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 1L, 78L, 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 1L, 119L, 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 1L, 147L, 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 1L, 112L, 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 1L, 166L, 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 1L, 113L, 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 3L, 2447L, 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 1L, 114L, 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 3L, 2505L, 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 1L, 97L, 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 1L, 126L, 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"\");\n  }\n","realPath":"extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"86e3ae5b48bca7cbb9bf05e9e66d013f34dabf16","commitMessage":"@@@Add fail message (#6720)\n\n","date":"2018-12-12 00:05:50","modifiedFileCount":"4","status":"M","submitter":"Atul Mohan"},{"authorTime":"2019-08-01 07:15:12","codes":[{"authorDate":"2019-08-01 07:15:12","commitOrder":4,"curCode":"  public void testGroupByVarianceOnly()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.indexVarianceAggr)\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"index_stddev\", \"index_var\"});\n\n    List<ResultRow> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 0d, 0d)\n        .build(query);\n\n    Iterable<ResultRow> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"variance\");\n  }\n","date":"2019-08-01 07:15:12","endLine":134,"groupId":"16295","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testGroupByVarianceOnly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d7/69eff75a45572bc91c53ad7d2105d88f36713a.src","preCode":"  public void testGroupByVarianceOnly()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.indexVarianceAggr)\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"variance\");\n  }\n","realPath":"extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2019-08-01 07:15:12","commitOrder":4,"curCode":"  public void testGroupBy()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(\n            QueryRunnerTestHelper.rowsCount,\n            VarianceTestHelper.indexVarianceAggr,\n            new LongSumAggregatorFactory(\"idx\", \"index\")\n        )\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"rows\", \"idx\", \"index_stddev\", \"index_var\"});\n\n    List<ResultRow> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 1L, 135L, 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 1L, 118L, 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 1L, 158L, 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 1L, 120L, 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 3L, 2870L, 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 1L, 121L, 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 3L, 2900L, 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 1L, 78L, 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 1L, 119L, 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 1L, 147L, 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 1L, 112L, 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 1L, 166L, 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 1L, 113L, 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 3L, 2447L, 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 1L, 114L, 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 3L, 2505L, 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 1L, 97L, 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 1L, 126L, 0d, 0d)\n        .build(query);\n\n    Iterable<ResultRow> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"groupBy\");\n  }\n","date":"2019-08-01 07:15:12","endLine":180,"groupId":"16295","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testGroupBy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/d7/69eff75a45572bc91c53ad7d2105d88f36713a.src","preCode":"  public void testGroupBy()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(\n            QueryRunnerTestHelper.rowsCount,\n            VarianceTestHelper.indexVarianceAggr,\n            new LongSumAggregatorFactory(\"idx\", \"index\")\n        )\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"rows\", \"idx\", \"index_stddev\", \"index_var\"});\n\n    List<Row> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 1L, 135L, 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 1L, 118L, 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 1L, 158L, 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 1L, 120L, 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 3L, 2870L, 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 1L, 121L, 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 3L, 2900L, 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 1L, 78L, 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 1L, 119L, 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 1L, 147L, 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 1L, 112L, 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 1L, 166L, 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 1L, 113L, 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 3L, 2447L, 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 1L, 114L, 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 3L, 2505L, 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 1L, 97L, 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 1L, 126L, 0d, 0d)\n        .build();\n\n    Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"groupBy\");\n  }\n","realPath":"extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"}],"commitId":"77297f4e6f2e9d617c96cd46852bb5a772961e85","commitMessage":"@@@GroupBy array-based result rows. (#8196)\n\n* GroupBy array-based result rows.\n\nFixes #8118; see that proposal for details.\n\nOther than the GroupBy changes.  the main other \"interesting\" classes are:\n\n- ResultRow: The array-based result type.\n- BaseQuery: T is no longer required to be Comparable.\n- QueryToolChest: Adds \"decorateObjectMapper\" to enable query-aware serialization\n  and deserialization of result rows (necessary due to their positional nature).\n- QueryResource: Uses the new decoration functionality.\n- DirectDruidClient: Also uses the new decoration functionality.\n- QueryMaker (in Druid SQL): Modifications to read ResultRows.\n\nThese classes weren't changed.  but got some new javadocs:\n\n- BySegmentQueryRunner\n- FinalizeResultsQueryRunner\n- Query\n\n* Adjustments for TC stuff.\n","date":"2019-08-01 07:15:12","modifiedFileCount":"111","status":"M","submitter":"Gian Merlino"},{"authorTime":"2019-08-23 18:13:54","codes":[{"authorDate":"2019-08-23 18:13:54","commitOrder":5,"curCode":"  public void testGroupByVarianceOnly()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.DATA_SOURCE)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.FIRST_TO_THIRD)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.INDEX_VARIANCE_AGGR)\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.STD_DEV_OF_INDEX_POST_AGGR))\n        .setGranularity(QueryRunnerTestHelper.DAY_GRAN)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"index_stddev\", \"index_var\"});\n\n    List<ResultRow> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 0d, 0d)\n        .build(query);\n\n    Iterable<ResultRow> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"variance\");\n  }\n","date":"2019-08-23 18:13:54","endLine":134,"groupId":"16295","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testGroupByVarianceOnly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e2/e1d60edea066f952300220f0c6b575bad02f2c.src","preCode":"  public void testGroupByVarianceOnly()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.indexVarianceAggr)\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"index_stddev\", \"index_var\"});\n\n    List<ResultRow> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 0d, 0d)\n        .build(query);\n\n    Iterable<ResultRow> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"variance\");\n  }\n","realPath":"extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2019-08-23 18:13:54","commitOrder":5,"curCode":"  public void testGroupBy()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.DATA_SOURCE)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.FIRST_TO_THIRD)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(\n            QueryRunnerTestHelper.ROWS_COUNT,\n            VarianceTestHelper.INDEX_VARIANCE_AGGR,\n            new LongSumAggregatorFactory(\"idx\", \"index\")\n        )\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.STD_DEV_OF_INDEX_POST_AGGR))\n        .setGranularity(QueryRunnerTestHelper.DAY_GRAN)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"rows\", \"idx\", \"index_stddev\", \"index_var\"});\n\n    List<ResultRow> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 1L, 135L, 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 1L, 118L, 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 1L, 158L, 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 1L, 120L, 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 3L, 2870L, 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 1L, 121L, 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 3L, 2900L, 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 1L, 78L, 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 1L, 119L, 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 1L, 147L, 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 1L, 112L, 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 1L, 166L, 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 1L, 113L, 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 3L, 2447L, 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 1L, 114L, 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 3L, 2505L, 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 1L, 97L, 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 1L, 126L, 0d, 0d)\n        .build(query);\n\n    Iterable<ResultRow> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"groupBy\");\n  }\n","date":"2019-08-23 18:13:54","endLine":180,"groupId":"16295","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testGroupBy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e2/e1d60edea066f952300220f0c6b575bad02f2c.src","preCode":"  public void testGroupBy()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.dataSource)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(\n            QueryRunnerTestHelper.rowsCount,\n            VarianceTestHelper.indexVarianceAggr,\n            new LongSumAggregatorFactory(\"idx\", \"index\")\n        )\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr))\n        .setGranularity(QueryRunnerTestHelper.dayGran)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"rows\", \"idx\", \"index_stddev\", \"index_var\"});\n\n    List<ResultRow> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 1L, 135L, 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 1L, 118L, 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 1L, 158L, 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 1L, 120L, 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 3L, 2870L, 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 1L, 121L, 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 3L, 2900L, 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 1L, 78L, 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 1L, 119L, 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 1L, 147L, 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 1L, 112L, 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 1L, 166L, 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 1L, 113L, 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 3L, 2447L, 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 1L, 114L, 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 3L, 2505L, 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 1L, 97L, 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 1L, 126L, 0d, 0d)\n        .build(query);\n\n    Iterable<ResultRow> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"groupBy\");\n  }\n","realPath":"extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"}],"commitId":"33f0753a70361e7d345a488034f76a889f7c3682","commitMessage":"@@@Add Checkstyle for constant name static final (#8060)\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* check ctyle for constant field name\n\n* merging with upstream\n\n* review-1\n\n* unknow changes\n\n* unknow changes\n\n* review-2\n\n* merging with master\n\n* review-2 1 changes\n\n* review changes-2 2\n\n* bug fix\n","date":"2019-08-23 18:13:54","modifiedFileCount":"298","status":"M","submitter":"SandishKumarHN"},{"authorTime":"2020-09-18 06:05:40","codes":[{"authorDate":"2020-09-18 06:05:40","commitOrder":6,"curCode":"  public void testGroupByVarianceOnly()\n  {\n    GroupByQuery query = queryBuilder\n        .setDataSource(QueryRunnerTestHelper.DATA_SOURCE)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.FIRST_TO_THIRD)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.INDEX_VARIANCE_AGGR)\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.STD_DEV_OF_INDEX_POST_AGGR))\n        .setGranularity(QueryRunnerTestHelper.DAY_GRAN)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"index_stddev\", \"index_var\"});\n\n    List<ResultRow> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 0d, 0d)\n        .build(query);\n\n    Iterable<ResultRow> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"variance\");\n  }\n","date":"2020-09-18 06:05:40","endLine":139,"groupId":"102728","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"testGroupByVarianceOnly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a9/1e6353c757c631c6bd7b28886b7e28bb8f1ca3.src","preCode":"  public void testGroupByVarianceOnly()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.DATA_SOURCE)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.FIRST_TO_THIRD)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(VarianceTestHelper.INDEX_VARIANCE_AGGR)\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.STD_DEV_OF_INDEX_POST_AGGR))\n        .setGranularity(QueryRunnerTestHelper.DAY_GRAN)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"index_stddev\", \"index_var\"});\n\n    List<ResultRow> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 0d, 0d)\n        .build(query);\n\n    Iterable<ResultRow> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"variance\");\n  }\n","realPath":"extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2020-09-18 06:05:40","commitOrder":6,"curCode":"  public void testGroupBy()\n  {\n    GroupByQuery query = queryBuilder\n        .setDataSource(QueryRunnerTestHelper.DATA_SOURCE)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.FIRST_TO_THIRD)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(\n            QueryRunnerTestHelper.ROWS_COUNT,\n            VarianceTestHelper.INDEX_VARIANCE_AGGR,\n            new LongSumAggregatorFactory(\"idx\", \"index\")\n        )\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.STD_DEV_OF_INDEX_POST_AGGR))\n        .setGranularity(QueryRunnerTestHelper.DAY_GRAN)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"rows\", \"idx\", \"index_stddev\", \"index_var\"});\n\n    List<ResultRow> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 1L, 135L, 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 1L, 118L, 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 1L, 158L, 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 1L, 120L, 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 3L, 2870L, 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 1L, 121L, 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 3L, 2900L, 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 1L, 78L, 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 1L, 119L, 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 1L, 147L, 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 1L, 112L, 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 1L, 166L, 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 1L, 113L, 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 3L, 2447L, 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 1L, 114L, 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 3L, 2505L, 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 1L, 97L, 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 1L, 126L, 0d, 0d)\n        .build(query);\n\n    Iterable<ResultRow> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"groupBy\");\n  }\n","date":"2020-09-18 06:05:40","endLine":184,"groupId":"102728","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"testGroupBy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a9/1e6353c757c631c6bd7b28886b7e28bb8f1ca3.src","preCode":"  public void testGroupBy()\n  {\n    GroupByQuery query = GroupByQuery\n        .builder()\n        .setDataSource(QueryRunnerTestHelper.DATA_SOURCE)\n        .setQuerySegmentSpec(QueryRunnerTestHelper.FIRST_TO_THIRD)\n        .setDimensions(new DefaultDimensionSpec(\"quality\", \"alias\"))\n        .setAggregatorSpecs(\n            QueryRunnerTestHelper.ROWS_COUNT,\n            VarianceTestHelper.INDEX_VARIANCE_AGGR,\n            new LongSumAggregatorFactory(\"idx\", \"index\")\n        )\n        .setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.STD_DEV_OF_INDEX_POST_AGGR))\n        .setGranularity(QueryRunnerTestHelper.DAY_GRAN)\n        .build();\n\n    VarianceTestHelper.RowBuilder builder =\n        new VarianceTestHelper.RowBuilder(new String[]{\"alias\", \"rows\", \"idx\", \"index_stddev\", \"index_var\"});\n\n    List<ResultRow> expectedResults = builder\n        .add(\"2011-04-01\", \"automotive\", 1L, 135L, 0d, 0d)\n        .add(\"2011-04-01\", \"business\", 1L, 118L, 0d, 0d)\n        .add(\"2011-04-01\", \"entertainment\", 1L, 158L, 0d, 0d)\n        .add(\"2011-04-01\", \"health\", 1L, 120L, 0d, 0d)\n        .add(\"2011-04-01\", \"mezzanine\", 3L, 2870L, 737.0179286322613d, 543195.4271253889d)\n        .add(\"2011-04-01\", \"news\", 1L, 121L, 0d, 0d)\n        .add(\"2011-04-01\", \"premium\", 3L, 2900L, 726.6322593583996d, 527994.4403402924d)\n        .add(\"2011-04-01\", \"technology\", 1L, 78L, 0d, 0d)\n        .add(\"2011-04-01\", \"travel\", 1L, 119L, 0d, 0d)\n\n        .add(\"2011-04-02\", \"automotive\", 1L, 147L, 0d, 0d)\n        .add(\"2011-04-02\", \"business\", 1L, 112L, 0d, 0d)\n        .add(\"2011-04-02\", \"entertainment\", 1L, 166L, 0d, 0d)\n        .add(\"2011-04-02\", \"health\", 1L, 113L, 0d, 0d)\n        .add(\"2011-04-02\", \"mezzanine\", 3L, 2447L, 611.3420766546617d, 373739.13468843425d)\n        .add(\"2011-04-02\", \"news\", 1L, 114L, 0d, 0d)\n        .add(\"2011-04-02\", \"premium\", 3L, 2505L, 621.3898134843073d, 386125.30030206224d)\n        .add(\"2011-04-02\", \"technology\", 1L, 97L, 0d, 0d)\n        .add(\"2011-04-02\", \"travel\", 1L, 126L, 0d, 0d)\n        .build(query);\n\n    Iterable<ResultRow> results = GroupByQueryRunnerTestHelper.runQuery(factory, runner, query);\n    TestHelper.assertExpectedObjects(expectedResults, results, \"groupBy\");\n  }\n","realPath":"extensions-core/stats/src/test/java/org/apache/druid/query/aggregation/variance/VarianceGroupByQueryTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"0b4c897fbe046c109c8e63f51221b2955cd5fe39","commitMessage":"@@@Vectorized variance aggregators (#10390)\n\n* wip vectorize\n\n* close but not quite\n\n* faster\n\n* unit tests\n\n* fix complex types for variance","date":"2020-09-18 06:05:40","modifiedFileCount":"6","status":"M","submitter":"Suneet Saldanha"}]
