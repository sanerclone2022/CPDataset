[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testErrorClass()\n  {\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        new QueryInterruptedException(new QueryInterruptedException(new CancellationException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        new QueryInterruptedException(new CancellationException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.lang.InterruptedException\",\n        new QueryInterruptedException(new InterruptedException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.TimeoutException\",\n        new QueryInterruptedException(new TimeoutException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.query.ResourceLimitExceededException\",\n        new QueryInterruptedException(new ResourceLimitExceededException(\"too many!\")).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        new QueryInterruptedException(null).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        new QueryInterruptedException(new ISE(\"Something bad!\")).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass()\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":130,"groupId":"211","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testErrorClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ec/fe3c084152ee061c9b62d378e12f47155863bc.src","preCode":"  public void testErrorClass()\n  {\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        new QueryInterruptedException(new QueryInterruptedException(new CancellationException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        new QueryInterruptedException(new CancellationException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.lang.InterruptedException\",\n        new QueryInterruptedException(new InterruptedException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.TimeoutException\",\n        new QueryInterruptedException(new TimeoutException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.query.ResourceLimitExceededException\",\n        new QueryInterruptedException(new ResourceLimitExceededException(\"too many!\")).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        new QueryInterruptedException(null).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        new QueryInterruptedException(new ISE(\"Something bad!\")).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass()\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/QueryInterruptedExceptionTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testSerde()\n  {\n    Assert.assertEquals(\n        \"Query cancelled\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorCode()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getMessage()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        roundTrip(new QueryInterruptedException(new CancellationException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.lang.InterruptedException\",\n        roundTrip(new QueryInterruptedException(new InterruptedException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.TimeoutException\",\n        roundTrip(new QueryInterruptedException(new TimeoutException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        roundTrip(new QueryInterruptedException(null)).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"Something bad!\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getMessage()\n    );\n    Assert.assertEquals(\n        \"Something bad!\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getMessage()\n    );\n    Assert.assertEquals(\n        \"Unknown exception\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorCode()\n    );\n    Assert.assertEquals(\n        \"Unknown exception\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorCode()\n    );\n  }\n","date":"2018-08-31 00:56:26","endLine":196,"groupId":"212","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ec/fe3c084152ee061c9b62d378e12f47155863bc.src","preCode":"  public void testSerde()\n  {\n    Assert.assertEquals(\n        \"Query cancelled\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorCode()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getMessage()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        roundTrip(new QueryInterruptedException(new CancellationException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.lang.InterruptedException\",\n        roundTrip(new QueryInterruptedException(new InterruptedException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.TimeoutException\",\n        roundTrip(new QueryInterruptedException(new TimeoutException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        roundTrip(new QueryInterruptedException(null)).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"Something bad!\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getMessage()\n    );\n    Assert.assertEquals(\n        \"Something bad!\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getMessage()\n    );\n    Assert.assertEquals(\n        \"Unknown exception\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorCode()\n    );\n    Assert.assertEquals(\n        \"Unknown exception\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorCode()\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/QueryInterruptedExceptionTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2020-11-03 23:00:33","codes":[{"authorDate":"2020-11-03 23:00:33","commitOrder":2,"curCode":"  public void testErrorClass()\n  {\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        new QueryInterruptedException(new QueryInterruptedException(new CancellationException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        new QueryInterruptedException(new CancellationException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.lang.InterruptedException\",\n        new QueryInterruptedException(new InterruptedException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.query.ResourceLimitExceededException\",\n        new QueryInterruptedException(new ResourceLimitExceededException(\"too many!\")).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        new QueryInterruptedException(null).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        new QueryInterruptedException(new ISE(\"Something bad!\")).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass()\n    );\n  }\n","date":"2020-11-03 23:00:33","endLine":121,"groupId":"211","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testErrorClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/51/16a4cafddbba05ba7a416938020ec55bf0d9da.src","preCode":"  public void testErrorClass()\n  {\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        new QueryInterruptedException(new QueryInterruptedException(new CancellationException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        new QueryInterruptedException(new CancellationException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.lang.InterruptedException\",\n        new QueryInterruptedException(new InterruptedException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.TimeoutException\",\n        new QueryInterruptedException(new TimeoutException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.query.ResourceLimitExceededException\",\n        new QueryInterruptedException(new ResourceLimitExceededException(\"too many!\")).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        new QueryInterruptedException(null).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        new QueryInterruptedException(new ISE(\"Something bad!\")).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass()\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/QueryInterruptedExceptionTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2020-11-03 23:00:33","commitOrder":2,"curCode":"  public void testSerde()\n  {\n    Assert.assertEquals(\n        \"Query cancelled\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorCode()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getMessage()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        roundTrip(new QueryInterruptedException(new CancellationException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.lang.InterruptedException\",\n        roundTrip(new QueryInterruptedException(new InterruptedException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        roundTrip(new QueryInterruptedException(null)).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"Something bad!\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getMessage()\n    );\n    Assert.assertEquals(\n        \"Something bad!\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getMessage()\n    );\n    Assert.assertEquals(\n        \"Unknown exception\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorCode()\n    );\n    Assert.assertEquals(\n        \"Unknown exception\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorCode()\n    );\n  }\n","date":"2020-11-03 23:00:33","endLine":183,"groupId":"212","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/51/16a4cafddbba05ba7a416938020ec55bf0d9da.src","preCode":"  public void testSerde()\n  {\n    Assert.assertEquals(\n        \"Query cancelled\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorCode()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getMessage()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        roundTrip(new QueryInterruptedException(new CancellationException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.lang.InterruptedException\",\n        roundTrip(new QueryInterruptedException(new InterruptedException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.TimeoutException\",\n        roundTrip(new QueryInterruptedException(new TimeoutException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        roundTrip(new QueryInterruptedException(null)).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"Something bad!\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getMessage()\n    );\n    Assert.assertEquals(\n        \"Something bad!\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getMessage()\n    );\n    Assert.assertEquals(\n        \"Unknown exception\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorCode()\n    );\n    Assert.assertEquals(\n        \"Unknown exception\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorCode()\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/QueryInterruptedExceptionTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"}],"commitId":"6ccddedb7a1752dc130d939066b04da16eb6b1bd","commitMessage":"@@@Improved exception handling in case of query timeouts (#10464)\n\n* Separate timeout exceptions\n\n* Add more tests\n\nCo-authored-by: Atul Mohan <atulmohan@yahoo-inc.com>","date":"2020-11-03 23:00:33","modifiedFileCount":"25","status":"M","submitter":"Atul Mohan"},{"authorTime":"2020-11-03 23:00:33","codes":[{"authorDate":"2021-01-14 09:20:00","commitOrder":3,"curCode":"  public void testErrorClass()\n  {\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        new QueryInterruptedException(new QueryInterruptedException(new CancellationException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        new QueryInterruptedException(new CancellationException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.lang.InterruptedException\",\n        new QueryInterruptedException(new InterruptedException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        new QueryInterruptedException(null).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        new QueryInterruptedException(new ISE(\"Something bad!\")).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass()\n    );\n  }\n","date":"2021-01-14 09:20:00","endLine":109,"groupId":"106340","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testErrorClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/b4/50b6ba7180593d9e4d4c03152adf7648ffc7c7.src","preCode":"  public void testErrorClass()\n  {\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        new QueryInterruptedException(new QueryInterruptedException(new CancellationException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        new QueryInterruptedException(new CancellationException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.lang.InterruptedException\",\n        new QueryInterruptedException(new InterruptedException()).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.query.ResourceLimitExceededException\",\n        new QueryInterruptedException(new ResourceLimitExceededException(\"too many!\")).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        new QueryInterruptedException(null).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        new QueryInterruptedException(new ISE(\"Something bad!\")).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass()\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/QueryInterruptedExceptionTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2020-11-03 23:00:33","commitOrder":3,"curCode":"  public void testSerde()\n  {\n    Assert.assertEquals(\n        \"Query cancelled\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorCode()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getMessage()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        roundTrip(new QueryInterruptedException(new CancellationException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.lang.InterruptedException\",\n        roundTrip(new QueryInterruptedException(new InterruptedException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        roundTrip(new QueryInterruptedException(null)).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"Something bad!\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getMessage()\n    );\n    Assert.assertEquals(\n        \"Something bad!\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getMessage()\n    );\n    Assert.assertEquals(\n        \"Unknown exception\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorCode()\n    );\n    Assert.assertEquals(\n        \"Unknown exception\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorCode()\n    );\n  }\n","date":"2020-11-03 23:00:33","endLine":183,"groupId":"106340","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerde","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/51/16a4cafddbba05ba7a416938020ec55bf0d9da.src","preCode":"  public void testSerde()\n  {\n    Assert.assertEquals(\n        \"Query cancelled\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorCode()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getMessage()\n    );\n    Assert.assertEquals(\n        \"java.util.concurrent.CancellationException\",\n        roundTrip(new QueryInterruptedException(new CancellationException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"java.lang.InterruptedException\",\n        roundTrip(new QueryInterruptedException(new InterruptedException())).getErrorClass()\n    );\n    Assert.assertEquals(\n        null,\n        roundTrip(new QueryInterruptedException(null)).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"org.apache.druid.java.util.common.ISE\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorClass()\n    );\n    Assert.assertEquals(\n        \"Something bad!\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getMessage()\n    );\n    Assert.assertEquals(\n        \"Something bad!\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getMessage()\n    );\n    Assert.assertEquals(\n        \"Unknown exception\",\n        roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorCode()\n    );\n    Assert.assertEquals(\n        \"Unknown exception\",\n        roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorCode()\n    );\n  }\n","realPath":"processing/src/test/java/org/apache/druid/query/QueryInterruptedExceptionTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"N"}],"commitId":"149306c9db2daf65d9e10fc632aa1240b4f7d208","commitMessage":"@@@Tidy up HTTP status codes for query errors (#10746)\n\n* Tidy up query error codes\n\n* fix tests\n\n* Restore query exception type in JsonParserIterator\n\n* address review comments; add a comment explaining the ugly switch\n\n* fix test","date":"2021-01-14 09:20:00","modifiedFileCount":"24","status":"M","submitter":"Jihoon Son"}]
