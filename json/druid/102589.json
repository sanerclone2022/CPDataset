[{"authorTime":"2021-01-27 16:34:56","codes":[{"authorDate":"2021-03-06 17:06:52","commitOrder":6,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2021-03-06 17:06:52","endLine":522,"groupId":"14068","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/51/a39fc25525c53f9e4385ebf7f213dd824d6c32.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/SeekableStreamSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"B"},{"authorDate":"2021-01-27 16:34:56","commitOrder":6,"curCode":"  protected ParallelIndexTuningConfig newTuningConfig(\n      PartitionsSpec partitionsSpec,\n      int maxNumConcurrentSubTasks,\n      boolean forceGuaranteedRollup\n  )\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaxSizeSplitHintSpec(null, 1),\n        partitionsSpec,\n        null,\n        null,\n        null,\n        forceGuaranteedRollup,\n        null,\n        null,\n        null,\n        null,\n        maxNumConcurrentSubTasks,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2021-01-27 16:34:56","endLine":257,"groupId":"3423","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newTuningConfig","params":"(PartitionsSpecpartitionsSpec@intmaxNumConcurrentSubTasks@booleanforceGuaranteedRollup)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/f3/cd4f523925fcb79b5c5b230660072954ffde8d.src","preCode":"  protected ParallelIndexTuningConfig newTuningConfig(\n      PartitionsSpec partitionsSpec,\n      int maxNumConcurrentSubTasks,\n      boolean forceGuaranteedRollup\n  )\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaxSizeSplitHintSpec(null, 1),\n        partitionsSpec,\n        null,\n        null,\n        null,\n        forceGuaranteedRollup,\n        null,\n        null,\n        null,\n        null,\n        maxNumConcurrentSubTasks,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/AbstractParallelIndexSupervisorTaskTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"NB"}],"commitId":"bddacbb1c3abccf6ad035a4756a6960761fd43a2","commitMessage":"@@@Dynamic auto scale Kafka-Stream ingest tasks (#10524)\n\n* druid task auto scale based on kafka lag\n\n* fix kafkaSupervisorIOConfig and KinesisSupervisorIOConfig\n\n* druid task auto scale based on kafka lag\n\n* fix kafkaSupervisorIOConfig and KinesisSupervisorIOConfig\n\n* test dynamic auto scale done\n\n* auto scale tasks tested on prd cluster\n\n* auto scale tasks tested on prd cluster\n\n* modify code style to solve 29055.10 29055.9 29055.17 29055.18 29055.19 29055.20\n\n* rename test fiel function\n\n* change codes and add docs based on capistrant reviewed\n\n* midify test docs\n\n* modify docs\n\n* modify docs\n\n* modify docs\n\n* merge from master\n\n* Extract the autoScale logic out of SeekableStreamSupervisor to minimize putting more stuff inside there &&  Make autoscaling algorithm configurable and scalable.\n\n* fix ci failed\n\n* revert msic.xml\n\n* add uts to test autoscaler create && scale out/in and kafka ingest with scale enable\n\n* add more uts\n\n* fix inner class check\n\n* add IT for kafka ingestion with autoscaler\n\n* add new IT in groups=kafka-index named testKafkaIndexDataWithWithAutoscaler\n\n* review change\n\n* code review\n\n* remove unused imports\n\n* fix NLP\n\n* fix docs and UTs\n\n* revert misc.xml\n\n* use jackson to build autoScaleConfig with default values\n\n* add uts\n\n* use jackson to init AutoScalerConfig in IOConfig instead of Map<>\n\n* autoscalerConfig interface and provide a defaultAutoScalerConfig\n\n* modify uts\n\n* modify docs\n\n* fix checkstyle\n\n* revert misc.xml\n\n* modify uts\n\n* reviewed code change\n\n* reviewed code change\n\n* code reviewed\n\n* code review\n\n* log changed\n\n* do StringUtils.encodeForFormat when create allocationExec\n\n* code review && limit taskCountMax to partitionNumbers\n\n* modify docs\n\n* code review\n\nCo-authored-by: yuezhang <yuezhang@freewheel.tv>","date":"2021-03-06 17:06:52","modifiedFileCount":"24","status":"M","submitter":"zhangyue19921010"},{"authorTime":"2021-04-09 12:03:00","codes":[{"authorDate":"2021-03-06 17:06:52","commitOrder":7,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2021-03-06 17:06:52","endLine":522,"groupId":"14068","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/51/a39fc25525c53f9e4385ebf7f213dd824d6c32.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/SeekableStreamSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"N"},{"authorDate":"2021-04-09 12:03:00","commitOrder":7,"curCode":"  protected ParallelIndexTuningConfig newTuningConfig(\n      PartitionsSpec partitionsSpec,\n      int maxNumConcurrentSubTasks,\n      boolean forceGuaranteedRollup\n  )\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaxSizeSplitHintSpec(null, 1),\n        partitionsSpec,\n        null,\n        null,\n        null,\n        forceGuaranteedRollup,\n        null,\n        null,\n        null,\n        null,\n        maxNumConcurrentSubTasks,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2021-04-09 12:03:00","endLine":260,"groupId":"3423","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newTuningConfig","params":"(PartitionsSpecpartitionsSpec@intmaxNumConcurrentSubTasks@booleanforceGuaranteedRollup)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ef/7c668b2df102397c22e2e4c18dc9387f8abd48.src","preCode":"  protected ParallelIndexTuningConfig newTuningConfig(\n      PartitionsSpec partitionsSpec,\n      int maxNumConcurrentSubTasks,\n      boolean forceGuaranteedRollup\n  )\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaxSizeSplitHintSpec(null, 1),\n        partitionsSpec,\n        null,\n        null,\n        null,\n        forceGuaranteedRollup,\n        null,\n        null,\n        null,\n        null,\n        maxNumConcurrentSubTasks,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/AbstractParallelIndexSupervisorTaskTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"}],"commitId":"8264203cee688607091232897749e959e7706010","commitMessage":"@@@Allow client to configure batch ingestion task to wait to complete until segments are confirmed to be available by other (#10676)\n\n* Add ability to wait for segment availability for batch jobs\n\n* IT updates\n\n* fix queries in legacy hadoop IT\n\n* Fix broken indexing integration tests\n\n* address an lgtm flag\n\n* spell checker still flagging for hadoop doc. adding under that file header too\n\n* fix compaction IT\n\n* Updates to wait for availability method\n\n* improve unit testing for patch\n\n* fix bad indentation\n\n* refactor waitForSegmentAvailability\n\n* Fixes based off of review comments\n\n* cleanup to get compile after merging with master\n\n* fix failing test after previous logic update\n\n* add back code that must have gotten deleted during conflict resolution\n\n* update some logging code\n\n* fixes to get compilation working after merge with master\n\n* reset interrupt flag in catch block after code review pointed it out\n\n* small changes following self-review\n\n* fixup some issues brought on by merge with master\n\n* small changes after review\n\n* cleanup a little bit after merge with master\n\n* Fix potential resource leak in AbstractBatchIndexTask\n\n* syntax fix\n\n* Add a Compcation TuningConfig type\n\n* add docs stipulating the lack of support by Compaction tasks for the new config\n\n* Fixup compilation errors after merge with master\n\n* Remove erreneous newline","date":"2021-04-09 12:03:00","modifiedFileCount":"106","status":"M","submitter":"Lucas Capistrant"},{"authorTime":"2021-04-09 12:03:00","codes":[{"authorDate":"2021-06-24 07:36:46","commitOrder":8,"curCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","date":"2021-06-24 07:36:46","endLine":521,"groupId":"102589","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"getTuningConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/2e/dcb82b714e9c6aa4c4332bf82d7a0fb3e2a1a3.src","preCode":"  private static SeekableStreamSupervisorTuningConfig getTuningConfig()\n  {\n    return new SeekableStreamSupervisorTuningConfig()\n    {\n      @Override\n      public Integer getWorkerThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Integer getChatThreads()\n      {\n        return 1;\n      }\n\n      @Override\n      public Long getChatRetries()\n      {\n        return 1L;\n      }\n\n      @Override\n      public Duration getHttpTimeout()\n      {\n        return new Period(\"PT1M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getShutdownTimeout()\n      {\n        return new Period(\"PT1S\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getRepartitionTransitionDuration()\n      {\n        return new Period(\"PT2M\").toStandardDuration();\n      }\n\n      @Override\n      public Duration getOffsetFetchPeriod()\n      {\n        return new Period(\"PT5M\").toStandardDuration();\n      }\n\n      @Override\n      public SeekableStreamIndexTaskTuningConfig convertToTaskTuningConfig()\n      {\n        return new SeekableStreamIndexTaskTuningConfig(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                null\n        )\n        {\n          @Override\n          public SeekableStreamIndexTaskTuningConfig withBasePersistDirectory(File dir)\n          {\n            return null;\n          }\n\n          @Override\n          public String toString()\n          {\n            return null;\n          }\n        };\n      }\n    };\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/seekablestream/SeekableStreamSupervisorSpecTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"M"},{"authorDate":"2021-04-09 12:03:00","commitOrder":8,"curCode":"  protected ParallelIndexTuningConfig newTuningConfig(\n      PartitionsSpec partitionsSpec,\n      int maxNumConcurrentSubTasks,\n      boolean forceGuaranteedRollup\n  )\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaxSizeSplitHintSpec(null, 1),\n        partitionsSpec,\n        null,\n        null,\n        null,\n        forceGuaranteedRollup,\n        null,\n        null,\n        null,\n        null,\n        maxNumConcurrentSubTasks,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","date":"2021-04-09 12:03:00","endLine":260,"groupId":"102589","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newTuningConfig","params":"(PartitionsSpecpartitionsSpec@intmaxNumConcurrentSubTasks@booleanforceGuaranteedRollup)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/ef/7c668b2df102397c22e2e4c18dc9387f8abd48.src","preCode":"  protected ParallelIndexTuningConfig newTuningConfig(\n      PartitionsSpec partitionsSpec,\n      int maxNumConcurrentSubTasks,\n      boolean forceGuaranteedRollup\n  )\n  {\n    return new ParallelIndexTuningConfig(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        new MaxSizeSplitHintSpec(null, 1),\n        partitionsSpec,\n        null,\n        null,\n        null,\n        forceGuaranteedRollup,\n        null,\n        null,\n        null,\n        null,\n        maxNumConcurrentSubTasks,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    );\n  }\n","realPath":"indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/AbstractParallelIndexSupervisorTaskTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"N"}],"commitId":"de8daf8139dcb8a497f1191587dcd5e7ea992092","commitMessage":"@@@Delete buildV9Directly in Kafka and Kinesis Indexing Service (#11351)\n\n* delete_buildV9Directly_in_kafka_and_kinesis_indexing_service\n\n* delete\n\n* delete them from server\n\n* delete buildV9Directly from hadoop indexing\n\n* bug fixed\n\nCo-authored-by: yuanyi <yuanyi@freewheel.tv>","date":"2021-06-24 07:36:46","modifiedFileCount":"38","status":"M","submitter":"Yi Yuan"}]
