[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private void verifyIntersection(List<Integer> expected, List<ImmutableConciseSet> sets)\n  {\n    List<Integer> actual = Lists.newArrayList();\n    ImmutableConciseSet set = ImmutableConciseSet.intersection(sets);\n    IntSet.IntIterator itr = set.iterator();\n    while (itr.hasNext()) {\n      actual.add(itr.next());\n    }\n    Assert.assertEquals(expected, actual);\n  }\n","date":"2018-08-31 00:56:26","endLine":593,"groupId":"14082","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyIntersection","params":"(List<Integer>expected@List<ImmutableConciseSet>sets)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/e2/70015e193a0adc589e66bb373b2edc509b1d8f.src","preCode":"  private void verifyIntersection(List<Integer> expected, List<ImmutableConciseSet> sets)\n  {\n    List<Integer> actual = Lists.newArrayList();\n    ImmutableConciseSet set = ImmutableConciseSet.intersection(sets);\n    IntSet.IntIterator itr = set.iterator();\n    while (itr.hasNext()) {\n      actual.add(itr.next());\n    }\n    Assert.assertEquals(expected, actual);\n  }\n","realPath":"extendedset/src/test/java/org/apache/druid/extendedset/intset/ImmutableConciseSetIntersectionTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":584,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  private void verifyUnion(List<Integer> expected, List<ImmutableConciseSet> sets)\n  {\n    List<Integer> actual = Lists.newArrayList();\n    ImmutableConciseSet set = ImmutableConciseSet.union(sets);\n    IntSet.IntIterator itr = set.iterator();\n    while (itr.hasNext()) {\n      actual.add(itr.next());\n    }\n    Assert.assertEquals(expected, actual);\n  }\n","date":"2018-08-31 00:56:26","endLine":1140,"groupId":"14082","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyUnion","params":"(List<Integer>expected@List<ImmutableConciseSet>sets)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1a/b8bc65b21bd22034ce648ff2c09b982d4543fa.src","preCode":"  private void verifyUnion(List<Integer> expected, List<ImmutableConciseSet> sets)\n  {\n    List<Integer> actual = Lists.newArrayList();\n    ImmutableConciseSet set = ImmutableConciseSet.union(sets);\n    IntSet.IntIterator itr = set.iterator();\n    while (itr.hasNext()) {\n      actual.add(itr.next());\n    }\n    Assert.assertEquals(expected, actual);\n  }\n","realPath":"extendedset/src/test/java/org/apache/druid/extendedset/intset/ImmutableConciseSetTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1131,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2018-10-29 20:02:43","codes":[{"authorDate":"2018-10-29 20:02:43","commitOrder":2,"curCode":"  private void verifyIntersection(List<Integer> expected, List<ImmutableConciseSet> sets)\n  {\n    List<Integer> actual = new ArrayList<>();\n    ImmutableConciseSet set = ImmutableConciseSet.intersection(sets);\n    IntSet.IntIterator itr = set.iterator();\n    while (itr.hasNext()) {\n      actual.add(itr.next());\n    }\n    Assert.assertEquals(expected, actual);\n  }\n","date":"2018-10-29 20:02:43","endLine":592,"groupId":"123767","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"verifyIntersection","params":"(List<Integer>expected@List<ImmutableConciseSet>sets)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/1e/e347ea67aca627078c7d93bf4531dd5bffdba3.src","preCode":"  private void verifyIntersection(List<Integer> expected, List<ImmutableConciseSet> sets)\n  {\n    List<Integer> actual = Lists.newArrayList();\n    ImmutableConciseSet set = ImmutableConciseSet.intersection(sets);\n    IntSet.IntIterator itr = set.iterator();\n    while (itr.hasNext()) {\n      actual.add(itr.next());\n    }\n    Assert.assertEquals(expected, actual);\n  }\n","realPath":"extendedset/src/test/java/org/apache/druid/extendedset/intset/ImmutableConciseSetIntersectionTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":583,"status":"M"},{"authorDate":"2018-10-29 20:02:43","commitOrder":2,"curCode":"  private void verifyUnion(List<Integer> expected, List<ImmutableConciseSet> sets)\n  {\n    List<Integer> actual = new ArrayList<>();\n    ImmutableConciseSet set = ImmutableConciseSet.union(sets);\n    IntSet.IntIterator itr = set.iterator();\n    while (itr.hasNext()) {\n      actual.add(itr.next());\n    }\n    Assert.assertEquals(expected, actual);\n  }\n","date":"2018-10-29 20:02:43","endLine":1139,"groupId":"123767","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyUnion","params":"(List<Integer>expected@List<ImmutableConciseSet>sets)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/a4/156d235fa765af3e37ff1551967ff78c324e33.src","preCode":"  private void verifyUnion(List<Integer> expected, List<ImmutableConciseSet> sets)\n  {\n    List<Integer> actual = Lists.newArrayList();\n    ImmutableConciseSet set = ImmutableConciseSet.union(sets);\n    IntSet.IntIterator itr = set.iterator();\n    while (itr.hasNext()) {\n      actual.add(itr.next());\n    }\n    Assert.assertEquals(expected, actual);\n  }\n","realPath":"extendedset/src/test/java/org/apache/druid/extendedset/intset/ImmutableConciseSetTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":1130,"status":"M"}],"commitId":"676f5e6d7f184101b8763e4249b18b237bbe0ec7","commitMessage":"@@@Prohibit some guava collection APIs and use JDK collection APIs directly (#6511)\n\n* Prohibit some guava collection APIs and use JDK APIs directly\n\n* reset files that changed by accident\n\n* sort codestyle/druid-forbidden-apis.txt alphabetically\n","date":"2018-10-29 20:02:43","modifiedFileCount":"427","status":"M","submitter":"QiuMM"}]
