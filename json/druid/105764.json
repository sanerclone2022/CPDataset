[{"authorTime":"2018-08-31 00:56:26","codes":[{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testIncrementalIndexRowSizeArr()\n  {\n    IncrementalIndex index = new IncrementalIndex.Builder()\n        .setSimpleTestingIndexSchema(new CountAggregatorFactory(\"cnt\"))\n        .setMaxRowCount(10000)\n        .setMaxBytesInMemory(1000)\n        .buildOnheap();\n    long time = System.currentTimeMillis();\n    IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(\n        time + 1,\n        \"billy\",\n        \"A\",\n        \"joe\",\n        Arrays.asList(\"A\", \"B\")\n    ));\n    IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow();\n    Assert.assertEquals(50, td1.estimateBytesInMemory());\n  }\n","date":"2018-08-31 00:56:26","endLine":67,"groupId":"16978","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIncrementalIndexRowSizeArr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/09/6cd01e505f761c5939498d13493d1b1a468ff6.src","preCode":"  public void testIncrementalIndexRowSizeArr()\n  {\n    IncrementalIndex index = new IncrementalIndex.Builder()\n        .setSimpleTestingIndexSchema(new CountAggregatorFactory(\"cnt\"))\n        .setMaxRowCount(10000)\n        .setMaxBytesInMemory(1000)\n        .buildOnheap();\n    long time = System.currentTimeMillis();\n    IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(\n        time + 1,\n        \"billy\",\n        \"A\",\n        \"joe\",\n        Arrays.asList(\"A\", \"B\")\n    ));\n    IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow();\n    Assert.assertEquals(50, td1.estimateBytesInMemory());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexRowSizeTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2018-08-31 00:56:26","commitOrder":1,"curCode":"  public void testIncrementalIndexRowSizeComplex()\n  {\n    IncrementalIndex index = new IncrementalIndex.Builder()\n        .setSimpleTestingIndexSchema(new CountAggregatorFactory(\"cnt\"))\n        .setMaxRowCount(10000)\n        .setMaxBytesInMemory(1000)\n        .buildOnheap();\n    long time = System.currentTimeMillis();\n    IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(\n        time + 1,\n        \"billy\",\n        \"nelson\",\n        \"joe\",\n        Arrays.asList(\"123\", \"abcdef\")\n    ));\n    IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow();\n    Assert.assertEquals(74, td1.estimateBytesInMemory());\n  }\n","date":"2018-08-31 00:56:26","endLine":87,"groupId":"16978","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIncrementalIndexRowSizeComplex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/09/6cd01e505f761c5939498d13493d1b1a468ff6.src","preCode":"  public void testIncrementalIndexRowSizeComplex()\n  {\n    IncrementalIndex index = new IncrementalIndex.Builder()\n        .setSimpleTestingIndexSchema(new CountAggregatorFactory(\"cnt\"))\n        .setMaxRowCount(10000)\n        .setMaxBytesInMemory(1000)\n        .buildOnheap();\n    long time = System.currentTimeMillis();\n    IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(\n        time + 1,\n        \"billy\",\n        \"nelson\",\n        \"joe\",\n        Arrays.asList(\"123\", \"abcdef\")\n    ));\n    IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow();\n    Assert.assertEquals(74, td1.estimateBytesInMemory());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexRowSizeTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"431d3d8497f9079857c3baa7ae7ab4cb44a22355","commitMessage":"@@@Rename io.druid to org.apache.druid. (#6266)\n\n* Rename io.druid to org.apache.druid.\n\n* Fix META-INF files and remove some benchmark results.\n\n* MonitorsConfig update for metrics package migration.\n\n* Reorder some dimensions in inner queries for some reason.\n\n* Fix protobuf tests.\n","date":"2018-08-31 00:56:26","modifiedFileCount":"5","status":"B","submitter":"Gian Merlino"},{"authorTime":"2020-12-04 16:51:48","codes":[{"authorDate":"2020-12-04 16:51:48","commitOrder":2,"curCode":"  public void testIncrementalIndexRowSizeArr()\n  {\n    IncrementalIndex index = new IncrementalIndex.Builder()\n        .setSimpleTestingIndexSchema(new CountAggregatorFactory(\"cnt\"))\n        .setMaxRowCount(10000)\n        .setMaxBytesInMemory(1000)\n        .buildOnheap();\n    long time = System.currentTimeMillis();\n    IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(\n        time + 1,\n        \"billy\",\n        \"A\", \r\n        \"joe\",\n        Arrays.asList(\"A\", \"B\") \r\n    ));\n    IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow();\n    \r\n    Assert.assertEquals(182, td1.estimateBytesInMemory());\n  }\n","date":"2020-12-04 16:51:48","endLine":78,"groupId":"16978","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIncrementalIndexRowSizeArr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/86/5789e0ab1fc6eee5748b147444ae34c9f6a120.src","preCode":"  public void testIncrementalIndexRowSizeArr()\n  {\n    IncrementalIndex index = new IncrementalIndex.Builder()\n        .setSimpleTestingIndexSchema(new CountAggregatorFactory(\"cnt\"))\n        .setMaxRowCount(10000)\n        .setMaxBytesInMemory(1000)\n        .buildOnheap();\n    long time = System.currentTimeMillis();\n    IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(\n        time + 1,\n        \"billy\",\n        \"A\",\n        \"joe\",\n        Arrays.asList(\"A\", \"B\")\n    ));\n    IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow();\n    Assert.assertEquals(50, td1.estimateBytesInMemory());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexRowSizeTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-12-04 16:51:48","commitOrder":2,"curCode":"  public void testIncrementalIndexRowSizeComplex()\n  {\n    IncrementalIndex index = new IncrementalIndex.Builder()\n        .setSimpleTestingIndexSchema(new CountAggregatorFactory(\"cnt\"))\n        .setMaxRowCount(10000)\n        .setMaxBytesInMemory(1000)\n        .buildOnheap();\n    long time = System.currentTimeMillis();\n    IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(\n        time + 1,\n        \"billy\",\n        \"nelson\", \r\n        \"joe\",\n        Arrays.asList(\"123\", \"abcdef\") \r\n    ));\n    IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow();\n    \r\n    Assert.assertEquals(206, td1.estimateBytesInMemory());\n  }\n","date":"2020-12-04 16:51:48","endLine":99,"groupId":"16978","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIncrementalIndexRowSizeComplex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/86/5789e0ab1fc6eee5748b147444ae34c9f6a120.src","preCode":"  public void testIncrementalIndexRowSizeComplex()\n  {\n    IncrementalIndex index = new IncrementalIndex.Builder()\n        .setSimpleTestingIndexSchema(new CountAggregatorFactory(\"cnt\"))\n        .setMaxRowCount(10000)\n        .setMaxBytesInMemory(1000)\n        .buildOnheap();\n    long time = System.currentTimeMillis();\n    IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(\n        time + 1,\n        \"billy\",\n        \"nelson\",\n        \"joe\",\n        Arrays.asList(\"123\", \"abcdef\")\n    ));\n    IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow();\n    Assert.assertEquals(74, td1.estimateBytesInMemory());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexRowSizeTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"7eb5f59a9a6ec272b723f21cf4b12ac33d19d03e","commitMessage":"@@@Fix string byte calculation in StringDimensionIndexer (#10623)\n\n* fix string byte calculation\n\n* fix tests\n\n* fix test","date":"2020-12-04 16:51:48","modifiedFileCount":"3","status":"M","submitter":"Maytas Monsereenusorn"},{"authorTime":"2021-01-08 14:18:47","codes":[{"authorDate":"2021-01-08 14:18:47","commitOrder":3,"curCode":"  public void testIncrementalIndexRowSizeArr()\n  {\n    IncrementalIndex<?> index = indexCreator.createIndex();\n    long time = System.currentTimeMillis();\n    IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(\n        time + 1,\n        \"billy\",\n        \"A\", \r\n        \"joe\",\n        Arrays.asList(\"A\", \"B\") \r\n    ));\n    IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow();\n    \r\n    Assert.assertEquals(182, td1.estimateBytesInMemory());\n  }\n","date":"2021-01-08 14:18:47","endLine":99,"groupId":"105764","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testIncrementalIndexRowSizeArr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cf/d2e1a2bff6affb362f8ee41761bbda30317836.src","preCode":"  public void testIncrementalIndexRowSizeArr()\n  {\n    IncrementalIndex index = new IncrementalIndex.Builder()\n        .setSimpleTestingIndexSchema(new CountAggregatorFactory(\"cnt\"))\n        .setMaxRowCount(10000)\n        .setMaxBytesInMemory(1000)\n        .buildOnheap();\n    long time = System.currentTimeMillis();\n    IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(\n        time + 1,\n        \"billy\",\n        \"A\", \r\n        \"joe\",\n        Arrays.asList(\"A\", \"B\") \r\n    ));\n    IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow();\n    \r\n    Assert.assertEquals(182, td1.estimateBytesInMemory());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexRowSizeTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2021-01-08 14:18:47","commitOrder":3,"curCode":"  public void testIncrementalIndexRowSizeComplex()\n  {\n    IncrementalIndex<?> index = indexCreator.createIndex();\n    long time = System.currentTimeMillis();\n    IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(\n        time + 1,\n        \"billy\",\n        \"nelson\", \r\n        \"joe\",\n        Arrays.asList(\"123\", \"abcdef\") \r\n    ));\n    IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow();\n    \r\n    Assert.assertEquals(206, td1.estimateBytesInMemory());\n  }\n","date":"2021-01-08 14:18:47","endLine":116,"groupId":"105764","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testIncrementalIndexRowSizeComplex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-druid-10-0.7/blobInfo/CC_OUT/blobs/cf/d2e1a2bff6affb362f8ee41761bbda30317836.src","preCode":"  public void testIncrementalIndexRowSizeComplex()\n  {\n    IncrementalIndex index = new IncrementalIndex.Builder()\n        .setSimpleTestingIndexSchema(new CountAggregatorFactory(\"cnt\"))\n        .setMaxRowCount(10000)\n        .setMaxBytesInMemory(1000)\n        .buildOnheap();\n    long time = System.currentTimeMillis();\n    IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(\n        time + 1,\n        \"billy\",\n        \"nelson\", \r\n        \"joe\",\n        Arrays.asList(\"123\", \"abcdef\") \r\n    ));\n    IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow();\n    \r\n    Assert.assertEquals(206, td1.estimateBytesInMemory());\n  }\n","realPath":"processing/src/test/java/org/apache/druid/segment/incremental/IncrementalIndexRowSizeTest.java","repoName":"druid","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"08ab82f55ca856d60dfe1088c1c0393428b0bb6d","commitMessage":"@@@IncrementalIndex Tests and Benchmarks Parametrization (#10593)\n\n* Remove redundant IncrementalIndex.Builder\n\n* Parametrize incremental index tests and benchmarks\n\n- Reveal and fix a bug in OffheapIncrementalIndex\n\n* Fix forbiddenapis error: Forbidden method invocation: java.lang.String#format(java.lang.String. java.lang.Object[]) [Uses default locale]\n\n* Fix Intellij errors: declared exception is never thrown\n\n* Add documentation and validate before closing objects on tearDown.\n\n* Add documentation to OffheapIncrementalIndexTestSpec\n\n* Doc corrections and minor changes.\n\n* Add logging for generated rows.\n\n* Refactor new tests/benchmarks.\n\n* Improve IncrementalIndexCreator documentation\n\n* Add required tests for DataGenerator\n\n* Revert \"rollupOpportunity\" to be a string","date":"2021-01-08 14:18:47","modifiedFileCount":"62","status":"M","submitter":"Liran Funaro"}]
