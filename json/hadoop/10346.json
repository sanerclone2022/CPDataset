[{"authorTime":"2018-01-27 04:36:45","codes":[{"authorDate":"2018-01-27 04:36:45","commitOrder":1,"curCode":"  public void testReducerCustomResourceTypes() {\n    initResourceTypes();\n    EventHandler eventHandler = mock(EventHandler.class);\n    Clock clock = SystemClock.getInstance();\n    JobConf jobConf = new JobConf();\n    jobConf.set(MRJobConfig.REDUCE_RESOURCE_TYPE_PREFIX\n        + CUSTOM_RESOURCE_NAME, \"3m\");\n    TaskAttemptImpl taImpl =\n        createReduceTaskAttemptImplForTest(eventHandler, clock, jobConf);\n    ResourceInformation resourceInfo =\n        getResourceInfoFromContainerRequest(taImpl, eventHandler).\n        getResourceInformation(CUSTOM_RESOURCE_NAME);\n    assertEquals(\"Expecting the specified unit (m)\",\n        \"m\", resourceInfo.getUnits());\n    assertEquals(3L, resourceInfo.getValue());\n  }\n","date":"2018-01-27 04:36:45","endLine":1541,"groupId":"32767","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReducerCustomResourceTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/43/571a9b824e21a78cc9dd0cdc7d9e09f085f2d7.src","preCode":"  public void testReducerCustomResourceTypes() {\n    initResourceTypes();\n    EventHandler eventHandler = mock(EventHandler.class);\n    Clock clock = SystemClock.getInstance();\n    JobConf jobConf = new JobConf();\n    jobConf.set(MRJobConfig.REDUCE_RESOURCE_TYPE_PREFIX\n        + CUSTOM_RESOURCE_NAME, \"3m\");\n    TaskAttemptImpl taImpl =\n        createReduceTaskAttemptImplForTest(eventHandler, clock, jobConf);\n    ResourceInformation resourceInfo =\n        getResourceInfoFromContainerRequest(taImpl, eventHandler).\n        getResourceInformation(CUSTOM_RESOURCE_NAME);\n    assertEquals(\"Expecting the specified unit (m)\",\n        \"m\", resourceInfo.getUnits());\n    assertEquals(3L, resourceInfo.getValue());\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskAttempt.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":1526,"status":"B"},{"authorDate":"2018-01-27 04:36:45","commitOrder":1,"curCode":"  public void testReducerMemoryRequestOverriding() {\n    for (String memoryName : ImmutableList.of(\n        MRJobConfig.RESOURCE_TYPE_NAME_MEMORY,\n        MRJobConfig.RESOURCE_TYPE_ALTERNATIVE_NAME_MEMORY)) {\n      TestAppender testAppender = new TestAppender();\n      final Logger logger = Logger.getLogger(TaskAttemptImpl.class);\n      try {\n        logger.addAppender(testAppender);\n        EventHandler eventHandler = mock(EventHandler.class);\n        Clock clock = SystemClock.getInstance();\n        JobConf jobConf = new JobConf();\n        jobConf.set(MRJobConfig.REDUCE_RESOURCE_TYPE_PREFIX + memoryName,\n            \"3Gi\");\n        jobConf.setInt(MRJobConfig.REDUCE_MEMORY_MB, 2048);\n        TaskAttemptImpl taImpl =\n            createReduceTaskAttemptImplForTest(eventHandler, clock, jobConf);\n        long memorySize =\n            getResourceInfoFromContainerRequest(taImpl, eventHandler).\n            getMemorySize();\n        assertEquals(3072, memorySize);\n        assertTrue(testAppender.getLogEvents().stream()\n            .anyMatch(e -> e.getLevel() == Level.WARN && (\"Configuration \" +\n                \"mapreduce.reduce.resource.\" + memoryName + \"=3Gi is \" +\n                \"overriding the mapreduce.reduce.memory.mb=2048 configuration\")\n                    .equals(e.getMessage())));\n      } finally {\n        logger.removeAppender(testAppender);\n      }\n    }\n  }\n","date":"2018-01-27 04:36:45","endLine":1633,"groupId":"32767","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testReducerMemoryRequestOverriding","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/43/571a9b824e21a78cc9dd0cdc7d9e09f085f2d7.src","preCode":"  public void testReducerMemoryRequestOverriding() {\n    for (String memoryName : ImmutableList.of(\n        MRJobConfig.RESOURCE_TYPE_NAME_MEMORY,\n        MRJobConfig.RESOURCE_TYPE_ALTERNATIVE_NAME_MEMORY)) {\n      TestAppender testAppender = new TestAppender();\n      final Logger logger = Logger.getLogger(TaskAttemptImpl.class);\n      try {\n        logger.addAppender(testAppender);\n        EventHandler eventHandler = mock(EventHandler.class);\n        Clock clock = SystemClock.getInstance();\n        JobConf jobConf = new JobConf();\n        jobConf.set(MRJobConfig.REDUCE_RESOURCE_TYPE_PREFIX + memoryName,\n            \"3Gi\");\n        jobConf.setInt(MRJobConfig.REDUCE_MEMORY_MB, 2048);\n        TaskAttemptImpl taImpl =\n            createReduceTaskAttemptImplForTest(eventHandler, clock, jobConf);\n        long memorySize =\n            getResourceInfoFromContainerRequest(taImpl, eventHandler).\n            getMemorySize();\n        assertEquals(3072, memorySize);\n        assertTrue(testAppender.getLogEvents().stream()\n            .anyMatch(e -> e.getLevel() == Level.WARN && (\"Configuration \" +\n                \"mapreduce.reduce.resource.\" + memoryName + \"=3Gi is \" +\n                \"overriding the mapreduce.reduce.memory.mb=2048 configuration\")\n                    .equals(e.getMessage())));\n      } finally {\n        logger.removeAppender(testAppender);\n      }\n    }\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskAttempt.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":1604,"status":"B"}],"commitId":"a37e7f0ad8b68c7ed16c242bedf62f4cde48d6fd","commitMessage":"@@@MAPREDUCE-7022. Fast fail rogue jobs based on task scratch dir size. Contributed by Johan Gustavsson\n","date":"2018-01-27 04:36:45","modifiedFileCount":"19","status":"B","submitter":"Jason Lowe"},{"authorTime":"2020-11-25 00:02:35","codes":[{"authorDate":"2018-01-27 04:36:45","commitOrder":2,"curCode":"  public void testReducerCustomResourceTypes() {\n    initResourceTypes();\n    EventHandler eventHandler = mock(EventHandler.class);\n    Clock clock = SystemClock.getInstance();\n    JobConf jobConf = new JobConf();\n    jobConf.set(MRJobConfig.REDUCE_RESOURCE_TYPE_PREFIX\n        + CUSTOM_RESOURCE_NAME, \"3m\");\n    TaskAttemptImpl taImpl =\n        createReduceTaskAttemptImplForTest(eventHandler, clock, jobConf);\n    ResourceInformation resourceInfo =\n        getResourceInfoFromContainerRequest(taImpl, eventHandler).\n        getResourceInformation(CUSTOM_RESOURCE_NAME);\n    assertEquals(\"Expecting the specified unit (m)\",\n        \"m\", resourceInfo.getUnits());\n    assertEquals(3L, resourceInfo.getValue());\n  }\n","date":"2018-01-27 04:36:45","endLine":1541,"groupId":"10346","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReducerCustomResourceTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/43/571a9b824e21a78cc9dd0cdc7d9e09f085f2d7.src","preCode":"  public void testReducerCustomResourceTypes() {\n    initResourceTypes();\n    EventHandler eventHandler = mock(EventHandler.class);\n    Clock clock = SystemClock.getInstance();\n    JobConf jobConf = new JobConf();\n    jobConf.set(MRJobConfig.REDUCE_RESOURCE_TYPE_PREFIX\n        + CUSTOM_RESOURCE_NAME, \"3m\");\n    TaskAttemptImpl taImpl =\n        createReduceTaskAttemptImplForTest(eventHandler, clock, jobConf);\n    ResourceInformation resourceInfo =\n        getResourceInfoFromContainerRequest(taImpl, eventHandler).\n        getResourceInformation(CUSTOM_RESOURCE_NAME);\n    assertEquals(\"Expecting the specified unit (m)\",\n        \"m\", resourceInfo.getUnits());\n    assertEquals(3L, resourceInfo.getValue());\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskAttempt.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":1526,"status":"N"},{"authorDate":"2020-11-25 00:02:35","commitOrder":2,"curCode":"  public void testReducerMemoryRequestOverriding() {\n    for (String memoryName : ImmutableList.of(\n        MRJobConfig.RESOURCE_TYPE_NAME_MEMORY,\n        MRJobConfig.RESOURCE_TYPE_ALTERNATIVE_NAME_MEMORY)) {\n      TestAppender testAppender = new TestAppender();\n      final Logger logger = Logger.getLogger(TaskAttemptImpl.class);\n      try {\n        TaskAttemptImpl.RESOURCE_REQUEST_CACHE.clear();\n        logger.addAppender(testAppender);\n        EventHandler eventHandler = mock(EventHandler.class);\n        Clock clock = SystemClock.getInstance();\n        JobConf jobConf = new JobConf();\n        jobConf.set(MRJobConfig.REDUCE_RESOURCE_TYPE_PREFIX + memoryName,\n            \"3Gi\");\n        jobConf.setInt(MRJobConfig.REDUCE_MEMORY_MB, 2048);\n        TaskAttemptImpl taImpl =\n            createReduceTaskAttemptImplForTest(eventHandler, clock, jobConf);\n        long memorySize =\n            getResourceInfoFromContainerRequest(taImpl, eventHandler).\n            getMemorySize();\n        assertEquals(3072, memorySize);\n        assertTrue(testAppender.getLogEvents().stream()\n            .anyMatch(e -> e.getLevel() == Level.WARN && (\"Configuration \" +\n                \"mapreduce.reduce.resource.\" + memoryName + \"=3Gi is \" +\n                \"overriding the mapreduce.reduce.memory.mb=2048 configuration\")\n                    .equals(e.getMessage())));\n      } finally {\n        logger.removeAppender(testAppender);\n      }\n    }\n  }\n","date":"2020-11-25 00:02:35","endLine":1753,"groupId":"10346","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testReducerMemoryRequestOverriding","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/4c/03c78bb95b5709e81cd648a364aa359f8445a7.src","preCode":"  public void testReducerMemoryRequestOverriding() {\n    for (String memoryName : ImmutableList.of(\n        MRJobConfig.RESOURCE_TYPE_NAME_MEMORY,\n        MRJobConfig.RESOURCE_TYPE_ALTERNATIVE_NAME_MEMORY)) {\n      TestAppender testAppender = new TestAppender();\n      final Logger logger = Logger.getLogger(TaskAttemptImpl.class);\n      try {\n        logger.addAppender(testAppender);\n        EventHandler eventHandler = mock(EventHandler.class);\n        Clock clock = SystemClock.getInstance();\n        JobConf jobConf = new JobConf();\n        jobConf.set(MRJobConfig.REDUCE_RESOURCE_TYPE_PREFIX + memoryName,\n            \"3Gi\");\n        jobConf.setInt(MRJobConfig.REDUCE_MEMORY_MB, 2048);\n        TaskAttemptImpl taImpl =\n            createReduceTaskAttemptImplForTest(eventHandler, clock, jobConf);\n        long memorySize =\n            getResourceInfoFromContainerRequest(taImpl, eventHandler).\n            getMemorySize();\n        assertEquals(3072, memorySize);\n        assertTrue(testAppender.getLogEvents().stream()\n            .anyMatch(e -> e.getLevel() == Level.WARN && (\"Configuration \" +\n                \"mapreduce.reduce.resource.\" + memoryName + \"=3Gi is \" +\n                \"overriding the mapreduce.reduce.memory.mb=2048 configuration\")\n                    .equals(e.getMessage())));\n      } finally {\n        logger.removeAppender(testAppender);\n      }\n    }\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskAttempt.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":1723,"status":"M"}],"commitId":"f813f14b5b8f04824c1a04a29110b352f3493b34","commitMessage":"@@@MAPREDUCE-7309. Improve performance of reading resource request for mapper/reducers from config. Contributed by Peter Bacsko & Wangda Tan\n","date":"2020-11-25 00:02:35","modifiedFileCount":"2","status":"M","submitter":"Szilard Nemeth"}]
