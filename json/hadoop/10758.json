[{"authorTime":"2018-01-17 22:14:11","codes":[{"authorDate":"2018-01-17 22:14:11","commitOrder":1,"curCode":"  private void mergePaths(FileSystem fs, final FileStatus from,\n      final Path to) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Merging data from \" + from + \" to \" + to);\n    }\n    FileStatus toStat;\n    try {\n      toStat = fs.getFileStatus(to);\n    } catch (FileNotFoundException fnfe) {\n      toStat = null;\n    }\n\n    if (from.isFile()) {\n      if (toStat != null) {\n        if (!fs.delete(to, true)) {\n          throw new IOException(\"Failed to delete \" + to);\n        }\n      }\n\n      if (!fs.rename(from.getPath(), to)) {\n        throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n      }\n    } else if (from.isDirectory()) {\n      if (toStat != null) {\n        if (!toStat.isDirectory()) {\n          if (!fs.delete(to, true)) {\n            throw new IOException(\"Failed to delete \" + to);\n          }\n          renameOrMerge(fs, from, to);\n        } else {\n          \r\n          for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n            Path subTo = new Path(to, subFrom.getPath().getName());\n            mergePaths(fs, subFrom, subTo);\n          }\n        }\n      } else {\n        renameOrMerge(fs, from, to);\n      }\n    }\n  }\n","date":"2018-01-17 22:14:11","endLine":493,"groupId":"19301","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mergePaths","params":"(FileSystemfs@finalFileStatusfrom@finalPathto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/cb/ae575b1a72b8bec87bbe53734bc12603154287.src","preCode":"  private void mergePaths(FileSystem fs, final FileStatus from,\n      final Path to) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Merging data from \" + from + \" to \" + to);\n    }\n    FileStatus toStat;\n    try {\n      toStat = fs.getFileStatus(to);\n    } catch (FileNotFoundException fnfe) {\n      toStat = null;\n    }\n\n    if (from.isFile()) {\n      if (toStat != null) {\n        if (!fs.delete(to, true)) {\n          throw new IOException(\"Failed to delete \" + to);\n        }\n      }\n\n      if (!fs.rename(from.getPath(), to)) {\n        throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n      }\n    } else if (from.isDirectory()) {\n      if (toStat != null) {\n        if (!toStat.isDirectory()) {\n          if (!fs.delete(to, true)) {\n            throw new IOException(\"Failed to delete \" + to);\n          }\n          renameOrMerge(fs, from, to);\n        } else {\n          \r\n          for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n            Path subTo = new Path(to, subFrom.getPath().getName());\n            mergePaths(fs, subFrom, subTo);\n          }\n        }\n      } else {\n        renameOrMerge(fs, from, to);\n      }\n    }\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":453,"status":"B"},{"authorDate":"2018-01-17 22:14:11","commitOrder":1,"curCode":"  private void renameOrMerge(FileSystem fs, FileStatus from, Path to)\n      throws IOException {\n    if (algorithmVersion == 1) {\n      if (!fs.rename(from.getPath(), to)) {\n        throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n      }\n    } else {\n      fs.mkdirs(to);\n      for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n        Path subTo = new Path(to, subFrom.getPath().getName());\n        mergePaths(fs, subFrom, subTo);\n      }\n    }\n  }\n","date":"2018-01-17 22:14:11","endLine":508,"groupId":"19304","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"renameOrMerge","params":"(FileSystemfs@FileStatusfrom@Pathto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/cb/ae575b1a72b8bec87bbe53734bc12603154287.src","preCode":"  private void renameOrMerge(FileSystem fs, FileStatus from, Path to)\n      throws IOException {\n    if (algorithmVersion == 1) {\n      if (!fs.rename(from.getPath(), to)) {\n        throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n      }\n    } else {\n      fs.mkdirs(to);\n      for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n        Path subTo = new Path(to, subFrom.getPath().getName());\n        mergePaths(fs, subFrom, subTo);\n      }\n    }\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":495,"status":"B"}],"commitId":"6e42d058292d9656e9ebc9a47be13280e3c919ea","commitMessage":"@@@MAPREDUCE-7029. FileOutputCommitter is slow on filesystems lacking recursive delete. Contributed by Karthik Palaniappan\n","date":"2018-01-17 22:14:11","modifiedFileCount":"2","status":"B","submitter":"Jason Lowe"},{"authorTime":"2018-11-29 04:54:59","codes":[{"authorDate":"2018-11-29 04:54:59","commitOrder":2,"curCode":"  private void mergePaths(FileSystem fs, final FileStatus from,\n      final Path to, JobContext context) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Merging data from \" + from + \" to \" + to);\n    }\n    reportProgress(context);\n    FileStatus toStat;\n    try {\n      toStat = fs.getFileStatus(to);\n    } catch (FileNotFoundException fnfe) {\n      toStat = null;\n    }\n\n    if (from.isFile()) {\n      if (toStat != null) {\n        if (!fs.delete(to, true)) {\n          throw new IOException(\"Failed to delete \" + to);\n        }\n      }\n\n      if (!fs.rename(from.getPath(), to)) {\n        throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n      }\n    } else if (from.isDirectory()) {\n      if (toStat != null) {\n        if (!toStat.isDirectory()) {\n          if (!fs.delete(to, true)) {\n            throw new IOException(\"Failed to delete \" + to);\n          }\n          renameOrMerge(fs, from, to, context);\n        } else {\n          \r\n          for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n            Path subTo = new Path(to, subFrom.getPath().getName());\n            mergePaths(fs, subFrom, subTo, context);\n          }\n        }\n      } else {\n        renameOrMerge(fs, from, to, context);\n      }\n    }\n  }\n","date":"2018-11-29 04:54:59","endLine":495,"groupId":"19301","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mergePaths","params":"(FileSystemfs@finalFileStatusfrom@finalPathto@JobContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/94/af3387d7644e837516d3e33bb115613143031b.src","preCode":"  private void mergePaths(FileSystem fs, final FileStatus from,\n      final Path to) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Merging data from \" + from + \" to \" + to);\n    }\n    FileStatus toStat;\n    try {\n      toStat = fs.getFileStatus(to);\n    } catch (FileNotFoundException fnfe) {\n      toStat = null;\n    }\n\n    if (from.isFile()) {\n      if (toStat != null) {\n        if (!fs.delete(to, true)) {\n          throw new IOException(\"Failed to delete \" + to);\n        }\n      }\n\n      if (!fs.rename(from.getPath(), to)) {\n        throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n      }\n    } else if (from.isDirectory()) {\n      if (toStat != null) {\n        if (!toStat.isDirectory()) {\n          if (!fs.delete(to, true)) {\n            throw new IOException(\"Failed to delete \" + to);\n          }\n          renameOrMerge(fs, from, to);\n        } else {\n          \r\n          for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n            Path subTo = new Path(to, subFrom.getPath().getName());\n            mergePaths(fs, subFrom, subTo);\n          }\n        }\n      } else {\n        renameOrMerge(fs, from, to);\n      }\n    }\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2018-11-29 04:54:59","commitOrder":2,"curCode":"  private void renameOrMerge(FileSystem fs, FileStatus from, Path to,\n      JobContext context) throws IOException {\n    if (algorithmVersion == 1) {\n      if (!fs.rename(from.getPath(), to)) {\n        throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n      }\n    } else {\n      fs.mkdirs(to);\n      for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n        Path subTo = new Path(to, subFrom.getPath().getName());\n        mergePaths(fs, subFrom, subTo, context);\n      }\n    }\n  }\n","date":"2018-11-29 04:54:59","endLine":516,"groupId":"19304","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"renameOrMerge","params":"(FileSystemfs@FileStatusfrom@Pathto@JobContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/94/af3387d7644e837516d3e33bb115613143031b.src","preCode":"  private void renameOrMerge(FileSystem fs, FileStatus from, Path to)\n      throws IOException {\n    if (algorithmVersion == 1) {\n      if (!fs.rename(from.getPath(), to)) {\n        throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n      }\n    } else {\n      fs.mkdirs(to);\n      for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n        Path subTo = new Path(to, subFrom.getPath().getName());\n        mergePaths(fs, subFrom, subTo);\n      }\n    }\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":503,"status":"M"}],"commitId":"4d8de7ab690ef919b392b12d856482a6a1f2bb3d","commitMessage":"@@@MAPREDUCE-7164. FileOutputCommitter does not report progress while merging paths. Contributed by Kuhu Shukla\n","date":"2018-11-29 04:54:59","modifiedFileCount":"2","status":"M","submitter":"Jason Lowe"},{"authorTime":"2018-11-29 04:54:59","codes":[{"authorDate":"2021-01-28 03:08:08","commitOrder":3,"curCode":"  private void mergePaths(FileSystem fs, final FileStatus from,\n      final Path to, JobContext context) throws IOException {\n    try (DurationInfo d = new DurationInfo(LOG,\n        false,\n        \"Merging data from %s to %s\", from, to)) {\n      reportProgress(context);\n      FileStatus toStat;\n      try {\n        toStat = fs.getFileStatus(to);\n      } catch (FileNotFoundException fnfe) {\n        toStat = null;\n      }\n\n      if (from.isFile()) {\n        if (toStat != null) {\n          if (!fs.delete(to, true)) {\n            throw new IOException(\"Failed to delete \" + to);\n          }\n        }\n\n        if (!fs.rename(from.getPath(), to)) {\n          throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n        }\n      } else if (from.isDirectory()) {\n        if (toStat != null) {\n          if (!toStat.isDirectory()) {\n            if (!fs.delete(to, true)) {\n              throw new IOException(\"Failed to delete \" + to);\n            }\n            renameOrMerge(fs, from, to, context);\n          } else {\n            \r\n            for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n              Path subTo = new Path(to, subFrom.getPath().getName());\n              mergePaths(fs, subFrom, subTo, context);\n            }\n          }\n        } else {\n          renameOrMerge(fs, from, to, context);\n        }\n      }\n    }\n  }\n","date":"2021-01-28 03:08:08","endLine":498,"groupId":"10758","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"mergePaths","params":"(FileSystemfs@finalFileStatusfrom@finalPathto@JobContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/29/73fb05f500b5b86f7bd719b019501160c6697e.src","preCode":"  private void mergePaths(FileSystem fs, final FileStatus from,\n      final Path to, JobContext context) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Merging data from \" + from + \" to \" + to);\n    }\n    reportProgress(context);\n    FileStatus toStat;\n    try {\n      toStat = fs.getFileStatus(to);\n    } catch (FileNotFoundException fnfe) {\n      toStat = null;\n    }\n\n    if (from.isFile()) {\n      if (toStat != null) {\n        if (!fs.delete(to, true)) {\n          throw new IOException(\"Failed to delete \" + to);\n        }\n      }\n\n      if (!fs.rename(from.getPath(), to)) {\n        throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n      }\n    } else if (from.isDirectory()) {\n      if (toStat != null) {\n        if (!toStat.isDirectory()) {\n          if (!fs.delete(to, true)) {\n            throw new IOException(\"Failed to delete \" + to);\n          }\n          renameOrMerge(fs, from, to, context);\n        } else {\n          \r\n          for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n            Path subTo = new Path(to, subFrom.getPath().getName());\n            mergePaths(fs, subFrom, subTo, context);\n          }\n        }\n      } else {\n        renameOrMerge(fs, from, to, context);\n      }\n    }\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"M"},{"authorDate":"2018-11-29 04:54:59","commitOrder":3,"curCode":"  private void renameOrMerge(FileSystem fs, FileStatus from, Path to,\n      JobContext context) throws IOException {\n    if (algorithmVersion == 1) {\n      if (!fs.rename(from.getPath(), to)) {\n        throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n      }\n    } else {\n      fs.mkdirs(to);\n      for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n        Path subTo = new Path(to, subFrom.getPath().getName());\n        mergePaths(fs, subFrom, subTo, context);\n      }\n    }\n  }\n","date":"2018-11-29 04:54:59","endLine":516,"groupId":"10758","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"renameOrMerge","params":"(FileSystemfs@FileStatusfrom@Pathto@JobContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/94/af3387d7644e837516d3e33bb115613143031b.src","preCode":"  private void renameOrMerge(FileSystem fs, FileStatus from, Path to,\n      JobContext context) throws IOException {\n    if (algorithmVersion == 1) {\n      if (!fs.rename(from.getPath(), to)) {\n        throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n      }\n    } else {\n      fs.mkdirs(to);\n      for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n        Path subTo = new Path(to, subFrom.getPath().getName());\n        mergePaths(fs, subFrom, subTo, context);\n      }\n    }\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":503,"status":"N"}],"commitId":"2a38ed0e0c0b75342dc6d3d78c7ff061a1b13ef0","commitMessage":"@@@MAPREDUCE-7317. Add latency information in FileOutputCommitter.mergePaths. (#2624)\n\n\nContributed by Jungtaek Lim.","date":"2021-01-28 03:08:08","modifiedFileCount":"1","status":"M","submitter":"Jungtaek Lim"}]
