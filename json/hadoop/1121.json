[{"authorTime":"2020-01-09 01:08:13","codes":[{"authorDate":"2020-01-09 01:08:13","commitOrder":1,"curCode":"  public void waitForState(TaskAttempt attempt, \n      TaskAttemptState finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskAttemptReport report = attempt.getReport();\n    while (!finalState.equals(report.getTaskAttemptState()) &&\n        timeoutSecs++ < 20) {\n      System.out.println(\n          \"TaskAttempt \" + attempt.getID().toString() + \"  State is : \"\n              + report.getTaskAttemptState()\n              + \" Waiting for state : \" + finalState\n              + \"   progress : \" + report.getProgress());\n      report = attempt.getReport();\n      Thread.sleep(500);\n    }\n    System.out.println(\"TaskAttempt State is : \"\n        + report.getTaskAttemptState());\n    Assert.assertEquals(\"TaskAttempt state is not correct (timedout)\",\n        finalState,\n        report.getTaskAttemptState());\n  }\n","date":"2020-01-09 01:08:13","endLine":391,"groupId":"7130","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForState","params":"(TaskAttemptattempt@TaskAttemptStatefinalState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/70/ea18a13b37021db035ca955dd38a50bb3811f3.src","preCode":"  public void waitForState(TaskAttempt attempt, \n      TaskAttemptState finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskAttemptReport report = attempt.getReport();\n    while (!finalState.equals(report.getTaskAttemptState()) &&\n        timeoutSecs++ < 20) {\n      System.out.println(\n          \"TaskAttempt \" + attempt.getID().toString() + \"  State is : \"\n              + report.getTaskAttemptState()\n              + \" Waiting for state : \" + finalState\n              + \"   progress : \" + report.getProgress());\n      report = attempt.getReport();\n      Thread.sleep(500);\n    }\n    System.out.println(\"TaskAttempt State is : \"\n        + report.getTaskAttemptState());\n    Assert.assertEquals(\"TaskAttempt state is not correct (timedout)\",\n        finalState,\n        report.getTaskAttemptState());\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/MRApp.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"B"},{"authorDate":"2020-01-09 01:08:13","commitOrder":1,"curCode":"  public void waitForState(Task task, TaskState finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskReport report = task.getReport();\n    while (!finalState.equals(report.getTaskState()) &&\n        timeoutSecs++ < 20) {\n      System.out.println(\"Task State for \" + task.getID() + \" is : \"\n          + report.getTaskState() + \" Waiting for state : \" + finalState\n          + \"   progress : \" + report.getProgress());\n      report = task.getReport();\n      Thread.sleep(500);\n    }\n    System.out.println(\"Task State is : \" + report.getTaskState());\n    Assert.assertEquals(\"Task state is not correct (timedout)\", finalState,\n        report.getTaskState());\n  }\n","date":"2020-01-09 01:08:13","endLine":431,"groupId":"7130","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForState","params":"(Tasktask@TaskStatefinalState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/70/ea18a13b37021db035ca955dd38a50bb3811f3.src","preCode":"  public void waitForState(Task task, TaskState finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskReport report = task.getReport();\n    while (!finalState.equals(report.getTaskState()) &&\n        timeoutSecs++ < 20) {\n      System.out.println(\"Task State for \" + task.getID() + \" is : \"\n          + report.getTaskState() + \" Waiting for state : \" + finalState\n          + \"   progress : \" + report.getProgress());\n      report = task.getReport();\n      Thread.sleep(500);\n    }\n    System.out.println(\"Task State is : \" + report.getTaskState());\n    Assert.assertEquals(\"Task state is not correct (timedout)\", finalState,\n        report.getTaskState());\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/MRApp.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":417,"status":"B"}],"commitId":"cdd6efd3ab6917e30b4c5c7b261f61838901bb37","commitMessage":"@@@MAPREDUCE-7252. Handling 0 progress in SimpleExponential task runtime estimator\n\nSigned-off-by: Jonathan Eagles <jeagles@gmail.com>\n","date":"2020-01-09 01:08:13","modifiedFileCount":"5","status":"B","submitter":"Ahmed Hussein"},{"authorTime":"2020-01-28 05:50:13","codes":[{"authorDate":"2020-01-28 05:50:13","commitOrder":2,"curCode":"  public void waitForState(TaskAttempt attempt, \n      TaskAttemptState finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskAttemptReport report = attempt.getReport();\n    while (!finalState.equals(report.getTaskAttemptState()) &&\n        timeoutSecs++ < WAIT_FOR_STATE_CNT) {\n      Thread.sleep(WAIT_FOR_STATE_INTERVAL);\n      report = attempt.getReport();\n    }\n    LOG.info(\"TaskAttempt {} State is : {}\", attempt.getID(),\n        report.getTaskAttemptState());\n    Assert.assertEquals(\"TaskAttempt state is not correct (timedout)\",\n        finalState,\n        report.getTaskAttemptState());\n  }\n","date":"2020-01-28 05:50:13","endLine":376,"groupId":"1121","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForState","params":"(TaskAttemptattempt@TaskAttemptStatefinalState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/9a/8280bf65c263f226199795370399c5ece50c1b.src","preCode":"  public void waitForState(TaskAttempt attempt, \n      TaskAttemptState finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskAttemptReport report = attempt.getReport();\n    while (!finalState.equals(report.getTaskAttemptState()) &&\n        timeoutSecs++ < 20) {\n      System.out.println(\n          \"TaskAttempt \" + attempt.getID().toString() + \"  State is : \"\n              + report.getTaskAttemptState()\n              + \" Waiting for state : \" + finalState\n              + \"   progress : \" + report.getProgress());\n      report = attempt.getReport();\n      Thread.sleep(500);\n    }\n    System.out.println(\"TaskAttempt State is : \"\n        + report.getTaskAttemptState());\n    Assert.assertEquals(\"TaskAttempt state is not correct (timedout)\",\n        finalState,\n        report.getTaskAttemptState());\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/MRApp.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":362,"status":"M"},{"authorDate":"2020-01-28 05:50:13","commitOrder":2,"curCode":"  public void waitForState(Task task, TaskState finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskReport report = task.getReport();\n    while (!finalState.equals(report.getTaskState()) &&\n        timeoutSecs++ < WAIT_FOR_STATE_CNT) {\n      Thread.sleep(WAIT_FOR_STATE_INTERVAL);\n      report = task.getReport();\n    }\n    LOG.info(\"Task {} State is : {}\", task.getID(), report.getTaskState());\n    Assert.assertEquals(\"Task state is not correct (timedout)\", finalState,\n        report.getTaskState());\n  }\n","date":"2020-01-28 05:50:13","endLine":413,"groupId":"1121","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForState","params":"(Tasktask@TaskStatefinalState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/9a/8280bf65c263f226199795370399c5ece50c1b.src","preCode":"  public void waitForState(Task task, TaskState finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskReport report = task.getReport();\n    while (!finalState.equals(report.getTaskState()) &&\n        timeoutSecs++ < 20) {\n      System.out.println(\"Task State for \" + task.getID() + \" is : \"\n          + report.getTaskState() + \" Waiting for state : \" + finalState\n          + \"   progress : \" + report.getProgress());\n      report = task.getReport();\n      Thread.sleep(500);\n    }\n    System.out.println(\"Task State is : \" + report.getTaskState());\n    Assert.assertEquals(\"Task state is not correct (timedout)\", finalState,\n        report.getTaskState());\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/MRApp.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":402,"status":"M"}],"commitId":"3f01c481060585ccd37be9db8aa4d1e33d2e2d6b","commitMessage":"@@@MAPREDUCE-7262. MRApp helpers block for long intervals (500ms)\n\nSigned-off-by: Jonathan Eagles <jeagles@gmail.com>\n","date":"2020-01-28 05:50:13","modifiedFileCount":"1","status":"M","submitter":"Ahmed Hussein"}]
