[{"authorTime":"2018-01-27 04:36:45","codes":[{"authorDate":"2018-01-27 04:36:45","commitOrder":1,"curCode":"  public void testContainerKillAfterAssigned() throws Exception {\n    ApplicationId appId = ApplicationId.newInstance(1, 2);\n    ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId,\n        0);\n    JobId jobId = MRBuilderUtils.newJobId(appId, 1);\n    TaskId taskId = MRBuilderUtils.newTaskId(jobId, 1, TaskType.MAP);\n    TaskAttemptId attemptId = MRBuilderUtils.newTaskAttemptId(taskId, 0);\n    Path jobFile = mock(Path.class);\n\n    MockEventHandler eventHandler = new MockEventHandler();\n    TaskAttemptListener taListener = mock(TaskAttemptListener.class);\n    when(taListener.getAddress()).thenReturn(\n        new InetSocketAddress(\"localhost\", 0));\n\n    JobConf jobConf = new JobConf();\n    jobConf.setClass(\"fs.file.impl\", StubbedFS.class, FileSystem.class);\n    jobConf.setBoolean(\"fs.file.impl.disable.cache\", true);\n    jobConf.set(JobConf.MAPRED_MAP_TASK_ENV, \"\");\n    jobConf.set(MRJobConfig.APPLICATION_ATTEMPT_ID, \"10\");\n\n    TaskSplitMetaInfo splits = mock(TaskSplitMetaInfo.class);\n    when(splits.getLocations()).thenReturn(new String[] { \"127.0.0.1\" });\n\n    AppContext appCtx = mock(AppContext.class);\n    ClusterInfo clusterInfo = mock(ClusterInfo.class);\n    Resource resource = mock(Resource.class);\n    when(appCtx.getClusterInfo()).thenReturn(clusterInfo);\n    when(resource.getMemorySize()).thenReturn(1024L);\n\n    TaskAttemptImpl taImpl = new MapTaskAttemptImpl(taskId, 1, eventHandler,\n        jobFile, 1, splits, jobConf, taListener, new Token(),\n        new Credentials(), SystemClock.getInstance(), appCtx);\n\n    NodeId nid = NodeId.newInstance(\"127.0.0.2\", 0);\n    ContainerId contId = ContainerId.newContainerId(appAttemptId, 3);\n    Container container = mock(Container.class);\n    when(container.getId()).thenReturn(contId);\n    when(container.getNodeId()).thenReturn(nid);\n    when(container.getNodeHttpAddress()).thenReturn(\"localhost:0\");\n\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_SCHEDULE));\n    taImpl.handle(new TaskAttemptContainerAssignedEvent(attemptId, container,\n        mock(Map.class)));\n    assertEquals(\"Task attempt is not in assinged state\",\n        taImpl.getInternalState(), TaskAttemptStateInternal.ASSIGNED);\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_KILL));\n    assertEquals(\"Task should be in KILL_CONTAINER_CLEANUP state\",\n        TaskAttemptStateInternal.KILL_CONTAINER_CLEANUP,\n        taImpl.getInternalState());\n  }\n","date":"2018-01-27 04:36:45","endLine":1166,"groupId":"36620","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testContainerKillAfterAssigned","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/43/571a9b824e21a78cc9dd0cdc7d9e09f085f2d7.src","preCode":"  public void testContainerKillAfterAssigned() throws Exception {\n    ApplicationId appId = ApplicationId.newInstance(1, 2);\n    ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId,\n        0);\n    JobId jobId = MRBuilderUtils.newJobId(appId, 1);\n    TaskId taskId = MRBuilderUtils.newTaskId(jobId, 1, TaskType.MAP);\n    TaskAttemptId attemptId = MRBuilderUtils.newTaskAttemptId(taskId, 0);\n    Path jobFile = mock(Path.class);\n\n    MockEventHandler eventHandler = new MockEventHandler();\n    TaskAttemptListener taListener = mock(TaskAttemptListener.class);\n    when(taListener.getAddress()).thenReturn(\n        new InetSocketAddress(\"localhost\", 0));\n\n    JobConf jobConf = new JobConf();\n    jobConf.setClass(\"fs.file.impl\", StubbedFS.class, FileSystem.class);\n    jobConf.setBoolean(\"fs.file.impl.disable.cache\", true);\n    jobConf.set(JobConf.MAPRED_MAP_TASK_ENV, \"\");\n    jobConf.set(MRJobConfig.APPLICATION_ATTEMPT_ID, \"10\");\n\n    TaskSplitMetaInfo splits = mock(TaskSplitMetaInfo.class);\n    when(splits.getLocations()).thenReturn(new String[] { \"127.0.0.1\" });\n\n    AppContext appCtx = mock(AppContext.class);\n    ClusterInfo clusterInfo = mock(ClusterInfo.class);\n    Resource resource = mock(Resource.class);\n    when(appCtx.getClusterInfo()).thenReturn(clusterInfo);\n    when(resource.getMemorySize()).thenReturn(1024L);\n\n    TaskAttemptImpl taImpl = new MapTaskAttemptImpl(taskId, 1, eventHandler,\n        jobFile, 1, splits, jobConf, taListener, new Token(),\n        new Credentials(), SystemClock.getInstance(), appCtx);\n\n    NodeId nid = NodeId.newInstance(\"127.0.0.2\", 0);\n    ContainerId contId = ContainerId.newContainerId(appAttemptId, 3);\n    Container container = mock(Container.class);\n    when(container.getId()).thenReturn(contId);\n    when(container.getNodeId()).thenReturn(nid);\n    when(container.getNodeHttpAddress()).thenReturn(\"localhost:0\");\n\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_SCHEDULE));\n    taImpl.handle(new TaskAttemptContainerAssignedEvent(attemptId, container,\n        mock(Map.class)));\n    assertEquals(\"Task attempt is not in assinged state\",\n        taImpl.getInternalState(), TaskAttemptStateInternal.ASSIGNED);\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_KILL));\n    assertEquals(\"Task should be in KILL_CONTAINER_CLEANUP state\",\n        TaskAttemptStateInternal.KILL_CONTAINER_CLEANUP,\n        taImpl.getInternalState());\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskAttempt.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":1115,"status":"B"},{"authorDate":"2018-01-27 04:36:45","commitOrder":1,"curCode":"  public void testContainerKillWhileCommitPending() throws Exception {\n    ApplicationId appId = ApplicationId.newInstance(1, 2);\n    ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId,\n        0);\n    JobId jobId = MRBuilderUtils.newJobId(appId, 1);\n    TaskId taskId = MRBuilderUtils.newTaskId(jobId, 1, TaskType.MAP);\n    TaskAttemptId attemptId = MRBuilderUtils.newTaskAttemptId(taskId, 0);\n    Path jobFile = mock(Path.class);\n\n    MockEventHandler eventHandler = new MockEventHandler();\n    TaskAttemptListener taListener = mock(TaskAttemptListener.class);\n    when(taListener.getAddress()).thenReturn(\n        new InetSocketAddress(\"localhost\", 0));\n\n    JobConf jobConf = new JobConf();\n    jobConf.setClass(\"fs.file.impl\", StubbedFS.class, FileSystem.class);\n    jobConf.setBoolean(\"fs.file.impl.disable.cache\", true);\n    jobConf.set(JobConf.MAPRED_MAP_TASK_ENV, \"\");\n    jobConf.set(MRJobConfig.APPLICATION_ATTEMPT_ID, \"10\");\n\n    TaskSplitMetaInfo splits = mock(TaskSplitMetaInfo.class);\n    when(splits.getLocations()).thenReturn(new String[] { \"127.0.0.1\" });\n\n    AppContext appCtx = mock(AppContext.class);\n    ClusterInfo clusterInfo = mock(ClusterInfo.class);\n    Resource resource = mock(Resource.class);\n    when(appCtx.getClusterInfo()).thenReturn(clusterInfo);\n    when(resource.getMemorySize()).thenReturn(1024L);\n\n    TaskAttemptImpl taImpl = new MapTaskAttemptImpl(taskId, 1, eventHandler,\n        jobFile, 1, splits, jobConf, taListener, new Token(),\n        new Credentials(), SystemClock.getInstance(), appCtx);\n\n    NodeId nid = NodeId.newInstance(\"127.0.0.2\", 0);\n    ContainerId contId = ContainerId.newContainerId(appAttemptId, 3);\n    Container container = mock(Container.class);\n    when(container.getId()).thenReturn(contId);\n    when(container.getNodeId()).thenReturn(nid);\n    when(container.getNodeHttpAddress()).thenReturn(\"localhost:0\");\n\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_SCHEDULE));\n    taImpl.handle(new TaskAttemptContainerAssignedEvent(attemptId, container,\n        mock(Map.class)));\n    taImpl.handle(new TaskAttemptContainerLaunchedEvent(attemptId, 0));\n    assertEquals(\"Task attempt is not in running state\", taImpl.getState(),\n        TaskAttemptState.RUNNING);\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_COMMIT_PENDING));\n    assertEquals(\"Task should be in COMMIT_PENDING state\",\n        TaskAttemptStateInternal.COMMIT_PENDING, taImpl.getInternalState());\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_KILL));\n    assertFalse(\"InternalError occurred trying to handle TA_KILL\",\n        eventHandler.internalError);\n    assertEquals(\"Task should be in KILL_CONTAINER_CLEANUP state\",\n        TaskAttemptStateInternal.KILL_CONTAINER_CLEANUP,\n        taImpl.getInternalState());\n  }\n","date":"2018-01-27 04:36:45","endLine":1284,"groupId":"36620","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testContainerKillWhileCommitPending","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/43/571a9b824e21a78cc9dd0cdc7d9e09f085f2d7.src","preCode":"  public void testContainerKillWhileCommitPending() throws Exception {\n    ApplicationId appId = ApplicationId.newInstance(1, 2);\n    ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId,\n        0);\n    JobId jobId = MRBuilderUtils.newJobId(appId, 1);\n    TaskId taskId = MRBuilderUtils.newTaskId(jobId, 1, TaskType.MAP);\n    TaskAttemptId attemptId = MRBuilderUtils.newTaskAttemptId(taskId, 0);\n    Path jobFile = mock(Path.class);\n\n    MockEventHandler eventHandler = new MockEventHandler();\n    TaskAttemptListener taListener = mock(TaskAttemptListener.class);\n    when(taListener.getAddress()).thenReturn(\n        new InetSocketAddress(\"localhost\", 0));\n\n    JobConf jobConf = new JobConf();\n    jobConf.setClass(\"fs.file.impl\", StubbedFS.class, FileSystem.class);\n    jobConf.setBoolean(\"fs.file.impl.disable.cache\", true);\n    jobConf.set(JobConf.MAPRED_MAP_TASK_ENV, \"\");\n    jobConf.set(MRJobConfig.APPLICATION_ATTEMPT_ID, \"10\");\n\n    TaskSplitMetaInfo splits = mock(TaskSplitMetaInfo.class);\n    when(splits.getLocations()).thenReturn(new String[] { \"127.0.0.1\" });\n\n    AppContext appCtx = mock(AppContext.class);\n    ClusterInfo clusterInfo = mock(ClusterInfo.class);\n    Resource resource = mock(Resource.class);\n    when(appCtx.getClusterInfo()).thenReturn(clusterInfo);\n    when(resource.getMemorySize()).thenReturn(1024L);\n\n    TaskAttemptImpl taImpl = new MapTaskAttemptImpl(taskId, 1, eventHandler,\n        jobFile, 1, splits, jobConf, taListener, new Token(),\n        new Credentials(), SystemClock.getInstance(), appCtx);\n\n    NodeId nid = NodeId.newInstance(\"127.0.0.2\", 0);\n    ContainerId contId = ContainerId.newContainerId(appAttemptId, 3);\n    Container container = mock(Container.class);\n    when(container.getId()).thenReturn(contId);\n    when(container.getNodeId()).thenReturn(nid);\n    when(container.getNodeHttpAddress()).thenReturn(\"localhost:0\");\n\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_SCHEDULE));\n    taImpl.handle(new TaskAttemptContainerAssignedEvent(attemptId, container,\n        mock(Map.class)));\n    taImpl.handle(new TaskAttemptContainerLaunchedEvent(attemptId, 0));\n    assertEquals(\"Task attempt is not in running state\", taImpl.getState(),\n        TaskAttemptState.RUNNING);\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_COMMIT_PENDING));\n    assertEquals(\"Task should be in COMMIT_PENDING state\",\n        TaskAttemptStateInternal.COMMIT_PENDING, taImpl.getInternalState());\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_KILL));\n    assertFalse(\"InternalError occurred trying to handle TA_KILL\",\n        eventHandler.internalError);\n    assertEquals(\"Task should be in KILL_CONTAINER_CLEANUP state\",\n        TaskAttemptStateInternal.KILL_CONTAINER_CLEANUP,\n        taImpl.getInternalState());\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskAttempt.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":1226,"status":"B"}],"commitId":"a37e7f0ad8b68c7ed16c242bedf62f4cde48d6fd","commitMessage":"@@@MAPREDUCE-7022. Fast fail rogue jobs based on task scratch dir size. Contributed by Johan Gustavsson\n","date":"2018-01-27 04:36:45","modifiedFileCount":"19","status":"B","submitter":"Jason Lowe"},{"authorTime":"2019-08-12 19:54:13","codes":[{"authorDate":"2019-08-12 19:54:13","commitOrder":2,"curCode":"  public void testContainerKillAfterAssigned() throws Exception {\n    ApplicationId appId = ApplicationId.newInstance(1, 2);\n    ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId,\n        0);\n    JobId jobId = MRBuilderUtils.newJobId(appId, 1);\n    TaskId taskId = MRBuilderUtils.newTaskId(jobId, 1, TaskType.MAP);\n    TaskAttemptId attemptId = MRBuilderUtils.newTaskAttemptId(taskId, 0);\n    Path jobFile = mock(Path.class);\n\n    MockEventHandler eventHandler = new MockEventHandler();\n    TaskAttemptListener taListener = mock(TaskAttemptListener.class);\n    when(taListener.getAddress()).thenReturn(\n        new InetSocketAddress(\"localhost\", 0));\n\n    JobConf jobConf = new JobConf();\n    jobConf.setClass(\"fs.file.impl\", StubbedFS.class, FileSystem.class);\n    jobConf.setBoolean(\"fs.file.impl.disable.cache\", true);\n    jobConf.set(JobConf.MAPRED_MAP_TASK_ENV, \"\");\n    jobConf.set(MRJobConfig.APPLICATION_ATTEMPT_ID, \"10\");\n\n    TaskSplitMetaInfo splits = mock(TaskSplitMetaInfo.class);\n    when(splits.getLocations()).thenReturn(new String[] { \"127.0.0.1\" });\n\n    AppContext appCtx = mock(AppContext.class);\n    ClusterInfo clusterInfo = mock(ClusterInfo.class);\n    Resource resource = mock(Resource.class);\n    when(appCtx.getClusterInfo()).thenReturn(clusterInfo);\n    when(resource.getMemorySize()).thenReturn(1024L);\n\n    TaskAttemptImpl taImpl = new MapTaskAttemptImpl(taskId, 1, eventHandler,\n        jobFile, 1, splits, jobConf, taListener, new Token(),\n        new Credentials(), SystemClock.getInstance(), appCtx);\n\n    NodeId nid = NodeId.newInstance(\"127.0.0.2\", 0);\n    ContainerId contId = ContainerId.newContainerId(appAttemptId, 3);\n    Container container = mock(Container.class);\n    when(container.getId()).thenReturn(contId);\n    when(container.getNodeId()).thenReturn(nid);\n    when(container.getNodeHttpAddress()).thenReturn(\"localhost:0\");\n\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_SCHEDULE));\n    taImpl.handle(new TaskAttemptContainerAssignedEvent(attemptId, container,\n        mock(Map.class)));\n\n    assertThat(taImpl.getInternalState())\n        .withFailMessage(\"Task attempt is not in ASSIGNED state\")\n        .isEqualTo(TaskAttemptStateInternal.ASSIGNED);\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_KILL));\n    assertThat(taImpl.getInternalState())\n        .withFailMessage(\"Task should be in KILL_CONTAINER_CLEANUP state\")\n        .isEqualTo(TaskAttemptStateInternal.KILL_CONTAINER_CLEANUP);\n  }\n","date":"2019-08-12 19:54:28","endLine":1182,"groupId":"10338","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testContainerKillAfterAssigned","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/d0/9531c641c0ccbfce7d83a3d258ec03fe3c7e58.src","preCode":"  public void testContainerKillAfterAssigned() throws Exception {\n    ApplicationId appId = ApplicationId.newInstance(1, 2);\n    ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId,\n        0);\n    JobId jobId = MRBuilderUtils.newJobId(appId, 1);\n    TaskId taskId = MRBuilderUtils.newTaskId(jobId, 1, TaskType.MAP);\n    TaskAttemptId attemptId = MRBuilderUtils.newTaskAttemptId(taskId, 0);\n    Path jobFile = mock(Path.class);\n\n    MockEventHandler eventHandler = new MockEventHandler();\n    TaskAttemptListener taListener = mock(TaskAttemptListener.class);\n    when(taListener.getAddress()).thenReturn(\n        new InetSocketAddress(\"localhost\", 0));\n\n    JobConf jobConf = new JobConf();\n    jobConf.setClass(\"fs.file.impl\", StubbedFS.class, FileSystem.class);\n    jobConf.setBoolean(\"fs.file.impl.disable.cache\", true);\n    jobConf.set(JobConf.MAPRED_MAP_TASK_ENV, \"\");\n    jobConf.set(MRJobConfig.APPLICATION_ATTEMPT_ID, \"10\");\n\n    TaskSplitMetaInfo splits = mock(TaskSplitMetaInfo.class);\n    when(splits.getLocations()).thenReturn(new String[] { \"127.0.0.1\" });\n\n    AppContext appCtx = mock(AppContext.class);\n    ClusterInfo clusterInfo = mock(ClusterInfo.class);\n    Resource resource = mock(Resource.class);\n    when(appCtx.getClusterInfo()).thenReturn(clusterInfo);\n    when(resource.getMemorySize()).thenReturn(1024L);\n\n    TaskAttemptImpl taImpl = new MapTaskAttemptImpl(taskId, 1, eventHandler,\n        jobFile, 1, splits, jobConf, taListener, new Token(),\n        new Credentials(), SystemClock.getInstance(), appCtx);\n\n    NodeId nid = NodeId.newInstance(\"127.0.0.2\", 0);\n    ContainerId contId = ContainerId.newContainerId(appAttemptId, 3);\n    Container container = mock(Container.class);\n    when(container.getId()).thenReturn(contId);\n    when(container.getNodeId()).thenReturn(nid);\n    when(container.getNodeHttpAddress()).thenReturn(\"localhost:0\");\n\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_SCHEDULE));\n    taImpl.handle(new TaskAttemptContainerAssignedEvent(attemptId, container,\n        mock(Map.class)));\n    assertEquals(\"Task attempt is not in assinged state\",\n        taImpl.getInternalState(), TaskAttemptStateInternal.ASSIGNED);\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_KILL));\n    assertEquals(\"Task should be in KILL_CONTAINER_CLEANUP state\",\n        TaskAttemptStateInternal.KILL_CONTAINER_CLEANUP,\n        taImpl.getInternalState());\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskAttempt.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":1129,"status":"M"},{"authorDate":"2019-08-12 19:54:13","commitOrder":2,"curCode":"  public void testContainerKillWhileCommitPending() throws Exception {\n    ApplicationId appId = ApplicationId.newInstance(1, 2);\n    ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId,\n        0);\n    JobId jobId = MRBuilderUtils.newJobId(appId, 1);\n    TaskId taskId = MRBuilderUtils.newTaskId(jobId, 1, TaskType.MAP);\n    TaskAttemptId attemptId = MRBuilderUtils.newTaskAttemptId(taskId, 0);\n    Path jobFile = mock(Path.class);\n\n    MockEventHandler eventHandler = new MockEventHandler();\n    TaskAttemptListener taListener = mock(TaskAttemptListener.class);\n    when(taListener.getAddress()).thenReturn(\n        new InetSocketAddress(\"localhost\", 0));\n\n    JobConf jobConf = new JobConf();\n    jobConf.setClass(\"fs.file.impl\", StubbedFS.class, FileSystem.class);\n    jobConf.setBoolean(\"fs.file.impl.disable.cache\", true);\n    jobConf.set(JobConf.MAPRED_MAP_TASK_ENV, \"\");\n    jobConf.set(MRJobConfig.APPLICATION_ATTEMPT_ID, \"10\");\n\n    TaskSplitMetaInfo splits = mock(TaskSplitMetaInfo.class);\n    when(splits.getLocations()).thenReturn(new String[] { \"127.0.0.1\" });\n\n    AppContext appCtx = mock(AppContext.class);\n    ClusterInfo clusterInfo = mock(ClusterInfo.class);\n    Resource resource = mock(Resource.class);\n    when(appCtx.getClusterInfo()).thenReturn(clusterInfo);\n    when(resource.getMemorySize()).thenReturn(1024L);\n\n    TaskAttemptImpl taImpl = new MapTaskAttemptImpl(taskId, 1, eventHandler,\n        jobFile, 1, splits, jobConf, taListener, new Token(),\n        new Credentials(), SystemClock.getInstance(), appCtx);\n\n    NodeId nid = NodeId.newInstance(\"127.0.0.2\", 0);\n    ContainerId contId = ContainerId.newContainerId(appAttemptId, 3);\n    Container container = mock(Container.class);\n    when(container.getId()).thenReturn(contId);\n    when(container.getNodeId()).thenReturn(nid);\n    when(container.getNodeHttpAddress()).thenReturn(\"localhost:0\");\n\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_SCHEDULE));\n    taImpl.handle(new TaskAttemptContainerAssignedEvent(attemptId, container,\n        mock(Map.class)));\n    taImpl.handle(new TaskAttemptContainerLaunchedEvent(attemptId, 0));\n    assertThat(taImpl.getState())\n        .withFailMessage(\"Task attempt is not in RUNNING state\")\n        .isEqualTo(TaskAttemptState.RUNNING);\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_COMMIT_PENDING));\n    assertThat(taImpl.getInternalState())\n        .withFailMessage(\"Task should be in COMMIT_PENDING state\")\n        .isEqualTo(TaskAttemptStateInternal.COMMIT_PENDING);\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_KILL));\n    assertFalse(\"InternalError occurred trying to handle TA_KILL\",\n        eventHandler.internalError);\n    assertThat(taImpl.getInternalState())\n        .withFailMessage(\"Task should be in KILL_CONTAINER_CLEANUP state\")\n        .isEqualTo(TaskAttemptStateInternal.KILL_CONTAINER_CLEANUP);\n  }\n","date":"2019-08-12 19:54:28","endLine":1303,"groupId":"10338","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testContainerKillWhileCommitPending","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/d0/9531c641c0ccbfce7d83a3d258ec03fe3c7e58.src","preCode":"  public void testContainerKillWhileCommitPending() throws Exception {\n    ApplicationId appId = ApplicationId.newInstance(1, 2);\n    ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId,\n        0);\n    JobId jobId = MRBuilderUtils.newJobId(appId, 1);\n    TaskId taskId = MRBuilderUtils.newTaskId(jobId, 1, TaskType.MAP);\n    TaskAttemptId attemptId = MRBuilderUtils.newTaskAttemptId(taskId, 0);\n    Path jobFile = mock(Path.class);\n\n    MockEventHandler eventHandler = new MockEventHandler();\n    TaskAttemptListener taListener = mock(TaskAttemptListener.class);\n    when(taListener.getAddress()).thenReturn(\n        new InetSocketAddress(\"localhost\", 0));\n\n    JobConf jobConf = new JobConf();\n    jobConf.setClass(\"fs.file.impl\", StubbedFS.class, FileSystem.class);\n    jobConf.setBoolean(\"fs.file.impl.disable.cache\", true);\n    jobConf.set(JobConf.MAPRED_MAP_TASK_ENV, \"\");\n    jobConf.set(MRJobConfig.APPLICATION_ATTEMPT_ID, \"10\");\n\n    TaskSplitMetaInfo splits = mock(TaskSplitMetaInfo.class);\n    when(splits.getLocations()).thenReturn(new String[] { \"127.0.0.1\" });\n\n    AppContext appCtx = mock(AppContext.class);\n    ClusterInfo clusterInfo = mock(ClusterInfo.class);\n    Resource resource = mock(Resource.class);\n    when(appCtx.getClusterInfo()).thenReturn(clusterInfo);\n    when(resource.getMemorySize()).thenReturn(1024L);\n\n    TaskAttemptImpl taImpl = new MapTaskAttemptImpl(taskId, 1, eventHandler,\n        jobFile, 1, splits, jobConf, taListener, new Token(),\n        new Credentials(), SystemClock.getInstance(), appCtx);\n\n    NodeId nid = NodeId.newInstance(\"127.0.0.2\", 0);\n    ContainerId contId = ContainerId.newContainerId(appAttemptId, 3);\n    Container container = mock(Container.class);\n    when(container.getId()).thenReturn(contId);\n    when(container.getNodeId()).thenReturn(nid);\n    when(container.getNodeHttpAddress()).thenReturn(\"localhost:0\");\n\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_SCHEDULE));\n    taImpl.handle(new TaskAttemptContainerAssignedEvent(attemptId, container,\n        mock(Map.class)));\n    taImpl.handle(new TaskAttemptContainerLaunchedEvent(attemptId, 0));\n    assertEquals(\"Task attempt is not in running state\", taImpl.getState(),\n        TaskAttemptState.RUNNING);\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_COMMIT_PENDING));\n    assertEquals(\"Task should be in COMMIT_PENDING state\",\n        TaskAttemptStateInternal.COMMIT_PENDING, taImpl.getInternalState());\n    taImpl.handle(new TaskAttemptEvent(attemptId,\n        TaskAttemptEventType.TA_KILL));\n    assertFalse(\"InternalError occurred trying to handle TA_KILL\",\n        eventHandler.internalError);\n    assertEquals(\"Task should be in KILL_CONTAINER_CLEANUP state\",\n        TaskAttemptStateInternal.KILL_CONTAINER_CLEANUP,\n        taImpl.getInternalState());\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TestTaskAttempt.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":1243,"status":"M"}],"commitId":"ac6c4f0b290477017798491a4bd77fa9f107871c","commitMessage":"@@@MAPREDUCE-7197. Fix order of actual and expected expression in assert statements. Contributed by Adam Antal\n","date":"2019-08-12 19:54:28","modifiedFileCount":"75","status":"M","submitter":"Szilard Nemeth"}]
