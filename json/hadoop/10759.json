[{"authorTime":"2018-01-17 22:14:11","codes":[{"authorDate":"2018-01-17 22:14:11","commitOrder":1,"curCode":"  public void setupJob(JobContext context) throws IOException {\n    if (hasOutputPath()) {\n      Path jobAttemptPath = getJobAttemptPath(context);\n      FileSystem fs = jobAttemptPath.getFileSystem(\n          context.getConfiguration());\n      if (!fs.mkdirs(jobAttemptPath)) {\n        LOG.error(\"Mkdirs failed to create \" + jobAttemptPath);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in setupJob()\");\n    }\n  }\n","date":"2018-01-17 22:14:11","endLine":360,"groupId":"19303","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setupJob","params":"(JobContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/cb/ae575b1a72b8bec87bbe53734bc12603154287.src","preCode":"  public void setupJob(JobContext context) throws IOException {\n    if (hasOutputPath()) {\n      Path jobAttemptPath = getJobAttemptPath(context);\n      FileSystem fs = jobAttemptPath.getFileSystem(\n          context.getConfiguration());\n      if (!fs.mkdirs(jobAttemptPath)) {\n        LOG.error(\"Mkdirs failed to create \" + jobAttemptPath);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in setupJob()\");\n    }\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":349,"status":"B"},{"authorDate":"2018-01-17 22:14:11","commitOrder":1,"curCode":"  public void commitTask(TaskAttemptContext context, Path taskAttemptPath) \n      throws IOException {\n\n    TaskAttemptID attemptId = context.getTaskAttemptID();\n    if (hasOutputPath()) {\n      context.progress();\n      if(taskAttemptPath == null) {\n        taskAttemptPath = getTaskAttemptPath(context);\n      }\n      FileSystem fs = taskAttemptPath.getFileSystem(context.getConfiguration());\n      FileStatus taskAttemptDirStatus;\n      try {\n        taskAttemptDirStatus = fs.getFileStatus(taskAttemptPath);\n      } catch (FileNotFoundException e) {\n        taskAttemptDirStatus = null;\n      }\n\n      if (taskAttemptDirStatus != null) {\n        if (algorithmVersion == 1) {\n          Path committedTaskPath = getCommittedTaskPath(context);\n          if (fs.exists(committedTaskPath)) {\n             if (!fs.delete(committedTaskPath, true)) {\n               throw new IOException(\"Could not delete \" + committedTaskPath);\n             }\n          }\n          if (!fs.rename(taskAttemptPath, committedTaskPath)) {\n            throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n                + committedTaskPath);\n          }\n          LOG.info(\"Saved output of task '\" + attemptId + \"' to \" +\n              committedTaskPath);\n        } else {\n          \r\n          mergePaths(fs, taskAttemptDirStatus, outputPath);\n          LOG.info(\"Saved output of task '\" + attemptId + \"' to \" +\n              outputPath);\n\n          if (context.getConfiguration().getBoolean(\n              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED,\n              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED_DEFAULT)) {\n            LOG.debug(String.format(\n                \"Deleting the temporary directory of '%s': '%s'\",\n                attemptId, taskAttemptPath));\n            if(!fs.delete(taskAttemptPath, true)) {\n              LOG.warn(\"Could not delete \" + taskAttemptPath);\n            }\n          }\n        }\n      } else {\n        LOG.warn(\"No Output found for \" + attemptId);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in commitTask()\");\n    }\n  }\n","date":"2018-01-17 22:14:11","endLine":618,"groupId":"19302","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"commitTask","params":"(TaskAttemptContextcontext@PathtaskAttemptPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/cb/ae575b1a72b8bec87bbe53734bc12603154287.src","preCode":"  public void commitTask(TaskAttemptContext context, Path taskAttemptPath) \n      throws IOException {\n\n    TaskAttemptID attemptId = context.getTaskAttemptID();\n    if (hasOutputPath()) {\n      context.progress();\n      if(taskAttemptPath == null) {\n        taskAttemptPath = getTaskAttemptPath(context);\n      }\n      FileSystem fs = taskAttemptPath.getFileSystem(context.getConfiguration());\n      FileStatus taskAttemptDirStatus;\n      try {\n        taskAttemptDirStatus = fs.getFileStatus(taskAttemptPath);\n      } catch (FileNotFoundException e) {\n        taskAttemptDirStatus = null;\n      }\n\n      if (taskAttemptDirStatus != null) {\n        if (algorithmVersion == 1) {\n          Path committedTaskPath = getCommittedTaskPath(context);\n          if (fs.exists(committedTaskPath)) {\n             if (!fs.delete(committedTaskPath, true)) {\n               throw new IOException(\"Could not delete \" + committedTaskPath);\n             }\n          }\n          if (!fs.rename(taskAttemptPath, committedTaskPath)) {\n            throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n                + committedTaskPath);\n          }\n          LOG.info(\"Saved output of task '\" + attemptId + \"' to \" +\n              committedTaskPath);\n        } else {\n          \r\n          mergePaths(fs, taskAttemptDirStatus, outputPath);\n          LOG.info(\"Saved output of task '\" + attemptId + \"' to \" +\n              outputPath);\n\n          if (context.getConfiguration().getBoolean(\n              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED,\n              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED_DEFAULT)) {\n            LOG.debug(String.format(\n                \"Deleting the temporary directory of '%s': '%s'\",\n                attemptId, taskAttemptPath));\n            if(!fs.delete(taskAttemptPath, true)) {\n              LOG.warn(\"Could not delete \" + taskAttemptPath);\n            }\n          }\n        }\n      } else {\n        LOG.warn(\"No Output found for \" + attemptId);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in commitTask()\");\n    }\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":564,"status":"B"}],"commitId":"6e42d058292d9656e9ebc9a47be13280e3c919ea","commitMessage":"@@@MAPREDUCE-7029. FileOutputCommitter is slow on filesystems lacking recursive delete. Contributed by Karthik Palaniappan\n","date":"2018-01-17 22:14:11","modifiedFileCount":"2","status":"B","submitter":"Jason Lowe"},{"authorTime":"2018-11-29 04:54:59","codes":[{"authorDate":"2018-01-17 22:14:11","commitOrder":2,"curCode":"  public void setupJob(JobContext context) throws IOException {\n    if (hasOutputPath()) {\n      Path jobAttemptPath = getJobAttemptPath(context);\n      FileSystem fs = jobAttemptPath.getFileSystem(\n          context.getConfiguration());\n      if (!fs.mkdirs(jobAttemptPath)) {\n        LOG.error(\"Mkdirs failed to create \" + jobAttemptPath);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in setupJob()\");\n    }\n  }\n","date":"2018-01-17 22:14:11","endLine":360,"groupId":"10759","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setupJob","params":"(JobContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/cb/ae575b1a72b8bec87bbe53734bc12603154287.src","preCode":"  public void setupJob(JobContext context) throws IOException {\n    if (hasOutputPath()) {\n      Path jobAttemptPath = getJobAttemptPath(context);\n      FileSystem fs = jobAttemptPath.getFileSystem(\n          context.getConfiguration());\n      if (!fs.mkdirs(jobAttemptPath)) {\n        LOG.error(\"Mkdirs failed to create \" + jobAttemptPath);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in setupJob()\");\n    }\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":349,"status":"N"},{"authorDate":"2018-11-29 04:54:59","commitOrder":2,"curCode":"  public void commitTask(TaskAttemptContext context, Path taskAttemptPath) \n      throws IOException {\n\n    TaskAttemptID attemptId = context.getTaskAttemptID();\n    if (hasOutputPath()) {\n      context.progress();\n      if(taskAttemptPath == null) {\n        taskAttemptPath = getTaskAttemptPath(context);\n      }\n      FileSystem fs = taskAttemptPath.getFileSystem(context.getConfiguration());\n      FileStatus taskAttemptDirStatus;\n      try {\n        taskAttemptDirStatus = fs.getFileStatus(taskAttemptPath);\n      } catch (FileNotFoundException e) {\n        taskAttemptDirStatus = null;\n      }\n\n      if (taskAttemptDirStatus != null) {\n        if (algorithmVersion == 1) {\n          Path committedTaskPath = getCommittedTaskPath(context);\n          if (fs.exists(committedTaskPath)) {\n             if (!fs.delete(committedTaskPath, true)) {\n               throw new IOException(\"Could not delete \" + committedTaskPath);\n             }\n          }\n          if (!fs.rename(taskAttemptPath, committedTaskPath)) {\n            throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n                + committedTaskPath);\n          }\n          LOG.info(\"Saved output of task '\" + attemptId + \"' to \" +\n              committedTaskPath);\n        } else {\n          \r\n          mergePaths(fs, taskAttemptDirStatus, outputPath, context);\n          LOG.info(\"Saved output of task '\" + attemptId + \"' to \" +\n              outputPath);\n\n          if (context.getConfiguration().getBoolean(\n              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED,\n              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED_DEFAULT)) {\n            LOG.debug(String.format(\n                \"Deleting the temporary directory of '%s': '%s'\",\n                attemptId, taskAttemptPath));\n            if(!fs.delete(taskAttemptPath, true)) {\n              LOG.warn(\"Could not delete \" + taskAttemptPath);\n            }\n          }\n        }\n      } else {\n        LOG.warn(\"No Output found for \" + attemptId);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in commitTask()\");\n    }\n  }\n","date":"2018-11-29 04:54:59","endLine":626,"groupId":"10759","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"commitTask","params":"(TaskAttemptContextcontext@PathtaskAttemptPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/94/af3387d7644e837516d3e33bb115613143031b.src","preCode":"  public void commitTask(TaskAttemptContext context, Path taskAttemptPath) \n      throws IOException {\n\n    TaskAttemptID attemptId = context.getTaskAttemptID();\n    if (hasOutputPath()) {\n      context.progress();\n      if(taskAttemptPath == null) {\n        taskAttemptPath = getTaskAttemptPath(context);\n      }\n      FileSystem fs = taskAttemptPath.getFileSystem(context.getConfiguration());\n      FileStatus taskAttemptDirStatus;\n      try {\n        taskAttemptDirStatus = fs.getFileStatus(taskAttemptPath);\n      } catch (FileNotFoundException e) {\n        taskAttemptDirStatus = null;\n      }\n\n      if (taskAttemptDirStatus != null) {\n        if (algorithmVersion == 1) {\n          Path committedTaskPath = getCommittedTaskPath(context);\n          if (fs.exists(committedTaskPath)) {\n             if (!fs.delete(committedTaskPath, true)) {\n               throw new IOException(\"Could not delete \" + committedTaskPath);\n             }\n          }\n          if (!fs.rename(taskAttemptPath, committedTaskPath)) {\n            throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n                + committedTaskPath);\n          }\n          LOG.info(\"Saved output of task '\" + attemptId + \"' to \" +\n              committedTaskPath);\n        } else {\n          \r\n          mergePaths(fs, taskAttemptDirStatus, outputPath);\n          LOG.info(\"Saved output of task '\" + attemptId + \"' to \" +\n              outputPath);\n\n          if (context.getConfiguration().getBoolean(\n              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED,\n              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED_DEFAULT)) {\n            LOG.debug(String.format(\n                \"Deleting the temporary directory of '%s': '%s'\",\n                attemptId, taskAttemptPath));\n            if(!fs.delete(taskAttemptPath, true)) {\n              LOG.warn(\"Could not delete \" + taskAttemptPath);\n            }\n          }\n        }\n      } else {\n        LOG.warn(\"No Output found for \" + attemptId);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in commitTask()\");\n    }\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":572,"status":"M"}],"commitId":"4d8de7ab690ef919b392b12d856482a6a1f2bb3d","commitMessage":"@@@MAPREDUCE-7164. FileOutputCommitter does not report progress while merging paths. Contributed by Kuhu Shukla\n","date":"2018-11-29 04:54:59","modifiedFileCount":"2","status":"M","submitter":"Jason Lowe"}]
