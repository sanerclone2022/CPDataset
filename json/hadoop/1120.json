[{"authorTime":"2020-01-09 01:08:13","codes":[{"authorDate":"2020-01-09 01:08:13","commitOrder":1,"curCode":"  public void waitForInternalState(TaskImpl task,\n      TaskStateInternal finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskReport report = task.getReport();\n    TaskStateInternal iState = task.getInternalState();\n    while (!finalState.equals(iState) && timeoutSecs++ < 20) {\n      System.out.println(\"Task Internal State is : \" + iState\n          + \" Waiting for Internal state : \" + finalState + \"   progress : \"\n          + report.getProgress());\n      Thread.sleep(500);\n      report = task.getReport();\n      iState = task.getInternalState();\n    }\n    System.out.println(\"Task Internal State is : \" + iState);\n    Assert.assertEquals(\"Task Internal state is not correct (timedout)\",\n        finalState, iState);\n  }\n","date":"2020-01-09 01:08:13","endLine":352,"groupId":"15313","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForInternalState","params":"(TaskImpltask@TaskStateInternalfinalState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/70/ea18a13b37021db035ca955dd38a50bb3811f3.src","preCode":"  public void waitForInternalState(TaskImpl task,\n      TaskStateInternal finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskReport report = task.getReport();\n    TaskStateInternal iState = task.getInternalState();\n    while (!finalState.equals(iState) && timeoutSecs++ < 20) {\n      System.out.println(\"Task Internal State is : \" + iState\n          + \" Waiting for Internal state : \" + finalState + \"   progress : \"\n          + report.getProgress());\n      Thread.sleep(500);\n      report = task.getReport();\n      iState = task.getInternalState();\n    }\n    System.out.println(\"Task Internal State is : \" + iState);\n    Assert.assertEquals(\"Task Internal state is not correct (timedout)\",\n        finalState, iState);\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/MRApp.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"B"},{"authorDate":"2020-01-09 01:08:13","commitOrder":1,"curCode":"  public void waitForInternalState(TaskAttemptImpl attempt,\n      TaskAttemptStateInternal finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskAttemptReport report = attempt.getReport();\n    TaskAttemptStateInternal iState = attempt.getInternalState();\n    while (!finalState.equals(iState) && timeoutSecs++ < 20) {\n      System.out.println(\"TaskAttempt Internal State is : \" + iState\n          + \" Waiting for Internal state : \" + finalState + \"   progress : \"\n          + report.getProgress());\n      Thread.sleep(500);\n      report = attempt.getReport();\n      iState = attempt.getInternalState();\n    }\n    System.out.println(\"TaskAttempt Internal State is : \" + iState);\n    Assert.assertEquals(\"TaskAttempt Internal state is not correct (timedout)\",\n        finalState, iState);\n  }\n","date":"2020-01-09 01:08:13","endLine":370,"groupId":"15315","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForInternalState","params":"(TaskAttemptImplattempt@TaskAttemptStateInternalfinalState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/70/ea18a13b37021db035ca955dd38a50bb3811f3.src","preCode":"  public void waitForInternalState(TaskAttemptImpl attempt,\n      TaskAttemptStateInternal finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskAttemptReport report = attempt.getReport();\n    TaskAttemptStateInternal iState = attempt.getInternalState();\n    while (!finalState.equals(iState) && timeoutSecs++ < 20) {\n      System.out.println(\"TaskAttempt Internal State is : \" + iState\n          + \" Waiting for Internal state : \" + finalState + \"   progress : \"\n          + report.getProgress());\n      Thread.sleep(500);\n      report = attempt.getReport();\n      iState = attempt.getInternalState();\n    }\n    System.out.println(\"TaskAttempt Internal State is : \" + iState);\n    Assert.assertEquals(\"TaskAttempt Internal state is not correct (timedout)\",\n        finalState, iState);\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/MRApp.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":354,"status":"B"}],"commitId":"cdd6efd3ab6917e30b4c5c7b261f61838901bb37","commitMessage":"@@@MAPREDUCE-7252. Handling 0 progress in SimpleExponential task runtime estimator\n\nSigned-off-by: Jonathan Eagles <jeagles@gmail.com>\n","date":"2020-01-09 01:08:13","modifiedFileCount":"5","status":"B","submitter":"Ahmed Hussein"},{"authorTime":"2020-01-28 05:50:13","codes":[{"authorDate":"2020-01-28 05:50:13","commitOrder":2,"curCode":"  public void waitForInternalState(TaskImpl task,\n      TaskStateInternal finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskStateInternal iState = task.getInternalState();\n    while (!finalState.equals(iState) && timeoutSecs++ < WAIT_FOR_STATE_CNT) {\n      Thread.sleep(WAIT_FOR_STATE_INTERVAL);\n      iState = task.getInternalState();\n    }\n    LOG.info(\"Task {} Internal State is : {}\", task.getID(), iState);\n    Assert.assertEquals(\"Task Internal state is not correct (timedout)\",\n        finalState, iState);\n  }\n","date":"2020-01-28 05:50:13","endLine":347,"groupId":"1120","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForInternalState","params":"(TaskImpltask@TaskStateInternalfinalState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/9a/8280bf65c263f226199795370399c5ece50c1b.src","preCode":"  public void waitForInternalState(TaskImpl task,\n      TaskStateInternal finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskReport report = task.getReport();\n    TaskStateInternal iState = task.getInternalState();\n    while (!finalState.equals(iState) && timeoutSecs++ < 20) {\n      System.out.println(\"Task Internal State is : \" + iState\n          + \" Waiting for Internal state : \" + finalState + \"   progress : \"\n          + report.getProgress());\n      Thread.sleep(500);\n      report = task.getReport();\n      iState = task.getInternalState();\n    }\n    System.out.println(\"Task Internal State is : \" + iState);\n    Assert.assertEquals(\"Task Internal state is not correct (timedout)\",\n        finalState, iState);\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/MRApp.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"M"},{"authorDate":"2020-01-28 05:50:13","commitOrder":2,"curCode":"  public void waitForInternalState(TaskAttemptImpl attempt,\n      TaskAttemptStateInternal finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskAttemptStateInternal iState = attempt.getInternalState();\n    while (!finalState.equals(iState) && timeoutSecs++ < WAIT_FOR_STATE_CNT) {\n      Thread.sleep(WAIT_FOR_STATE_INTERVAL);\n      iState = attempt.getInternalState();\n    }\n    LOG.info(\"TaskAttempt {} Internal State is : {}\", attempt.getID(), iState);\n    Assert.assertEquals(\"TaskAttempt Internal state is not correct (timedout)\",\n        finalState, iState);\n  }\n","date":"2020-01-28 05:50:13","endLine":360,"groupId":"1120","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForInternalState","params":"(TaskAttemptImplattempt@TaskAttemptStateInternalfinalState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hadoop-10-0.7/blobInfo/CC_OUT/blobs/9a/8280bf65c263f226199795370399c5ece50c1b.src","preCode":"  public void waitForInternalState(TaskAttemptImpl attempt,\n      TaskAttemptStateInternal finalState) throws Exception {\n    int timeoutSecs = 0;\n    TaskAttemptReport report = attempt.getReport();\n    TaskAttemptStateInternal iState = attempt.getInternalState();\n    while (!finalState.equals(iState) && timeoutSecs++ < 20) {\n      System.out.println(\"TaskAttempt Internal State is : \" + iState\n          + \" Waiting for Internal state : \" + finalState + \"   progress : \"\n          + report.getProgress());\n      Thread.sleep(500);\n      report = attempt.getReport();\n      iState = attempt.getInternalState();\n    }\n    System.out.println(\"TaskAttempt Internal State is : \" + iState);\n    Assert.assertEquals(\"TaskAttempt Internal state is not correct (timedout)\",\n        finalState, iState);\n  }\n","realPath":"hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/MRApp.java","repoName":"hadoop","snippetEndLine":0,"snippetStartLine":0,"startLine":349,"status":"M"}],"commitId":"3f01c481060585ccd37be9db8aa4d1e33d2e2d6b","commitMessage":"@@@MAPREDUCE-7262. MRApp helpers block for long intervals (500ms)\n\nSigned-off-by: Jonathan Eagles <jeagles@gmail.com>\n","date":"2020-01-28 05:50:13","modifiedFileCount":"1","status":"M","submitter":"Ahmed Hussein"}]
